00:00:00.840 - 00:00:14.542, Speaker A: So now we're extremely lucky to have Alessandro Quieso, who is a professor at Berkeley. And Alessandro actually is a student of Sylvia. And now Professor Berkeley's done fantastic stuff. He's going to tell us about privacy and blockchains, actually.
00:00:14.638 - 00:00:15.350, Speaker B: Correct.
00:00:15.542 - 00:00:21.134, Speaker A: And he's also one of the founders of Zcash in Starc. Is that correct?
00:00:21.214 - 00:00:21.750, Speaker B: Starkware.
00:00:21.822 - 00:00:33.446, Speaker A: Starkware. Sorry. And thankful sandals for help with this ZK day and will be willing to give us a talk about privacy on blockchains.
00:00:33.630 - 00:01:36.144, Speaker B: Thank you. Thank you so much, Shafi. And thank you for all of you to be here on a Saturday morning to hear about what I have to say today. So, yeah, so, as Shafi mentioned, I will tell you about privacy and blockchains. And specifically, I want to tell you about how a specific cryptographic construct, zero knowledge proofs, are useful to achieve privacy in blockchains. So in order to motivate. So I would like to first motivate the problem and then explain why there is anything to do, in a sense that why is there a problem to solve? What's the technical difficulty? So, as a motivating example, let me just remind you that in the bitcoin blockchain, the way that transactions, you can abstractly think about the transactions as basically containing signed messages that spell out where the payment is coming from, how much is being paid, and where it goes, okay? Together with the signature that authorizes the payment.
00:01:36.144 - 00:02:26.554, Speaker B: And I've been talking about privacy and blockchains now for several years. And in the past, I really had to make a case for why putting a payment in the clear in the blockchain should worry you. Now, I hear some people are laughing. So let's try to go through and understand why we should worry about putting payments in the clear in the blockchain. Okay? So first, it should be clear that payment history reveals a lot of information, right? So it can reveal medical information. So an insurance company could use sort of a history of your payments to sort of increase your premium. So, for example, if you pay, I don't know, an oncologist, then maybe you're sick with cancer or even deny coverage.
00:02:26.554 - 00:03:02.930, Speaker B: Also, your history of payments actually reveal your location. So there's also a question of personal safety. So if you're buying coffee in a particular city, probably you're there, right? And also it contains a wealth of private information if you're running a business, right. And not by chance. This is one of the reasons that the banking industry is highly regulated. So they are managing, they see all of your private financial information and they store it on their servers and they have to be careful with that. And if they mess it up, they will be fined very dearly by the government.
00:03:02.930 - 00:03:30.614, Speaker B: Okay? So that's why it is highly regulated. So now, in bitcoin, I was slightly being unfair that you don't actually post your payments together with your first and last name. When you send a payment, you actually have an address. So it's just a string. It's a cryptographic public key. And you spell out the cryptographic public key that sends the payment and the cryptographic public key that is supposed to receive the payment. Okay? So it's not quite names, those are just addresses.
00:03:30.614 - 00:04:21.570, Speaker B: And indeed, this is kind of the perspective, or rather the reason for why. Now, ten years ago, when bitcoin started, it was regarded as an anonymous payment system, right? There's no names, there's just these payments they sent between cryptographic public keys. Yeah, they're just addresses, but first and foremost, they're known with everybody you interact with. So if you sort of are point of sale, at the very least, you know the address of the merchant that you're interacting with. I mean, that's the point, right? You're getting something in return for the payment. And also in many realistic scenarios, the merchant themselves gets to learn the payment. That the tying, the fact that you are sending the payment because they're sending you some good or like some service in return.
00:04:21.570 - 00:05:27.374, Speaker B: Right? After all, in many cases, you want to use payments to achieve some outcome in the physical world, right? So at some point, there is some connection between addresses and physical identities. And these addresses are just sitting out there on the blockchain that you can actually just point your browser to and like read it. Okay? And it can be really analyzed by anybody. And one way you can conceptualize this information that is sitting on the blockchain, you can think about it as a transaction graph that over time, so you have this cash flow that moves between different addresses and depending on what happens with payments, they will have different structures. Another way to say that is that this transaction graph carries information about payments. There has been several academic studies that say that it's actually not that hard to take this transaction graph, correlate it with some site information, and basically turn these sort of virtual cryptographic keys into names of actual physical people. Okay, and let me just highlight.
00:05:27.374 - 00:06:43.990, Speaker B: And you might be thinking, wait, isn't deanonymizing good? So, for example, you might have read that the FBI, several years ago, used what you could call blockchain forensics, which is basically reading very carefully what's in the blockchain to actually track down people that were running markets for illicit goods like drugs and weapons and figure out who they are and bring them to justice. In fact, there are private companies out there, for example, chainalysis and elliptic, that provide services to third parties to provide whitelists or blacklists of addresses. So these companies might spend time trying to understand the blockchain and say, look, this address has been involved in what are likely illicit activities. So maybe you don't want to accept payments from this address. Okay, so it's kind of trying to provide de risking services for merchants, right? Yeah, but blockchain analysis is also dangerous. So here's, for example, the first page of a court case, this was actually two years ago, where the. The IR's sent a subpoena to Coinbase.
00:06:43.990 - 00:07:38.344, Speaker B: Coinbase is the largest cryptocurrency exchange in the United States. It has over 20 million customers. And the IR's asked Coinbase to reveal the identities and the corresponding cryptographic keys for all of Coinbase's customers. Why? Because the IR's had this antiquated opinion that everybody that's using cryptocurrencies is also involved in illicit activities. So Coinbase went to court and arguing that this was called sort of John Doe summons, where sort of there was no credible case that the IR's could make that every single of the customers of Coinbase would be involved in these activities. And he tried to argue that, look, please tell me which customers you think might be involved. I'll give you those addresses.
00:07:38.344 - 00:08:20.310, Speaker B: More reasonable thing to do when in the end happened some sort of. So there was court proceedings. In the end, they only allowed 10,000 account holders to be handed over to the government. Okay? And my opinion is that probably this is still a large number. And actually, what's very worrisome here is that of these 10,000 people, oh, yeah, let's say even some of them, maybe they were involved in some illicit activities. Okay? But I say that maybe the answer to those crimes at this point. But now the government actually has the cryptographic keys of these people and actually track them into the future indefinitely.
00:08:20.310 - 00:08:55.224, Speaker B: Okay? So this power of tracking on the blockchain is incredibly sort of really out of control. Okay? So it's a piece of information as it's sitting out there. And sort of the amount of information that you know about the transaction graph only increases monotonically with time. And the more and more you kind of de anonymize, the more it helps you deanonymize other addresses. Okay? And this was no way to kind of escape de anonymization. So as basically, cryptocurrency moves away from first movers and maybe also criminals into the mainstream. Okay.
00:08:55.224 - 00:09:35.644, Speaker B: Having sort of private information sitting out there merely in the form of cryptographic keys is very problematic because the moment somebody gets ahold of your cryptographic key, suddenly can look at your password past and future sort of working from there. So privacy is actually a big problem in this respect. Feel free to stop when you have questions. The questions so far, yes. So it doesn't seem like it's any worse than the system now where I give my name and my credit card number. Great question. Okay, so right now you have presumably, a bank, right? Where you hold your money, and the bank knows who you are and knows exactly what you're doing, but it's only the bank that knows.
00:09:35.644 - 00:10:08.884, Speaker B: Okay, well, and whoever they have, business relationships. The point is, it's not arbitrary people anywhere. So right now, in the case of bitcoin, you could pull out your laptop, point your browser to any sort of so called blockchain explorers, and anybody can even download to. Actually, there are open source tools. You can download the developer academics to conduct a blockchain analysis, and anybody can actually learn information about you, whereas right now it's only the bank and whatever third party relationships it has. So it's very different disrespect. So one of my.
00:10:09.304 - 00:10:11.008, Speaker A: So they can find out your transactions?
00:10:11.056 - 00:10:46.744, Speaker B: Yeah, they can find your transactions. And one of my colleagues, Ian Myers, has, I think, a lovely quote that says bitcoin is like Twitter for your bank account. So every event is kind of publicly broadcast, surely without identities. But, you know, soon enough it will be attached to it. Good point. And of course, you know, we're all fine with revealing our financial identities to, you know, a particular third party. The bank, who must follow the law, must sort of manage our privacy information according to some well specified regulations and so on.
00:10:46.744 - 00:11:21.638, Speaker B: Okay. So one can, of course, try to obfuscate history, just use a new address for each payment. Maybe we'll all get together and sort of mix our money and basically sort of use traditional money laundering techniques to protect our own privacy. Seems harder to analyze. But the point is that this is not really an effective mitigation. Okay? So, of course, it will make it harder maybe for a human to eyeball what's happening. But, you know, algorithms are very good at extracting back patterns.
00:11:21.638 - 00:12:06.552, Speaker B: So the moment you apply some minimal sort of heuristics and machine learning to this type of information, it will be defeated. And really the problem here is that fundamentally, in bitcoin and more generally, any system where you're recording your transaction details in a clear text, this history is publicly stored forever, and the methods of analysis only get better. And the more successful the system is, the more it interacts with the physical world and the more you can correlate information, de anonymize. Okay, so it's really like a problem. Okay. Separately, if you actually don't care about privacy, some people actually really don't. And I don't understand why, but there are economic motivations to care about what you store in the blockchain.
00:12:06.552 - 00:13:04.224, Speaker B: And it has to do with something called fungibility. The point is that at least the way that we set up, a lot of the economy is set up today, is that we have things like cash or currencies. And the point is that I can pay you in any, I can pull out of my wallet different types of bills, and as long as they add up to the correct amount, I can just pay you with those. And you shouldn't care exactly which bills I pull out of my pocket. However, bitcoin is not fungible, because you can see for every sort of payment that I send you, you can see the pedigree, you can see the history of what led to that particular coin that now is about to make its journey to you. And you may have some opinions about whether you like or not the history of this particular coin. So to some extent, the value of a coin is ill defined because different people may value the same coin differently simply because they might disagree on whether they like or not like its history.
00:13:04.224 - 00:13:45.946, Speaker B: The same person could value different coins differently. And more generally, coins that have shorter history are more valuable because they're less likely to sort of have opinionated people, sort of overvalue or undervalue them. And actually, it's so bad that today already, sort of fresh bitcoins are more valuable than old bitcoins just because of this reason. Okay? And there are also third party services that will use blockchain analysis tools to validate whether coins have a good history. And those come at a premium. Okay? So now the notion of value, to some extent centralized, okay? And because it's ill defined.
00:13:46.050 - 00:13:49.690, Speaker A: So what do you mean that new coins are more valuable? You get more money in fiat.
00:13:49.722 - 00:14:41.590, Speaker B: Yeah. So, like, if you want to buy, like, a newly minted coin, you know, they will sell it to you at a premium, at a higher price. Because if you have another coin that has a longer history, then your ability to spend it is impaired. So when you're trying to buy, I don't know, the famous example of buying pizza with bitcoin, you might be charged more bitcoins if you plan to use bitcoins with longer history, because then the merchant has the liability of having old bitcoins that in the future may be revealed to be involved in listed activities, and therefore they might lose part of their value. So it's kind of a risk mitigation. Okay, so now in cash, of course, we have serial numbers, and so they are uniquely identified. It's not like they're literally fungible down to the last point.
00:14:41.590 - 00:15:01.794, Speaker B: But the point is that we don't know their history. That's a feature. Okay, so this is like, completely has nothing to do with privacy. It's just on economic terms. What does it mean for something to be fungible? Some of privacy comes in and affects it. Okay, good questions. All right, so I think there is some problem to solve.
00:15:01.794 - 00:15:36.768, Speaker B: And if it's so important, why isn't it solved? So here is what we have. And at some point I receive some money, and later on I want to spend it. Right. And when I spend it, other people need to check that I have this money to spend. How do people know it? Because they can go back in history and check that they received it, and in the interim, I didn't spend it. Therefore I have it. So you might wonder.
00:15:36.768 - 00:16:22.290, Speaker B: Okay, so whenever we have some private information, usually the quick solution is to just encrypt the relevant, sensitive information and be done with it. Why don't we just encrypt the payment details and then post them on the blockchain? So here how it would look like we have transactions that are now encrypted. So instead of having the cryptographic key of the sender, cryptographic key of the receiver and the amount, all these pieces are encrypted and then posted on the blockchain. What's the problem then? What key do you use? Do you agree? Well, I can encrypt under the sender's public key, for example, so that they can decrypt. But then there's another problem. Yes. Right.
00:16:22.290 - 00:16:48.994, Speaker B: So I can't tell anymore whether a particular payment is valid or not. Like privacy and integrity are thoughts. Because why does bitcoin achieve a payment system? Because it achieves this notion of consensus. So we can agree on the events that happened. So I cannot double spend, because when I do double spend, there is a sort of undeniable trace that I did so very explicitly. So in clear text in the blockchain. Okay.
00:16:48.994 - 00:17:11.884, Speaker B: Somehow the fact that the information is literally there is important for currency to mean anything, okay? As this kind of unit, these tokens that can be sort of. They're digital, but they're kind of. At any moment in time, they're owned by only one person. Right. It'll be double spent. So, yeah, it's just not clear what to do.
00:17:12.004 - 00:17:17.896, Speaker A: So you're saying that in order to verify that it hasn't been double spent, you have to know who. The identity of the person.
00:17:18.060 - 00:17:39.216, Speaker B: Right. Because here, let's take this particular example. So Bob wants to pay Eve three. Why can he do that? Well, because at some point, he received three. And I can go and check that this transaction didn't involve Bob spending three. This one didn't, this one didn't, this one didn't. If I did it this way, I would see a bunch of junk.
00:17:39.216 - 00:18:38.944, Speaker B: Encrypted junk, or encrypted information that looks like junk. And I can't decide, really, when I decrypt this information, because it was sent to me whether I received a payment that is valid or whether in the meantime, it was spent somewhere else. Okay, so what I want to do in the, I guess, remaining 20 minutes is I want to tell you how one resolves this tension. Okay? So here is that we're going to be using, somehow zero knowledge proofs. And by now, today, there is a number of protocols that you could go about to try to solve this problem. The one I will explain today is called zero cache protocol, something that I worked on with my colleagues when I was a student back at MIT. And this is a cryptographic protocol that achieves a ledger based currency that is privacy preserving.
00:18:38.944 - 00:19:36.420, Speaker B: By the way, when I say ledger based, it doesn't really matter whether it's based on a proof of work, on a proof of stake or algorand. All I'm really using is the fact that there's some ledger somewhere. So, what I'm discussing is, for the most part, orthogonal to the way that we achieve agreement on the sequence of events on the blockchain. And by privacy preserving, I mean that anybody will be able to post payment transactions that contains something in them that, on the one hand, they can be validated for being good payments, but at the same time, they provably hide the payment sender, receiver, and amount, which are, in this case, the pieces of information I was trying to hide. As a bonus, it actually happens that this cryptographic solution is rather efficient. And these transactions take just a few seconds to produce they're very small and very easy to verify. So let's try to think of the very basic intuition at high level what it is that we're trying to do.
00:19:36.420 - 00:20:11.236, Speaker B: So intuitively we are going to encrypt information. And by the end of the day, we can't put information there because when we put it, then we've lost. So we can't put it there. So let's say that we encrypt it. Now, the thing that was missing was a way for third parties not involved in a particular transaction to establish whether the payment was valid or not. Notice that establishing whether a payment is valid or not, a method to do that is to look at the payment details. But as a third party, you don't actually care about the payment details, you just care about validating the payment.
00:20:11.236 - 00:20:57.224, Speaker B: So what we're going to do is we're going to attach a proof of validity of the payment, okay, to each transaction, okay? So encrypted payments and proof validity included. Payment details prove validity. So the way they would look like is when Alice produces her transaction, she's going to say, hey, I'm going to publish three ciphertexts. They contain the encryptions of a sender address, a receiver address and a transfer amount. Moreover, the amount transferred has not been double spent. And here's a cryptographic proof that all of this is true. Okay, now for this to make sense, we need to understand what kind of cryptographic proofs are we going to use here? Okay, so it's going to be some method that convinces third parties of this statement.
00:20:57.224 - 00:21:42.790, Speaker B: And then what exactly are we proving? In a sense that it's just English, okay, it's just a few sentences, right? But at some point there's going to be some specific mathematical statement about the payment that I need to prove to others. Okay, I want to tell you a little bit about that. So first, in terms of what kind of cryptography proof? Well, first there has to be a proof. What does a proof mean? It means that I ought to be able to produce valid looking proofs for true statements, and I should not be able to produce valid looking proofs for statements that are not true. So for example, if I have indeed already spent my money, I should not be able to produce transaction that spends that money again. And the proof is valid. These are proofs I need to be able to write down and include in a block.
00:21:42.790 - 00:22:19.984, Speaker B: This seems like. Why would you worry about it? Well, as cryptographers we think all the time about interactive proofs. And so in this case, it's important I will to write it down. And crucially, importance here, the privacy property will come from a notion called zero knowledge that Shafi and Silva introduced many years ago. That is, it will make sure that this cryptography proof can be validated using. I mean, the cryptography proof contains information that, on the one hand, allows for validating the payment, but does not reveal the payment details otherwise. Here's a proof for validating the payment.
00:22:19.984 - 00:23:03.490, Speaker B: I give you the decryption key, you decrypt the ciphertext and you check it yourself, right? So that's a valid way of providing the proof, right? That's not what we're going to do. It's going to be some indirect method that still convinces you that underlying plaintext satisfies some nice property. Yet the way that I'm convincing you has this zero knowledge property that doesn't leak information about the plain text. Underneath there are other properties, and the only reason why I'm mentioning them in this talk is that you may have heard of this acronym, ZK Snark. In fact, we had three days of workshops at the Berkeley Marina on this primitive. That's where these things come from. But for today, for this talk, the only thing that matters really is just this zero knowledge property.
00:23:03.490 - 00:23:28.482, Speaker B: I could spend an entire talk and more about this primitive. What I want to focus on today is how we use it. I want to tell you about, given such a magical object of a zero knowledge proof, how to actually go about producing privacy preserving payments. I guess we're going to take this as a black box. For now, the questions, because we're not going to talk about this proof again. Maybe not just on that, but I was thinking, okay, now we obfuscate the.
00:23:28.498 - 00:23:33.266, Speaker C: Ledger, but I can see, okay, for me, for our adversity, it's not easy to look at the ledger and see.
00:23:33.290 - 00:23:34.538, Speaker B: Oh, now I can track everyone.
00:23:34.626 - 00:23:36.106, Speaker C: But what I would do, given that.
00:23:36.130 - 00:23:38.298, Speaker B: In practice there is something like Coinbase.
00:23:38.426 - 00:23:40.386, Speaker C: Who is collecting anyway, secret keys, or.
00:23:40.410 - 00:23:42.082, Speaker B: Everyone, and knows what is happening on.
00:23:42.098 - 00:23:48.374, Speaker C: The ledger, they are able to de obfuscate the ledger. An attacker can go any way to Coinbase, steal the keys and learn everything.
00:23:50.574 - 00:24:24.978, Speaker B: If we're going to give the secret keys to the adversary, there's nothing I can do, right? So at some point, if I have to distinguish myself, me, honest person, against everybody else, typically this is a cryptographic secret. So I have to make sure that I manage my own secrets properly. If I entrust Coinbase with my own secrets, I'm entrusting them with my privacy and indeed my integrity. So if somebody enters their database and steals my secrets because I gave them to Coinbase, at this point, there is no logical difference between me and adversary. And in particular, they can do whatever I could.
00:24:25.026 - 00:24:27.814, Speaker C: So what's the point? If in practice everyone is using Coinbase.
00:24:28.234 - 00:24:51.500, Speaker B: You should not be using Coinbase. Let's take a step back. So managing your own secrets is difficult. Okay. Custody of secrets is really hard. Okay. And as we go forward with blockchain technology, it is important as individual users and as an industry to come up with best practices for secrets.
00:24:51.500 - 00:25:12.558, Speaker B: In particular, I think one of the exciting developments around centralized exchanges is some of them are starting to explore so called non custodial services where they're still providing you marketplaces where you can exchange tokens, but you still retain custody of your own secrets. Okay, Alex.
00:25:12.606 - 00:25:33.874, Speaker C: But I mean, honestly, most of our stuff is sort of centralized. My Gmail is centralized, my Dropbox is centralized. I mean, this is convenient. And people do do that, even if I can't trace it here, you know, if I send money to you, I'll be on my WhatsApp. I'll say, oh, did you get the money? You know, or whatever, you know, have you seen it on the blockchain? Like, you know, there are, there are going to be so many side channels to.
00:25:35.344 - 00:26:04.924, Speaker B: Okay, there's different things here. So one is if you give your secrets to Coinbase, Coinbase will track you fine, but it's not the third parties. Oh, what if they attack coins? Okay, fine. But that's equivalent to giving your secrets to somebody else. But the point is that short of giving your secrets to somebody else, the blockchain itself doesn't contain information. So I understand kind of the question in the sense that there's not, there's even, even for integrity, this has nothing to do with privacy, by the way. We're discussing equally privacy and adversaries spending your money without your consent.
00:26:04.924 - 00:26:32.678, Speaker B: So that's kind of a toggle point to here. Yes, Remk, it does actually beg for a slightly stronger property where the receiver cannot know where he received the money from. Let's say the receiver is a Coinbase account which is fully compromised. And I'm still trying to preserve my. It is possible to achieve that. You don't know where money comes from? I will not highlight that today, but it's tough to do that when you're using Coinbase because you want it to be in your account. I mean, you can send the money and they don't know where it came from, then you lose it.
00:26:32.678 - 00:26:54.446, Speaker B: Right. So what I want to say is that sort of, I think this discussion is more about custody rather than privacy in a sense that both authorizing your payments and your own privacy is eventually rooted in some secret that distinguishes you from everybody else. Right. And whoever controls your secrets, whether it is you or you and some third party you trust, that's your attack surface. Right. And that's the way it is. Yes.
00:26:54.446 - 00:27:26.758, Speaker B: So it's tax day on Monday. So let me ask a tax question. Tax question? Tax question. So how would if you hold this asset in us, right. You are obliged to actually report to the IR's or whatever. What do you think about the future of IR's or all those us governments going to go with this technology? The tax system in United States is honor based and that's how it is. So, you know, it is the responsibility of reporting your tax, your financial dealings lies on you.
00:27:26.758 - 00:27:51.494, Speaker B: And if you don't, that you are in the violation of the law. And whether the government finds you or not, that's their problem. The responsibility lies on it. Is their problem in the government problem or our problem? Well, the government problem. Well, it already is, but I'm not going to discuss tax considerations. These particular considerations have little to do with. If you have a.
00:27:51.494 - 00:28:33.934, Speaker B: Let's break this. If you run an ice cream truck in a suburban city and you make your money on ice creams and you don't report your cash transactions to the government, you're in violation of the law. Equally, it's a small business, but this could go big, right? Ice cream trucks are really great business. You don't know how many hungry kids there are. So what exactly is the statement we're going to prove with zero knowledge. So before we only had some english sentence. Okay, so.
00:28:33.934 - 00:28:51.744, Speaker B: And this is actually where the protocol design comes up. Okay, so I want to spend. How much? I have ten minutes or ten minutes. I want to spend ten minutes telling you the first few steps of the protocol. Okay. How we go about setting up some data structures that are reasoning about the blockchain. And these are going to be like some data structures I can prove things about.
00:28:51.744 - 00:29:16.548, Speaker B: Okay. So I want to do it in cryptographic fashion. We're going to start with something that is completely broken and makes no sense. I'm going to patch it up piece by piece until we achieve some design actually going to be, I think, rather simple. So my view of the blockchain is going to the template zero. I'm going to have several slides laid out in similar ways. So let me tell you what the template is I'm going to always have the blockchain at the top.
00:29:16.548 - 00:29:35.754, Speaker B: Different colors will denote different types of transactions. We're going to have some notion of what coin means down on the left. Right now it's empty because we haven't started. So let's start. So let's have a very stupid notion of a coin. It's just a random number. Let's call it a serial number.
00:29:35.754 - 00:30:10.464, Speaker B: The way you create a coin is you declare to the world here, I have created a coin with this number. The way you spend a coin is you declare to the world, I'm spending that coin with this serial number. Okay? Is it clear? It could be confusing, because it's almost, you know, because I'm starting with a very basic construction. Almost has no problems. I want to say that the one thing and what's going to happen is that events is going to have, you know, somebody's going to mint a coin. Somebody else is going to mint another coin. At some point, somebody going to spend it.
00:30:10.464 - 00:30:51.250, Speaker B: And what the important thing here I want you to notice is that you cannot spend a coin unless it was minted at some point in the past, okay? Somehow this serial number uniquely defined this coin. And you cannot, crucially, you cannot double spend, because if you try to broadcast twice a spend event with the same serial number, the system will tell you no. Well, that's pretty much the only good thing in this design. First, by design, spend is linkable to the mint. That's how you see that it's double spent. Also, anybody can spend. In fact, I send a mint transaction and somebody else can spend it for me because they just saw the serial number.
00:30:51.250 - 00:31:24.354, Speaker B: In particular, there are no secrets here. So there's no cryptography. But why don't you, just to sink in this notion of serial number, serial number uniquely tied to a coin, okay, let's improve on this. Now, we're gonna have a different coin. The serial number, okay, is gonna be secret, and we're gonna commit to it to create a so called coin commitment. So now when I create the coin, I only publish the coin commitment. I'm saying, hey, world, I have created a coin with some serial number, and I'm not telling you right now what it is.
00:31:24.354 - 00:31:47.484, Speaker B: Later, when I spend it, I'm telling you, by the way, here's a serial number with a commitment, randomness that corresponds to the commitment that I had before. So the way now things look like is this. Right now, when I see a spank transaction here, I can check that it corresponds. Oh, it doesn't correspond to this one. Oh, but it looks to this. It corresponds to this one. So it's fine.
00:31:47.484 - 00:31:59.322, Speaker B: I can spend it. I cannot spend it again because the same serial number would show up. So we can audible spend. So you have to check all the.
00:31:59.338 - 00:32:01.490, Speaker A: Serial numbers to see that it hasn't showed up?
00:32:01.562 - 00:32:05.698, Speaker B: Yes, I have to check all the serial numbers that haven't shown up also in the previous one.
00:32:05.746 - 00:32:07.338, Speaker A: But is that inherently necessary?
00:32:07.426 - 00:32:30.070, Speaker B: It's not necessary. It can be, yeah. The crucial thing that happened here is that because I'm not revealing the serial number at minting, you cannot spend my coin. Okay? Because you don't know the serial number. I'm only telling you the coin commitment. And a commitment, you know, hides information. Okay, so what's bad is that we set out to prevent linking where still things are linkable.
00:32:30.070 - 00:32:56.414, Speaker B: Okay? So we have to kind of go beyond this. So here's where we're going to start using a zero knowledge proof for doing something basic. The data structure for the coin has not changed. It continues to be a commitment to a random serial number. Minting also hasn't changed. I publish a commitment to the coin when I want to mint it. By the way, I'm assuming that there is some monetary policy around it.
00:32:56.414 - 00:33:29.494, Speaker B: Why can you mint a coin? Well, probably because you're consuming some other resource somewhere else. So there is some way to control when you can mint. So you're converting some other resource into this one. Now spending. I'm going to reveal the serial number like before. But instead of giving you the full information about my commitment, like the commitment information that then would tell you which commitment I was referring to in the past, I am going to produce a serial number. I'm going to produce a proof that is zero knowledge that attests to two things.
00:33:29.494 - 00:34:14.204, Speaker B: First, there exists a commitment in the list of prior commitments that corresponds to the serial number that I'm reading right now. Okay? So I'm saying, here's the proof and here's the serial number. And I'm telling you, I'm proving to you in zero knowledge that I know some commitment that is in the list of all serial numbers that have appeared so far. And one of them, I'm not telling you which one, is such that I can put in some random string, and I will get that commitment for the serial number that I'm revealing. It's some sort of set membership. I'm proving to you that the coin whose serial number I'm revealing belongs to the set of all coin commitments so far. But I'm not telling you which.
00:34:14.204 - 00:34:48.717, Speaker B: So what's good here is that we still cannot double spend because we're revealing serial numbers. People still cannot spend money coins because I have the secrets and other people don't. But now, crucially, spend the mint are unlinkable. Okay. That's very important. Whenever I see a spend, all I see is just some random number and a proof that tells me that somebody has spent some coin that was created in the past. Are you comfortable with this? I only have two more slides and then we're going to fix a few more things.
00:34:48.717 - 00:34:53.273, Speaker B: But this is the first place we're using a zero knowledge proof. Is it clear? Yes.
00:34:53.813 - 00:34:56.349, Speaker C: In the previous slide, only r is revealed.
00:34:56.381 - 00:34:56.953, Speaker B: Right.
00:34:57.573 - 00:34:59.693, Speaker C: How do you still length that back to the main.
00:34:59.853 - 00:35:24.692, Speaker B: Well, in the previous slide, because I was revealing just r. What you can do together with the serial number is you compute forward the commitment and you get the actual coin commitment. And you just literally check in the list. So you also assuming that the serial numbers are chosen randomly because you could do the same serial number to do them. R. Right. Well, a commitment is a commitment because you cannot change what's inside it.
00:35:24.692 - 00:35:43.404, Speaker B: Right. So if you could, then we had a. We would have had a problem even before. So is r random or what is. You can think about r as random and it's important. It is random, but what's more important is that the serial number is. So what I was just saying is you could have two coins with the same serial number.
00:35:43.404 - 00:36:00.154, Speaker B: That would not be a commitment. Because if you could do that, then it would violate sort of. I didn't really linger too much on commitment, but sort of you think of commitment as you know, you put some information in a box and you open the box later. But you cannot change information in the meantime. They're not really r. It's just something.
00:36:00.274 - 00:36:12.082, Speaker A: So, ali, I think what's missing is with this example, one time spends are not linkable to anything. But what you really wanted is that the spend itself means something new. And then you create these graphs.
00:36:12.138 - 00:36:17.338, Speaker B: That's what we're going to do next. Was that your question or no, but.
00:36:17.346 - 00:36:22.602, Speaker A: I think that's what everybody's asking about, linking the spend to a mint. It's a one time.
00:36:22.778 - 00:36:38.266, Speaker B: Yeah. So right now we don't have a payment system of any sort. Just playing with tokens. We're putting them in an annuity pool. We're pulling them out later. And it's a nice game, but we're not really achieving anything. So right now in particular, notice that there is no notion of address right now.
00:36:38.266 - 00:36:53.874, Speaker B: Okay. So to start transacting, we need to introduce notions of address. So. All right, let me just. I have one before the address slide, which is next one. I have the value slide. So let me introduce values.
00:36:53.874 - 00:37:15.744, Speaker B: Hopefully that will make you. Is that. There's nothing much that's happening here. I'm introducing a value. So when you coin, when you, when you mint, when you create a coin commitment, it has a value tied to it. Okay? And when you're minting, you tell the world which value, how much value you're minting. Because again, it's coming from some other resource.
00:37:15.744 - 00:37:34.804, Speaker B: When you're spending, you prove the same thing. You prove that the coin commitment was a list of prior commitments. You prove that everything you have in mind is well formed. And that's how it works. Are you comfortable? I've just added denominations. Okay. I split it into slides because it's easier to think about.
00:37:34.804 - 00:38:12.264, Speaker B: So we're only really hiding the sender right now. If you're trying to send money to the receiver, you pull it out of the anonymity pool and then you actually have to send it to the receiver. So how are we going to do that? So now we're going to introduce the notional payment address. And this is the other second idea of this protocol, how we're going to tie coins with identities. So we are going to have a public key committed to in the coin commitment. And then there's another quantity here, row. We call it the serial number seed.
00:38:12.264 - 00:38:43.164, Speaker B: And it's used to produce the serial number keyed on a secret key. So you have some hash function that hashes together your serial number seed and the secret key to produce the serial number. Ok? And the way that and the public key and secret key pair is related in some way, doesn't really matter how it's related. It's just some public and secret key pair. The new thing that happened is that coin commitment is owned by a particular public key and the serial number depends on the secret key. This is an important decision, symmetry. We're going to see that now.
00:38:43.164 - 00:39:14.944, Speaker B: Okay, so as before, I mean like before, when I spend, I say that I know all the secret information about the serial number that I'm revealing. The coin commitment list is in the prior list. All the things that I'm talking about, this data structure are correct. And now I have to prove that a serial number before it was, it was appearing just here. Right now I'm moving the serial number here. I'm making depend on the secret key. Okay? Why would that be the case.
00:39:14.944 - 00:39:55.534, Speaker B: By the way, I'm still not paying anybody. I'm just introducing data structure. Does anybody have an intuition for why the serial number should depend on the secret key, not the public key? Intuitively, I want to try to separate. When I pay somebody, I'm going to have to create their coins, right? And I shouldn't be able to predict when they spend their own coins. Okay? So I haven't really used addresses here, so here's the last slide. Direct payments. So this is the protocol, okay? So when I spend, I don't want to just create.
00:39:55.534 - 00:40:40.334, Speaker B: I don't just want to burn my coin. I want to create another coin at the same time as I burn my own coin, okay? And the proof is not going to say, oh, I burned my coin, and I could do that because I never burned it before. Through burning it, I have released some value that I can imbue another coin with, okay? And that's, I'm going to use your public key. I'm going to create a new coin under your name, okay? And then because the serial number of this other coin depends on your secret key, I don't know when you're gonna spend it. Okay? So this is just the last slide. I'm gonna go through it very slowly. And this is just basically the key idea of how you get direct payments.
00:40:40.334 - 00:41:08.054, Speaker B: I'm gonna provide a zero knowledge proof that says I know a bunch of secrets. Which secrets? Well, first I need to talk about secrets for my coin. The coin a, I know my coin commitment in the past. Three days ago, it has a certain value, which now I'm hiding. Even a bunch of stuff related to the coin commitment. And then my own public key and my own secret key. Here's what I'm proving about my coin.
00:41:08.054 - 00:41:39.254, Speaker B: I've minted it. It's well formed. I actually own it. I have to prove that I own it, by the way. Right? Notice here, I'm saying that I have the secret key for the public key that is inside the coin that I'm talking about, okay? And I'm revealing the serial number correctly. I also have to prove that I know information about a new coin that I'm creating. It has a coin commitment, which, by the way, I'm revealing right now, a value that I'm also not revealing.
00:41:39.254 - 00:42:21.488, Speaker B: And, you know, I need to prove to you that I'm creating it in a well formed way. And last but not least, the value is the same, okay? So in this way, when you see this transaction, you know that all these things happen in my head. Okay. And I'm certifying it to you using this proof. Okay? So I think all I really wanted today was just to get to this slide because of the main idea. And what I wanted to show you is that we had an initial intuition, which was, I'm going to use knowledge, proof that I publish all these ciphertexts. And underneath the ciphertext there is a value payment.
00:42:21.488 - 00:42:56.022, Speaker B: What we did from that high level intuition to here is we turn that into specific data structures or statements about secrets that are set up so that we have this notion of a coin and we're burning coins and credit coins, preserving value in between. And each time that now you mint and you spend and mint and you spend, when you see a spend, you have no idea what's going on. You're just seeing some random value, a coin for a commitment for some new coin. You have no idea information about it. And all you know is that value was preserved. Oh, but that's like a coin to another coin. Can I do two coins to two coins? Sure.
00:42:56.022 - 00:42:59.438, Speaker B: It's an easy generalization of that. So you can split coins, you can merge coins.
00:42:59.526 - 00:43:06.442, Speaker A: Right, sorry, but I still don't see how you make sure there's no double spend. So why can't you do this to coins?
00:43:06.638 - 00:43:07.602, Speaker B: Is it because you have to go.
00:43:07.618 - 00:43:09.018, Speaker A: Through the entire history of the blockchains.
00:43:09.066 - 00:43:22.498, Speaker B: To check, but you're asking about serial numbers. Okay, what you can do that I didn't put here is you can also prove that the serial number that you're revealing is not in the list of all serial numbers.
00:43:22.666 - 00:43:24.786, Speaker A: Okay, so this is also non containment.
00:43:24.890 - 00:43:49.274, Speaker B: You could do that as well. In practice, this is actually not what you do anyways, because the list of serial numbers, you're just, you can index it and you can just quickly check whether it appears that or not. But from a theoretical perspective, it's totally reasonable to say, let me let the zero knowledge proof not only reason about the list of all coin commitments with an inclusion statement, but the list of all serial numbers with an exclusion statement.
00:43:49.734 - 00:43:53.954, Speaker A: Because the other way you, if you just have index it, then you would know.
00:43:54.734 - 00:44:06.024, Speaker B: No, but you're just, you have the list of all prior coins, now you're spending some other one. All you have to check is that it's not there. And so provided that you're not double spending.
00:44:06.184 - 00:44:07.776, Speaker A: So it's not equality for.
00:44:07.880 - 00:44:13.768, Speaker B: Exactly. It's not equality exactly. Yes, but you can put it in.
00:44:13.776 - 00:44:18.984, Speaker A: The length of history because you have this non exclusion, but in practice you do it for the length of history.
00:44:19.064 - 00:44:33.142, Speaker B: Yes. And from a privacy perspective, it's fine, because what are all these things? All the other coins that were spent in the past with some serial number. Now you get some other serial number, you add it in, and you make sure it wasn't there. And the size of the statement goes.
00:44:33.198 - 00:44:38.950, Speaker C: Exponentially if you do non exclusion. Right? I mean, right now it's just merkle tree and log sort of size. The size of the proof statement.
00:44:38.982 - 00:44:41.046, Speaker B: Non exclusion in Merkle trees works, but.
00:44:41.070 - 00:44:45.790, Speaker C: You have to do for every. Right. I mean, like, you have to show that it's not any of these serial numbers.
00:44:45.862 - 00:45:05.534, Speaker B: You can set up merkle trees with non exclusion proofs. So I haven't talked about the asymptotics here. So you don't actually talk about entire list. Use Merkel trees to kind of have a logarithmic dependence. All right, so I think I'm going to stop here and maybe take any questions, but I just wanted to communicate the core ideas of the protocol.
00:45:13.554 - 00:45:18.314, Speaker A: Questions. And after that, we'll have a short break. Ten minutes, and there'll be Tom Biddickstock, and then lunch.
00:45:19.174 - 00:45:54.080, Speaker B: What parts of this break in a post quantum world? So, good question. So there are two levels at which you can try to think. So the question was, what is post quantum about this protocol? So, when you think about the protocol, there are two layers at which you can try to think about a quantum adversary trying to break. One. Is the building blocks themselves. Is the commitment scheme post quantum secure to begin with? Because if it's not, then never mind what you're doing with the protocol separately. You can say, well, let's assume that each of the building blocks, the commitment scheme, the zero knowledge proof, the pseudonym function, are post quantum secure on their own.
00:45:54.080 - 00:46:32.444, Speaker B: Now, I combine them in a particular protocol. Do you have a reduction that is secure against quantum adversaries? Now, let me answer the first question. So, in terms of concrete, practical primitives today, it's a bit of a mixed bag. Some of the primitives that we're using, for example, pseudo random functions, are plausibly post quantum because they're just things like Shatov 56, other things like zero knowledge proofs. They're currently based on discrete logarithm proof, on the hardness, with discrete logarithms. So that would not be though you could drop in and replace some zero knowledge proof that it's post quantum. As for the protocol itself, I haven't tried to do the analysis.
00:46:32.444 - 00:46:53.564, Speaker B: It's an interesting question to say. Give me a post quantum pRF. Post quantum commitment scheme, blah, blah. Can you get a post quantum payment protocol? I think it's a good question. I don't see a priority. What could go wrong? But quantum is weird, and so there are many settings where you don't have a direct port of reductions. Any question.
00:46:56.024 - 00:46:57.864, Speaker A: Okay, so break. Thank you.
