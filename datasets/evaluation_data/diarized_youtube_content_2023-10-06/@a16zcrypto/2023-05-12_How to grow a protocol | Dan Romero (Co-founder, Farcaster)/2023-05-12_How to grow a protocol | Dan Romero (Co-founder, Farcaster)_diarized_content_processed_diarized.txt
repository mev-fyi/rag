00:00:10.410 - 00:00:56.638, Speaker A: So going to be talking today about growing a protocol. But before we got started, I had two questions for the audience. So the first is how many people show hands are building a protocol here? Okay, so a chunk of you and then how many of you here have a Farcaster account? Okay, that's a good thing. We're not out of the woods quite yet with Farcaster. So I wouldn't call it a resounding success, but we have made a decent amount of progress. And so I'm going to share kind of some of the lessons we've learned along the way, just my background. I was at Coinbase for five years, so I was a really early employee, did a lot of stuff in the kind of crypto, fiat, on ramp world.
00:00:56.638 - 00:01:45.630, Speaker A: So a lot of the stuff that's happening right now in the news, I basically lived that five years, actually seven years ago now. And then for the last three years, I've been working on Farcaster with my co founder Varun, who also worked with me at Coinbase. The kind of general talk that I want to give today are just some principles for growing a protocol. So I generally have a point of view that advice is not particularly helpful and I wouldn't overrotate on any one thing I say today. But it's kind of more, in my experience, things that if I could have given advice to myself at the beginning based on what I am trying to build, would have potentially been helpful. And hopefully you might find that helpful today. So I don't really have much on most slides, so that way you have to listen to what I'm going to say.
00:01:45.630 - 00:02:56.494, Speaker A: But the first thing I think, whether you're building a protocol or product, I strongly believe in the concept of dog fooding, and it's just being your own first user. I've done probably 100 angel investments, both in crypto and not in crypto. And it always puzzles me when I run into founders who are trying to build something for somebody else where they don't actually feel that acute pain point or haven't been in the position of the customer they're trying to sell to. That's not to say that it can't work, but unless you have an extremely clear idea on what you're going after, the ability for you to be your own user and dog food the product is just going to increase your rate of learning and the kind of the accuracy of what you're building. Right. I'm sure this has been mentioned over the number of talks here, but Baliji Srinavasan has this term and Chris is actually the one who made it pretty popular with the blog post, the Idea Maze. And if you can't be your own first user, it's going to be really difficult to navigate that Idea Maze.
00:02:56.494 - 00:04:12.042, Speaker A: You can almost imagine. It would be like if you can't be the first user of whatever you're building, you're playing a game of yelling into the maze to have somebody else be the one that's actually navigating through versus the closer you can get to the metal, the closer you can get to whatever you're building. And as you being customer number one, the faster you're going to get feedback. We're going to talk a little bit about loops later, but that's the first thing that I could say is if you're not dog fooding, it's going to be extremely difficult. One lesson that we learned at Coinbase that I actually think significantly slowed down the rate of innovation at that company was somewhere kind of along the lines of like, I think 2017, 2018. You had the big run up in the price of ethereum and bitcoin and then there kind of became this whole set of new financial rules that kind of got put in place at Coinbase, rightfully so, because the company was starting to get bigger. But one of the downsides is that basically employees couldn't do any type of trading, right? So you have this kind of like traditional financial rule, but in terms of the ability to be using the product, most people at Coinbase went from kind of using maybe daily or weekly to maybe monthly and in this very artificial way and that actually think really hurt the company.
00:04:12.042 - 00:05:20.194, Speaker A: And I actually know that Brian spent the last few years really trying to get to a place, at least in some of their products, where employees had some amount of free rein in being able to use the product. Because if you're in the case of building a business where you're a fiat on ramp and doing trading, if you yourself are not actually sitting in that seat, it's extremely difficult for you to kind of have the right intuition on what you should be building next. This toothbrush comes from an anecdote that Larry Page I think is the one who said it at one point. But good products, especially consumer products, meet the toothbrush test. So hopefully you brush your teeth twice a day. The idea that a good consumer product is something that you're going to use at least twice a day. Now, obviously, if things like airbnb, where the frequency of interaction is kind of maybe on a monthly or maybe just a couple of times a year, but if you're trying to build an app, something that you think that someone's going to wake up and actually want to navigate cryptocurrency Web Three with if the use case is not two times a day, you're just going to have a lot longer feedback loop time.
00:05:20.194 - 00:06:14.062, Speaker A: And that's not to say and especially obviously if you're building an enterprise use case, that might be a little extreme. But that said, if you just think about the products that tend to grow the fastest and you can actually kind of really get to that level of polish, even in enterprise. Slack notion, all of that kind of stuff, it's products that you're using multiple times a day. And so just if you can thinking about what are those kind of small interactions that are going to be bringing you back to an app daily, if not multiple times a day, it's just going to compress the feedback loop cycle. Which brings me to the third point, and I'm pretty sure Sriram might have actually brought this up. I always call it ODA loops, but I think it's ODA loops. And there's an excellent book on the person who came up with this, John Boyd, but it's kind of like a military framework for fighter pilots.
00:06:14.062 - 00:07:36.110, Speaker A: But I think that the simplest thing is you as an early stage entrepreneur and building a protocol, you're looking for these loops, right? And these loops are basically feedback that you're getting, whether you yourself or your own first user or that initial set of five to ten people who for whatever weird reason want to use your product, they're giving you this feedback. And so the sooner you can get to a place where you are actually kind of action producing information, where you are out and testing new products, having people give you feedback, having people tell you, oh, this doesn't work for me, that's where you want to get to. I think that those first two things I mentioned, the dog fooding and the toothbrush, is about you potentially being that early first user. But ultimately you have to scale beyond yourself. And so getting to a framework where you're actually out there with people using your product and it's constantly feeding back into how you're making decisions, I think that is the critical thing that you should be focused on. I mean, Paul Graham, basically all of his advice tends to sound pretty trite and basic, but it's usually pretty right. And he's just like you should just be talking to users, right? Like there's a classic thing at YC, it's just like build product, eat, sleep, exercise, and talk to.
00:07:36.110 - 00:08:49.550, Speaker A: So that is the thing that I did early on with Farcaster, and we'll talk about a little later. Also some of the tactics that can help do this. But if I think I did one thing right early on that actually also helped keep things going because there was a lot of churn at the beginning is Varun, and I kind of split the job of Varun was doing most of the building of product. I did a lot of the design in the front end, but I just spent 8 hours a day talking to users on kind of telegram, on Twitter, on just like zoom calls. And so the kind of loops that I was able to start developing in terms of product feedback and reasons why people don't use the product dramatically accelerated and informed at least how we were building and navigating that idea. MAS I don't know if you guys have ever seen this kind of two part photo, but this is how I think a lot of people in crypto, and this is going back to my time. Even at Coinbase, they kind of all think of this as this like they're going to develop this beautiful engineered system, and then when they finally get to the car, everyone's going to use it, and it's just going to be phenomenally successful.
00:08:49.550 - 00:09:51.802, Speaker A: And I think that there's a little bit of truth in that. If you look at something like Ethereum, you have to actually get the EVM to actually work before it can happen. But I think very, very few startups can go navigate building in this manner. And the manner that I think is a far better way of doing things is a more Iterative approach where at each stage of this journey you can actually move forward with that vehicle, right, the skateboard, the scooter, the bicycle, and then eventually you get your way to a car. And so I think that's also a little bit of a trap that people fall into sometimes, especially because they read something like the Ethereum white paper or the Bitcoin white paper and they think they have to have a complete V one before they ship. So they spend a lot of time kind of on the whiteboard or in Vs code and a lot less time talking to users and actually kind of colliding with the market and getting that. And to give you a concrete example, this is the original kind of I don't have it all here, but the original forecaster white paper.
00:09:51.802 - 00:10:43.834, Speaker A: There's some irony here is that Blue Sky now has the at protocol. We were actually originally going to call Farcaster attp like at transfer protocol. And so we wrote this whole white paper in October 2020, shared it with a bunch of folks, got feedback on it, and I went back and read this before this presentation. I think we got like 15% of it, right? So to think that when you're building a protocol, the Ten Commandments come down from Mount Sinai and here's the white paper and this is how we're going to implement it. I don't think it's actually done like that. Maybe Satoshi with Bitcoin is actually just a rare exception and true genius, but I think in terms of actually building something, we had an original architecture that looks like this and seems like most of you are on Farcaster. So I can kind of maybe explain this a little bit.
00:10:43.834 - 00:11:37.626, Speaker A: So we had this kind of vision of, okay, we're going to do the identity layer on chain, very small amount. We're going to build the first client and then we're going to have this structured like the web where content is hosted one place. And then in order to kind of have that be like a nice developer experience. You'd run an indexer, right? Because if you think about the web, you have DNS as the registry, every website's hosted on a web server. Google is the indexer and you have a browser, this architecture, it worked. But after a year of running a beta, we realized that this developer experience and I know there are actually a few barcaster developers in the room it sucked because basically we had done all the work to build our own indexer and all this magic, but for a new developer to show up, it's just like a lot of overhead. And so if we had kind of taken what we had written as our white paper, as like, well, this is what our white paper is.
00:11:37.626 - 00:12:38.334, Speaker A: And so this is the implementation of the protocol, I actually think we would have been in a much harder situation, especially when you're kind of trying to phrase it as a protocol and other people are building on top of it to be able to go and make the right changes for the architecture. Upgrading a live, decentralized system, like upgrading any system, is really hard. Upgrading a live, decentralized distributed system is extremely difficult. And we're going through this right now and we don't even have that many developers having built on V One. And so just to show you, this is where we got to, which is still close to what we were doing before, but we effectively came up with this idea of let's merge the host and the indexer into one server called the hub. And this has been an immense amount of engineering effort. But the other interesting thing is if you're just going to take the two half years we've been working on Farcaster the first year and a half, we probably spent 80% to 90% of the time working on our initial client on top of that terrible V.
00:12:38.334 - 00:13:28.160, Speaker A: One architecture because we were really focused on getting users and kind of getting into that loop of feedback from people. And only after we had kind of got to some threshold, call it, several hundred daily active users, did we then start work on V Two, which we're just about to ship now. And everything that we did in V Two was informed by real usage. So rather than kind of having to try to come up with everything on paper before starting the work, a lot of it was from the failings of our V One product. And you'll notice this client here and the client down there is basically the same. So for the end user, they actually don't know that you're swapping out the back end. But for the developers, who especially we're hoping later this year that now are spending time building on top of the Farcaster protocol, this hub is just going to be an amazing developer experience.
00:13:28.160 - 00:14:45.894, Speaker A: I think the key insight here is get something out to market that people are actually using, whether that's end users or developers or in our case, we did both as soon as possible because that feedback is going to be your most valuable map through the idea maze. Another principle, and this I've become to really really believe, and especially having spent a lot of time talking to users of Farcaster, is this concept of stated versus revealed preference. So Henry Ford famous for saying if I'd asked my customers what they wanted, they would have asked me for a faster horse, right? And obviously the car replaced horses. And Steve Jobs actually also has a pretty famous line about we don't do market research at Apple. And I think it's important to kind of understand what that means because you could argue that, well, talking to users sounds like market research. Steve Jobs said that was bad, so I'm not going to go do that. And I think that the nuance comes down to is, and this is, I think, a broader psychology thing, when you ask someone what they think about your product, most people put sociopaths to the side, generally want to tell you something that you want to hear because they kind of want you to like them.
00:14:45.894 - 00:15:29.222, Speaker A: It's just like a natural human reaction. And so even if they have a more brutally honest opinion of whatever their opinion is of your product or protocol, they're going to kind of try to soften it on the side or some people just seeking approval are going to just kind of tell you what you want to hear. It's like, oh yeah, I definitely use this. I really, really want to use decentralized social media reveal preference. I have 50,000 or 100,000 followers on Twitter and I spent ten years building that audience. I don't care about your social network with 100 people on it, but they're never going to tell you that up front. You kind of have to as the kind of talking to users, extract that actual revealed preference, what the person is actually going to do.
00:15:29.222 - 00:16:14.926, Speaker A: And I think that that is where this kind of like when you're building a new product, actually asking people what they want is probably not what you want to do as much as a get something in Front Of them as soon as possible, see if they Churn and then follow up and ask them why did they Churn? They're probably going to give you a little bit of more brutally honest answer. And even then, sometimes they're just going to give you something that's not that useful. So it's like, oh, I just got busy. Well, it's pretty easy, at least in my case, because we're building something that looks like Twitter. I can go look at that same person's Twitter profile and I can see that they're either tweeting or liking tweets. So it's like, well, you weren't too busy for were, you were too busy for Farcaster. And so you can really try to get to that core insight.
00:16:14.926 - 00:16:49.914, Speaker A: And it turns out it's like, oh, well, the things that I'm interested in are on Twitter and there's not enough interesting stuff on broadcaster. And so it actually requires you to spend a little bit more effort in terms of navigating what people are trying to do to be nice and get to the kernel of insight. And doing that at scale is going to give you a far better feedback loop towards what you're actually trying to go and build. This is what I did at the beginning of Forecaster. Just like, this is what I did for probably three months. This is like the three days in the middle of the week. I would just stack up a bunch of meetings.
00:16:49.914 - 00:17:21.962, Speaker A: I would do a 15 minutes, sometimes 30 minutes zoom call with people, show them the initial product, get them onboarded, talk a little bit about the architecture, walk them through the whole product. So this is kind of like inspired by superhuman 85% of those people, maybe even 90% churned. And these are like people who are like my internet friends. I'd been in crypto almost a decade. They didn't care. Afterwards, they went back to Twitter to fight whatever Twitter battle they wanted to fight that day. But what I did get out of this is there were some odballs who decided that Farcaster was interesting enough for them.
00:17:21.962 - 00:17:56.526, Speaker A: And that was the kernel of people beyond Varun plus myself that we started to build the product around. So one thing that turned out is the people that actually retained tended to be a little bit more into NFTs. And so when we started the product, we were very much focused, like, okay, we're building a decentralized version of Twitter. Let's go and do that functionality. Turns out that adding an NFT feed into the product not only got those people more engaged, but then those people were really excited about inviting. And there was no even formal invite system. I was sending people a DMG link via Twitter DM to download.
00:17:56.526 - 00:19:11.146, Speaker A: I mean, it was really sketchy stuff in terms of like if you just kind of think about it's like random software you're downloading off the internet. But because those people were so passionate about this weird feature set that we had uncovered, we were able to kind of continue to grow things. And then what happened was about a year later, we hit some number of people who were just using the app that now all of a sudden the people who wanted to use some version of a decentralized Twitter, there was like enough liquidity that it became interesting. So the initial approach didn't work, but we found some residual group of users, which then kind of like we were able to build on, and then we had some amount of scale that the original use case started to work. And so what I would say is when you do eight weeks of this in a row, like 400 onboardings, and most people are churning, that's pretty demoralizing, especially if you've had success maybe somewhere else and you thought like, oh, I'm so brilliant. I'm going to be able to figure this out. But you can either view that as a negative, like 85, 90% churned, or it's like, wow, I was actually able to uncover some 10% that was residual, that this initial bad version of the protocol still resonated with fourth principle, developers don't care about your technology.
00:19:11.146 - 00:19:46.594, Speaker A: I think this goes back to that kind of way of building an MVP. I think a lot of crypto people kind of tend to approach things as like, I'm so smart in terms of how I'm going to build this protocol, and everyone's just going to see the brilliance, the technical brilliance of this protocol and go and use it. Peter thiel in zero to one has the analogy. It's like, if you build it, they will come. If you've ever seen Field of Dreams, and that's not the case. The thing developers want out of a protocol is users. And the reason I have this guy up here is this is the original iPhone.
00:19:46.594 - 00:20:27.842, Speaker A: I mean, some of you look pretty young. This is 2007. The one thing to note is if you look at all of those apps on that phone, one, there's no App Store. Two, every single app was built by Apple, including the Google Maps app and the YouTube app. So even Apple, with this magical device, wasn't confident enough in a place where they were going to go have third party developers. And if you want to get really nerdy, the only way that you could actually build an app on the original iPhone for that first year was this weird local JavaScript thing, which now it's kind of weird with react native, it's like basically everything is JavaScript. But there was no third party App Store for the entire first year.
00:20:27.842 - 00:20:54.800, Speaker A: So Apple came with the approach of, we are going to will this thing into existence, do all the marketing to get this initial set of people to buy it. At the time, it was pretty controversial. It was $600. There was no copy paste. There was no 3G. So it was really slow. Steve Ballmer has the famous thing where he's making fun of it, but they were able to get five to 10 million people to go and buy a phone that they had built just themselves.
00:20:54.800 - 00:21:54.414, Speaker A: And then the next year, they launched the App Store. And naturally, who were the people who built the first sets of apps? For the most part, tended to be the people who bought the iPhone the first year, who tended to be pretty nerdy, people who liked adopting new gadgets. And if you actually go back and look at the most popular apps from 20 08, 20 09, 20 10, most of those apps don't exist today. Like, very, very few. And it's only when you get to 20 11, 20 12, 20 13 that you start to like, oh, what's this app Instagram? What's this app? WhatsApp? And it actually took even a few years of the App Store existing for people to start to kind of discover the native killer app for this application. So there's actually a lot of early apps are very skumorphic, if you don't know that term. It's just kind of like it's almost like when the early Internet came out, people took magazines and newspapers and tried to make it look exactly like the physical item on a screen.
00:21:54.414 - 00:22:56.290, Speaker A: And then over time, people figured out, okay, well, this is how you build a website. Similarly, with mobile apps, people were like, oh, well, we're just going to take desktop apps and try to kind of wedge them into a phone. And it took a few years for effectively the feed to be discovered by a group of developers as this is the dominant way that people want to actually consume information on a mobile phone. If you think about it, the App Store is by far the most successful developer protocol in the last decade, right? Put the web aside. And even then, with Apple selling all those iPhones and the adoption curve of mobile, it still took time. And so I think the thing, though, is that no one went and built the iPhone app because they were like, oh, the new technology, it was because they had already been using the phone and Apple was doing all the hard work getting the users right. Like, getting in the App Store and featured on the App Store is free distribution.
00:22:56.290 - 00:23:39.218, Speaker A: And so from our standpoint, this is the Farcaster website more or less has looked like this since the beginning. And I've gotten a lot of feedback. It's like, does this website look sketchy? There's not like you've raised a whole bunch of money. Like, why aren't you investing in a better website? Doesn't matter. Like, the people who want to try out Farcaster kind of have found their way to my my Twitter DM inbox. And then the other thing, and I actually got into kind of a fight with Varun about this, who he's usually right, that bad version, that v one version, we should put API docs on the website. And Varun was like, no, what will happen is we're going to keep building.
00:23:39.218 - 00:24:35.582, Speaker A: And if we get to a sufficient number of people using this initial app and protocol, people will start just figuring out how to index us. And sure enough, we had a couple of developers who are just, again, early users, who one of them just was like, well, you guys didn't implement a search engine. I'm going to build searchcaster. And another person converted every Farcaster user into an RSS feed. There were no developer docs for that. That was a little bit of them, like, looking at the Chrome console and kind of reverse engineering our API calls and kind of looking into seeing like, okay, what contract are they making calls to on the blockchain? And so I think the lesson, at least from our standpoint, is the thing to be maniacally focused on is the hard thing. And this is the kind of a related fifth principle, daily active users, right? And so, like I said, I've done a bunch of angel investing.
00:24:35.582 - 00:25:11.934, Speaker A: It always blows my mind when I get angel investment update where someone reports monthly active users for an early stage product, especially one that people are supposed to be using every day, because, okay, think about this. I get you to open up one push notification in a month. You're now a monthly active user. You don't use the app the rest of the month. Getting daily active users, that's what actually, developers want if you're building it's. Like, they want liquidity, right? So if you're building a DeFi protocol, it's TVL, but they don't want the total amount of TVL you had in a month. They want the spot how much actual liquidity is in this market.
00:25:11.934 - 00:25:47.462, Speaker A: Same thing goes for consumer social protocol. This is a super humbling chart. This day over here, you feel like you're doing really well, and then it just comes back down. And every weekend it comes back down. And so measuring the hard thing, that's like, actually colliding with reality and you don't kind of get too high on your own supply, that you're doing really well. Because if you measure monthly active users and you have a decent amount of sign ups, that number is going to look really good for a while. And you don't actually have to confront the reality that if this number starts declining, your app is effectively dead.
00:25:47.462 - 00:26:29.734, Speaker A: Like, it just is on a lag. And so if you are trying to build a protocol, finding that hard thing, the actual thing that matters for the protocol, and being intellectually honest about it, and showing your team this, sending it out in your investor updates, being maniacally focused is the first thing I check every single morning when I wake up. That is actually what's going to drive the growth of the protocol. And a protocol where this number is going up and to the right, I can promise you developers will knock down your door and the protocol itself will grow. And again, if it's DeFi, you can use TVL, and I think you can generally apply that to any app. It doesn't even necessarily need to be a protocol. I'll just leave you this last one.
00:26:29.734 - 00:27:09.938, Speaker A: So we technically started in 2020, and we didn't have a client. So there was a white paper and an idea and no client for the protocol. All of 2021. There were no other clients. And I kept telling people I was building a protocol. And then in 2022, we got to kind of two, and there were other apps in the ecosystem, but DF over here, actually, I think, was our second kind of like, client called the SCoV. And now coming into 2023, and the kind of onset of hubs, which we're really excited about, we probably have about six teams building what I would call like a full featured Farcaster client that's.
00:27:09.938 - 00:28:21.546, Speaker A: A brutal amount of time if you think that you're building a protocol where basically no one else cares about your protocol, to basically have like year, year and a half and then every time, oh, it's a protocol, so other people are going to build it's like, okay, well, where are those other people? But I think part of it is you have to put the perspective, it's going to take time. And going back to what I said before, the best way to actually go do that is you're going to have to be getting some form of feedback loop, hopefully from yourself, but also from others as soon as possible. I want to end with a few tactics because sometimes the advice or the frameworks, it's like, okay, this is a little bit of confirmation bias, survivorship bias, whatever kind of way you want to look at it. I will give you these three things that I think all of you should consider whether you're building a protocol or not. And they're a bit contrarian relative to most people in crypto. So the first is, I think Telegram is way better for building any type of early community than Discord. So Discord is A, terrible on mobile and B, it is extremely noisy and very hard to kind of keep in touch on everything, right? So for a powerpower user, maybe it works.
00:28:21.546 - 00:29:01.580, Speaker A: But I actually think if you have a simple one channel that you manage, you your co founder and you should be doing the management. Don't outsource it to a community person. I still do all the customer support for forecaster that's incredibly valuable source of kind of customer feedback by keeping things in one channel. And on Telegram, most people who are in crypto or potentially using Telegram versus Discord, they have it on their phone. And actually the thing that will bring them back to Telegram is one single chat. So if every other thing is a dumpster fire in Telegram, but they have one chat, they're still probably going to come back to that app. I can promise you most people won't go back to Discord if just everything is a dumpster fire because it's not really a DMing platform for most people.
00:29:01.580 - 00:29:30.706, Speaker A: Maybe you're building something in Discord or related to Discord. In that case, take the advice with a grain of salt. Second thing, I think I'm pretty well known for this at this point. I probably have 25,000 DMs in my Twitter inbox the actual website doesn't work for me when I try to use DMs. So I have to use like a third party tool for it. But this is less about Twitter DMs and more about have a channel. And this could be Telegram, it could be Discord if that works for you.
00:29:30.706 - 00:30:23.294, Speaker A: In my case, Twitter DM works where you can reach out to users that is not email. Because basically what you're trying to find is when people go through onboarding, especially if you're kind of doing it, maybe a little bit of a kind of slower release. If you have an ability to reach back out to them and just ask a really basic question of like, hey, saw you signed up. Use the app and they didn't come back. Just that simple question and be able to engage with someone back and forth a couple of times is extreme amount of leverage from customer feedback. If you go set up delighted or customer I O or whatever, that sends some drip email that you never click on or respond to because you get annoyed that this is like a drip thing. It's not going to be that effective versus I can almost promise you and there are a lot of fancy names in that DM, inbox that if I send a DM, they're going to at least respond.
00:30:23.294 - 00:31:07.294, Speaker A: It might not be the best response in the world, but once you've established that channel, that's really, really valuable for developing that feedback in those loops. Last thing is, I'm building a Twitter alternative. I tend to use Twitter to do the marketing. This can apply to all of you, but I see a lot of people do very splashy big PR launches, which at this point, I just assume that most people should know that that doesn't actually matter. Like a TechCrunch article, you get a little bit of a bump and then it comes all the way back down. What does work, in my opinion, is a constant stream of small updates. And especially if you're building a protocol anytime, you can highlight other things that are happening in the ecosystem.
00:31:07.294 - 00:31:53.902, Speaker A: Even if you think it's kind of like a little cringe or shilly, if you're doing it in an authentic way that is kind of more your own brand, it's going to actually resonate with people. I kind of made this decision, and for a very long time I was very snooty about how my Twitter was and I didn't want to be shilling stuff. And actually it was Mark Andreessen who was like, shilling is good. Actually your whole job is to be doing marketing and sales, but just do it in a way that if you think this is like, try to just be more authentic about it and people will see through that. And people actually want updates about things that are making progress. And so I think Twitter has been a really powerful source of inbound for us. And yes, I have a decent sized audience, but it's not that big.
00:31:53.902 - 00:32:26.780, Speaker A: And I do think that you can find a lot of early users, especially in crypto on Twitter. And because a lot of people have their DMs open, you can actually go and just reach out to them and say, hey, would you want to check out this product or could I get a 15 minutes slot for you and just give you a demo and onboard you? You're going to have a lot of no's or just like ghosts. But there are also going to be a lot of people who are like, okay, this sounds interesting. Sure. And if you take the time to do, like, a thoughtful message, it can actually be a pretty good channel. That's it.
00:32:35.090 - 00:32:36.640, Speaker B: Hi, thanks for the talk.
00:32:37.250 - 00:32:41.230, Speaker C: What is the key metric that you use to measure retention?
00:32:42.870 - 00:33:30.910, Speaker A: I'm still learning this because I didn't grow up in consumer social. I like crypto, and we very much focused at Coinbase on daily transacting users or monthly transacting users. So the advice that I've kind of been given actually by Brian Kim at a 16 Z that we look at kind of three core metrics. So just day one retention of like, okay, how many people sign up and they just never come back? Day seven, just kind of say okay, like that. And then day 30, and we haven't actually quite figured out what number works best for us. Day 30 is by far the hardest to do. But the other thing that one of the reasons I'm giving you kind of this evasive answer is what we found is that people don't churn forever.
00:33:30.910 - 00:34:10.198, Speaker A: There are moments where they come back. So a good example like Vitalik joined the network in November, and there was like 50% of people who had ever signed up checked the network that day. And granted, it was a small N, but I think for us, we're trying to actually develop a little bit of a better framework for us in terms of what do we think that the average user, how many bytes at the Apple do we have before they really never come back? And so far, even two years in most people. And again, we're talking about 10,000 people in a beta. So it might be different at 100,000 or a million. Okay, thank you. Yeah.
00:34:10.304 - 00:34:20.750, Speaker D: Hey, Dan, thanks very much for the talk. I'm always curious, what do you think is the end game or what's the value prop of a decentralized social network?
00:34:22.050 - 00:34:54.230, Speaker A: So I think about it in two ways. The first is if you have an audience in a decentralized social network, that audience relationship is direct between you and your audience. And actually you as the creator, you don't own your audience because the audience decides if they want to follow you, but there's no company that can kind of rug pull you on that. Right? So it's like if I spend ten years building an audience on Twitter or YouTube, they decide that they don't want me there, they shut my account off. There's no way to export those followers. Right. So I think that's the value prop for a creator.
00:34:54.230 - 00:35:38.680, Speaker A: That said, I don't think most are that focused or sensitive to it outside of maybe some political examples today. So I think that the more compelling case in the near term is for developers. And this is why we spent so much time on working on Hubs is if we can get the developer experience to be just amazing and kind of like the ideal, once Hubs launch is someone can just go to GitHub, download a Farcaster hub, spin it up in kind of a docker container, and within a reasonable amount of time, 15 minutes or something, they have the entire global state of the network. In the same way that you would get with an ethereum node for Farcaster. And there's no API limit. Like, they could just do whatever they want with the data. I think that experience.
00:35:38.680 - 00:36:45.038, Speaker A: What we're excited about is if we can continue to grow the number of users overall in the protocol, and that's a little bit of, like, cobble together whatever we can and constantly change the strategy on that, and we haven't quite figured out that then you have an addressable size of the protocol, that those developers will actually be the ones that start working on weird new ideas that end up being the next Snapchat. The TikTok, the new social app or new app that is enabled by the fact that out of the box they get all of these base level primitives from a social standpoint. And so I think where I'm most excited to go back to the iPhone example is if we can continue to drive the growth and adoption of the protocol, I think developers will. And you saw the progression. I think that there will be more and more developers that get interested. And then if you bet on the kind of aggregate number of developers who now have true permissionless, innovation, that I think is the bet. And I'm old enough to have lived through the early days of Twitter, and again, a lot of you look pretty young.
00:36:45.038 - 00:37:31.702, Speaker A: In the early days of Twitter, the API was really open. And another important thing to note is twitter did not have its own mobile app. All of the mobile apps were third party mobile apps. And so all of the main core Twitter features app replies, hashtags, quote, tweets, retweets, pull, the refresh as a UI paradigm that was all invented by Twitter users and third party developers. And so some people sometimes think of like, twitter nailed this product. It's like, no, they got the first primitive correct, and that hit the market at the right time and grew really fast. But all of these additional features actually was just within the constraints of 140 characters and open API.
00:37:31.702 - 00:37:42.010, Speaker A: You had a lot of people come up with that. And so that's the era that I want to bring back into social, is where anyone with an interesting idea can just go do it, and they don't have to ask anyone for permission.
00:37:42.170 - 00:37:46.146, Speaker D: Oh, okay. I see. Yeah. That's super cool. Thank you.
00:37:46.328 - 00:38:20.694, Speaker A: Hey, Dan. It's Emmanuel from Shield. You talked about DMing on Twitter. It's definitely something I like to do. A lot of that I feel like you can get a ton of user feedback kind of in a short amount of time by doing that. But perhaps you can't quite go as deep compared to like 2030 minutes conversations that you showed us you were scheduling with your users. So how do you balance between user feedback via text versus voice or FaceTime? Yeah, so again, little unique in that I also get feedback on forecaster.
00:38:20.694 - 00:39:15.600, Speaker A: It's like I basically have people yelling at me all day on things that they want done, which is a good thing, by the way. So I get feedback from my own products. There's a little bit of like the dog fooding actually gets a lot of that done. I think that where DM works is if you've already developed a pretty strong idea of where the pain points are in your product, you can use it to confirm that that continues to be the case. And then if you start to find that you're getting new insights or things that you hadn't kind of understood before, that's actually useful sometimes then to try to get someone on a call or to spend a little bit more time getting the nuance. But I think at this point, what I find really useful about the Twitter DMs is, first of all, anytime the onboarding experience is confusing, I get that feedback. So having done this enough, I kind of now can reason about like, okay, I understand where that could be confusing and improve it there.
00:39:15.600 - 00:40:03.226, Speaker A: I think it's also just like, I can DM any user who's ever used Farcaster for the most part because I have their Twitter and I can just go there. And again, it's a touch point and that could lead to a conversation. And so I had a call two weeks ago with someone who we were going back and forth on Twitter DM, and they actually gave some pretty interesting feedback and I ended up doing 20 minutes with them just to kind of make sure that I could fully understand their perspective on something. And I think it may have changed our roadmap in a good way. So I think it's like a first line and then you can kind of make the call on going deeper. That said, the first 400 people on the protocol, I manually onboarded. So I did a lot of that early on because I really, really wanted to get all the nuance.
00:40:03.226 - 00:40:04.720, Speaker A: Got it. Thank you.
00:40:05.650 - 00:40:18.500, Speaker D: Hey, Dan, Brian from Friends. How do you think about you guys continuing to get user growth and user adoption during crypto winter? And has your strategy changed anytime during the last couple months?
00:40:19.110 - 00:41:14.290, Speaker A: Yeah, so I had this joke with Shiram for most crypto apps, bull market is when you want to be there because people have a lot of money and then they don't have a lot of time so that they're using your crypto app with social media. If you don't have a lot of money in a bear market, but you have a lot of time, it's a perfect time to be growing a social media app. Maybe it's not as funny as I thought it was, but I think the thing that really scarred me about Coinbase for the five years that I was there is we could never make number go up when the market wasn't there. And that's a function of at least where Coinbase is in the market. It's very much a financial product. And so convincing someone to do something with their money turns out it's really, really difficult. Especially if you're not selling them a good like if it's like an investment asset that's actually very market driven.
00:41:14.290 - 00:41:56.446, Speaker A: And so my advice generally is A, you should be building for crypto natives in this market. If you're not, I could see the argument that you get everything in place that if market sentiment shifts or kind of market is a little bit more crypto spring, call it then maybe more normies. But I generally think even if you're building for normies, if you can convince crypto native people to find use case today, then they actually become the best ambassadors to your product. Right? Like the reason Coinbase grew so fast in 2017, we had no marketing. There was nothing. It was all word of mouth. It's like, oh, if you want to buy Ethereum, buy it on Coinbase.
00:41:56.446 - 00:42:33.086, Speaker A: And that is a brand building exercise. But that's because the crypto natives in 2016 who wanted to buy Ethereum, coinbase was the only place to do that in the US. And so those are the people actually really drove the growth. And so I think of it as if you can retain and deepen engagement with a smaller group of people during maybe a kind of like more crypto winter period that's going to set you up for a you're going to be having feedback the whole way. So your product's going to continue to be improving, but at the same time when the market shifts, they're going to be the ones that are actually helping drive growth for you.
00:42:33.188 - 00:42:51.490, Speaker D: Cool, thank you. Hi, Jay from Etherid. It seems like Forecaster has two different groups of users, the actual end users themselves as well as developers. I'm curious when you're doing all those interviews, are they primarily with developers or with users?
00:42:52.630 - 00:43:36.414, Speaker A: And I wrote a blog post about this is product led protocol development is how I like to frame it. It's again inspired very much by how they approach the iPhone. Our view is that no developer is going to care about that v one version of Forecaster because they would be like, oh well, I'm going to go build my own version of it because it's not that hard. Or I'm going to do the more on chain version or there's another alternative. Or why didn't you do this technology choice? That's basically for the first year and a half I just had everyone criticize all the technical decisions for Farcaster and actually as a little bit more like the kind of sales version of it. I take all that really personally. And then Varun would be like, it just doesn't matter.
00:43:36.414 - 00:44:13.838, Speaker A: We have to just get people using it. And once we get people using it, people will start tinkering. And that very much the we. There was not a single hackathon, not a single marketing thing, no partnerships. I used to run business development at So like anytime someone's like, oh, Polygon's BD team and they're genuinely talented for a BD team, the reality is you can't fake organic traction with developers and the best people to potentially be building are the people who start using your product early on. So like a good example, it's like Uniswap really successful. Uniswap has a product.
00:44:13.838 - 00:44:56.780, Speaker A: 50% of some really large percentage of uniswap's volume comes from Uniswap.org. So they started with a product and then that was able to turn Uniswap itself into a bigger protocol. And if you look at most of the successful D Five protocols, they all have clients. And so I think, yes, if you're building an L one, you could convince me that you don't necessarily need that, but basically everything else you have to be dog fooding and bootstrapping. The initial set of users that then showcases the power of your protocol. In addition to if you're building on top of your own protocol, you're going to know all the pain points and the things that you actually want to change because you're in the shoes of the developer before they even get there.
00:44:57.310 - 00:45:04.190, Speaker D: Makes sense. Second question is what would you say would be the most surprising insights as to attracting developers?
00:45:08.210 - 00:46:26.706, Speaker A: Just goes back to I don't think developers care about a lot of stuff that people do that I think is generally fake work is just like they care about is there a usage and if I go and build something here, will other people use it? And so it's like if you just focus on that and making that path to, okay, I have an interesting idea. You have users and a thing that I can go build on, compress that down as fast as possible. We've done, for example, a bunch of stuff our docs are in notion we could have gone invested in a GitBook implementation, but we knew that things were going to be changing around Far. I mean, you can ask DF if we've done anything good, but I think generally replet or stack blitz or just make things really easy for people to go fast. And I think that one last one and Varun had this insight is so we have this technical white paper effectively for the Farcaster protocol. He did a 45 minutes YouTube series of nine five minute YouTubes where he goes through each section he gets excalidraw, which is like a whiteboarding tool, and he does a screen recording. And we didn't even use Loom, we just used the Slack has a built in five minute max video and he just walked through each part of the protocol.
00:46:26.706 - 00:46:58.020, Speaker A: And I think a couple of them took him each time like one or two reps. But then that actually became like since we added that the number of people that started to grok how the protocol was working because it was all there in the white paper. But no one wants to read your white paper versus being able to watch something on YouTube. And Varun is pretty good at doing that. I think that also really helped compress that cycle time of like, okay, you have users, something to go build on. How can I figure this out in the fastest time possible?
00:46:59.030 - 00:47:00.020, Speaker D: Thank you.
00:47:00.390 - 00:47:26.250, Speaker B: Hey Dan, this is JP. So I was earlier user of Farcaster. I actually still remember the magic moment was you DMing me, I think after I joined or replying to something, liking everything I posted. How did you figure out what was different between the people who stuck around versus who didn't? I'm guessing some of those behaviors and some of the things I experienced were not accidents. So what did you find after you onboarded, say, 501,000 users?
00:47:26.750 - 00:48:05.510, Speaker A: Yeah, so my Twitter friends going into it who all stated preference that they were interested, we need decentralized social media. Like, this is an imperative. They all just continue to say the same stuff but on Twitter because they have big audiences. So that was a mistake in the sense that and I had to go through that of, okay, like if you have an existing audience for something, like, the likelihood of sticking around is very low. Eugene Way actually has an amazing essay called Status as a Service if you're thinking about social products. And it's just basically it's like every new social network mints a new set of and he actually uses bitcoin proof of work. It's like a really great essay if you've never read it.
00:48:05.510 - 00:48:46.418, Speaker A: But each new social network basically mints a new group of people who they didn't have a big enough audience on the old social network. So their next best alternative like, okay, I'm going to go actually invest in this new one and then grow with mean this was kind of copied from Twitter is we put a recommended user list pretty early. We didn't try to make it deterministic. It basically was my taste of, okay, who's active on the network. And if you stayed active on the network, we basically gave you followers, which tends to if you talk to those people, they were like, yeah, it was awesome. I started just basically getting followers and it's like, well, it turns out, like a lot of people who are on Twitter, what they're trying to do is build an audience. And so that's actually one thing that you can control.
00:48:46.418 - 00:49:17.918, Speaker A: But that comes down to if you have built the initial client and you're the primary way of doing the onboarding, you can actually control that firehose. So I think that that was important. And then I think it was just I spent a lot of time talking to the users who stuck around for whatever reason, and I started looking at their Ethereum wallets, and it turned out basically everyone who stuck around was super into NFTs. And so we built an NFT feed, and that was just a bet. We tried token gated posts. Didn't work. We just deprecated those from the product.
00:49:17.918 - 00:49:36.258, Speaker A: We tried five or six things, and an NFT feed was actually the thing that helped us get from call it tens of dow to hundreds of dao. And then once we got to hundreds of like, the network itself started getting interesting enough that people just stuck around even if they had no interest in NFTs. That's super cool.
00:49:36.344 - 00:49:50.898, Speaker B: How did you decide you chose the first 500 people to onboard? Were they the right people? How did you know? At what point? What was your original rationale there? And what would have been now if you were looking? In hindsight?
00:49:51.074 - 00:50:25.682, Speaker A: Yeah, if I was to do it, it's kind of hard with the counterfactual, I would say, but basically I just hit up my Coinbase network and then I hit up every single VC that I knew. They all wanted to potentially do a seed round. We actually said no to all of them, but they at least would do a 15 minutes call with me to go through onboarding. That got me probably, I don't know, 80 people. And then even by then, I would just ping people. It's like the few people that stuck around, it's like I'd just ask them. It's like, do you have other people? And so I remember one day, randomly, I had no idea what South Park Commons was.
00:50:25.682 - 00:50:59.502, Speaker A: Someone from South Park Commons was like, oh, I have all these other people who are in the Web Three 2021. So it's like all hyped stuff. And so that became like 40 different people got onboarded via that. So you just kind of just follow your nose. Basically, anytime you have anyone who's excited or engaged, you just keep that person really well protected and just constantly making sure that whatever they want because that's the kindling of going from the one person or the initial team to ten to 100 to 1000. Awesome.
00:50:59.556 - 00:51:00.190, Speaker B: Thanks so much.
00:51:00.260 - 00:51:00.926, Speaker A: Yeah.
00:51:01.108 - 00:51:34.374, Speaker E: Hi, Dan. Thanks for the talk. This is Brandon. Congrats on a phenomenal protocol. I'm a big fan of the premise of sufficiently decentralized social media, and I think forecaster is a really great design. I guess my question is a little bit more philosophical. Do you think that Web Three introduces a new superpower when it comes to designing social media protocols, or is it a little bit of a barrier? Because if I understand correctly with Farcaster, we're using the wallet to sign messages and send them to Data Hubs, but you could sign those messages using another kind of cryptographic program without having to deal with crypto.
00:51:34.374 - 00:51:38.058, Speaker E: So do you see it as something that's unlocking something fundamental there?
00:51:38.224 - 00:52:10.210, Speaker A: Yeah, I think the way I approach and the reason I got excited to join Coinbase back in the day is it very much aligned with how Chris thinks about it's. Like computers that can make commitments. I've always been more interested in the public blockchains permissionless. Public blockchains are a new type of computing, primitive rather than the financial aspect. Like, I'm friends with Apology, like his million dollar bitcoin Bet. Interesting intellectual discussion, but that's like, the reason I'm in crypto is like, I want to build new products. That's why I moved to Silicon Valley originally.
00:52:10.210 - 00:53:12.330, Speaker A: And so the way I view it is a blockchain. In the case of social, the core thing, and this is the sufficient decentralization of social network thesis is if you can get the identity your pointer online that says, like, DWR is this address or this signature out of any one company, country individual, no one else can muck with that. That, to me, feels like the future. And if you want to talk about the metaverse or any of this other kind of stuff, we can't exist in a completely digital world if people can be disappeared like that because of a terms of service violation. And so in my view, I'm not aware of any other technology that you can actually truly get to because some people would say Ethereum is not decentralized. Okay. If you get something in Ethereum smart contract and you program it correctly, to use a term from Jacob Horn, a hyperstructure, it'll run forever as long as Ethereum is there, and that logic will hold.
00:53:12.330 - 00:53:32.686, Speaker A: And outside of maybe quantum cryptography, which it sounds like you guys had a talk on that today, but I think it's truly a new type of institution. As humans, we can actually have if you want to make the bet, these blockchains are basically going to run forever, which I think more or less they will.
00:53:32.788 - 00:53:51.906, Speaker E: Yeah, I think you're absolutely right. I think the idea of having the kind of programmable permissionless world computer with a Verifiable data registry to look up entities and identities is really, really smart. And that's why I'm a fan of forecaster. I just wonder, in terms of the message signing, does the mainstream consumer have to have a wallet to do that? Because you could sign messages without a wallet.
00:53:52.018 - 00:54:39.794, Speaker A: So actually in V Two, we moved all messages, so you have to have a root wallet at the end of the day. But I think with like 4337 and some of the other stuff, we may never even expose that to users and just be like, in a recovery scenario, you can grab it. Everything else on Farcaster and V Two is actually signed with an EdDSA key. So it's a non cryptocurrency address, so you can think of it as like a decentralized OAuth token. And I think that's important for two reasons. One. If you have to custody someone's keys, that's actually kind of stressful for you, right? Because if people throw money in it or something in it and then you lose it or it gets hacked, now those people are going to be really mad with you versus like an OAuth token, they'd still probably be mad if you got hacked but not come to your house and be beating down the door.
00:54:39.794 - 00:55:19.122, Speaker A: The other thing is that in the US. It's regulated. So the moment you take it's weird that we have different crypto curves that fall under regulatory but the state of New York, if you host an ECZ SAQ, an Ethereum key in the cloud, the state of New York considers you a custodian. Having gone through that equinbase. I promise you, you don't want to have to get regulated by the state of New York. And so our view is someone's building a social app, putting an EdDSA key in the cloud, it's no different than, oh, token, you can't shove any crypto in. What? But we wouldn't have known that until having spent a year building in the first version with the architecture that's assumed everyone's going to use an ethereum address.
00:55:19.122 - 00:55:24.142, Speaker A: And so that goes back to my point before about just like get something out there and start collecting feedback.
00:55:24.286 - 00:55:26.020, Speaker E: Cool, thanks so much, appreciate it.
00:55:27.290 - 00:55:28.822, Speaker A: How's it going? Great talk.
00:55:28.876 - 00:55:29.254, Speaker D: Thank you.
00:55:29.292 - 00:55:53.786, Speaker A: I actually onboarded to Farcaster yesterday. This guy over here onboarded me. Great. My question is just regarding your global vision. I'm assuming you guys are starting the US. Like Europe ish where does Latin America, Asia, how do you think about when do you acquire those? Like how do you speak to them differently? Just that type of stuff. Yeah.
00:55:53.786 - 00:56:33.722, Speaker A: So I ran international for coinbase. That was actually kind of like my first job. I have a little bit of a contrarian point of view is like crypto is very developed, country centric for the most part. I think there are users everywhere. But I think in terms of like if you're focused on crypto natives and people who just live and breathe this stuff, like the classic crypto Twitter user, I can guarantee that a large percentage of those people are in developed countries. And so for us, I think initially we're not focused on a global strategy, internationalization and all that. It's just like find people who actually want to use the product every day, make that Dow chart instead of being like this, go like that.
00:56:33.722 - 00:57:27.370, Speaker A: And once we can figure out what the core app experience, use case features, all that, once we've nailed that, then you actually go broad and think about global expansion and stuff like that. Whereas I think if we were to do that now we can get a lot of false signals, right? Like you can get a bunch of signups, I don't know, in Indonesia. And now who are you building for? Like the people that you got a bunch of people to sign up in Indonesia where I don't know anything about like been once or no, I haven't even been I've been to the that that's what I worry about. Whereas if I'm building for a crypto native person like any of you in this room, I have a much better understanding of the psychology, what they're looking for out of the experience and so play to strengths. And then once you figure out like you have product market fit, then I think work globally.
00:57:29.070 - 00:57:33.840, Speaker C: Hey, Varun asked me to heckle you. So I have two questions.
00:57:34.530 - 00:57:35.326, Speaker A: Okay.
00:57:35.508 - 00:57:42.430, Speaker C: The first one is I'm curious how you're thinking about Dow growth as a builder in the ecosystem.
00:57:44.550 - 00:58:41.186, Speaker A: It's kind of an evolving answer. I think we've been really focused on quality because I think generally the fastest way to lose active users on a network like Twitter is if you have low quality, whether it's a spammy reply, bot reply, a troll, nasty, negative person. And so I'm just very cautious about growing too fast. I do think we probably just need to move faster towards getting the network to be completely permissionless, though. And so I think we're going to have to be thoughtful at thinking about our client warpcast, but also for the developer ecosystem is in a world where anyone can go sign up and so you can actually grow at the rate of what the natural Dow growth in the network would be. How can you make it to the default developer experience? You don't have to go rebuild like spam filtering. Right.
00:58:41.186 - 00:59:14.400, Speaker A: So if we spend a ton of time doing that, how can we think about that in some type of a decentralized way? Because I think that is the downside to going too fast on Dow growth is like the network quality goes really downhill really fast and there's nothing worse than you to potentially get a little red dot that you got a notification and you open it up and it's just like some worthless post because someone's AirDrop farming or whatever. And so I think that's the tension. And so hopefully in the next three months we have a solution for that.
00:59:14.930 - 00:59:53.626, Speaker C: Cool. And the second one is I guess the Dow growth could come from the ecosystem rather than your and and I guess that's what makes Farcoast as special as a protocol versus something like Twitter. Now with Twitter, you can't really have third party clients. So how do you see that? Because it's very hard to onboard new users to my app, for example, without them going through farcast or Warp cost first. And that's almost to the point where it's not worth it for me to try and acquire users from outside the network and just focus on making the experience of people who already use it better.
00:59:53.808 - 01:00:42.506, Speaker A: Yeah. So I think going back to the getting the network to be permissionless that enables any developer, whether it's you or the Jam team, you can try to grow your app in any way you see fit. And so I think that that's important for both the neutrality, like credible neutrality of the network and the success of the protocol. But I think actually it brings up a point of I think a lot of people also get very focused on it's, like, oh, well, the network isn't permissionless at the beginning. It doesn't need to be. What you need to get to is figure out sort through the kinks first and if you're actually completely permissionless or completely decentralized, you're just going to move a lot slower. And so going back to the point of how can we get the network now that we have a lot of learning under our belt to actually permissionless state a it enables a developer like yourself to grow at the rate that whatever you think is the appropriate way to do it.
01:00:42.506 - 01:01:25.126, Speaker A: But I do think trying to see ahead of certain problems that will happen as second order effect of making decisions, that is also important. Right? And so it's like I want to make sure if the network can grow as fast as it wants, there's going to be a lot of spam. And then instead of working on delightful features that make your users happy, you have to deal with spam, which is like basically doing good spam filtering. It doesn't actually make anyone happy, you don't get credit for it. Versus if we can actually be thoughtful as we make those changes at the protocol level, everyone gets that basically out of the box for free. And so that's, I think, how we're thinking about it. Awesome.
01:01:25.126 - 01:01:25.650, Speaker A: Thanks Dan.
