00:00:10.410 - 00:01:31.438, Speaker A: The afternoon block is on auctions, and it's in two parts. First I'm going to talk about auction theory, and then Michael is going to talk about on chain auctions in practice. And the morning session is easy to motivate, right? Like, why do we care about business strategy? Well, we're all building businesses and we care about being competitive, and we care about maintaining competitive advantage. Auctions sort of, by contrast, feel like a much more niche topic, right? So let me give sort of two quick points of motivation just so you can think about why we're actually studying this right now. First of all, solving allocation problems is just one of the most fundamental purposes of markets in existence, right? Like, so much of life and our interactions and everything we sort of face in terms of incentives is tied into questions of allocation, right? Like, how is it that we allocate resources to the people who value them the most, to the protocols that can make the most effective use of them? And how do we figure out how things should be priced, how much they are valued by whom, and so forth. This is like a fundamental purpose of markets, perhaps. It's arguably the most fundamental purpose of markets.
00:01:31.438 - 00:02:20.460, Speaker A: Right. Why do we bother enabling, exchange and trade in the first place? Well, because we want to get resources and assets of different forms to the people who value them. And so one reason we're talking about auctions is that many, many Web Three businesses in one fashion or another, even if it's not like sort of the traditional, just like some people, when you think market and marketplace business, you think like financial trading platform. But also the first day in my MBA class is usually about online dating applications, right? Like dating is a market. Dating applications are marketplace platforms. Same thing here. Some Web Three businesses are literally like running auctions all day, right? If you're sort of selling distressed DFI assets or something like that.
00:02:20.460 - 00:04:27.778, Speaker A: And others, it's not that they're running auctions all day, but they're solving complex allocation problems that, in effect that are auctions under the hood. You're trying to figure out which protocol should address, should do a given computation that's actually fundamentally like an allocation problem as well. And you're often going to be solving it via something that's an effective procurement auction. And then last just a footnote, you know, sort of as we're thinking about why we're here and why we're doing this, the type of thinking that we're going to work through in auction theory is utterly representative of everything. We were talking about this morning, about how do you think through an incentive design. How do you understand how the market or individual users are going to respond to changes that you make? And so there's that too, right? This is also sort of like a brain stretching exercise for thinking about just like, how does incentive design in Web Three work and then Michael's component is going to be utterly critical because as all of you know, theory is great in theory, but when you bring it to practice, things change, right? And this has been true, by the way, in auction design forever, right? There are really interesting famous examples, for example, of collusion by the players figuring out how to send each other messages through the bids, right? And auction designs, like major auction designs, like wireless spectrum auctions have been modified because after some round where people use trailing digits to send each other messages about where they wanted them to stop bidding, right? Theory has no space for that sort of intuitively, right? Like your model, like your auction doesn't imagine that people are going to creatively game the system around the incentives you set up in the first place using tools that weren't in your model, right? Like when we model how to run an auction, we don't normally think about the digits people are entering their bids in as part of the game. But as we all know, the second you go on chain, people can game anything.
00:04:27.778 - 00:05:08.110, Speaker A: They can see all the code, they can think very carefully about what to do. And conversely, doing auctions on chain introduces new constraints and new opportunities, which Michael will dig into in a lot of detail. So this is like the fundamental purpose of markets. It's something a lot of you guys are going to have to do and a lot of your teams are going to have to do in one capacity or another. And it's also know an example workthrough of how do you go from theory to practice in marketplace design. Okay, what's an auction? Earlier we did what's a platform? Auctions are about allocating property or resources or whatever. They allocate according to bids.
00:05:08.110 - 00:05:42.558, Speaker A: A common misconception is that auctions are always about allocating to the highest bidders. This is not necessarily true, although many auctions we interact with are also about that. And there's a virtuous reason, which is the highest bidders are often the people or entities with the highest value, but you do not always want to allocate to the highest bidder. An auction is just like you collect bids and you somehow use that to determine the allocation. So your first bidder shows up and says, I'll bid 15, and the second bidder says, I'm in for 20. And then your third bidder 75. That node is going to win the auction.
00:05:42.558 - 00:06:38.778, Speaker A: There's no bidder after 75. If we're allocating the highest bidder, at least that's the one who gets it. Footnote why might you not want to allocate to the highest bidder? Maybe you care about geographic diversity of your participants or something and our green bidder is further away from the others. And so think about like for network robustness purposes, you might care about weighting bids by some characteristic vector of diversity constraints. Alternatively, think about sponsored search, right? Like the ads you see on search engines and so forth aren't just whomever bid highest, but rather they're also ranked by the likelihood that you're actually going to click on them, right? Maybe some advertiser is going to bid really high just to put something in front of you that you don't actually want to see. Sort of just very spammy. You might want to screen for that reason.
00:06:38.778 - 00:07:39.146, Speaker A: But mostly for today's purposes we're going to be talking about by the way, note, sorry, I know I'm so far down the footnote rabbit hole and we haven't even talked about the content yet. But let me just quickly finish that thought. Right. Can you tell I'm really excited about auctions? I really like auctions. So note that those were two very different reasons that you might not want to allocate to the highest bidder, but they're both about creating the most value possible through your allocation process, right? One of them is you need a diversity of winning bidders for the security of your system or the breadth of your community or whatever. And the other is about you want the ads that the user sees to be ads that the user actually wants to see, which drives virtuous user behavior like clicking on them and coming back to the platform and using it over and over again. So in some sense you're still trying to achieve the highest value allocation.
00:07:39.146 - 00:08:27.274, Speaker A: It's just not always the case that the highest value allocation corresponds to the people with the highest willingness to pay. And why is that sort of willingness to pay isn't we think of it intuitively as economist. Economists often intuitively think of willingness to pay as being a measure of value. But it's not really. It's like value, like an individual's value convolved with interacted rather with their ability to pay, right? Somebody who's much wealthier might have a much higher willingness to pay for something just because money doesn't matter as much to them. And it also doesn't account for social externalities, it doesn't account for the overall welfare of the system like that. There's a value to having your nodes in many different geographies but so the goal is going to always be to allocate in a way that is value maximizing.
00:08:27.274 - 00:08:52.982, Speaker A: And often and certainly in the simplified examples we're talking about today, we're going to be thinking about that as the highest bidder. But as you're going out and building this in the field, you want to think critically about what drives value in your system and that will shape your auction design. Done to the footnotes, I promise. We're actually talking about auctions now. Cool. There are lots of them. Why do we use them? We use them because value discovery is hard and so you see them in context like that.
00:08:52.982 - 00:09:33.838, Speaker A: Like fine art, antiques, classic board games. Got to give a shout out to board games, my dad collects them. This is why for unusual goods we use auctions because it's really hard to know who values them or even what they might be worth. And so if you have an auction, people can show up, cast their bids, and now you learn some of that information resources, same thing. Wireless spectrum, oil drilling rights, financial instruments. And then in web three we have all of these different value discovery problems and resource allocation problems. We have block space, we have token sales, both initial rounds and later tranches like service procurement.
00:09:33.838 - 00:10:28.070, Speaker A: Governments run a lot of auctions to procure services. Dows do too, right? You got to find the coder who's going to bid. You collect bids from coders to write some piece of your architecture reminder. That's another case where you might not just want to go to the highest, or in this case, probably lowest bidder who's bidding the lowest price to code the thing, because the absolute lowest price bidder might also just not be a very good coder or might not be planning to do a good job. And so you have to think about weighting the bids, the cost of providing the service, of procuring the service, rather with the value that you get. And economically, what do auctions achieve fundamentally? They're about price discovery and as I've said, efficient allocation. This is like getting the asset to whomever values it the most, or more broadly, creating the socially optimal allocation.
00:10:28.070 - 00:11:51.840, Speaker A: Price discovery is often a useful purpose unto itself, right? Sometimes a lot of the value of an auction in fact, there's a great book called Auctions the Social Construction of Value which argues that one of the purposes of auctions is actually to form a sense of value of an object, to even understand what society values it at. And sorry to pull another NFT example, that happens sometimes, right? These are assets where it's really hard to know what it is. And the process of even forming that initial value comes in part from a social engagement and consensus around the initial price discovery process. So part of the point is to sort of find price discovery, match supply and demand, and sort of discover how much something is valued. And then the other, of course, is this allocation question how do you get it to the people who value it the most? Another bonus that is especially going to be true in on chain contexts often is transparency, right? It's not just that you found a price that clears the market. It's not that just you found the efficient allocation, but you did it in a way that people can interpret and understand and often audit. And that's valuable too, right? Like if you happen to know that somebody is the highest value user of your server and you just give them the server, I don't know, some third party is watching this like, hey, how come I didn't get to check out this server? Maybe I wanted to use it.
00:11:51.840 - 00:12:55.554, Speaker A: The auction isn't just about establishing value, but it's establishing sort of consensus about value. And in this sense, it's very much like even off chain auctions are a little bit like on chain activity. So that's the positive case for auctions. That's sort of like why we like to use them. There's this other question which is, like, why do you have to solve allocation problems in the first place, right? Couldn't we just do something simpler and Tim Roughgarden and I wrote a piece on this for Asics crypto, and the argument is, in effect, markets you've probably heard this, like, invisible hand, right? Like, markets like to find the sort of efficient outcomes they like to clear, they like to match supply and demand. And so market forces are constantly pressing in that direction. And in particular, if you don't make it to market clearing, there's some value that could have been created is not right.
00:12:55.554 - 00:13:51.202, Speaker A: Like sort of almost definitionally, if you don't reach the socially optimal allocation, you've missed value if you don't reach the market allocation, which, again, is not always the socially optimal allocation. But if you don't reach the market allocation, there's somebody who would compete to get the good at the prevailing price or something. And this is why we get Gas Wars and NFT mints, right? If you're intentionally offering a good at below the market clearing price, people are going to compete for the opportunity to purchase. And at least on ethereum, the way you do that is by bidding higher and higher gas prices, it sort of just converts into price discovery in gas rather than price discovery in the initial sale. And similarly, another mechanism people use is they have an allow list. They have you do some activity in some community building or whatever. But again, now people compete on that activity footnote.
00:13:51.202 - 00:14:20.190, Speaker A: Sometimes you can direct that activity in a way that's virtuous, right? You'd much rather have people competing to write cool content for your discord than competing to sort of just bidding higher gas, which is essentially just sort of melted into the ether pun not originally intended. Wow. That was totally not supposed to be an ethereum pun, but it worked. Come on, no one's laughing at my accidental ethereum pun. Okay, I got a couple of smiles. We'll go with a couple of smiles. It's the afternoon.
00:14:20.190 - 00:15:10.702, Speaker A: And so the other reason to sort of be thinking about mechanism design for allocation is that in some sense, mechanism design is necessary, right? Like, the market is going to try and get you to a market clearing outcome, and the question is whether you help it there and sort of control the mechanism by which it happens or let the market sort of just go and do it, which can happen in all sorts of strange ways. All right, we already talked about this. There can still definitely be reasons for selling it below market clearing prices, or similarly, not allocating the good to the highest bidder in the auction, mohammed Akbarpur and Pyotr. Dwarzak. And I have a paper about this and there are many others happy to talk about this offline. Again, I want to emphasize this is sort of like day one of auction theory. This is, again, something one could teach entire classes on.
00:15:10.702 - 00:16:33.766, Speaker A: And certainly one of the things many of you will be thinking about when you build auctions or other allocation mechanisms is how do you balance sort of participation in your ecosystem, right, so that you don't have a single dominant winner, but rather that you have a broad base. Cool. All right, so auction design goals, first of all, the two that we already highlighted, efficiency and revenue, right? You almost certainly want your auction to find the socially optimal allocation, and you would ideally, like, you know, sort of collect revenue while doing it. We already talked about transparency. We've actually already talked about I hadn't originally planned on putting the earlier part of the talk, but we've also already talked about this fairness, equity and winter diversity point that sometimes you care to design the auction in a way that sort of produces a more equitable or diverse outcome. Another thing that comes up a lot is bitter know Michael will talk a lot about this, right? In on chain context, some types of auctions are harder to run in a private manner. Also, the type of auction you run affects what people learn, right? So if you run an auction, we'll see in a second there's sort of an ascending auction paradigm and a descending auction paradigm.
00:16:33.766 - 00:17:32.910, Speaker A: In an ascending auction, people announce bids. So this is like what you often see in art auctions and things. Like people announce bids and it keeps climbing until the last bidder, second to last bidder, drops out. In a descending auction, the price just ticks down until somebody puts up their hand and says, I want it at that price. And note that these two auctions reveal totally different types of information, right? So the first auction, you learn something about everybody's values because you learn when everyone drops out, right? If somebody drops out at like 70, then you learn that their value is 70 or in that range and lower than somebody who drops out at 90, drops out 110. Whereas in this descending auction, all you learn is a price at which one person is willing to buy. And so even just the fundamental design you choose before you think about how it's implemented, how it's secured, even the design affects some degree of how much information is shared through the auction and how much privacy the bidders maintain.
00:17:32.910 - 00:18:38.146, Speaker A: This first auction design goal slide, these are all properties of the auction itself. How much revenue does it generate as a function of the bids? How transparent is it? And so forth. A second set of design goals are about what I think of as the meta game. And these are very, very critical in web three. So first of all, there's like are people going to collude or print many copies of themselves? Or might the auctioneer print a copy of themselves and bid in the auction? So, collusion proofness and civil resistance. For example, if your allocation scheme involves if your allocation scheme involves giving out tokens to the first hundred people who sign up for something, now suddenly lots of people have bots with like thousands of attempts to sign up or something like that, right? That's your civil problem. Civil copying themselves many times.
00:18:38.146 - 00:19:40.214, Speaker A: Collusion proofness. By contrast, some auctions bidders can benefit by withholding bids, right? Like a group of bidders can get together and sort of agree to keep their bids low and share the surplus among themselves after the fact. Credibility. Beautiful paper by Mohammed Akbarpur and Shangwu Li in Econometrica, and Michael will talk a bunch about this. You also want to make sure that the auctioneer is not going to lie about how the auction was run, right? Are the rules of the auction sort of secure and going on chain can help with this a lot. And then lastly, and this is, I think it ties very nicely into the discussion from this morning what we call Xante incentives upfront incentives. Remember, resource allocation doesn't just happen in a vacuum, right? Most of you are not going to be like allocating a token or something and just then it's like forgetting about it, right? Your resource allocation problem is either ongoing over time or it's a one time thing.
00:19:40.214 - 00:20:46.026, Speaker A: But it's about shaping an entire ecosystem, right? It's about determining who your ecosystem participants are and so forth. And so you want whatever that allocation process is to incentivize people to take the types of actions that you want them to take, right? You want the eventual outcome of the auction and likely also even the process of the auction to reinforce complementary investments by users participation by the right set of bidders. And all of these are like other sort of things you can design for as well. Okay? So last part of the theory discussion is going to be just a little bit of like, I don't know, a couple of reps with some standard auction design patterns. Let's actually start in the middle of this slide because I already mentioned ascending versus descending auctions. So, as I said, you've probably seen both of these quite frequently, actually. So there's a paradigm of bidding up where people sort of bidders submit bids over time.
00:20:46.026 - 00:21:28.918, Speaker A: Or another way to implement the same thing is basically to have everyone say, okay, I'm in. And then just the price sort of like ticks up and then people drop out as they're now out as it passed their maximum willingness to bid. That's an ascending auction. By contrast, a descending auction. Oh, ascending, by the way, also often called English auctions and descending auctions are also often called Dutch auctions. Confusingly, the thing that is called there are two different things commonly referred to as dutch auctions in crypto that we're going to talk about on the next slide. This is why I always advocate naming auctions describing auctions by how they actually run, because that's easier than trying to guess which of five different versions of the descending auction paradigm you're talking about.
00:21:28.918 - 00:22:15.714, Speaker A: But descending auction, the price starts high and then descends until somebody says I'm in. Or for multiple units, right? It keeps going until the last person says I'm in. Open versus sealed bid. So this the question is sort of are bids public as they happen, or are they submitted privately and only revealed at the end? Or possibly not at all? And for example, with a sealed bid auction, you can maybe even hide how many participants there are or who the participants are and so forth. With an open auction, at least if it's happening in a single room, everyone can see how many participants there are because they're in the room. If it's happening on chain, maybe they still don't know quite how many there are. Especially if people might submit bids from different addresses, but at least they see more about the level of activity in the auction.
00:22:15.714 - 00:22:53.630, Speaker A: They know how many bidders, how many bids have been submitted, and how quickly they're ascending. Or in the case of descending, or as by contrast, actually in the case of descending sealed bid, you actually might know more about how many bidders there are. Sort of a first price sealed bid auction is telling you more. This is just everyone submits a bid. The highest bidder wins and pays their bid, versus a descending auction where the price just keeps ticking down until somebody says it's me. There could have been 1000 people in the room, there could have been 20,000 people in the room, there could have been five people in the room. You only see that one bid.
00:22:53.630 - 00:24:08.582, Speaker A: And and so again, very similar architectures actually have different privacy properties and different amounts of information. Revelation, I haven't claimed that they have different allocations because at least in the context we've been talking about so far, the allocations are very similar. Single object ascending, descending should get you to the open versus sealed bid. All of these in an ideal setting will get you to the good going, to the bidder who values it the most, bidder who bids the highest, rather. And then lastly, and this is relevant in multi unit auctions, there's this question of clearing price versus pay as bid. And so the question here is do all the winning bidders pay the same price, whatever it is, or do they pay the amounts they specifically bid? Right? So if I'm selling ten tokens and I have an auction where everyone submits sealed bid, ten token auction, first price, we'll say, sorry, no first price is absorbed into this. I have a sealed bid auction with ten tokens.
00:24:08.582 - 00:25:18.820, Speaker A: One option is I give the tokens to the ten highest bidders and each of them just pays whatever they bid. Another option is I give the tokens to the ten highest bidders and all of them pay the 11th highest bid. And why is that? Why would they pay the 11th highest bid? Well, that's the bid just below the threshold. If any one of them weren't in the bidding or bid below that, then the 11th bidder would have won and they wouldn't have. And so it's the cut off at which if you'd lowered your bid a little bit below that, you suddenly are no longer a winning bidder. These are very different, right? In one state of the world, you collect ten times whatever the 11th highest bid was, and in the other state of the world you collect strictly more than that, right, because all ten of those higher bids were higher than the 11th and there could be a lot of dispersion, right? Maybe somebody bid a massive amount. Okay? These are sort of like again and again for larger, more complex auctions, you often mix and match these things.
00:25:18.820 - 00:25:58.650, Speaker A: A lot of procurement auctions sort of have like a sealed bid round followed by an open round or vice versa, where there's sort of like initial proposal and then sort of some sort of direct bidding competition among the top proposals. That's also a good way to deal with bidder diversity, as a side note. But so these are like the standard three by three design patterns for auction structure. I have a footnote on this slide. Professors love footnotes. Fun fact that there are lots of other design levers we haven't talked about here. So like, there are reserve prices, sort of like lower bounds on the winning bids.
00:25:58.650 - 00:26:52.266, Speaker A: Bidding language matters, right? If you're going to have a bid with very complex goods, then maybe you want to give a structured bidding language that people can bid. You also might want to sell packages together. Wireless spectrum is often sold in chunks that are if you're building a telecom network, it's not useful to only have your telecom network work on the east coast of the United States, right? And so spectrum is sold in some large national packages, but also some bidders are local, right? You might have like a local television station for which you only need a local package. And so there are auction designs that aggregate small, like allow sort of joint bidding on large groups. Those are like big bundles and small bundles at once and sort of resolve the differences in bidding between the two. So lots of other design opportunities here for more complex problems. So I'm going to give you two different auctions.
00:26:52.266 - 00:27:24.314, Speaker A: I'm going to describe the rules, they're right here. And then what we're going to ask is, what's the difference? How does bidding behavior differ and how do the outcomes differ? So first one is the descending pay as bid. These are these two different sort of things that are called Dutch auctions in crypto land that we were talking about. So this is I'm selling ten units. The price starts at some high number and declines. And whenever somebody wants, they can claim a unit at the currently posted price. So it keeps going until all ten units are sold and everyone pays whatever price they jumped in at.
00:27:24.314 - 00:27:51.310, Speaker A: And let's assume that people want to buy at most, one of the units. It's a membership NFT in some community or something. You only need one of them. The other one is a descending clearing price auction. So they're selling ten units, the price starts high and declines. Whatever someone wants, they can claim a unit and at the end, all the winners pay the price at which the 10th unit was claimed. So it goes on until the last unit is claimed and then everyone pays.
00:27:51.310 - 00:28:42.900, Speaker A: And then those ten bidders, the ten highest bidders, all get the unit, but they pay the 10th price. So two questions we're framing here. It's like, what's the difference? I guess it's really two and a half. What's the difference in terms of bidding behavior? So how would you bid? So you're going to think strategically, like, I'm going into this auction, what am I doing in these two different contexts? And then two, once you've thought about how the bidders are going to bid, it's like, what's going to happen? Do we get the goods to the bidders that value them the most? Do we think how fair is what happened at the end of the day? And how happy are we with the outcome? Everyone got the question. It's like a many part question, but I think it'll be fun to think about. All right, go for it. Think to yourself for 20 seconds, turn to not your co founder and discuss for two or three minutes and then we'll come back.
00:28:42.900 - 00:28:50.150, Speaker A: Bidding behavior. How are people going to bid in descending pay as bid versus descending clearing price for ten units?
00:28:51.130 - 00:29:54.774, Speaker B: I'm going to try, based on our conversations, depict what we talked about. So on the example on the right, pretty much the price setter is like the one who's the cheapest wants to give the least. And I think generally, if you're like a buyer, a consumer on that side of the market, I think it's more equitable for you because we will assume, like, there's a variation among the bids, right? There's like a high bid, a low bid. If that assumption is broken and there is no cheapskate, like everyone is a whale, then there isn't really enough discovery for the market to find a low price. Right? That's the caveat. On the left, the price discovery is more active, but I'd say the seller has a little bit more of an advantage here. If you're a cheap buyer, you might not even get that opportunity to bid.
00:29:54.774 - 00:30:13.790, Speaker B: Whereas opposed in the other example, you can bid a lower price and then kind of end up spreading that. Price across everybody. So does sound more equitable for the buyer on the right and then seller on the left. Generally.
00:30:13.870 - 00:30:44.540, Speaker A: Yeah. Okay. I love this equity point. Thank you so much. By the way, also, you're particularly tellable, but we also have matching hair, which I'm super stoked about. This equity point is very much real. So in the descending pay as bid auction, right, let's let's let's imagine we've got ten units for sale, we've got five whales in the market, and they bid some really high price.
00:30:44.540 - 00:31:50.530, Speaker A: Well, even as the price ticks down, at the end of the day, you have five people who paid way much more than everybody else. In the descending clearing price auction, if they bid some really high price, then the price ticks down, at least at the end, everyone pays the same thing. That somehow feels very equitable, right? Like, even if you were someone who was willing really high bid, you got to pay the same amount as everybody else, the price realized lower, and you didn't lose out from bidding high. And meanwhile, by the way, right, on this other auction, you can lose out by bidding high. And who is it who loses out? It's like the ones who most value the thing, right? It's like the people who are most excited about the community are the ones who sort of most in equilibrium, sort of overpay in some sense, which maybe isn't optimal. It has economic rationale to it, right? It's like they're the people who care the most about getting it. They want the least risk of whether they manage to get it, but also it feels a little quick.
00:31:50.530 - 00:31:55.730, Speaker A: All right, what else have we noticed? Other thoughts? Like, what other sort of observations do you guys make about these auctions?
00:31:56.630 - 00:32:05.270, Speaker C: Hi, I'm Nitia. On the right side auction, there's more incentive for a bidder to express their true value preference.
00:32:05.610 - 00:32:06.182, Speaker A: Love it.
00:32:06.236 - 00:32:12.700, Speaker C: Unit. Because on the left side, you want to be the 10th bidder, whereas on the right side, it doesn't matter as long as you're in the first ten.
00:32:13.230 - 00:33:06.666, Speaker A: Absolutely. Nailed it. So these two comments combine perfectly, right? What's going on with this equity point? It's like in the descending clearing price auction, because there's this equity and because you're protected, right, if you bid way too much, sort of by accident, you just happen to be the guy, the person with a much higher value than everybody else, you're protected, right? Like the auction realizes a price that's much lower, whereas in descending pay is bid, you are explicitly trying to be that 10th bidder. This, by the way, is why a lot of those descending pay is bid. Auctions actually have a gas war at the very end, right? Like, everyone is sort of like waiting for each other to jump in, and they're waiting to try and be the person who bids at the final realized price. And then there's this gas war that actually spikes the effective price much higher than it was 20 minutes earlier or something. That's like not an accident, right.
00:33:06.666 - 00:33:45.698, Speaker A: People are explicitly competing to be the lowest bidder, whereas in a descending clearing price auction, unless you are the lowest bidder, the lowest bidder has a little bit of impact. They set the price, but most of the bidders and if you think there are a lot of bidders with a lot of sort of valuation dispersion, you don't really ever expect to be the lowest bidder going in. Most of the bidders are not setting price, they're just expressing their value. And exactly. They can express their true value because they know that if they bid at their true value, any price below that, they're going to be happy with. Cool. Any other observations?
00:33:45.794 - 00:34:13.680, Speaker D: In terms of game theory? There's this trade off between price and guarantee of getting a unit, and it's possible so that some bidder can get multiple units. And then, as you noticed, for the first auction, there's an incentive for the biding to speed up towards the end. And so if you can't be the 10th person, maybe you want to be the 9th person. So there might be some equilibrium where people are incentivized to bid sooner and sooner. And so the ending of the biding can happen very quickly.
00:34:14.470 - 00:34:45.878, Speaker A: Absolutely. And you know, that implies that the descending pay as bid auction is just much harder for bidders to figure out how to bid in. Right. And it's also a little more random. Right. Like you can sort of like coordinate on the wrong equilibrium. Like you're sort of just guessing when if you're trying to be not the 10th, if you want to be the 10th, but, oh, maybe I'm only going to be able to be the 9th, you're still just always guessing where everybody else is much harder to and much more sort of stochastic in terms of the outcome.
00:34:45.878 - 00:34:46.742, Speaker A: Totally.
00:34:46.886 - 00:34:50.730, Speaker D: And if there's not that many bidders, there's incentive to collude for the first.
00:34:50.800 - 00:34:51.274, Speaker A: Absolutely.
00:34:51.392 - 00:35:04.670, Speaker D: And then for the second one, if there's not like ten bidders, then you can just wait until the price is much lower and you have a much lower occurring price for everybody, which could be fair, but of course you'd say it's more equitable since everyone's equal.
00:35:05.650 - 00:35:36.220, Speaker A: Absolutely. Yeah. There's like a lot of both of these are actually very subject to active bid reduction, but the pay is bid much more. Right. In both cases, if you can somehow coordinate to get the 10th bid be very low, you're much happier. But if you can only coordinate like five bids, that doesn't do nearly as much in descending clearing price as it does in pay as bid, especially if people are learning over time where the other bidders are or appear to be. Yeah.
00:35:36.220 - 00:36:09.880, Speaker A: Okay, sweet. So we've got a lot of argument in favor of this descending clearing price auction. And I will tell you, cards on the table, I am a descending clearing price auction fan. So I strongly, strongly sort of recommend them in a lot of contexts, but let's just why does this descending pay as bid format exist at all? Right? It's actually like a much more common auction in many crypto contexts. Why do we do it? Why does anyone do it?
00:36:11.690 - 00:36:40.990, Speaker E: The bid amount is more predictable. Like, you get what you expect to pay if you're doing things based on that bid. Like in the context of ethereum, you might have a trade on coinbase based on the price you're paying. So you can now execute that other trade, knowing what you're paying on the other side, whereas with the other one, you have to wait until the auction concludes or something and totally possibly get with a larger bill than you expected, depending on the conditions.
00:36:42.210 - 00:37:19.750, Speaker A: Yeah. So descending clearing price is never going to end up charging you more than your bid. But there's still, like in a pay as bid format, you know with certainty what you are paying in the event that you win. And that is actually often very useful and it's easier for a lot of bidders to understand. Too right. We found in sort of like large scale auction experiments that bidders get confused with clearing price, the unsophisticated, inexperienced bidders, not unsophisticated in the sense of they're not intelligent or something, but just they're not sophisticated with respect to auctions. They don't have a lot of experience and sort of training and how to bid.
00:37:19.750 - 00:37:35.040, Speaker A: They often get confused in clearing price auctions or second price auctions in different forms. Pay as bid is very intuitive and also it's a little bit harder for the auctioneer to manipulate. Has anyone here ever tried to implement oh, you've got it.
00:37:35.750 - 00:37:40.050, Speaker D: I was just going to say this is far better for the seller and the seller often designs the auction.
00:37:43.030 - 00:37:44.894, Speaker A: Hang on, why is it better for the seller?
00:37:45.022 - 00:38:03.030, Speaker D: Because the prices are all differentiated. They're higher, potentially, at what the highest someone be willing to pay for something. Whereas with descending clearing price, often they're not paying at the willingness to pay, they're paying at somebody else's 10th person who's willing to pay. And so there's all this loss sales price profit.
00:38:03.110 - 00:38:51.226, Speaker A: Yeah. So again, one has to think about an equilibrium, right, because there is this sort of funny equilibrium coordination problem. But, yeah, at least in principle, if you have some of these whales, people who really want the good are just going to bid the high price no matter what, ascending pay as bid auctions can result in much higher revenue in some circumstances. Right. I've certainly been in auctions where there were like five bids in the first 20 seconds and then all the others came in 4 hours later. And the auction format, again, it's not quite apples to apples because you wouldn't necessarily see the same set of bids, but the auction format is the difference between sort of those top five bids coming in at, I don't know, two E or whatever and maybe like 0.5, yeah, go for it.
00:38:51.328 - 00:39:24.980, Speaker B: Yeah. I just wanted to try to get like an example of descending clearing price just to kind of etch out that example you're talking about because it seems like the surplus on pay as bid goes to the seller, right? Like the majority of the surplus but in the rights, we're kind of like saying like, all right, the seller doesn't need all that surplus. Keep it yourself, maybe spend it on something cooler or I don't know. But what is a real life? I just have trouble thinking of has it been used? Is it the best method for certain things?
00:39:25.510 - 00:40:40.662, Speaker A: Absolutely. Great question. Okay, first of all, the surplus comparison is not totally straightforward, again, because bidding adjusts to the auction format, right? So bidding behavior might lead to different sort of total surplus flowing to the auctioneer in both cases. But I agree basically that this is yes, right, we've been talking a lot and the intuition is that descending pays bid is often going to result in a lot more surplus going to the auctioneer, especially if there's a lot of stratification in people's values. When might you want to use descending clearing price? First of all, you might want to use it simply for the fairness property and sort of the true price discovery, right? Like in descending pay is bid. Because of all these funny dynamics, you don't actually really quite discover the price, right? You sort of discover some iteration of people's, various biding, descending clearing price. For example, Tally Labs used a descending clearing price auction for the Jenkins, the valet board and dangerous public sale.
00:40:40.662 - 00:41:38.830, Speaker A: And the view was twofold. Right? Again, sorry, I don't want to speak for the team, but my interpretation of their sort of public explanations of why they thought this was a good idea was one of them was that just they thought it was fair, right? It's incumbent on the auctioneer to create something of value that generates surplus. And you don't want to take your highest bidders who are likely the people who are the most dedicated to your community and the most excited, and extract more from them. Right? So that was part of the argument. And the other argument was that it was simpler on two dimensions, right? One of them was it simplifies the biding process, right? Like, people could just show up and bid whatever their value is and then forget about the auction for the rest of the day. They don't have to sit there for like 6 hours watching the clock price descend. And secondarily, you don't have this coordination problem at the end with a gas war or the potential gas war where everyone just wants to jump in sort of at the same moment to be the 10th highest bidder.
00:41:38.830 - 00:42:25.950, Speaker A: And so even in a context where a lot of sales are descending pay, as bid. They chose a descending clearing price because of what they thought of as virtuous properties for descending clearing price at high level. Descending clearing price auctions are often really good when goods are homogeneous, right? When all the goods are sort of the same at the end. But there might be dispersion in value. There's a strong fairness argument that you should give everyone the same price if they're buying the same good in the end. So like random allocation mints are a good example of that, or sales of the same object. I've actually personally been a fan of hybrid formats where if you're going to do something that's pay as bid, you actually tie the quality of the outcome unit to the price paid or something like that.
00:42:25.950 - 00:42:50.642, Speaker A: But it's all much harder to implement. Okay, sorry. First of all, hopefully that was a helpful answer. I'm happy to talk more about this offline. As you guys can have probably observed, I'm totally obsessed with these things. They're fun. One other point, which interestingly, possibly I did this mistake of that puzzle of framing, I kept us too far in the frame.
00:42:50.642 - 00:44:34.742, Speaker A: But another reason descending pay as bid is popular is just because it's much easier to implement on chain descending clearing price auctions. You have to figure out a way to do the refund, right? The only way you can certify their bid is if they lock that amount of ETH or whatever in the contract and then you have to figure out a way to give it back. Similarly, in major spectrum auctions, right, are they going to escrow millions, hundreds of millions of dollars or whatever to bid in this auction? Or is pay as bid just like you bid and you're in effect done? Another reason that you might find yourself in a pay as bid format is for design and implementation reasons, which is where we're going with Michael next. But okay, so know wrap up slide auction design is about incentives and it shapes behavior and outcomes. And this means you have to think really carefully about how they work in theory, right? We literally probably could have gone on for another like half hour just on this question of how these two different auction designs affect behavior and outcomes and incentives, right? That's the level of game theory one has to go through to really grock how these things are going to affect what happens and they can make or break your ecosystem, right? A bad allocation mechanism means the wrong people are getting access to resources, which means the wrong people are incentivized to invest and the whole thing collapses. But all of this is in sort of reflection or refraction of how they work in practice. And as we'll see in Michael's component next, there's a lot of differences and constraints and also opportunities that on chain auctions in particular offer.
00:44:34.742 - 00:44:35.750, Speaker A: QED.
00:44:39.290 - 00:45:20.914, Speaker F: Yeah. So you guys thought this week was going to be about business, but we thought we'd throw in some engineering content in as well, just to keep everyone on their toes. So anyways, like Scott said, I'm going to be talking about auctions in practice, looking specifically at what happens when you try to implement an auction on chain. So, first things first. This is my working definition of an onchain auction. So this is an auction that's got at least part of its components implemented as smart contracts on a blockchain. And in particular, this definition allows for certain parts of the system to be off chain.
00:45:20.914 - 00:46:09.862, Speaker F: And we'll see some examples of this later. Right, so now that Scott spread the good word about auctions and all that they can do, you might all be eager to implement an auction of your own. However, it isn't quite as simple as just like taking your favorite auction theory paper and translating it into solidity. There are certain aspects of onchain programming that make auctions uniquely interesting as well as uniquely challenging to implement. And that's what I'll be talking about here today. We're going to start with the good news. What are the advantages of onchain auctions compared to their off chain counterparts? And then we'll move on to the bad news.
00:46:09.862 - 00:47:25.514, Speaker F: So what challenges specific to the onchain setting might you encounter when you write an auction? And finally, we're going to explore some common design patterns that you might encounter in the wild. So why on chain auctions? I think there are basically two sides to this question. First, what value do auctions bring to blockchain? And this is kind of what Scott talked about in his portion in great detail. But to summarize, auctions are tools for resource allocation and price discovery. And as it turns out, there's a lot of resources on chain, resources that need allocating as well as onchain prices that need discovering. So we've seen that auctions have become an extremely important primitive in the onchain ecosystem. The flip side is, what value do blockchains bring to auctions? And I'm sure a lot of you have heard or asked questions of this form yourselves, like, what value does blockchain bring to x? But I think the answer in the case of auctions is actually uniquely clear and incontrovertible.
00:47:25.514 - 00:48:14.976, Speaker F: And the answer is reliable broadcast and credibility. And to understand what these two terms mean, we're going to work through an example here. So one of the classic auction formats from theory is the sealed bid second price auction. This is also known as the vicary auction. So in this format, bidders privately submit their bids to the auctioneer. You can think of these as being in a sealed envelope so that no one else can see another bidder's bid. And so here in our example, we have three bidders bidding again, 1575 and $20 respectively, and they're sending them privately to the auctioneer.
00:48:14.976 - 00:49:21.806, Speaker F: And if the auction proceeds as intended, then the auctioneer is going to read all those bids and report that this second bidder is going to win the auction since they had the highest bid. But instead of paying 75, they're going to pay $20, which is the second highest bid. So this might seem a little counterintuitive at first, but it turns out there are good reasons for doing this, specifically related to aligning the bidder's incentives and we'll talk a little bit more about what that means in a bit. But of course, all this assumes that the auctioneer is behaving honestly. So what happens when the auctioneer isn't honest? Here we have the same setup, we have the same bidders, same bids, but the auctioneer is going to be malicious. So, once again, the bids are submitted privately from bidders to the auctioneer. And now, once the auctioneer has received all the bids, they're going to report again that the second bidder won the auction.
00:49:21.806 - 00:50:07.550, Speaker F: So far, so good. But instead of reporting the second highest bid as $20, the auctioneer is going to say that actually they received this bid of 74 99. So this means that the winner pays 54 99 more than they should have. Worse yet, the bidders can't tell that the auctioneer is lying without talking to one another. And this might not be practical if A, if you have a lot of bidders, or B, you might not know who all the bidders are or how to contact them. So, yeah, obviously this is quite a big problem. Luckily for us, this is where this idea of secure broadcast comes in.
00:50:07.550 - 00:51:13.990, Speaker F: So let's say that instead of submitting your bids to the auctioneer, bids are instead broadcast on the blockchain. One caveat here is, in this presentation, I'm going to gloss over the fact that it's still a sealed bid auction. So bids are going to have to remain private for the duration of the biding period and only later revealed publicly. It turns out this is possible to do on the blockchain, but it's going to require some cryptography and we're not going to get into the details here. So here the blockchain is serving as this sort of public bulletin board, where message can't be corrupted or censored, which is a really important property. This allows bidders to know what everyone else bid once the auction is over, and therefore tell if the auctioneer has been lying about the result by just looking at the current state of the blockchain. Right, so that's already an improvement over our situation before, where bidders don't have an easy way to detect whether the auctioneer has lied.
00:51:13.990 - 00:51:50.570, Speaker F: But as you may have guessed already, we can do better by replacing the auctioneer with a smart contract. So, like Scott was talking about earlier today, with contracts as being credible commitments with the rules of the auction written in public, open source code, you don't really have to worry about the auctioneer and whether or not they're honest, although you do have to worry about bugs. And we'll talk about that a little later as well. So, pausing here for a bit, does anyone have any questions about this example?
00:51:51.580 - 00:51:54.692, Speaker A: I have a question about how this is solved.
00:51:54.756 - 00:52:06.696, Speaker E: Like, not in the blockchain world, because sealed second price auctions are a thing. Does people just trust, for example, Google as an ad exchange?
00:52:06.888 - 00:52:09.276, Speaker A: Or are there other mechanisms, like what.
00:52:09.298 - 00:52:13.020, Speaker E: Are we competing with in terms of credibility?
00:52:14.720 - 00:53:18.550, Speaker F: Yeah, so I think in practice, for the most part, in a Web two setting, yeah, you're exactly right. So the bidders would just have to trust whatever ad platform to be honest. Okay, so taking a step back for a bit, what we just saw in our second price auction example is actually quite remarkable. So in that credible auctions paper that Scott alluded to earlier, akbar, Poor and Lee proved that under the traditional model, it's actually impossible for any auction to have all three of these properties. A credible auction, which we've alluded to, is one where the auctioneer is incentivized to behave honestly. A truthful auction is one where bidders are incentivized to bid their true value for whatever item is being auctioned. So, for example, if I'm bidding on, like, a Pokemon card that I value at $100, I'll have no reason to bid anything other than exactly $100, no more, no less.
00:53:18.550 - 00:54:40.490, Speaker F: And finally, a static auction is one where the amount of communication between bidders and auctioneer is bounded. And I think the easiest way to understand what static means is to look at the example of an auction that isn't static. So the classic ascending price or English auction is not static because you might have two bidders locked in a bidding war, repeatedly bidding outbidding one another with no end in sight. And so that communication is therefore unbounded and not static. So under the traditional model, the sealed bid second price auction that we saw is static and truthful, but not credible, because as we saw, the auctioneer might have some incentive to lie, but by implementing it as a smart contract, that same auction can be static, truthful and credible. One way to think about how that's sort of possible is that there's kind of a division of labor between mechanism design and blockchain going on. So by providing trustless, smart contracts and secure broadcasts, blockchains make it easier for the auction to be credible.
00:54:40.490 - 00:55:34.300, Speaker F: And that sort of gives mechanism design some slack to focus on the other two properties, static and truthful. So now, given the synergy between auctions and blockchain, you might be wondering, why don't we just implement all auctions on the blockchain? As you all know, there are certain challenges you run into when building on chain that you wouldn't run into otherwise. And I have what I see as the four main ones here, although this list is by no means supposed to be comprehensive. So first, gas. This is the question of whether it's efficient for both sellers and bidders to participate in the auction. And of course, this is largely impacted by the chain that you choose to deploy on. For example, if you deploy to a chain where transaction fees are relatively cheap, then gas might not be as much of a concern for you.
00:55:34.300 - 00:56:19.546, Speaker F: Second mev. So this is depending on how your auction is implemented, value might leak from the auction participants, sellers and bidders to other parties. So think about parties that are in the quote unquote mev supply chain searchers builders proposers. As an application developer, it's kind of part of your job to make sure that to minimize that as much as possible privacy. So as it turns out, it can be tricky to implement privacy on a public blockchain. And I'll expand on this a little bit more in a later slide. Finally, smart contract security.
00:56:19.546 - 00:57:31.890, Speaker F: This goes without saying, but any smart contract that handles users'assets introduces a security risk and needs to be handled with the appropriate caution. So Scott talked about how design choices can impact the incentives and outcomes of an auction. And when you're working on chain, you also have to work under these on chain specific constraints which are going to influence those design choices which in turn influence the incentives and outcomes. So just going through those four constraints I had up earlier, if gas costs are a huge concern, if you're on a chain with high gas fees, that might lead you to off chain bids. So instead of bids which are on chain transactions, you might have off chain signed messages as the bids which are free for bidders. With regards to mev, like Scott mentioned earlier, you might tend towards using a clearing price descending auction rather than pay as bid. And the fact that privacy is hard historically has led to most auctions on chain being open bid formats.
00:57:31.890 - 00:58:36.700, Speaker F: And finally, security concerns might lead towards simpler designs which have smaller surface area for potential bugs and are easier to audit. It's also interesting to note that this sort of pattern of onchain constraints informing design choices, informing incentives and outcomes isn't just unique to auctions. We've also seen this with like, for example, the rise of AMMS on chain. Those were sort of born out of on chain constraints. People realized that on chain order books were maybe not as effective as they were in traditional finance and that led to the rise of AMMS, like uniswap, right? So if you did a survey of all on chain auction implementations being used in the wild today, you'd definitely find quite a bit of diversity. But I think most of those implementations would fall into one of these three broad categories. So first we have English or ascending price auctions with onchain bids.
00:58:36.700 - 00:59:34.844, Speaker F: And this is what I would say is like the most intuitive implementation of an on chain auction. So basically, to place a bid, you submit an on chain transaction with the collateral for that bid. And just like in a Christie's or sotheby's auction, the price gets ratcheted up and up. Typically you would have some sort of minimum bidding increment, and typically the auction would end if some amount of time has passed without any bids. This is the type of auction that's used by maker for liquidations, as well as Zora for selling NFTs. The second format is English auctions with off chain bids. So instead of submitting a transaction to place your bid, bidders would sign an off chain message indicating their bid, with the seller ultimately submitting an onchain transaction to basically accept the winning bid.
00:59:34.844 - 01:00:18.290, Speaker F: And that's when assets exchange hands. If you see an ascending price auction on OpenSea, this is how it's implemented. The main benefit of this approach is, again, that bidding is free. But of course, the downside is that this requires some off chain infrastructure which introduces some degree of centralization risk. So bids could be censored and for whatever reason, the seller might choose a bid that's not the highest bid, things like that. Third, we have the Dutch or descending price auction yet again. So to quickly review, price starts high and decays as a function of time.
01:00:18.290 - 01:01:15.924, Speaker F: Dutch auctions are nice because they tend to minimize the number of onchain transactions needed without requiring that off chain infrastructure. For example, in the single item case, the first bid that comes in wins and immediately ends the auction. Right? Whereas if that were implemented as an onchain English auction, you would potentially have many rounds of biding, each of those bids being a separate on chain transaction, costing gas for those bidders, et cetera. An example of an onchain Dutch auction is when an ENS domain name expires. A Dutch auction is automatically kicked off with the price starting at, I believe, $100,000 and decaying exponentially. From there, the winner of that auction gets the ENS name and the proceeds of the auction go to the ENS dow. Right.
01:01:15.924 - 01:01:56.800, Speaker F: So I would say the main downside of the Dutch auction is that if you want to bid at a specific price, you have to be online at a specific time to submit the transaction. And that might be like 04:00 A.m. In your local time zone. And so that can be inconvenient unless you have a bot set up to do that on your behalf. And that also requires some extra steps. Yeah, and as Scott said, with Dutch auctions, there are some that are implemented as pay as bid and others implemented as clearing price. All right, so with these sort of blueprints in mind, I have a little pop quiz.
01:01:56.800 - 01:02:46.210, Speaker F: So whenever you're writing a smart contract, you should be thinking adversarially, because if you're not the one thinking about what could go wrong, what could be attacked, inevitably someone else is going to be doing the thinking for you. So I've got this hypothetical auction implementation here. So your job is to figure out how mev would change the intended dynamics of this auction. So we have this English auction. On chain bids and the auction ends after 24 hours, and that's a hard deadline which is not extended, even if a bid comes in at the very last minute. Right, so what might go wrong here? And again, 30 seconds to think about it for yourself and then find a neighbor to discuss with. All right, anyone have an answer?
01:02:48.580 - 01:02:57.700, Speaker C: If you want your transaction to go through, you can buy up all of the remaining block space between when you place your bid and when the auction ends.
01:02:58.200 - 01:03:16.696, Speaker F: Yeah, that's true. That would be potentially expensive to pull off that attack, but, yeah, that is very true. Anyone else have any ideas about the effect of mev on the auction dynamics? You have an incentive to wait till.
01:03:16.728 - 01:03:20.140, Speaker D: The very end and then snipe at the end of the auction.
01:03:21.120 - 01:04:20.832, Speaker F: Yeah, exactly. Right, so, like both of you noticed, there's the matter of controlling block space or influencing transaction ordering being very important to the outcome of this auction. The answer that I put down, I just said last block chaos. Basically, a lot of the more sophisticated bidders might want to wait around until the very last block to decide whether they're going to bid or not, depending on what the price is going into that block. Granted, that strategy might be thwarted if someone manages to buy up some of those blocks at the end, then with all these people trying to squeeze into the same block, gas prices are going to go up. You might have bidders trying to dos each other even. And the block builder for that very last block is going to have an outsized role in the outcome of the auction, which we don't want.
01:04:20.832 - 01:05:26.416, Speaker F: Again, that's leaking value from the auction participants to the mev supply chain and then again to return to the Dutch auction. Again, in the single item Dutch auction case, pay as bid and clearing price is actually the same, if you think about it, right, because there's only one winner and that person is going to pay what they bid, but they're also setting the clearing price. And in the interest of time, we're not going to go through, we've already talked about this a bit kind of similar to the last scenario. There's this game of chicken. People are going to try to take advantage of that gap in time between when the bid is broadcast in the mem pool and when it's included in the chain. So everyone's going to see that first bid in the mem pool and have some time to react. Right, so if you see what that settled price is going to be and are willing to pay a little bit more, what you could try to do is front run the transaction.
01:05:26.416 - 01:06:30.530, Speaker F: So that way you're paying the same nominal bid price, the price that the contract is aware of, but you just pay a little extra for gas. So if you have multiple people behaving this way, that's going to trigger a gas war with people broadcasting bids at incrementally higher gas prices. And, yeah, like Scott said, basically, what was intended to be a descending price auction becomes an ascending price auction for transaction ordering, where the auction proceeds are being captured by the mev supply chain, since it's kind of happening out of band instead of in the smart contract. So, yeah, again, leaking value from the seller of the auction. Now, before we end, I wanted to highlight two areas of onchain auction design that I think are currently underexplored. So first is privacy. Sealed bid auctions are well studied both in auction theory and actually cryptography.
01:06:30.530 - 01:07:24.850, Speaker F: However, they can be kind of tricky to implement on chain, so it turns out it's hard to hide the value that's being used to collateralize a bid. It's easy enough to hide to have encrypted data in the transaction, but for most on chain assets, you can't really encrypt or hide the value that's being transferred. That said, it's not entirely impossible. And I've written three solidity implementations of sealed bid auctions, each one using a completely different method of hiding those bids. And those write ups are on the A 16 V crypto website, in case you're interested. The second area I wanted to highlight is crosschain auctions. This I loosely define as any auction where there are onchain components on two or more blockchains.
01:07:24.850 - 01:08:19.554, Speaker F: And for example, you might have an auctioned item living on one chain, but bidders funds dispersed across multiple others. And if you believe in our glorious MultiChain future, then this is going to become more and more common. Alternatively, you might have an auction where bids are placed on one chain, say an L two that has cheap gas fees or some sort of privacy features, but the assets live on some other chain, maybe one that has stronger security guarantees. And I'm sure you can think of other plausible blueprints for crosschain auctions. And I think as crosschain infrastructure continues to mature, this will be an interesting space to both watch and build in yourselves. That's it. Thanks for listening.
01:08:19.554 - 01:08:25.110, Speaker F: If you have any questions, please find a mic. I think we're going to bring Scott back on stage.
01:08:26.490 - 01:08:57.140, Speaker A: Here we are, we got the full band. Hi, thank you for your talk, from both of you. And I got to say, your enthusiasm is very infectious when it comes to talking about auctions. Jay from Ethan ID. I was curious. So our project actually allocates a namespace of what might be the latest best practices in literature when it comes to auctioning off domain names. It's a great question.
01:08:59.750 - 01:09:05.170, Speaker F: Yeah, I guess, Scott, if you want to take this from the auction theory perspective and I can try to answer.
01:09:05.240 - 01:10:07.266, Speaker A: From yeah, so the couple interesting observations about domain names. One is that the markets for most of them are very thin. Right? There's sort of a small number of and you should tell me if I'm getting any of this wrong because you actually know the domain name business and I'm just extrapolating based on how I think this market works. So correct me across the board if any of this sounds incorrect, but my instinct is that domain names, the market for almost everything is super thin and then there's a small number of domain names for which demand is really, really high. It's like very competitive to own, I don't know, like XYZ or something like X-Y-Z maybe. And then secondarily, there's this issue that you worry about domains, you sort of worry about domains going sold and then underutilized or something of the sort, right? Like you sort of don't want a bad state of the world is if people are basically just buying domains to speculate. This by the way, is not limited domains.
01:10:07.266 - 01:11:09.180, Speaker A: It's true for many token categories, right? If people are just buying it to speculate on future users wanting to buy it later and then they don't develop anything on those domains and so the domains don't actually realize their true value. First of all, is that like just a good ridiculously simplified description of the market? That's absolutely accurate. The real goal is to assign the domains to the right people to maximize the utility of the platform. Awesome. Okay? So one thing I would think about doing is have the allocation feature some sort of clawback so, some mechanism by which and again, I don't know the exact sort of smart contracting implementation you're using, but you could imagine this living in a contract that basically, if the domain is not utilized and you have to figure out how you verify that it's not utilized, maybe this is like a massive community, like a massive governance vote or something. Or maybe it's just that no access is over some time period or something like that. If it's not utilized, then maybe it disappears or they have to pay a maintenance fee ongoing to maintain it or something of the sort.
01:11:09.180 - 01:12:03.994, Speaker A: It's also a context where you might want bidding. We talked about the sort of like bidder diversity type questions at the beginning. You might want bidding in units that are not only cash, right, or cryptocurrency or whatever. You might have bidding in proposals for what they're actually going to do with the domain and do some amount of sort of personalized pricing as a function of who the bidder is and how valuable their proposition for the ecosystem is or something of the sort. You can't do that at the scale of millions of domains necessarily, but you could do that at the scale of hundreds or even thousands of domains and particularly for the ones that have a lot of competition. It might be that if bidding for a given domain is sufficiently competitive, it triggers a second stage where people actually have to compete on proposed quality or something like that.
01:12:04.112 - 01:12:04.346, Speaker E: Yeah.
01:12:04.368 - 01:12:38.226, Speaker A: And then the other thing, I guess, and this is harder. Actually, Michael, I'd be super interested if you have any instincts for how you might do this is you might want some mechanism to try and it's very hard on chain because you have people who can civil themselves easily but you might want some mechanism for trying to limit the number of domains that any individual entity can acquire. And in physical world auctions, this is often done through a registration process. But I'm not sure how you would do it in an on chain manner without KYC or something. Michael, thoughts?
01:12:38.338 - 01:13:35.260, Speaker F: Yeah, I think civil would be hard to overcome in the on chain setting like that. I'd be curious, Scott, to get your thoughts on with regards to the clawback idea. Something like a harbor tax on yeah, possibly. Yeah, I don't know if you're familiar with I'm actually not that concept. It's been thrown around in some recent basically, and Scott, correct me if I'm wrong, if this description is incorrect, but basically the item that you hold is sort of always for sale, but you just determine what that for sale price is and you pay an ongoing tax as a function of that sale price. Right. So if you really want to hold on to that domain name, you'll set a high sale price but you would have to pay a higher ongoing interest rate.
01:13:35.260 - 01:13:36.966, Speaker F: Yeah, granted.
01:13:36.998 - 01:14:06.920, Speaker A: And the challenge with know perfect description. Totally nailed it. The challenge with Harburger taxes, of course, is that they're very sensitive to this problem that some people might just have more ability to pay than others. Right. If you've managed to allocate the domains to a bunch of users who are really high value creation but don't have a lot of cash on hand to pay these large taxes, they're sort of like forced to set low prices. And then you worry about people sweeping in and just stealing the item from them or even just like pranking them. Right? Some competitors comes in and pranks them, buys the domain for an hour and then sells it back later.
01:14:06.920 - 01:14:58.530, Speaker A: So you have to be careful about the implementation. But there are versions of this where basically that are sort of like a Harburger tax with guardrails where in effect you're paying an ongoing fee that's proportional to your realized demand for the asset. And maybe there are like maybe that fee happens every time you pay the fee. Sort of like you're locked and guaranteed to have the thing for a year or something that's basically like a higher or it can vary as a function of the community's estimate of how much value is actually accruing to that domain. Something that links the fee sort of like an ongoing maintenance fee with this idea of like how much the realized value there is is helpful. Oh, one footnote in this. Sorry, I know we're giving a really long answer, but this is a really fascinating question.
01:14:58.530 - 01:15:44.098, Speaker A: One footnote is of course anything that involves having the thing be sort of constantly up for sale. Another intuitive way to just make sure the thing always ends up where it's most valuable is to just have a very liquid market in these valuable domains. Sort of have them sort of make it really easy for people to sell and transfer them. But you have to be careful when you set up things like that because that of course also makes it easier for speculators to unload them later. Right. And so the answer is not necessarily maximum liquidity, it's some mixture of liquidity plus maintenance fees with, if you can, some degree of consensus building around who the value creating holders actually are and somehow discounting to them or raising the price to those who are not. Thank you for the very detailed answer.
01:15:44.098 - 01:15:45.506, Speaker A: A lot of things to think about.
01:15:45.608 - 01:16:19.134, Speaker E: Hey, Scott. My name is Marat. I'm the founder of Primev. Primev is a block builder communication network. We're looking at kind of revealing more information about the block auction process without really adding a new auction. But obviously what we're doing is going to affect the auction. So my question is, what if, let's say you have a ten second auction normally and you divide that auction into ten slots of one seconds, what should we expect the general behavior to be based on? Maybe any literature or experience that you can derive from.
01:16:19.172 - 01:16:24.238, Speaker A: Great. Okay. Tell me a little bit more about the context. Sorry. Good.
01:16:24.324 - 01:16:28.046, Speaker E: Ethereum blocks, to be precise. It's 12 seconds.
01:16:28.078 - 01:16:28.418, Speaker F: Right.
01:16:28.504 - 01:16:45.058, Speaker E: So we're in the process of revealing metadata about the blocks through that 12 seconds to participants of transactions, namely searchers. And we're going to be running this experiment over this month, but we're curious to see if you have any pointers.
01:16:45.154 - 01:16:50.214, Speaker A: In thinking about oh, goodness, you're having me lock in a prediction, then you're going to run the experiment and we're going to learn whether we got it. Right. I love it.
01:16:50.252 - 01:16:51.386, Speaker E: I won't hold you to it, but.
01:16:51.408 - 01:17:02.954, Speaker A: I'm curious about your no, I'd be super interested. Right, okay. And the ten second to 1 second thing. So it's the same bidders or are they being split across the seconds in some meaningful way?
01:17:02.992 - 01:17:03.574, Speaker E: Same bidders.
01:17:03.622 - 01:17:14.160, Speaker A: Twelve to one, same bidders. Okay. And the new optionality here is that you can basically decide which of the 1 second components you're in.
01:17:14.530 - 01:17:17.610, Speaker E: No, it's rather that you get oh.
01:17:17.620 - 01:17:19.454, Speaker A: You'Re just speeding it up. You're making the whole thing faster.
01:17:19.502 - 01:17:19.858, Speaker F: Yes.
01:17:19.944 - 01:17:30.786, Speaker A: Got it. Okay. So the thing I'd be thinking about here, there's a set of bidders for whom nothing is changing.
01:17:30.898 - 01:17:31.222, Speaker E: Sure.
01:17:31.276 - 01:18:02.122, Speaker A: Right. If you're in the business of submitting a transaction in every block, nothing has happened. Right. The blocks are now like twelve times faster or something, but you're still submitting those same transactions with some funny caveats I'll describe in a moment. What's different, I think, is about the arrival of transactions and how that interacts with bidders incentives. Right. So if bidders arrive so I don't know what the natural frequency of like, transaction arrives.
01:18:02.186 - 01:18:06.850, Speaker E: Come in at the 10th second of majority of them. Come in at the 10th second of the twelve second slot.
01:18:08.950 - 01:19:06.182, Speaker A: Yeah. Okay, so you might see them all starting to come in at the five 6th mark of the 1 second slot. Right? It's possible that you'll just see targeting of exactly the same style. In fact those those are the bidders for whom I think nothing has changed. Right? So the ones who are trying to basically close out the block are probably, to the extent that their technology will allow them to, are probably going to try and close out the block in more or less the same way. I'm thinking of sort of like what I think of as like retail transactions. So transactions that just arrive at random times, if this is a meaningful difference with the frequency with which those transactions arrive relative to all the other stuff that's just sitting in the mem pool, then you might see some significant changes, right? So for example, one thing that could happen is suppose retail transactions really this is a ridiculously oversimplified model, so it's totally wrong.
01:19:06.182 - 01:20:26.810, Speaker A: But suppose retail transactions only arrive one every 12 seconds and everything else is just flow transactions of various D five protocols sort of doing stuff, various protocols like trying to snipe around them. But these retail transactions used to only show up one every 12 seconds. They're still only showing up one every 12 seconds. Now like eleven of your twelve blocks have nothing in them, no retail in them. Right? They're all just these sort of maintenance transactions and so the average block competition maybe goes down. Right? You can imagine that price falls you've raised throughput but it's not just falling because you've raised throughput but rather also because the types of transactions that trigger sort of everything else are less frequent somehow, right? There's more time for basic maintenance, and then every so often, you have this drop of a retail transaction. And maybe now some people are trying to pick off their price quotes and whatever, but honestly, my guess is my first order instinct is that it may not change very much other than just clearing more transactions, and you might get more of a price drop than just from the increase in throughput because you sort of, like add heterogeneity to the transactions.
01:20:26.810 - 01:21:08.720, Speaker A: You could also imagine a net price increase, I guess, could you? I don't know. Let me take this one offline. If you could send me just like a one paragraph description of what precisely the change is and I'll try and sort of lock in a better, more precise prediction. But my first knee jerk instinct is that you might not actually see a massive change except in as much as 12 seconds versus 1 second is a difference in the number of sort of random transactions that show up in a given block.
01:21:09.140 - 01:21:14.680, Speaker E: Okay, well, it may makes me happy that it kind of had you think? A little bit. So I'll send you something.
01:21:14.750 - 01:21:18.440, Speaker A: No, I love it. This is like so much fun. Holy cow.
01:21:18.860 - 01:21:19.770, Speaker F: Thank you.
01:21:21.180 - 01:21:21.910, Speaker E: Thank you, guys.
