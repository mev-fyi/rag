00:00:18.330 - 00:00:41.402, Speaker A: Well, thank you, everyone, for joining. My name is Ali Yahia. I'm a partner here on the investment team. I work on the crypto team at Andreessen Horowitz. And before Andreessen Horowitz, I spent some time at Google. I was there for three years, two years was at Google X and then one year at Google Brain, and I worked on distributed systems for large scale machine learning workloads. Before that, I was a founder of a company called Athena in online education.
00:00:41.402 - 00:01:46.270, Speaker A: And before that I was at Stanford studying and doing research at the intersection of computer security, computer networking and distributed systems. So, all fun topics, and today I want to talk to you about the business models at the heart of crypto and how to defensively capture value in a sustainable manner at equilibrium. But before that, I'd like to just recap some of what we've already covered in the course before blockchains are computers. They are computers in the sense that a network of participants comes together and, via a consensus algorithm, form something that looks very much like a computer to a developer. And we're going to talk a little bit about the kinds of applications that can be built on top of these kinds of computers, because they tend to be very different than the kinds of applications that normally are written for traditional computational paradigms. But before that, I'd like to first take a walk up the stack and start bottom up. Because blockchains are not just computers, they are also entire ecosystems.
00:01:46.270 - 00:02:40.394, Speaker A: So let's start from the very bottom. In order for anything to happen, we first need computational hardware. So that is the hardware layer, which we call layer zero, which includes, like, miners and validators, which I'm sure it's something you're familiar with with the previous lectures that we've already gone through. And it includes some of the peer to peer networking protocols that allow the participants at that layer to be able to communicate with one another and eventually come to an agreed upon state for what the network looks like. And that's where the consensus layer comes in. All these people, all of the participants at the hardware layer, communicate via peer to peer networking algorithms and need to come to agreement about what the truth is about the network. That is, what is the state of this blockchain computer that they're working towards maintaining.
00:02:40.394 - 00:03:24.590, Speaker A: And that, for example, could be like how much cryptocurrency any one participant in the network has. Or it could be like how many cryptokitties this person has versus that person, or like whatever other kind of crypto collectible or crypto good. The blockchain computer is tracking. And so, once all of these participants are able to come to agreement about what the state is, they have to be able to compute on top of that state in a way that is verifiable, in a way that is guaranteed by the game theoretical mechanics of the network to be correct. And that's where the compute layer comes in. And it's worth noting, both of these two layers, the consensus layer and the compute layer, tend to be bundled together almost always in almost every system. So both of those together tend to be known as layer one.
00:03:24.590 - 00:04:23.946, Speaker A: And these three layers together, layer zero, layer one, and layer 1.5, combine to make a complete blockchain computer. So on top of it, developers can actually deploy programs that they write and have the computer run those programs. There are various different challenges at each level. And as you would expect, there are multiple startups that have been started to address the various challenges at each subsequent level. So, for example, at the hardware layer, the key challenges tend to be challenges of provisioning computational resources, of ensuring that there is bandwidth and connectivity between the various different nodes in the network, and of managing and operating large scale data centers. The key challenges at the level above the consensus layer, have to do with making sure that there really is only one true version of the state of the computer at any point in time, and that no one is subverting the truth that everyone can agree upon.
00:04:23.946 - 00:04:56.582, Speaker A: The key challenges at layer 1.5 have to do with making sure that the computations are executed correctly, and that no one sneaks in some computation that happens to steal some cryptocurrency from one user or another. So those three layers give you a blockchain computer. Then on top of that, we have layer two, which consists. You can think of layer two as a kind of substrate for. It's a computational substrate for the programs that developers write that run on the blockchain computer. And those programs are known as smart contracts.
00:04:56.582 - 00:05:53.290, Speaker A: And smart contracts are the fundamental building block for everything that ever gets built on top of a blockchain. And then finally, we've got layer three, the user interface, which is really just made up of the code that runs on your mobile phone or the code that runs on your web browser. And it can include things like, for example, your wallet, an exchange, or like the application that you use to interact with the smart contract that manages your cryptokitties, or whatever else you may be doing with a blockchain. It ends up being the bridge that connects the world of protocols with the world of people. Now, I like to think of layer zero and layer three as the periphery of crypto. And the business models at each of these layers tend to look more like traditional business models. They tend to simply want to maximize revenue in ways that wouldn't surprise you nearly as much.
00:05:53.290 - 00:07:26.934, Speaker A: Now, of course, don't get me wrong, they're still crypto adjacent and still have to interact with the world of crypto. So they're still super weird in the best possible way, but they're still less surprising than what's at the heart of crypto, layer one and layer two, which is really what I want to focus on throughout this presentation. Now, in particular, I want to focus on layer one, which is the consensus layer, and on layer two without really talking all that much about the compute layer, because, again, the compute layer tends to be bundled in with a consensus layer. And the reason to focus on both of these two layers is because they end up being the points of aggregation along the stack where most of the value ends up being captured. Now, one thing that is truly remarkable is that the business models at both of these layers end up following the same pattern. Both the business model, the core fundamental value capture mechanism at layer one and at layer two are both instances of multisited platforms. Now, what is a multisighted platform? The definition that I like the most is that a multisighted platform is a common ground that creates value by enabling the direct interaction between multiple participants, multiple different kinds of participants in a network.
00:07:26.934 - 00:08:11.930, Speaker A: And so that's an abstract thought. So let's make it a little bit more concrete. One example, completely outside of the world of technology, a bazaar is a kind of multi sided platform because it enables merchants to interact directly with, say, villagers who might want to buy some of their merchandise. Another example might be something like Lyft, where drivers directly interact via the common ground. That is, the Lyft app with riders on the other side. Operating systems are a canonical example of multisited platforms like Microsoft Windows or macOS ten or iOS. They connect developers who build apps for those platforms with the users of those platforms, who then begin to use those apps.
00:08:11.930 - 00:09:01.654, Speaker A: So I would argue that the multisited platform is the core template for value capture, for value creation and value capture in crypto. And the key is that this applies to both layer one and layer two. So let's go through each of those. Let's start with layer one. The business model at the heart of layer one is by and large, the most important business model in crypto. And that's because it makes all of crypto possible. So the incentive structure that was pioneered by bitcoin in 2008 and 2009, and then generalized by Ethereum by making it fully programmable, is ultimately what makes everything else conceivable and possible.
00:09:01.654 - 00:10:06.682, Speaker A: So let's dive into how that model works. I like to call this the layer one flywheel. It starts with the founding team, who might come up with an idea or a vision for a protocol. And with the help of a sort of core team of developers and the help of outside investors who may provide some financial capital, they are able to build the protocol and bootstrap some initial token value. Now, once the token value exists, then that creates a powerful incentive for miners or validators to provide some of the computational resources and hardware that actually give the platform its security and its functionality. Once the functionality exists, then there's an incentive for third party developers to build useful applications, which in turn actually offer utility to end users. And eventually, as a result, a community begins to form that reinforces the original vision behind the protocol.
00:10:06.682 - 00:11:05.380, Speaker A: And around this flywheel we go. The stronger the vision for the protocol is, the more the token is valued in kind of the broader market, which results in an even greater incentive for miners and validators to provide security and functionality, which encourages developers to build even more apps, and which in turn creates even more utility for end users. And around we go. Now, the protocol itself is a kind of common ground that enables the direct interaction between all of these kinds of participants. The protocol is a multi sided platform, and it just happens to have five different sides. It has the founding team, the investors, miners or validators, developers and end users. And because of the enforceable rules that everyone can rely on that the protocol creates, they are able to directly interact and trust in one another in ways that they couldn't if it weren't there.
00:11:05.380 - 00:12:09.906, Speaker A: The token, of course, is the key mechanism for value capture. And there's a lot of nuance with how it is that it eventually does actually capture value. And there's a hard question that we have to engage with, because you could even ask, why is it that it captures any value at all, given that it'll be inevitably a competitive landscape? And everything involved in getting this flywheel started is open source. So there's a question of how this becomes defensible. There's an apparent paradox that I call the value capture paradox at the heart of this, because everything in the stack is open source. You would think that if this model works, then it would be straightforward for anyone to replicate it and copy it, and as a result, over time commoditize whatever value is captured by the intrinsic mechanism. And we should very quickly just sort of define what we mean when we say defensibility.
00:12:09.906 - 00:13:19.782, Speaker A: So, defensibility just refers to the ability to maintain over a period of time, a positive rate of return for a business, or in this case, a network that doesn't somehow get competed away by other players in the ecosystem. And another way of phrasing it is what is it that creates a moat around the value that's being created at the heart of the network. So, historically, almost all value capture has relied on one of three things. It has been either a company that has some kind of secret that they are able to use to build something that nobody else can build. It could be some intellectual property that gives you licenses or a right to fees or something like that, that's enforced by some legal jurisdiction, or it has been proprietary control of some resource that other people don't have. And as a result, you also end up with defensibility. And nothing of this sort exists at the heart of crypto, because everything's open source, and everything can be so readily copied, every line of code, every technical insight is open and kind of available to the whole ecosystem.
00:13:19.782 - 00:14:49.990, Speaker A: So that's the question of layer one, defensibility. And I would want to start with a kind of thought experiment. If you take the example of Lyft, and if you are like a loyal customer of Lyft or Uber, or a multi sided platform like that, and were to imagine that they were to go off and make everything about their technology open source, how defensible would you imagine it would be then? Do you imagine that would have a significant impact in whether or not you're likely to use Lyft versus some other platform? And I would wager it actually might have less of an impact than many might think. Because, of course, if someone were to copy the technology and create a clone, you might not readily switch to it, because there are no drivers to provide you with a service on the clone, whereas the existing version of Lyft does. So there is another force at play, which is called network effects. And the definition of a network effect is the phenomenon that the value of a network to a new user tends to increase with respect to the number of users who are already in the network. And so the canonical examples, this was first noticed at the dawn of the telecommunications industry with just telephone, like a telephone network, where if you have a network that has only one user, then it's not very useful because there's no one you can really call.
00:14:49.990 - 00:15:32.578, Speaker A: If there are two people in that network, then a new user joining can now call two people. So it's a little bit more useful. And the more people there are in the network, the more valuable the network becomes to the next marginal user. The same applies with social networks. You want to be on the social network that has the most users, as opposed to ones that have fewer. And even currency has a kind of network effect, because the more people accept any one form of currency, then the more value that currency offers a new person who might want to transact in it and might want to hold it or use it as a medium of exchange. All of those are examples of same side network effects.
00:15:32.578 - 00:16:28.780, Speaker A: There is another kind of network effect. It's known as a cross side network effect, that is also very relevant in the context of multi sided platforms. And the best examples of cross site network effects would be things like Lyft, where you have drivers on one side affecting the usability of the platform for riders. So like, if you have one more driver join a platform like Lyft, then the platform becomes more useful not to drivers, but rather to the writers on the other side. And the same applies to something like iOS or an operating system, where the more developers exist on one side of the platform, then the more useful the platform becomes to users on the other side. So with all of that context about network effects, let's go back to our flywheel. Every connection in this diagram is an example of a cross side network effect.
00:16:28.780 - 00:17:34.766, Speaker A: And you can see this as an example, like the more financial capital enters the ecosystem through outside investors, then the more attractive the network becomes to miners and validators, because now there's a greater token value incentive for them to provide production capital. And same, if a developer joins over here on the bottom left corner, then the network becomes more useful to users, because now there's another application that maybe that developer built that can now be leveraged by that user. But there are other kinds of network effects as well. As we talked about, same side network effects apply here as well. And there's a difference here between what crypto offers and what some of the other examples that we've talked about. Like for example, operating systems offer. And that is that applications that run on top of a generally programmable blockchain are able to interact with one another.
00:17:34.766 - 00:18:59.678, Speaker A: So this is the notion that smart contracts are composable with one another. It is seamless and straightforward in certain blockchains for one smart contract to interoperate with the other smart contracts that are already deployed to that platform. So that creates a same side network effect for third party developers who are choosing one blockchain over another to build on top of. And you might want to build on the blockchain that already has the most important projects in the ecosystem, that has maybe maker and compound and Uniswap, all of which are currently on Ethereum, rather than building on a newcomer that might not have that kind of traction and kind of available applications to leverage. Similarly, users also have a same side network effect, because as a user, you also want to be on the platform on which all of your friends are, on which all of the other interesting engagements are happening. And then there are other forces as well, aside from network effects that create defensibility, like economies of scale, which miners and validators benefit from as they build tooling and specialize to sort of service one particular network over another. And all the while, as this is happening, every component of this gets integrated into the ecosystem.
00:18:59.678 - 00:20:43.580, Speaker A: So you can imagine the token becomes integrated into wallets and exchanges. Useful applications get integrated into the user interfaces that people use to interact with everything, into browsers, and to just generally the entire ecosystem that the Internet is and that crypto is becoming a part of. And as a result, the token value becomes embedded into the fabric of this broader ecosystem in a way that is not readily displaceable. You can't just readily copy the technology and take with you the entire ecosystem that is built around the token. So the fact that you've got these virtuous feedback loops, these network effects, the fact that you get defensibility from integration between a protocol, which is driven economically by the token at its heart, and everything else outside of it, tends to result in winner take call dynamics, which is the opposite of what you might think, given that everything's open source and copyable. As this happens, the winning networks end up creating a kind of inescapable gravity well, such that you kind of end up having to join the network that's winning, as opposed to start a new one or join a new one, just because the network effects are so powerful, it's just very hard to get bootstrapped elsewhere. And as a result, the token ends up kind of taking on this kind of monetary premium as the form of money that coordinates all economic activity within the network, and as the kind of store of value and medium of exchange that all of the participants in that network end up relying on.
00:20:43.580 - 00:21:43.610, Speaker A: So that was layer one. And let's briefly summarize the business model for layer one and how value capture happens. Layer one protocols are multisited platforms, and their defensibility comes from serving as a kind of common ground that allows for the five different kind of participants in a layer one ecosystem to interact with one another directly and to be able to trust in those interactions such that you end up with this ecosystem. That is a blockchain emerging. Now, before we move on to layer two, we first have to clarify what is unique and special about the programs that run on top of layer one blockchains. So remember that layer one blockchains are almost by definition, owned and controlled by a broad and representative community. That is what people mean when they say that they are decentralized.
00:21:43.610 - 00:22:44.010, Speaker A: And as a result of this property, because no one controls them, the programs that run on top of them also have a kind of sovereignty. They obediently execute themselves, immune from the interference of, really, anyone. And that includes the people who originally wrote them. It includes the people who control the physical machines that actually execute their logic, and it includes the people who interact with those programs while they run. So they're kind of autonomous entities that just run out in the world once they're deployed by their creators. And those are smart contracts. Now, if you think about it, one very useful thing that you can do with such a building block is create a kind of common ground that enables the interaction of the direct interaction between different kinds of participants.
00:22:44.010 - 00:23:41.518, Speaker A: So this sounds a lot like the business model for layer one. And it happens to also be the business model for layer two. And that smart contracts, the killer application for a smart contract, is also a multisighted platform in that smart contracts are able to get people to trust in one another, to be able to interact with one another in ways that they previously couldn't because of their sovereignty. They were able to kind of create this kind of common ground with enforceable rules that everyone can trust in. And so it's kind of meta in that smart contracts are multisighted platforms that themselves are built on top of layer one blockchains, which also are multi sided platforms. To make this concrete, let's go through a couple of examples to maker. One of the most important projects in the space runs on top of Ethereum.
00:23:41.518 - 00:24:35.166, Speaker A: It's a multi sided platform between five different kinds of participants. There are really two halves to it on one half. Maker is a kind of lending platform, and there are two sides to the lending platform. There are the lenders on the supply side, and then there are the borrowers on the demand side. But Maker, as a result of having this platform exist, also produces on the side this price stable cryptocurrency called dai, which has its own kind of sets of use cases and it's its own kind of side of the market. Then additionally there are what are known as keepers, which are kind of the guardians of the network, and that make sure that the network is financially sound. And then finally there are the holders of the maker governance token, which serves as both a mechanism for making sure that all of the parameters of the system are sound and that the risk is being managed properly.
00:24:35.166 - 00:25:42.394, Speaker A: So they have a governance function, but it's also a vector for financial capital to come into the network. So that's one example. We'll cover a number of these fairly quickly. I recommend that you kind of go and read more about each of these and we'll dive deep into one of them. At the end of the three examples that I have, uniswap is another case where it's a smart contract, again running on top of Ethereum, and it's a three sided market in that you have on one side the buyers who are trading on this decentralized exchange, on the other side you've got the sellers, and then finally you've got the liquidity providers who essentially need to be there so that buyers and sellers can match with one another and they have a different set of incentives, namely to gather fees for their participation and compound. The one that we'll dive a little bit more into is a decentralized money market. You can also think of it as a kind of lending platform that is also a smart contract running on Ethereum, to which any lender can lend out crypto assets into.
00:25:42.394 - 00:27:23.066, Speaker A: And then on the other side, the contract can lend out some of those assets to borrowers who in return for that loan, pay an interest, pay an interest rate. Again, like maker, you've got keepers who keep the network safe and make sure that loans whose risk parameters are not desirable get liquidated in time, and so that this way the entire system stays sound. And you also have the governance token holders, which similarly end up providing governance, providing stewardship over the system, and also it's a vector for financial capital to enter the system. So let's dive a little bit more into compound, kind of. As I already mentioned, you have on one side lenders who provide deposits into the compound smart contract, and in return for those deposits get a kind of claim token that they're able to use to redeem their deposits if they want to ever withdraw. Then on the other side of the market you've got borrowers who can borrow from that capital, from the pool of capital the contract manages by first providing some collateral into the contract and then taking out a loan whenever it is that borrowers pay interest for the loans that they take. The lion's share of that interest payment goes to the depositors who originally deposited assets in the contract, and some share of that interest payment goes back to the governance token holders who originally potentially were investors early on and provided financial capital to the system.
00:27:23.066 - 00:28:10.646, Speaker A: So they were the stakeholders of the system. And this has started to become the kind of playbook and template for business models on layer two. And we kind of see this across various different examples where if you just go up a layer of abstraction, you end up with a smart contract. At the center you have a supply side. On one side there's demand side, on the other side, the supply side provides some service, the demand side pays for that service, and some share of the payment then gets captured by the governance token holders. All in a way that's entirely automatic, where the contract just divides up the fee that's being paid and distributes. There are many ways by which the distribution happens, but it ends up being distributed to governance token holders.
00:28:10.646 - 00:29:10.474, Speaker A: There's a question of, given this, how this is defensible. It's the same question that we were asking for layer one, because it is true that the smart contract is entirely open source, it can be readily copied by anyone. And you would think given that there's a fee that's being charged by the governance token holders, it would be trivial for someone to take the smart contract, copy it, replicate it, and then remove the fee, or maybe make the fee smaller. So then there's a question, what stops that from happening? And that brings us to kind of like the question of defensibility for layer two. And the answer again ends up being network effects. Though for layer two, the kinds of network effects that emerge tend to vary widely between different projects. And that's because the design space is very big and only the projects that are designed with network effects in mind end up kind of benefiting from them.
00:29:10.474 - 00:30:38.314, Speaker A: So for example, if we look at compound, there is a kind of virtuous feedback loop between the lenders on compound and the borrowers on the other side. Because as activity converges on the compound smart contract, the assets that are inside of the protocol increase, which results in better interest rates for borrowers and better and more stable interest rates for lenders on the other side, and therefore just a better experience generally for all participants in the market. So this virtuous feedback loop makes compound a more useful platform to participate in than say, the clone that has no assets inside of the protocol and has no liquidity, and therefore has very unstable interest rates and has other kind of risks associated with it. You wouldn't want to go to that version instead of the kind of canonical version. And then in the same way. Well, this graph here kind of illustrates that point that on the x axis, as the assets inside of the protocol increase, the cost and risk for users decreases, and therefore the defensibility increases, making the value of compound the protocol itself more valuable to the marginal kind of next user. Well, this here is like a quick exercise to think about in your own time.
00:30:38.314 - 00:32:08.840, Speaker A: So if we accept this premise that the usefulness of the contract increases as the amount of capital inside of the protocol increases, then it's a worthwhile exercise to think through what happens if, for certain projects, the capital inside of the contracts for that project happens to be fragmented across various different projects? Or say, maybe it is not fragmented and it's a single pool of capital. What does the distribution of the assets that are inside of the contract look like across users? How does that change the defensibility of the system? Or you could also think about the rate of churn of the amount of capital that's inside of the system. How quickly does it cycle in and out, and how does that influence the defensibility of the system? But the uptake is that layer two smart contracts are themselves also multisited platforms, and they gain defensibility from the network effects that they build into their mechanisms, and also from getting integrated into the ecosystems around them, in the same way that layer one blockchains do. Layer one blockchains, again, they're a multisighted platform on top of which smart contracts run. And the final kind of takeaway here is that the core business model in crypto is that of the multi sided platform, and the defensibility is offered ultimately by network effects. So, thank you, and I'll take any questions.
00:32:09.210 - 00:32:37.310, Speaker B: Thanks, Holly. That was awesome. All right, so we've got questions in the slack. And first one is from Paul. And the question is, is there enough empirical evidence to conclude that most of the value is captured at layer one and layer two? Yet that's been the case for bitcoin versus coinbase so far. But that may not always be the case. For instance, forking of smart contracts might mean that at equilibrium, they end up extracting no rent.
00:32:38.130 - 00:33:49.638, Speaker A: That's right. I think that's a great question. I don't think you can decisively conclude that in the end, all value will be captured or most value will be captured at the protocol level, as opposed to the edges but I think there are various arguments that you can make that really suggest that's the direction that things would head. One of them is, I think, for layer one, it's simply the fact that in order for any of this to exist, the token has to capture some value in order for the security of the network to kind of be there. There's an argument that you can make by, in order for crypto to succeed, generally some of the value has to be captured at the protocol level, at layer one. Another argument, I think, is the fact that you do have kind of the strong network effects that ultimately bake in the one protocol into the entire ecosystem, and there's really no choice but to interact with the one token that drives all economic value within that particular ecosystem. I think that it is an interesting question to think about the balance of power between smart contracts at layer two and interfaces that exist on top of them.
00:33:49.638 - 00:34:42.134, Speaker A: It is conceivable that if one company ends up controlling most of the end users via their interface, like, say, Coinbase, or an interface that's built on top of compound and so on, it is conceivable that they would have a lot of power and they'd be able to kind of redirect people from one smart contract over to another if they were able to bootstrap the network effects for that kind of alternative smart contract. And I think it is kind of an open question, like what that balance of power looks like. But the forces at play are undeniable. The fact that there exists strong network effects. If these things get momentum, they just become ever more difficult to displace, both because the service quality increases, but also because of the integrations that exist with everything else. So I think there's still open questions, but I think there are strong arguments you can make for defensibility at the protocol level. Great.
00:34:42.332 - 00:35:00.570, Speaker B: Okay, next question from Abhishek. Do you see having traction on momentum in a protocol or product as a necessary attribute to capitalize on network effect driven businesses? Or how important are speed and velocity in gaining traction when not having a traditional defensible mode?
00:35:01.810 - 00:36:00.638, Speaker A: Well, I think that because network effects, and I think this applies generally to multisatted platforms as a whole, as a kind of business model, because of the powerful forces that network effects create, there tend to be winner tick all dynamics, and it is kind of a runaway nonlinear effect, and therefore speed early on, to be able to start writing that super linear, like quadratic, and in some cases, exponential curve is extremely important in order to kind of get to escape velocity, after which it becomes very difficult for any competitor to kind of displace you. So I would say it's kind of, of paramount importance to move quickly. And it may be that kind of the incumbents or the blockchains that exist already as a result, just have an unassailable kind of position of power that might only be displaceable by an order of magnitude improvement in quality or in performance, or whatever other metrics people might care about.
00:36:00.724 - 00:36:08.734, Speaker B: So how significant is the brand of a layer two protocol in regards to defensibility? Each of the mentioned projects have significant brand effects.
00:36:08.782 - 00:37:02.766, Speaker A: So one thing to keep in mind is that because layer two is so diverse, this might depend between different projects and the go to market strategy for a layer two protocol might also vary. So certain projects might have a go to market strategy that targets end users more directly than others. And then for those protocols, it would make sense that the brand would be more important than for those whose go to market strategy is strictly to go after developers for whom the brand matters. But it matters for different reasons. It matters because developers might care about how the project is perceived or what they believe to be true about the project matters to developers. And so I think it kind of varies widely. But ultimately what you want is for the protocol that you build to become like the canonical contract that everybody who needs the functionality that it offers ends up leveraging.
00:37:02.766 - 00:37:26.378, Speaker A: Whether it be end users who kind of directly use the smart contract through some very lightweight interface, or whether it be like a developer who built another smart contract alongside it, that composes with it and builds a more complex thing. And ultimately the end user comes later, but the developer who chose to build on top of your smart contract in a sense, is making your contract defensible. And therefore you kind of have to cater to that kind of person.
00:37:26.464 - 00:37:29.740, Speaker B: Right? In a way, the brand is kind of like a showing point, right?
00:37:30.130 - 00:37:46.990, Speaker A: Exactly. Which contract do people choose to use is ultimately the high bit. That's what matters most. And there are many things that might cause people to choose one contractor over another brand, being a very important one.
00:37:47.060 - 00:38:03.682, Speaker B: Right. Okay, cool. Next question from guy. Can you explain why the fat protocol's thesis failed in Web 1.0 and web 2.0? And highlight the differences for Web 3.0, for example, why has no value accrued to IP, even though it's a thin waste of the Internet?
00:38:03.826 - 00:38:57.350, Speaker A: Yeah, well, the key reason is that IP and the other core protocols of the Internet have no mechanism for value capture. They literally are just open source code. Well, open source specifications that then a bunch of people also implemented, and the code bases are also open source that provide extremely useful functionality and they just act as standards. It's like asking, why is it that the socket standard for connecting your laptop, why is it that standard, even though it has gained enormous adoption throughout the world, doesn't capture really very much value. The standard itself doesn't capture any value. Maybe the people who build the sockets and sell them capture some value, though also probably not very much so. It's a massively successful standard, has contributed enormous value, IP has, and because of the lack of a value capture mechanism, there's just no way by which it could capture any value.
00:38:57.350 - 00:40:10.238, Speaker A: And I think if you think of the flywheel, the flywheel that we talked about for layer one, the one piece that's missing is the token. You can imagine everything else about the flywheel works for IP. Like you have the initial visionary with Vincerf and Bob Khan coming up with the ideas behind TCP and the whole community of people who were talking about computer networking back then, that kind of reinforcing some of the people who actually provided the networking hardware that needed to exist in order for this to be a reality, which in turn started to create an ecosystem for people to build applications, including things like browsers like netscape, or eventually things like websites that end users could then access. And then that kind of reinforced TCP IP as the canonical standard that everybody should integrate. TCP IP managed to create this economic flywheel between the supply side, which are the people who provide the networking hardware and infrastructure, and then demand side, who are the people who actually kind of want to connect and use the Internet, which was very powerful. It just kind of lacked a direct native asset that would capture any of that value itself.
00:40:10.324 - 00:40:32.470, Speaker B: One thing I'd add to this is the concept of state, right? So a lot of the IP protocols and most of the web one and two protocols were stateless protocols. And so as a result, you needed companies to maintain state, and those companies captured a lot of value. Blockchains are stateful protocols and so that's another key difference too completely.
00:40:32.620 - 00:41:19.926, Speaker A: I think that the fact that one blockchain has specific state makes it distinct from other blockchains who maybe have the exact same technology but are separate. And so it creates an unbreakable link between the people who interact with that one particular blockchain because of the state that's there and the token value. And that's what kind of makes the two go hand in hand and are not kind of readily separable. Because if it were separable, then you would have the problem that people would just copy the technology again and again to the point at which all profit or all effective rate of return would be driven to zero as you end up kind of with many of these kind of all doing the same thing.
00:41:20.028 - 00:41:44.030, Speaker B: Right. Okay, great. So next one from Paul with credit cards. In web two, you can charge the business a fee rather than the user making the purchase. So even though this is sort of, in a more zoomed out sense, somewhat equivalent in web3 for smart contract business models, would it ever make sense to take a fee for transactions on the supply side rather than the demand side?
00:41:44.180 - 00:42:29.034, Speaker A: Yeah, absolutely. I think one thing that's powerful about a generally programmable blockchain that acts as a kind of application platform is that you do have the entire design space at your disposal. And it could be that the right architecture is for the user to not have to worry about paying the fees. It could be that you want an advertiser in the loop and you want to connect a user to some icontent and not have them to care, not have them care at all about kind of the underlying payment that's happening and have someone else put the bill. And all of these architectures are possible. You can kind of figure out. In the case of Ethereum, there's this concept of a meta transaction which allows you to defer the payment and have it be kind of taken up by someone else.
00:42:29.034 - 00:42:45.514, Speaker A: So I think that it's very early and the design space has only really, we've only really started to explore it. And I'm sure there will be cases where it would absolutely make sense for kind of the supply side or some third party to actually cover the fees involved as opposed to kind of the end user.
00:42:45.562 - 00:43:20.778, Speaker B: Yeah. One sort of idea I always come back to here is take a platform like Soundcloud. Right. Soundcloud is basically an s three bucket with a bunch of MP3 s with an ad network layered on top, and with something like rweave. You could imagine hosting MP3 s on rweave and an advertiser paying for that, hosting such that their ad is adjacent to the song that you want to access. Yes. And so that's, I think, a good example where you could have a system, a multi sided marketplace, where the advertiser is paying for hosting of the song, and a consumer on the other side is driving the demand for that ad.
00:43:20.864 - 00:43:35.010, Speaker A: Yeah, absolutely. Just given how successful the advertising business model has been in web two, it's just hard to conceive that it would completely go away. Given a new paradigm. People still want to pay for people's attention. And that'll still be true, I think, regardless of kind of what the underlying technology looks like.
00:43:35.080 - 00:43:53.400, Speaker B: Yeah. Imagine every MP3 has its own wallet and anyone can pay it. You can do a lot with that. Yes. Okay, cool. So last question, Blake west. Do you see value capture also happening for any oracles who happen to have unique data or proprietary algorithms that can operate on data?
00:43:54.330 - 00:45:08.350, Speaker A: Yeah. And I think, well, that kind of is a broader question about the value that data provides any business, I think crypto, because of its openness, because of the fact that everything's visible, the fact that everything's open source, all transactions can be kind of viewed by anyone who cares to look, presents an opportunity for people who want to kind of capture a large data set and be able to do something interesting with it. There's like a long argument to be had about whether or not data alone provides really significant competitive advantages. Like, the common wisdom is that it does. You would say that a company like Google is very defensible because of all of the data that it has, and it ends up being control over the people who are part of your ecosystem and being able to prevent them from exiting, which actually provides you the core bit of defensibility, the data about them. That is more case by case. Sometimes data provides you with network effects because knowing something about your user allows you to create a better product for your user, which then kind of makes the product more valuable and encourages a new user to join.
00:45:08.350 - 00:45:21.920, Speaker A: And that could be powerful, but it's often somewhat overstated and it may not provide nearly as much of kind of a moat as people think.
00:45:22.610 - 00:45:28.310, Speaker B: Great. Well, right on time. That's the end of the Q and A. So thanks very much for the presentation and great job.
00:45:28.380 - 00:45:28.660, Speaker A: Thank you.
