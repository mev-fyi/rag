00:00:00.330 - 00:00:00.880, Speaker A: You.
00:00:04.210 - 00:01:12.466, Speaker B: Welcome to Web Three with A Six and Z, a show about building the next generation of the Internet. From the team at A Six and Z crypto that includes me, your host, Sonal. This show is for anyone, whether computer scientists, researcher, developers and creators, community or company leader, or others seeking to understand and go deeper on all things crypto and Web Three towards a decentralized realized, community governed Internet. So in this week's episode, we do an overview of proof of stake blockchains from quick background on how blockchains work, a difference between proof of stake and proof of work, and approaches to improving both to digging deeper into civil attacks and civil resistance, and much more. On the design of proof of stake blockchains, we also go into therefore different consensus approaches for proof of stake, touching briefly on the question debate of centralization versus decentralization in practice, and we also cover costless simulation and long range attacks, and then briefly discuss topics like slashing and more. We don't go into too much detail on Ethereum or the Merge, since we cover that in an upcoming episode. Be sure to also check out our YouTube channel for several introductory and deep dive videos.
00:01:12.466 - 00:02:15.446, Speaker B: In particular, you can find videos on the exact topics discussed in this episode, including proof of stake blockchains and long range attacks. Just search Asics and Z crypto. And then finally, if you'd also like a more high level survey of research in Web Three and a quick tour through tech topics like VDFS roll ups and more, be sure to check out episode eight in this feed, which was a hallway style jam with the research team. And this episode is also quite literally a hallway style, or actually rather casual meeting room chat featuring A Six and Z crypto research partner, Valeria or Lara Nicolenko, who was previously on Novi at Meta, formerly Facebook, where she was a research scientist and cryptographer for the DM blockchain. She specializes in modern cryptography, post quantum cryptography, and proof of stake blockchain design. Also joining this Holloway chat and co hosting with me is Asics and Z Crypto Head of Research, Tim Refgarden, who is also a computer science professor at Columbia, and before that at Stanford. Among many other things, he also has a YouTube channel with several lectures on foundations of blockchains and more.
00:02:15.446 - 00:02:36.798, Speaker B: As a reminder, none of the following is investment, business, legal or tax advice. Please see Asicsandgu.com disclosures for more important information, including a link to a list of our investments. One thing before we go on, we should really quickly talk about a very high level overview, just like what is the difference between proof of stake and proof of work and just how it works?
00:02:36.964 - 00:03:09.026, Speaker A: So what the blockchain is, is just a block of transactions that are totally ordered. So a blockchain is one chain starting from a genesis that appends blocks one by one. So the miners help this blockchain grow. They take the transactions of users that they have heard from, and they pack those transactions in a block, and they're trying to append next block. Each miner is trying to append their own block to the chain. So to append the block, the miner needs to solve a computational puzzle. And that puzzle is usually pretty expensive to solve.
00:03:09.026 - 00:03:55.890, Speaker A: You need to spend some electricity. And if you want to be faster than other miners and be the first to append the blockchain, you will probably need some mining hardware that's specialized for solving these exact computational puzzles. And different proof of work. Blockchain have different computational puzzles, so when it gets its puzzle solved, it broadcasts the block to the whole network together with a solution. So the puzzles take very long to solve, but yet they are super easy and fast to verify. So the other miners who are hearing about those blocks from different other miners that are trying to decide which ones to pick. And there is a certain rule that miners apply to select one block to append and then to start building on top of with mining.
00:03:55.890 - 00:04:18.570, Speaker A: You are solving expensive computational puzzles as a result. As a side effect, if you're taking wealth and coins out of the protocol, moving it to the real world to pay your electricity bills or to order your mining hardware in order to do pretty dummy computation, right solving sort of useless, in fact, computational puzzles, but that help solve the civil resistance problem, essentially.
00:04:18.730 - 00:04:21.514, Speaker B: Great. So that's proof of work and proof of stake.
00:04:21.642 - 00:05:18.494, Speaker A: So their whole idea of proof of stake is instead of allowing this money to leave the protocol into the physical world, why don't we ask the miners to lock these coins inside the protocol directly and just reward the miners for participating in building the blockchain proportional to the amount of coins that they locked? Because otherwise they would spend the same coins on the infrastructure, and they still will get reward proportional to the money that they spend on the infrastructure. So we can just circumvent this step altogether and not require miners have any special mining hardware. So with proof of work and proof of stake, there also comes a change in terminology. In proof of work, we call the nodes who help grow the blockchain miners. And in proof of stake, we call them validators just to reflect the fact that they're not doing so much work. They're only validating executing transactions, and then they're also sending them over and listening on their networks to receive transactions. But they're not solving any mining puzzles.
00:05:18.494 - 00:05:28.226, Speaker A: So this component is missing. So that's why there's this change in terminology. In proof of stake, we call the nodes who help grow the blockchain validators and proof of work miners.
00:05:28.338 - 00:05:56.570, Speaker B: That's fantastic. And just a reminder, what we're really talking about is people who are contributing computational resources to verify the transactions on a network do the work. And one analogy we always talk about is how blockchains are like user community owned and operated service networks. And essentially these validators are service providers who are taking on the expensive computational work to make these systems work. So just a very high level. Okay, this is great. So far we covered the miners versus validators.
00:05:56.570 - 00:06:07.330, Speaker B: We covered solving mining puzzles versus validating transactions. We alluded to the stake. One thing I don't think kind of bottom line it for me on the energy side.
00:06:07.480 - 00:06:33.638, Speaker A: So the proof of stake blockchain, since their validators are not solving these expensive computational puzzles, they're not spending electricity to be solving them, the only thing they're doing is kind of a subset of the proof of work, miners work, which is just validating and executing transactions. And that's typically much, much cheaper. And so the electricity consumption would be several orders of magnitude less. For proof of stake blockchains versus proof.
00:06:33.654 - 00:07:13.670, Speaker C: Of work, we should also acknowledge that there is some debate over exactly how negative is the energy consumption of bitcoin and ethereum. Some people like to sort of drill down into, okay, how much of that electricity actually would have been used for other positive purposes. Other people like to argue maybe this is actually a modest amount of electricity or energy given the kind of uniqueness of the system that it supports. So I think it's worth noting that there is a pretty interesting debate people can dig into if they want to. Whatever your thoughts on that debate, I think it's pretty clear that environmental concerns are likely to make it more difficult to, for example, launch new proof of work blockchains and proof of stake blockchains. And indeed, that's very much been the trend we've seen in recent years.
00:07:13.820 - 00:07:24.330, Speaker A: I also add to that that apparently still the energy consumption of ethereum and bitcoin combined less than the mining gold industry. So in that sense, combined, they're not as bad.
00:07:24.480 - 00:07:44.158, Speaker B: Yeah. It's also worth mentioning, I remember in the early days when bitcoin and people used to talk about energy use, a lot of the miners that are doing proof of work locate in areas where there's latent capacity, but there's also renewable energy sources like hydropower. So sometimes excess demand goes into the mining, and so there's a lot of moves as well to think about one way or the other.
00:07:44.324 - 00:08:22.842, Speaker A: Yeah, but there are other interesting approaches to kind of trying to make the proof of work better. One of the popular one is try to increase the block size. And that's what bitcoin was trying to do, for example. But by the nature of proof of work, increasing the block size will delay block propagation through the network, and as a result, the chain can start forking more and becoming less reliable. But people study this approach of increasing the block size. They're also figuring out if maybe the frequency of the blocks can be increased. Also, there are interesting approaches around moving transactions off chain altogether with lightning networks that will definitely kind of offload the chain a little bit, make it more efficient.
00:08:22.842 - 00:08:46.900, Speaker A: And there are also approaches trying to change the proof of work puzzle to make miners actually be doing some useful work. So proof of useful work that can actually be helpful, for example, protein folding, transportation problems, stuff like that. Interesting direction in that regard as well. So I would not totally dismiss the line of work that's trying to improve proof of work altogether. Some nice ideas there.
00:08:47.210 - 00:09:01.420, Speaker B: Okay, let's just talk about an overview of proof of stake blockchains. Kind of a survey from both theoretical and practical considerations. Tim, maybe you can kick us off in sort of the history and evolution of consensus and where we are today.
00:09:01.790 - 00:09:44.470, Speaker C: Sure, happy to, sonal. Maybe the good place to start is just to set the stage and compare and contrast modern blockchain protocols, layer ones versus the classical consensus protocols from the 1980s. So the original generation of consensus protocols, obviously that was a long time ago, well before anyone was thinking about blockchains. The motivation was very different. The motivation would often be like a government or a big company replicating a database or some other system. And those were so called permissioned systems, meaning that you do want to keep a bunch of machines in sync, just like you do with a blockchain, but really you just wanted to keep like seven or maybe 22 machines in sync. And moreover, you knew what that set of machines was in advance and it was never going to change.
00:09:44.470 - 00:10:05.386, Speaker C: Everybody knew who was running the protocol. So that's a big difference between public blockchains like say, bitcoin and ethereum, where really anybody can run the protocol. An immediate issue that comes up when you pass to the permissionless setting is the prospect of civils, which will then lead us into why you might need some kind of civil resistance mechanism like proof of stake or one of the alternatives.
00:10:05.578 - 00:10:39.682, Speaker A: Indeed, the civil problem pops up when you start making your system more permissionless and when you want to grow the set of validators to potentially being super large. You need to figure out who are the real humans or otherwise there can be robots coming into your system, bots that will inflate the validator set without doing any real work or replicating each other's work. And you can quickly have an adversary dominate the validator set and then you have different kinds of consensus problems breaking persistency or safety guarantees.
00:10:39.746 - 00:11:02.526, Speaker B: And just to be super basic, Lara, we are talking about trying to achieve consensus without centralized classic parties kind of deciding you're on this server and this is what you're doing here and this is where you're doing X. And so the risk of not knowing who is doing what in this kind of decentralized system is much higher, obviously. Especially the problem of bots being in the system.
00:11:02.628 - 00:11:12.722, Speaker A: Right, exactly. You don't want this kind of empty entities that replicate themselves indefinitely and then constitute the majority over the real entities and taking over the system.
00:11:12.856 - 00:11:17.630, Speaker C: And just one fun fact if you're wondering why are they called Sybils, why is it called civil proof?
00:11:17.710 - 00:11:37.338, Speaker B: When I first heard about the whole category of civil attacks, I'm like, it can't be a coincidence that they're calling it CyByl because I do remember that there was a movie that was based on a book called Sybil and it was about a woman who had a type of multiple personality disorder, extremely fragmented. The idea being that you don't know if there's one identity or multiple identities. Is that what you're thinking of talking about, Tim?
00:11:37.424 - 00:11:38.410, Speaker C: Yeah, that's perfect.
00:11:38.560 - 00:12:49.806, Speaker A: Civil attack is actually a pretty simple thing. You don't want the set of entities that you rely on to be inflated by bots that are not represented by any real entities of humans. So you would want to make sure that the set of validators who are participating in building your blockchain or consensus protocol, they're legitimate parties who have real stake in the system, who have real incentives to keep this system somewhat functioning and functioning well. Civil resistance is essentially just production against machines that adversarial, yet they are not sacrificing any resources to participate in the protocol. So it's essentially free for them to attack the system and it's free for them to grow in numbers, right? If you don't have civil protection, but if you check that there is some physical entity behind the machine that you're interacting with, or they have some stake locked, they make the stake subject to slashing or put their stake at risk. If you don't have any of that, then you're open your system free to participate for everyone. Then you will have this bad entities without any incentives to keep the system honest, you will keep them coming and kind of dominating the real party.
00:12:49.806 - 00:13:26.442, Speaker A: So you have to make sure that the entities that you let into the protocol, they can be defined by the protocol. So there will not be a centralized entity who decides who is in and who is out. But you need to make sure that the entities that you let in have good incentives to participate honestly. In proof of stake blockchain designs, you would ask them to lock the stake and make it subject to slashing and they will not get the stake back unless they behave honestly. And if they behave honestly and participate actively in the consensus, you return them the stake and you also give them the reward. So they're very well incentivized to participate in the consensus and keep the blockchain healthy.
00:13:26.586 - 00:13:29.070, Speaker B: So what are the approaches to civil resistance?
00:13:29.570 - 00:14:10.662, Speaker A: So there are, I guess, two approaches to civil resistance or two main ones. Bitcoin chose to do civil resistance with proof of work, essentially. So nodes will do some expensive computation that will require certain specialized hardware oftentimes or at least some electricity consumption. And based on that you would decide whether the node is a real human being or whether there is some physical entity behind it or not. And the other approach to civil resistance is stake based. So you would show that you have real coins in the system, coins in the blockchain, for example. This is somewhat harder to do if you are in a pure consensus world and don't have any economic incentives.
00:14:10.662 - 00:14:32.878, Speaker A: But it certainly becomes easier when you're in a blockchain setting and we have each holder having some stake in this blockchain. They can sort of prove that they own stake to show that there are some real entities. And of course, there are approaches based on identity checking and KYC that you can take for civil protection, but that's still to be made to work in the decentralized and more permissionless settings.
00:14:32.974 - 00:14:52.954, Speaker B: So why even bother with proof of stake? People could argue like we've had Bitcoin, the original instantiation from the original 2009 white paper, like the idea proposed in there, implemented in the form of proof of work. But beyond the obvious energy, et cetera, why do we care about proof of stake? What else is there to say here?
00:14:53.072 - 00:15:35.480, Speaker A: Yeah, going back to the electricity consumption, that's the main selling point for proof of stake blockchain so far, but definitely not the only one. There are a bunch of other properties that we gain when we move to proof of stake. The biggest one you get is from probabilistic finality. You get to deterministic finality. So what that means is that right now in proof of work blockchains, when you submit a transaction, you need to wait several blocks to be built on top of it to make sure that it's deep enough into the chain that it won't be forked, so it will be just there forever. And the more blocks you wait, the higher is your assurance that the transaction will stay there. So sometimes you would want to wait for more blocks for larger transfers and for fewer blocks for just small payment.
00:15:35.480 - 00:16:04.798, Speaker A: But that's a very annoying property, right, to have to wait. And then even if you wait long enough, pretty long time, you will still not have a deterministic guarantee that your transaction will stay there. So what the proof of stake approaches give us is deterministic finality. When you learn that your transaction is finalized, you may still need to wait quite a long time, but when you know your transaction is finalized, you can be sure it will not be reverted. And so you can act on that.
00:16:04.884 - 00:16:52.794, Speaker C: One thing I'd add, or just to say it in a different way. Larry, you're pointing out that different approaches to civil resistance sort of play nicely with different types of approaches to consensus. And so proof of work, as we see it in Bitcoin and Ethereum and so on, it's always coupled with something like a longest chain rule for deciding which blocks are valid, which transactions have been confirmed. But a fundamental issue with longest chain rules is that if for some reason an adversary got lucky and wound up having control over a whole bunch of new blocks in a row, you could actually switch what the longest chain is. And that probability may be very small. Like you said, probabilistic finality, meaning that very high probability transactions aren't going to get rolled back, at least if you wait long enough for confirmation. But there is always still some probability that some adversary is going to be able to grow a longer chain.
00:16:52.794 - 00:17:45.402, Speaker C: Proof of work just seems to couple very naturally with those kinds of longest chain rules. Whereas proof of stake there is this separate category of consensus protocols based on the protocols from the 1980s which seems to play much more nicely with proof of stake civil resistance. Because just like you said on proof of stake you usually lock some money in escrow in a suitable smart contract. Which then means it's almost like you've reduced it back to the permission setting of the 1980s where you know who are going to be the nodes running your protocol. You don't know the nodes, you just know they're public keys or something like that. But you do have a known set of validators if you force people to lock stake up in a smart contract a different way. I would say it is the different approaches to civil resistance actually unlock different approaches to consensus, and so that can help you achieve properties like deterministic finality, where it's not clear how to achieve those using a different civil resistance.
00:17:45.402 - 00:17:46.542, Speaker C: Using proof of work.
00:17:46.676 - 00:18:25.406, Speaker A: Yeah, for deterministic finality, definitely. If you mimic the proof of work directly as a proof of stake protocol by just replacing the leader selection basically who gets to mine a new block, you are not selecting that proportional to the computational power but proportional to kind of the stake that they has locked, then you're kind of just inheriting the probabilistic finality of proof of work. But if you build some finality gadgets that help you finalize the transactions just as you were saying, based on the fact that you know who are the parties that are participating, you can get this additional guarantee of deterministic finality on top of your Molok deterministic finality lower layer. So just to pick back up and.
00:18:25.428 - 00:18:30.926, Speaker B: Probe beyond the details of this, what are other quick benefits to proof of stake beyond this?
00:18:31.108 - 00:19:16.122, Speaker A: So not only you can get deterministic finality, sometimes you can just make your blockchain more performance, you can make time to finality be shorter so you have faster finality and you can have also larger throughput. So your blockchain will be processing more transactions per second. But usually approaches to speeding up the blockchain involve limiting the active validator set. So obviously the fewer nodes you have, the faster you can run the protocol between them. But to keep it fair and to keep it really permissionless in the spirit, you will have to do some subsampling of committees. So usually those blockchains who trying to increase performance, they do subsampling of smaller committees. And those committees then work for a certain period of time until they're replaced with the new subsampled committees.
00:19:16.122 - 00:19:37.998, Speaker A: So if you're participating in those protocols long enough as a validator, eventually your rewards will be averaged proportional to the stake that you locked. But if you're participating not so long enough, you might be unlucky to not be selected to participate in those committees. But anyway, just the general theme of kind of increasing the finality and throughput it seems to be just making the set of others smaller.
00:19:38.174 - 00:20:06.346, Speaker C: Okay, we've talked a little bit about why you might want an alternative to proof of work, why proof of stake might give you some advantages. We've talked a little bit about different approaches to civil resistance. The two most dominant ones at the moment, proof of work, proof of stake. So let's go ahead and drill down into the landscape of proof of stake blockchains because they don't all resemble each other. There's been very different types of designs that have been explored by different projects. So how should we think about sort of categorizing different proof of stake blockchains?
00:20:06.458 - 00:20:59.194, Speaker A: So there's definitely a theme in proof of stake blockchains. And there are two most popular approaches that the projects are taking. One of them is generally widely known as longest chain consensus protocol that essentially mimics the proof of work, nakamoto Consensus, where we just replace the reward function. Instead of rewarding miners proportional to their computational power, we are rewarding miners proportional to the stake that they locked in the protocol, but then preserving the other properties, like probabilistic finality, for example. So the way those protocols work is usually the validators indicate their willingness to participate in the consensus by locking stake. And then at some point they start validating. And from the validators who have locked staked and who indicated their willingness to run consensus, you pick each one validator per slot.
00:20:59.194 - 00:21:58.510, Speaker A: And a slot is a deterministic time interval, so the time is divided into slots. You pick one leader from the validator set per slot and you ask this leader to propose a block. And the way that leader is selected with probability proportional to the stake that it has locked, if the leader was good and honest and proposed a good block that everybody accepted, then he will be getting reward for that block. So there is really an incentive to be a good leader. And there are also fork selection rules that are happening same YSS and proof of work blockchains where to figure out on top of which chain to build your block on, you select one of the chains according to a fork choice rule that's determined by the protocol. And it's actually interesting that fork choice rules, although they're referred to as longest chain rules, they became more and more complicated over time, and some of them are really elaborate, so they're not always as simple as pick the longest chain. So that's one design choice is just mimic the proof of work Nakamota consensus with proof of stake.
00:21:58.590 - 00:22:07.394, Speaker B: And by the way, Larry, before you transition into the other, what would you call that category of approaches that you just described where it's sort of similar to the proof of work fork choice?
00:22:07.522 - 00:22:23.158, Speaker A: I think the most correct term is proof of stake with a fork choice rule. Although you will see different other names. Some call it Nakamoto style consensus, some call it longest chain consensus. So, yeah, there is definitely a variety of names people use.
00:22:23.244 - 00:22:28.602, Speaker C: Sono, you didn't expect that there would be a key term in web3 where everybody agreed on what it should be called, did you?
00:22:28.656 - 00:22:29.322, Speaker B: No, you're right.
00:22:29.376 - 00:22:31.020, Speaker C: I don't think we've ever seen that.
00:22:31.550 - 00:22:36.330, Speaker B: So you were about to go into the other category of approaches to designing proof of stake blockchains.
00:22:36.410 - 00:23:20.278, Speaker A: Yeah, right. The other type of approaches are based on this long literature of building Byzantine resilient systems for permission settings. As Tim was mentioning, where you definitely know the set of auditors that you're running with, you can just ask them to run a Byzantine resilient consensus protocol between themselves and agree through consensus on which blocks to append. And so when the block gets appended, typically you know exactly when this block is finalized. Typically the model is that when the block is appended, there will be a certificate from the validators saying that this block is final. And to make sure your transaction really got in the blockchain, you just need to wait to see a transaction in a block that has a certificate from the validators.
00:23:20.374 - 00:23:28.058, Speaker B: What do we call the second category? BFT consensus, like Byzantine fault tolerant consensus? Are there any other names for that category of approaches?
00:23:28.154 - 00:23:39.198, Speaker A: The consensus protocols are pretty old from the so people have enough time to kind of figure them out. And so they're mostly referred as BFT consensus protocols.
00:23:39.294 - 00:24:17.840, Speaker C: I mean, if you wanted a less technical name, it's not that this is standard, but you could call it committee based, because the idea is that and this connects to the deterministic finality properties that Lara mentioned earlier the way it's done is through having lots of nodes vote on whether a block should be added to the blockchain or not. And so rather than just having one node making a unilateral decision like you do in the longest chain style protocols, you actually have more of a collaborative effort among all the nodes running the protocol to decide which blocks should be the ones that actually wind up confirmed. So I had to pick a theme. I would say committees and voting. But again, I completely agree with BFT style consensus is what you'd usually hear.
00:24:18.210 - 00:24:28.030, Speaker B: Okay, great. So what are some of the kind of differences in the properties between these two approaches to proof of stake blockchains, the BFT style and Nakamoto style consensus.
00:24:28.190 - 00:25:22.594, Speaker A: Yeah, fantastic. There is a major difference, which is in case of the network partition, which properties does the blockchain preserve and which it loses? Because if you get major set of nodes separated from others, you will have to either diverge on your blockchain and have half of the nodes built on one chain, half of the nodes built on another chain. That's the case for Nakamoto style consensus. That's called preserving liveness, but you're losing safety because now you forked the blockchains, there is a potential to double spend on those two forks. So Nakamoto style consensus, in case of a network partition, they preserve liveness, but they lose safety. And BFT style consensus, they favor safety over liveness. So if there is a partition between the nodes, then the blockchain will simply halt and stop finalizing transactions and you will have to wait till the network restores to see progress again.
00:25:22.792 - 00:25:25.300, Speaker B: Do we have any concrete examples we can mention?
00:25:25.750 - 00:25:53.114, Speaker C: So one of the earliest examples of this part of the design space where you're doing proof of stake civil resistance, where you have some kind of BFT style consensus, would be the Cosmos ecosystem. They introduced a consensus protocol known as Tendermint, which is pretty directly inspired by the sort of classic consensus protocols from the they recognized how using proof of stake civil resistance, you can kind of harness the ideas from the permission setting and sort of bring them into the permissionless world.
00:25:53.312 - 00:25:55.562, Speaker B: And where does Ethereum fit in this taxonomy?
00:25:55.626 - 00:26:29.858, Speaker A: So Ethereum right now is a proof of work blockchain. Though they run a consensus layer that will soon become the main chain after the merge. Their consensus layer is actually a very nice hybrid of this longest chain consensus and BFT. So what they do is they essentially run longest chain consensus and then BFT as a finality gadget. So you get the best of both worlds this way. You get your transactions finalized, deterministically, and at the same time you're keeping the set of validators really large, which is easier to do with longest chain approaches.
00:26:29.954 - 00:26:32.586, Speaker B: Are there any other differences or things we should talk about here?
00:26:32.768 - 00:27:15.506, Speaker C: So, proof of work civil resistance? Proof of stake civil resistance. They both have their advocates and one of the things those different advocates like to debate is which one is either more centralized or tends more towards centralization. And that's actually like a really hard question to reason about for a few reasons. One is just ask ten people about what decentralization means, you're going to get eleven different answers. Then even if you fix a particular notion of decentralization, whether it's like Nakamoto coefficient or like the biggest validator minor, whatever definition we want to use, it's actually pretty hard to measure that definition. For example, because of the civil problem, maybe it looks like all of your validators don't have much stake, but maybe lots of those validators are actually. Controlled by the same entity.
00:27:15.506 - 00:28:02.374, Speaker C: And so they would then appear to be decentralized according to one definition, even though in reality it's not. And then the other thing really worth distinguishing is you could take two given protocols and ask which one is sort of more decentralized. Now and again, with the two caveats, they'll get to define what that means, and then you have to actually measure that quantity. But even there, I think a lot of what people debate about is kind of very long term. Like, do you expect greater concentration of be it hash rate or be at stake versus not? And I don't know that we even have observed enough data. I don't know that we've actually had enough time go by to have any empirical evidence one way or the other. I mean, you can sit in your chair and tell anecdotes about why one might favor centralization more than the other, but I find it very hard to have much confidence either way until we see this play out at least a little bit.
00:28:02.492 - 00:28:41.314, Speaker A: Yeah, absolutely. Which blockchain is more permissionless? Whether it's proof of work or proof of stake, this will be a never ending debate, I bet. In the meanwhile, people are trying to design incentive schemes that will encourage the system to be more decentralized in one way or another. Maybe you would want your Validator set to be large at least appear to be large. Of course, you can have same entities behind multiple Validators, but it definitely seems like a good thing to incentivize people to run more Validator nodes and participate in building the blockchain. At the same time, you still want to preserve safety. So you would want to slash your Validators for misbehaving, though not all the blockchains are doing that.
00:28:41.314 - 00:29:08.630, Speaker A: And there's also a debate there whether you need to slash or just give rewards out. But with slashing you need to be careful to not make it so severe that no Validators will want to run on your blockchain. So there is a very delicate balance there of how you keep the Validator set sufficiently large. And of course, there is a total separate question of how do you make sure that it's diversified enough and not the whole value set is run by the same entity under the hood.
00:29:08.790 - 00:29:33.742, Speaker B: All right, I'm not very clear on the status or state of on where we actually are when it comes to progress of proof of stake blockchains in practice. And I wonder if there's a way to kind of give a quick answer on that without having to go into specifics of which project is doing what. I actually don't know where we are in the development of proof of stake blockchains relative to proof of work, like what's the status or scorecard on that? Maybe we can segue from this to what are the unique challenges of designing.
00:29:33.806 - 00:29:54.278, Speaker A: These cryptocurrencies are dominated still by proof of works that occupies about 57% of the market cap and then the rest is actually mostly proof of stake blockchain projects. So that's a substantial fraction already. And with Ethereum moving to proof of stake, it will be the second major cryptocurrency that will start being proof of stake.
00:29:54.374 - 00:30:43.530, Speaker C: And if you zoom in on the layer ones that launched in the last, say, four years, it's overwhelmingly proof of stake. And some of those protocols are now doing very well. All right, so we've talked about how the design space is sort of pretty rich and complex for blockchains in general and even proof of stake blockchains specifically. Maybe it's worth just drilling down, getting a little more technical and talking about some of the challenges that come up when you're designing a proof of stake blockchain. Because it's not as simple as just like swapping out the old proof of work module and swapping in a new proof of stake one, there's actually a lot of other things you have to worry about as well. One issue is just the challenges of implementing what's in effect a sort of random selection of either one node or a committee of nodes to make further progress in the blockchain. Random sampling is fundamentally more challenging in proof of stake than in proof of work.
00:30:43.530 - 00:30:44.970, Speaker C: So why is that?
00:30:45.120 - 00:31:04.742, Speaker A: So in proof of stake blockchain you have this unique challenge of selecting a leader in a fair and random way so that it gets a chance to get the block reward or extend the chain with probability proportional to the proof of stake. And you don't want to mess up with this process. You don't want this to be biasable or predictable.
00:31:04.906 - 00:31:06.510, Speaker B: Say more about that. Lara.
00:31:06.670 - 00:31:52.042, Speaker A: So why you don't want it to be biasable is because the current leaders can potentially influence the randomness used to select the future leaders in order to make them more likely to become leaders again. So ideally you would love your process to be unbiasable for that. You also don't want this process to be predictable because ideally you would want the adversary to not know who will be the future leaders. So they cannot be DDoS, especially in permissionless settings when you don't know very well your Validators, your Validators may not have very strong DDoS protections. You don't want that archer to be taking leaders one by one and stopping the blockchain from making progress. So this properties if you want to achieve both of them simultaneously, it makes the problem really challenging. And there are different approaches.
00:31:52.042 - 00:32:34.870, Speaker A: The simplest one would be just deterministic leader election when you go in round robin fashion, kind of pick your leaders. The other approach would be round out mechanisms where the previous leaders are committing randomness so that the next leaders can be selected based on this randomness. It's challenging to make this unbiasable. You will still have a little bit of bias in those systems. And there are some better approaches based on random beacons which are more generic and will work not just for leader election, but also for enabling randomness API for smart contracts. If you want to run a lottery, for example, inside a smart contract, you would need to get some randomness to figure out who the winner is. So this approach is good for that as well, not just for leader election.
00:32:34.950 - 00:32:40.366, Speaker C: So when you say random beacon, is that the same as a VRF for Verifiable random function or is it a little bit different?
00:32:40.468 - 00:33:34.558, Speaker A: Yeah, it's a little bit different. There are constructions based on Verifiable random functions, but there are also other approaches to building that you can build random beacons with Verifiable secret sharing where a set of current validators, they just keep regenerating the secret key together in a threshold fashion and derive randomness from threshold cryptography. There are also approaches based on VDFS Verifiable delay functions. So it's a very large design space and I would say that this is very much the work in progress and people are actively researching and exploring different solutions. And of course there are solutions that are already implemented and running. Maybe there are more than ten papers worth looking at to see all these different approaches that people are taking and more papers are appearing like every couple of months. It's very much a topic of very intense research right now because so many blockchains just need this primitive of very strong leader election to prove that they're safe and live.
00:33:34.724 - 00:33:55.874, Speaker C: So randomness is harder in a proof of stake context because you have to really generate it sort of in the protocol itself as opposed to just having it donated in effect by nature and the randomness involved in people solving proof of work puzzles. Okay, another challenge in proof of state context is costless simulation. So what would be an example of a problem that arises due to costless.
00:33:55.922 - 00:34:00.178, Speaker B: Simulation and also what's costless simulation in this context?
00:34:00.354 - 00:35:01.798, Speaker A: So costless simulation essentially means that you're not required to solve any heavy computational puzzles to extend the chain. And if you took control over the chain somehow by maybe compromising all of the validator set, then you can really cheaply extend an alternative chain from that point. So basically forking the main blockchain, you can extend it indefinitely and essentially can try to make it as long as the true chain, making it really difficult for the user to differentiate between the two and pick the correct one. In proof of work, this is not a problem because miners will be required to solve computational puzzles that are super expensive to create a really long fork. And as an adversary, you will have to be solving more puzzles than real chain is solving. And for that you will have to just replicate all the mining infrastructure to be working on your adversarial fork. This will be really problematic just because the proof of work blockchains are supported by so much miners, they're consuming so much electricity like duplicating that it's pretty much impossible.
00:35:01.798 - 00:35:55.402, Speaker A: So with costly simulation, there are all different kind of other attacks that follow from this problem. And the largest one that worries blockchain projects is a long range attack. The idea there is an attacker can compromise historical consensus keys and try to create an adversarial fork to deceive the users and make them believe that their fork is the correct one. If you think about it, the validators who were validating in the chain in the past, they may not continue to be in the system. They may withdraw all of their stake from the system and have no incentives to maintain their past consensus keys secure because maybe they will be just fine with this blockchain being attacked or they can get additional profit from selling these past consensus keys to the adversary. So incentives are not helping here to keep the historical keys safe.
00:35:55.546 - 00:36:10.914, Speaker C: So this idea that old consensus keys might get stolen, the adversary could fork a blockchain from like long ago and kind of take everything over. There's a bunch of really major proof of stake blockchains out there in the world. How are they addressing the threat of these long range attacks right now?
00:36:11.112 - 00:36:34.650, Speaker A: Yeah, great question. So of course, the simplest way to address that is to introduce checkpoints. But that solution is not great because it's kind of centralized. It will require a checkpoint inside your code base on GitHub. Some may argue though that this is a good solution right now, maybe because some of the blockchains are more centralized. In case of a devastating attack, you would want to checkpoint your historical block to invalidate this attack.
00:36:34.800 - 00:36:51.658, Speaker C: One way some people think about it is if you sort of trusted the folks who wrote whatever client that you're using, if you trusted the sort of website you downloaded it from, you trust the implementation. Is it that big a step to then also just trust from the same source a declaration of some recent block that should be included in the blockchain?
00:36:51.754 - 00:37:14.866, Speaker A: That's right. But at the same time you would want your system to be diverse and decentralized. So you would want ideally to have more clients. And then there is a challenge of embedding the same checkpoints in all of those clients. It's sort of you're back to this consensus problem again of making them agree on what checkpoint to include. So that's one approach. You can also checkpoint your proof of stake blockchain into the proof of work blockchain.
00:37:14.866 - 00:37:36.318, Speaker A: Just periodically publish some checkpoints there. At least it might help coordinate mitigation to the attack if it happens, at least in a social layer. Kind of make people look at historically what has been checkpointing on the proof of fork blockchain to make sure you as a community is picking the right fork. If you got really confused about which fork is the correct one.
00:37:36.404 - 00:37:52.402, Speaker C: So you do something like, even if you were a very small project, maybe you could once a day or once a week just publish to Bitcoin, let's say, a summary of the most recent state of your blockchain. And then if there's an attack, you would just basically the trust would be the same as the trust in Bitcoin at that point, to do recovery. Right.
00:37:52.536 - 00:38:16.758, Speaker A: Yeah, exactly. Although you need to be careful about how exactly you trust that. I would better just leave it to the social layer to later figure out whether you trust the checkpoint in the proof of work blockchain because that also could be created adversarially potentially if there was a silent attack going on. But still checkpointing solution is more centralized. It will require you to put some trust in checkpointing mechanism.
00:38:16.854 - 00:39:11.214, Speaker C: So the sort of checkpointing idea, one way to think about this is it's almost like the protocol kicking the can to the social layer of the users and maintainers of the protocol. So I almost wonder if there's an analogy with how people often think about 51% attacks, right? So for example in Bitcoin if somebody was able to corral 51% of the overall mining power, there's a sense in which they could quote unquote, take over the chain and control block production. On the other hand, people do worry about 51% attacks but then they don't worry that much. And probably one of the reasons is they think it's too costly to do it. But I think another reason is that there's always this sort of backup emergency option to kind of escalate, if you like, to the social layer and say oh no, this is clearly a 51% attack, we should roll black some blocks or we should change the proof work puzzle or do some kind of hard fork. And so I wonder if should we think about this sort of checkpointing at the social layer as kind of analogous to like a hard fork recovery, a 51% attack?
00:39:11.332 - 00:39:56.598, Speaker A: I think that's a perfect analogy. In fact, that's how hard forks are done is that you have to embake in a checkpoint in your protocol to make sure you're synchronizing to the correct chain after the hard fork. If you have a long range attack, in addition to coordinating of which fork to choose, you also have to figure out why that happened and then you need to fix that. Because typically if one long range attack was possible and you are seeing an adversarial fork, it means something is wrong with the system and it might lead to more attacks like that. So this attack will need to make developers urgently figure out the problem and fix it. And that's also another decision you will have the community to agree on of how do you fix the protocol in case it is susceptible to long range attacks.
00:39:56.694 - 00:40:44.954, Speaker C: So to tie this back into checkpointing and basically protocols hunting on things and escalating them to the social layer I wonder if some of these other approaches to long range attacks we can almost think about the sort of more sophisticated approaches that try to push some of that responsibility back from the social layer back into the protocol itself and again looping this back to 51% attacks. I mean, one interesting feature about Ethereum post merge their proof of stake implementation. As you mentioned, Slashing is definitely part of that design. I think one way to think about slashing, it's almost like an in protocol defense against something like a 51% attack. Right. So maybe there's no need to escalate to the social layer because the protocol will just itself automatically drain the funds of people who deviate from honest consensus behavior. This seems like a really interesting tension to me.
00:40:44.954 - 00:41:03.130, Speaker C: Certain sort of recovery properties you might want, where are they best handled in protocol kind of programmatically or sort of extra protocol at the social layer? I think that's definitely something we're still figuring out. And it might be useful to think of these different approaches to long range attacks as sort of different choices on where you are on that continuum.
00:41:03.210 - 00:41:04.494, Speaker A: That's a fantastic point.
00:41:04.612 - 00:41:13.618, Speaker B: Such a fantastic point and so relevant to many discussions that are actually happening right now. Lara, you were running down approaches to checkpointing. Did you have anything more to say there?
00:41:13.784 - 00:41:40.986, Speaker A: There are other solutions involving keyvolving cryptography where you would trust your onus validators to rotate the keys frequently and kind of discard the old keys completely delete destroy them so that target cannot later find the historical consensus keys. But the problem with that is that it's also kind of incentive incompatible if the validator knows ahead of time that it would want to be malicious in the future it will just keep his historical consensus keys hidden and then maybe sell them to the other three.
00:41:41.168 - 00:41:45.454, Speaker C: How do you prove to anybody that you deleted or discarded something? Right, exactly.
00:41:45.572 - 00:42:39.034, Speaker A: That's a pretty much unsolved problem. Although you can use trusted hardware to do the deletion, but then you'll have to trust your trusted hardware assumptions and sometimes people prefer cryptography to trusted hardware. And there are also other approaches. One of them we developed when we're working at the DM blockchain with Sara Azuvi and George Tanezas, we published a paper called Winkle. And the idea there is you would have an additional layer of user based consensus on top of your validator based consensus that is going to be progressing slower, but it will involve the whole user base to kind of voting with their transactions on what they think is the latest block that they are aware of. So essentially you will need to change your transaction format to include some of their blocks that you are aware of in the blockchain. And this way users transacting with their stake in the blockchain.
00:42:39.034 - 00:43:38.766, Speaker A: They will be also casting votes on what they think the state of the blockchain is, what was the latest block or the latest epoch. And this will also help because if the adversary forks, some historical block of the blockchain starts creating his own fork. He will definitely not be able to impersonate real users. He will not be able to forge their signatures. So in his fork, pretty much the only thing it will be able to do is censor transactions of honest users and maybe add transactions from the accounts that it has compromised. So this chain in terms of user voting power will be more poor than the correct chain just because there are less honest users transacting and voting for fresh blocks on that forking chain. So anyway, just the whole idea of winkle is build a user based consensus on top of the consensus that you already have such that you alleviate your assumption from trusting the validators to now trusting the whole user base to not break the protocol and make it safe.
00:43:38.766 - 00:43:46.926, Speaker A: And philosophically, it feels like the right approach to also make the users work on helping you maintain the security of the blockchain.
00:43:47.118 - 00:44:12.694, Speaker C: You had several years of experience at Novi Labs working on the DM blockchain. I wish I could have been a fly on the wall on some of those discussions about oh, should we do proof of work, proof of stake, proof of authority? Proof of authority meaning just do a permissioned kind of blockchain protocol. And then also the other parts of the design space that you outlined, longest chain, BFT type, anything you could say about the decisions that were made and what were the biggest factors that led to those decisions.
00:44:12.822 - 00:45:10.442, Speaker A: So for the DM blockchain, we planned for the first version being more permissioned where you would have a preselected set of validators who have beefy nodes to run the blockchain and who are all KYC. Then you know who they are. So it seemed like a safe first thing to start with. And then when you battle test your protocol, then move to more permissionless regime where you would allow more validators to join and make the protocol decide of who can join and who can leave. And actually a lot of proof of stake blockchain projects are taking sort of this route where they know the top of their validators and they're expanding the validator base more and more as they're becoming more and more confident that the protocol is running correctly as intended. And on the side of the consensus protocol that we were choosing, of course the terministic finality was really attractive. So that's why we kind of decided to use the BFT style consensus protocol.
00:45:10.442 - 00:46:09.502, Speaker A: Also in BFT style consensus, when you don't have too many validators, you can keep the set bound that then you can build really performant blockchain with really fast finality and really large throughput. That definitely was a requirement for the VM blockchain as we were building because we were anticipating the user base to grow to a large size really quickly. So we had to make sure that the blockchain can be performant enough to support large user base. The moment I heard about what they're trying to build, I was completely sold on the idea to open the blockchain world to kind of ordinary users. The promise of this blockchain was focusing on enabling cross border transfers, and that's definitely a pain right now to send money to other countries. That's just taking too long and oftentimes just too complicated, and there are enormous fees involved. So if this blockchain was to go live, that would made it really simple cross border transfers.
00:46:09.646 - 00:46:13.794, Speaker B: Is there a place where people can find out more about all this Novi work that you just mentioned?
00:46:13.992 - 00:46:45.198, Speaker A: The whole project is open source. It's actually a very nice code base. You can download it, play with it, you can read the specifications and different descriptions that we also made open source to better understand how it works. The Novi team had also a very big research group that consists of cryptographers, formal verification people, people doing distributed systems, programming languages. A lot of nice work has come out of this group as well, in form of academic papers advancing the field. So I'd recommend checking out them as well.
00:46:45.284 - 00:46:46.094, Speaker B: That's great.
00:46:46.212 - 00:47:36.102, Speaker C: All right, so having talked about some of the solutions that have been proposed thus far, maybe it's obvious to the listener that this is still largely an unsolved problem. People love to say kind of it's still early in Web Three, usually talking about investment or about adoption, but this is a great example of how early it is, even on just the sort of science and engineering side. We've been hearing about proof of stake for, I don't know, eight years, if not more. And still, people building new blockchain protocols are really struggling with the way to do it right. Overall, I'd say, speaking in 2022, I think it's clear that proof of stake civil resistance is going to be a really relevant concept, an important part of the design space for quite a while. But again, as we said before, we're still converging on the best way or ways to do it. The smart people are thinking about the problem, and accordingly, we're seeing progress at a healthy rate.
00:47:36.102 - 00:47:50.990, Speaker C: I do think when we look back in 2030, we may sheepishly sort of look at the ways our approaches to proof of stake that we had available in 2022. I expect a lot more progress and more best practices to cohere on proof of stake blockchain design as this decade unfolds.
00:47:51.070 - 00:48:33.262, Speaker A: Yeah, definitely. I definitely hope that more academic work will be analyzing these blockchain protocols concretely. But it's just such a complex thing usually when you are trying to reason about the protocol with all the blows and whistles that it has. So it's really exciting to see engineering teams innovating, designers innovating on how to improve those blockchain protocols and their guarantees, as well as people from academia analyzing those blockchains from more theoretical perspectives and proving the guarantees that they provide there's a lot of innovation happening in the proof of stake blockchain design. I think there's a lot to learn from individual projects and their approaches as well as each other.
00:48:33.396 - 00:48:47.794, Speaker B: Well, that's a great note to end on. Thank you so much for joining this week's episode of Web Three with a Six and Z sort of a hallway style chat with our head of research, Tim Roughgarden and Valeria Nicolenko, research partner at A Six and Z Crypto. Thank you so much you guys for joining this week.
00:48:47.832 - 00:48:48.498, Speaker A: Thank you. Sal.
00:48:48.584 - 00:48:49.730, Speaker C: Thanks uno.
00:48:52.410 - 00:49:19.258, Speaker B: Thank you for listening to web3 with a six and z. You can find show notes with links to resources, books or papers discussed, transcripts and more@asicscrypto.com. This episode was produced and edited by Sonal Choxy. That's me. The episode was technically edited by our audio editor, Justin Golden with Seven Morris. Credit also to Moonshot Design for the art. And all thanks to support from Asics and Z Crypto.
00:49:19.258 - 00:49:34.380, Speaker B: To follow more of our work and get updates, resources from us and from others, be sure to subscribe to our Web Three weekly newsletter. You can find it on our website at asics and zcrypto.com. Thank you for listening and for subscribing. Let's go.
