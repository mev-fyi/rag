00:00:00.250 - 00:00:00.800, Speaker A: You.
00:00:03.810 - 00:01:20.482, Speaker B: Welcome to Web Three with A Six and Z, a show about building the next generation of the Internet from the team at A Six and Z crypto that includes me, your host, Sonal Choxy. This show is for understanding and going deeper on all things crypto and web3, including through offering occasional data readouts and insights directly from the leading scientists and makers in the space. S so we'll be diving deep the rest of the season into various topics ranging from auction design and mechanics, NFTs security tokenomics, zero knowledge, gaming, decentralized media infrastructure, roadmaps and much, much more. But in this second episode, we set some more context quickly into the connection between blockchains crypto and Web Three, and offer some useful analogies and more mental models for thinking about a blossoming area of computer science in both theory and practice. Our guests today include Chris Dixon, founding general and managing partner at Asics and Z Crypto Aliyaya, general partner and former software engineer and researcher at Google X and Google Brain AI and core developer on TensorFlow and Tim Roughgarden. Head of research at Asics, crypto and professor in the Computer Science department at Columbia University, who previously spent 15 years in the computer science faculty at Stanford and more. We'll go deeper with him in the next episodes.
00:01:20.482 - 00:01:44.110, Speaker B: Just a reminder that none of the following should be taken as investment advice. Please see asics.com disclosures for more important information. We start out by talking about the key foundations of blockchain, crypto and Web Three, where analogies to the Internet and more do and don't apply, and areas of interest. The first voice you'll hear is Chris's, followed by Ali's and then Tim's via mobile.
00:01:46.770 - 00:01:47.134, Speaker C: Great.
00:01:47.172 - 00:02:23.722, Speaker D: So let's just talk about what a blockchain is, because I think there's a lot of confusion around that. One of the sources of confusion is people will sometimes explain blockchains as ledgers. But the way I think about a ledger is maybe half of what a blockchain is, right? A ledger refers to the storage, the fact that a blockchain can store things and do so in a way that is trusted and will be maintained correctly. But most of the program blockchains, like Ethereum, also have compute. You can write code for them, and that code can change the state. And so, very much like a computer that has a CPU and a hard drive, a blockchain has both the ability to do computing and to store information. So that's the key source of confusion, number one.
00:02:23.722 - 00:03:34.650, Speaker D: The second source of confusion is why would you want what's new about a blockchain? And if you look at it, maybe an engineer at Google who has spent his or her career trying to squeeze more performance out of distributed systems, they look at a blockchain and they say, wow, this thing is sort of a step backwards because it's slower. Now, what they're kind of overlooking is blockchains have a new property that traditional computers don't have. I like to say blockchains are computers that can make commitments. They are computers that you can write code that will continue to run autonomously as designed in perpetuity, and that lets you do things like the most obvious case is do things like create digital currency like bitcoin. So bitcoin, to the extent it has value, that value is dependent on a bunch of kind of promises that bitcoin makes, including, for example, bitcoin promises there will only ever be 21 million bitcoins now on a traditional computer architecture. If Google said, I'm going to create Google coin, and there's only 21 million Google coins, that code is just running on a server at Google somewhere, which ultimately management at Google controls. And they can just change that number 21 to 22 or 23 or whatever they want to change it to, because ultimately, traditional computers, the software is subordinates to the hardware, which in turn is subordinate to humans.
00:03:34.650 - 00:04:25.546, Speaker D: And so ultimately they're just sort of extensions of the human will there, whereas in a blockchain, you invert that relationship between software and hardware, and the software governs the hardware. So one of the key properties of a well designed blockchain is that even if a significant number of people running the hardware, the miners or validators decide to subvert the system or do something else that undermine it, change the number of bitcoins, et cetera, they can't do it unless there's a sufficient number. And the game theory incentives are designed in such a way that that at least in all the kind of mainstream blockchains has never happened and is very difficult to make happen. So I'm always kind of working on simpler ways to explain this, but I think anyone who builds smart contracts and blockchain applications intuitively understands this. The key property in my mind is that the code is autonomous. It continues to run as design, that the software governs the hardware, and therefore this opens up the new design space. Finance is one obvious new class of applications.
00:04:25.546 - 00:04:48.386, Speaker D: A really interesting area that we're spending time on now are blockchain based social networks, where the social networks can make strong commitments around the governance, around the economics. A developer building on a blockchain based social network knows that the rules won't change the way they change with Facebook, Twitter, so it's a whole bunch of it. But it basically this new kind of computer architecture where the software controls the hardware and the blockchain unlocks a whole new design space and various kinds of new classes of applications.
00:04:48.498 - 00:05:41.810, Speaker C: I think Chris nailed the definition of what a blockchain is and how we think about blockchains, namely that they are essentially computers as opposed to anything else, databases, ledgers, or whatever else people use to describe what a blockchain is. The one thing that I would add is, where does the term decentralization come in? Why does decentralization matter? Why do people talk about decentralization? And how does it relate to what a blockchain is. So the way that blockchains provide the guarantees that Chris was talking about is that they are effectively decentralized. They're under the control of a very large number of independent actors that are representative of the community that collectively owns and controls the blockchain. So this angle of community ownership is another important aspect of what a blockchain is, because blockchains actually can't change the commitments that they make to people. And sometimes they do. They have to because they may have bugs, they may have to upgrade themselves, they may have to evolve.
00:05:41.810 - 00:05:54.106, Speaker C: And the key here is that they do that in a way that's neutral and in a way that's controlled by a body of people that's representative of the broader community. And that's where decentralization community ownership comes in. It's an important angle to also highlight.
00:05:54.218 - 00:06:38.950, Speaker A: It'll sound a bit like variations on a theme, but the way I've often been describing the essential functionality that blockchains offer, like what's a computational superpower you get that we didn't already have from previous technologies. I like to use a metaphor of a computer that sort of lives in the sky and operates in public view and is a public good. Now, computers are everywhere, obviously. So just being a virtual computer that lives in the sky, there better be more to the story because we already have computers and moreover, current blockchain technology. But as a computer in this way is a pretty primitive computer and as powerful as computers from the 1970s or something. One thing we're going to see happening over the next several years, there's tons of projects really working hard on. This is the scalability problem, which will make the computer in the sky more like a 1990s or even more modern computer than one from the 1970s.
00:06:38.950 - 00:07:00.382, Speaker A: But even already with the current technology, it's clear we have functionality that we did not have before. From a computing perspective, the computer in the sky is very unusual in that it, in effect, has no owner, no operator. It's very much what Ali was talking about, really. The computer was virtual. It's the product of, ideally thousands of physical nodes cooperating through a consensus protocol to simulate the behavior of some virtual machine.
00:07:00.446 - 00:07:00.770, Speaker B: Right?
00:07:00.840 - 00:07:34.858, Speaker A: Moreover, it's open access, so anybody can use this computer in the sky. I mean, there might be a usage fee, especially if there's a lot of congestion, but you don't have to be on any whitelist. You don't need anyone's permission. And by use, I mean interacting with, quote, unquote, already installed software, the existing smart contracts that have been deployed. Or you're also free to install new software of your own. That would be like deploying a new smart contract. And the final aspect which I maybe find the most remarkable of this computer in the skies, especially once you incorporate sort of the magic of cryptography, despite seemingly having no owner, the computer actually enables a new notion of ownership for its users.
00:07:34.858 - 00:08:25.598, Speaker A: So if you're an end user of a smart contract platform like, say, Ethereum, you can really own in a meaningful sense, digital data that lives on that computer, and that computer will enforce property rights on your behalf. And when I say this, I mean property rights in the totally traditional sense of the word, like right to use, right to exclude, right to transfer. And it's this sort of paradoxical combination, sort of that computer that on the one hand, in effect has no owner, but on the other hand enables ownership in a way we did not previously have for digital data. That, to me is really kind of the unbelievable breakthrough with the bitcoin protocol. Now, Nakamoto had in mind the specific use case of a cryptocurrency. So for Nakamoto, the digital data was going to be bitcoins, but the technology fundamentally is not about currency per se. It's really just about being able to enforce property rights without a central authority on digital data.
00:08:25.684 - 00:08:33.726, Speaker E: That was great. I'm a big believer in analogies for helping not just illuminating something generally, but especially when they can help illustrate specific properties. So that was great, Tim.
00:08:33.828 - 00:08:35.770, Speaker C: I really like that breakdown, since the.
00:08:35.780 - 00:08:45.074, Speaker E: Point of this episode is to sort of ground what is. Before we go deeper in the remaining episodes, let's now connect the dots between blockchains, crypto and Web Three.
00:08:45.272 - 00:09:11.274, Speaker D: So just to kind of zoom out a little bit, I think, of those crypto. And Web Three to me are not technologies, they're movements. They're movements that if you sort of imagine a Ven diagram, they overlap. They're both based on blockchains, both use blockchains, and then all the different things that come out of blockchains, like tokens. But to me, first of all, crypto is kind of an older term. And here, by the way, I mean crypto not in the cryptography sense, but in the cryptocurrency sense. And crypto is to me much more about kind of money bitcoin finance payments.
00:09:11.274 - 00:10:03.838, Speaker D: And that was sort of the original movement that came out of Satoshi. And then there was this kind of fork of the movement maybe five years ago, which we call Web Three, which is taking the same technology, but orienting it more toward building internet services that are owned and operated by communities. So sort of the next gen social networks, next gen content monetization, next gen marketplaces, and all the kinds of things that we've seen built on the web over the last 30 years, but now with a new architecture where those networks are owned and operated by communities of users instead of by companies. And so, yeah, this probably better described kind of visually, but I think of it as there's this tech stack, and that's everything that goes into a blockchain and modern blockchains are quite complex and there's different layers in the stack. But then there's these other kind of tech constructs that come from a blockchain enabled by blockchain. The most notable one being tokens, whether they fungible or non fungible. So sort of this tech stack and then separately there's these movements that use this technology in different ways.
00:10:03.838 - 00:10:10.126, Speaker D: And this is what could sometimes be confusing to people because there's all these kind of words thrown around. But that's my basic mental model for how to think about this.
00:10:10.228 - 00:11:04.570, Speaker C: A good way to think about this as well is to compare it to the original Internet tech stack where there's actually no distinction between what people know as the Internet and what people know as the Web. These days, often people just think of them as interchangeable, but the actual separation between them is that the Internet is the core of the technology and the protocols that enable the transfer of information from point A to point B. It's very raw, it's very low level, it's things like the IP Protocol and TCP and things at that level. And then the web is a set of technologies that's built on top. And as you were saying, Chris, it's a movement that actually makes the Internet into a platform, on top of which you can build real applications and technologically that includes things like HTML, JavaScript and CSS. But it's also a whole set of best practices. It's a whole set of how to build applications that are Internet enabled, that includes everything from things like social networks, things like the mobile web, everything that we know and love from the web that has emerged in the past couple of decades.
00:11:04.570 - 00:11:46.314, Speaker C: And I think similarly my breakdown between crypto and Web Three. For me, crypto is the infrastructure, is the low level protocols that make all of this work. It includes things like blockchains and it also includes maybe the raw initial killer application, which was just a form of money in the same way that the Internet includes the raw killer application which was email. SMTP is an Internet protocol, not a Web protocol. And cryptocurrency is very much a crypto protocol and it's not quite Web Three. Web Three is what actually makes crypto into a platform and it includes programming languages like Solidity, it includes the frameworks that people use to build DApps that include things like Web Three. JS there's this whole kind of ecosystem and set of best practices that has made crypto into a far broader technological movement.
00:11:46.442 - 00:12:16.470, Speaker A: So Alike gave some very nice analogies with how things are perceived in the Internet. For me, that's been just an endless source of helpful comparison points and obviously extremely hard to predict exactly how things are going to play out. But I look back to the evolution of the Internet for clues and one of the things that I think we'll see is the coevolution of advances in the infrastructure and in the applications. So you have this tech stack. On the bottom part of the tech stack is the actual plumbing, like the system and how it works on the Internet. You'd have things like DGP routing protocol or IP. And then there's the stuff which is built on top.
00:12:16.470 - 00:12:49.266, Speaker A: So you have the plumbing, which enables some functionality for the Internet, that would be the transfer of digital data between any two points on the globe. For blockchain, that would be this computer in the sky with no owner and remarkable capabilities. And so the infrastructure question, let's sort of implement this functionality in the most powerful way possible for the Internet. Obviously, going from dial up to broadband was a huge advance in the quality of the infrastructure. Very much expecting to see huge advances in the power of the computer in the sky, in the web3 world. Obviously, every advance in infrastructure enables new applications. It's just a far bigger playground application developers have to work with.
00:12:49.266 - 00:13:03.590, Speaker A: But then also conversely, as we make advances in understanding what are going to be the really game changing applications that then feeds back into and motivates investment in certain improvements in the infrastructure. So I think we're going to see that back and forth happen many times over the 2020s.
00:13:03.740 - 00:13:38.178, Speaker D: Just to add to what Tim said, the way I think about it is if you look at the 1990s, 1980s, you go watch a movie from that era, you look around the world, the world doesn't look that different in a lot of ways. Cars have gotten a little bit better. Washing machines are mostly the same. The average house has not changed that much in 30 years. The way that, let's say, change between 1910 and 1940 or something. The thing is, of course, changed dramatically. Are computers, right? I mean, I don't have to explain it, but the fact that we all have magical smartphones in our pockets is an amazing thing, right? So one question is why do computers seem to get better at an exponential rate when everything else gets better, at best at a linear rate? And sometimes you hear the answer is Moore's Law.
00:13:38.178 - 00:14:01.286, Speaker D: Moore's Law is, of course, this idea that you can pack more transistors on the semiconductors every couple of years. I think of Moore's Law actually as just one of many things. And the really important thing is a bigger idea, which is what Tim was talking about, which is computing movements sort of have two layers. There's the infrastructure and the applications. And when they get going, because they usually have sort of this kind of incubation phase when they're sort of tinkerers.
00:14:01.318 - 00:14:02.186, Speaker A: Or starting to make them.
00:14:02.208 - 00:14:36.082, Speaker D: But once they sort of start to hit mainstream, you get this really important economic flywheel. And that flywheel is the applications get better, which make the computers more useful, which in turn sell more computers or make the infrastructure more popular, which then gives investment to the infrastructure. The infrastructure gets better, the applications get better. So you take an iPhone today and you compare it to an iPhone in 2008. The iPhone itself is dramatically better. The camera, the processor, but the apps are, night and day, much better. And if you go and look through time, there was this period, especially around, let's say 2009 to twelve or so, when those things really got going.
00:14:36.082 - 00:15:14.254, Speaker D: That engine got humming, the apps got better, apple got more money, samsung got more money, built better cameras, built better chips that then let the application developer say, oh wait, this thing's faster now. What can I do with it? The camera is better. What can I do with it? Instagram took off the day the iPhone four came out. iPhone four was the first iPhone that had an HD camera. Right? But that took Apple five years of investment to get to that point where the camera was so good that enabled Instagram to really take off. So one of the really exciting things now, the Web Three blockchain movement, is that I think we're hitting one of those kind of flywheel moments where the blockchains are getting much better, the applications are getting much better, and they're reinforcing. And that's why you're starting to get kind of an exponential effect.
00:15:14.254 - 00:15:24.526, Speaker D: There's an old saying in technology that is surprising how little changes in two years and how much changes in five years, which is sort of alluding to the fact that these are typically nonlinear kind of exponential processes.
00:15:24.638 - 00:16:12.242, Speaker C: Yeah. And you've said in the past that it feels as if crypto is beginning to graduate from its infrastructure phase. Because for the longest time, starting around 2014, when this idea that a blockchain could be a computer emerged with a lot of ethereum up until really like, say, 2019 or so, it really was just building infrastructure in a vacuum with only a theoretical sense for what the applications that you could build on top of blockchains would really be. And in the past three years or so, people starting to build applications that actually have a meaningful user base, that begin to stress the infrastructure and begin to inform what the infrastructure should provide to actually make those applications work better. And so this is what I think has kicked off this flywheel that Chris and Tim are talking about that really results in this exponential improvement to the computational infrastructure, and therefore to the kinds of applications that people can build.
00:16:12.376 - 00:16:30.338, Speaker E: Those are actually some great mental models, continuing this theme of mental models, but where Internet history is certainly useful, and I too, am obviously a student of that computing history, I actually think sometimes we overuse the analogy. So where does that analogy not apply here when it comes to this modern sense of crypto and of blockchains and Web Three?
00:16:30.444 - 00:17:08.626, Speaker C: Yeah, I think there are two things that make crypto a little bit different from previous computational paradigms and also different from the Internet. And those two things are, one, that crypto and Web Three are really primarily a software movement, and that everything that needs to happen in order for all of this to work is really just innovation at the software level. People have to come up with better algorithms. They have to come up with better standards. It's all just code that people need to write for all of this to work. And that's in contrast with, say, mobile or with personal computing, where you actually have to build a hardware device or also compare this to the Internet. People had to actually lay down fabric like cables to connect the world to actually make the Internet work.
00:17:08.626 - 00:17:48.338, Speaker C: And those things just tend to move more slowly because you have to interact with atoms as opposed to just bits. So that's one. The second piece is that unlike previous technological movements, crypto and Web Three has this very strong ethos of building out in the open, where open source is a very core piece of the philosophy of the movement. And so as a result, most of the ideas in the space end up being out in the open. They end up being public much more quickly than they tend to be in any other area of technology. And that results for this kind of combinatorial possibility of ideas where ideas can connect with other ideas. People can collaborate across organizational boundaries, and it's a much more experimental environment that allows for innovation to happen more quickly.
00:17:48.338 - 00:17:58.210, Speaker C: So those things combined lead to this kind of exponential improvement in the infrastructure and the applications that are possible that definitely feels like it's much faster than most other areas of technology.
00:17:58.360 - 00:18:16.490, Speaker E: So yeah, those are like differences of degree versus kind. I mean, obviously crypto and blockchains benefit from hardware in other ways, but not in sort of the roadblock ways you pointed out. And similarly, open source has obviously been around for a while. We actually talk about this in the first other episode. So what are the other big differences in your view of kind?
00:18:16.560 - 00:18:16.986, Speaker A: Maybe?
00:18:17.088 - 00:19:14.202, Speaker C: Yeah, there are two other big differences. One of them is the fact that crypto builds in incentives into the infrastructure, where now we can have protocols that incentivize participants, that allow for people who have computational power to bring that computational power to the network and contribute it to the computational infrastructure and then get rewarded for that. Whereas previously, a protocol before, like the IP protocol or TCP, where they were just ultimately schemas like ways by which you can arrange bits on a wire that the other end would also sort of accept as a way of being able to interpret those bits without really kind of an incentive structure for how it all works. So those incentives had to be external to the system, whereas now that can be internalized. There's this notion of money, this notion of ownership that's built in into the infrastructure. And then the other one is that because of the fact that these things are fully programmable, they can build into themselves mechanisms for governance. People can use the infrastructure itself to propose ways by which the infrastructure should change.
00:19:14.202 - 00:19:43.478, Speaker C: So, for example, if you wanted to upgrade the code for any one of these blockchains, there are multiple different models for how governance should happen. But in some cases that can happen in a way that's formally built into the system and that allows for the evolution of these systems in a way that TCP and IP and protocols like those of the Internet have not really been able to evolve. Those are mostly static protocols that don't really change over time at all, whereas crypto and blockchains and Web Three open the door for evolution in a way that's still credibly neutral and it brings the input from the entire community.
00:19:43.644 - 00:20:16.074, Speaker A: One sort of a remarkable byproduct is we're now basically seeing in real time all of these different experiments around governance, which in the traditional world you'd have to look back over centuries to see experiments with so many different type of governance systems. So you have some blockchain protocols and communities around them that are very aggressive with upgrading the protocol, others which are very conservative, others which even incorporate just sort of an on chain, so purely programmable method for upgrading. It's just really fun to watch all of these competing approaches around governance and to see over the years which one turns out to be the most effective.
00:20:16.202 - 00:20:30.914, Speaker E: Which is funny because when you think about the history of the Internet, a lot of it was a standards top down versus bottom up kind of approach to kind of finding standards. And it's really fascinating because we're talking about interoperability here that's emergent not like decided and ordained by all these different players.
00:20:31.042 - 00:21:33.430, Speaker C: Well, yeah, I think one other thing to point out is that there really are two very different analogies that I think we and a lot of people like to use to talk about crypto and Web Three. And one of them is the comparison to the Internet, the other one is the comparison to just computing platforms from before, including personal computers and including mobile. And those two are very different comparisons. And what's fascinating about crypto and Web Three is that I think it's actually both like crypto and Web Three, the systems in this world are both protocols like those of the Internet, but they're also computers like mobile phones and personal computers. And so what's interesting about that is that it will lead to very new dynamics that really cannot just be predicted by looking at the Internet and by looking at personal computers and mobile phones. And I think one example of how it's actually hard to predict how all of this unfolds to your point, sonal, about standards. One way in which the Internet and personal computers and mobile phones are very different is that the Internet was very much built around standards and is very much modular in that you have each layer of the stack very clearly and distinctly defined from each other layer.
00:21:33.430 - 00:22:05.902, Speaker C: And it's not vertically integrated, whereas in the world of computing, some of the most successful approaches are very much vertically integrated. Something like the mobile clone from Apple, like an iPhone. It's a deeply vertically integrated tech stack. But also computing infrastructure. Like often building a developer platform really benefits from having some amount of vertical integration because you can make the developer experience much better, you can make the user experience much better if you control more of the stack. So both of those forces will likely play a role. And so it's interesting to compare to both of those two different examples from the past to try to learn something about how we might evolve.
00:22:05.902 - 00:22:07.858, Speaker C: And standards will certainly be a big part of that.
00:22:07.944 - 00:22:51.438, Speaker E: So on the whole thing of the exponential, it's interesting because you guys talked about how there's an exponential effect. All of you have kind of used some word, a variation of that. And you did allude to this earlier, Ali, when you said that there are two things that contribute to this kind of exponential process with crypto and blockchains and Web Three. And you mentioned Chris earlier, like Moore's Law as a force, and we often talk about it as a force of human ingenuity. It's not like an actual law of physics, obviously, but is there an equivalent Moore's Law like thing underlying crypto and the infrastructure and the growth that we're seeing, or a specific principle? Or if it's not actually a Moore's Law, then the other way to answer this are what are the accelerators that you see? And I don't mean just generically like, oh, the conflation of talent and activity, which is amazing and important, but like, technologically, what are some of the accelerators.
00:22:51.454 - 00:22:53.410, Speaker C: That you guys well, a very important.
00:22:53.480 - 00:22:57.822, Speaker D: Thing that as Ali was talking about earlier, almost everything in crypto is open source.
00:22:57.886 - 00:23:07.078, Speaker E: Yeah, totally. And for those who haven't heard yet, the first episode we recorded actually goes into that story of the evolution of open source and how it is the story of technology.
00:23:07.244 - 00:23:15.130, Speaker D: But anyway, I mean, something like 99% of the software running in the world is open source today. The vast majority of the software on your phone, on your computer, basically everything.
00:23:15.280 - 00:23:16.202, Speaker C: How did that happen?
00:23:16.256 - 00:23:20.314, Speaker D: Right? If you don't have a theory of how that happened, you don't really understand software and technology.
00:23:20.432 - 00:23:20.874, Speaker A: I believe.
00:23:20.912 - 00:23:21.846, Speaker D: And I will tell you my theory.
00:23:21.878 - 00:23:22.474, Speaker A: Of how it happened.
00:23:22.512 - 00:23:53.186, Speaker D: Composability, which is that open source software. You write a piece of code on GitHub and that then becomes not just a piece of code, but a Lego brick that somebody else can come along and take that Lego brick and put it together with other Lego bricks and build something new. So with open source software, humanity only has to build each piece of software once, and then other people get to reuse it. And more importantly, it's not only the software becomes composable, but the services become composable. So you take this open source. Software and you instantiate it. You run it, and that running code can then also be a Lego brick.
00:23:53.186 - 00:24:43.266, Speaker D: And so it really extends this very powerful composability kind of concept open source software and moves it beyond static dead software code to instantiated code I e services. There's a whole nother story I won't go into now, but basically what you had happen as open source ate software, the software industry pivoted over the last 20 years, moved out of the software business because that was no longer a good business and moved up the stack, quote, unquote, to services. Right? So if you look at software as a service, this is the buzword. Why are proprietary companies building proprietary software focused on services? Because software isn't a good business anymore because it's all free on GitHub. So they kind of moved up the stack. And look, if you look at these services like AWS, I mean, it's basically they just go and vacuum up all this open source software and then run it kind of parasitic on the real innovation, which is the open source software community. Anyway, so that's one of the ways to look at blockchains.
00:24:43.266 - 00:24:54.058, Speaker D: It lets you now instantiate that open source software, and it lets the kind of the forces of open and free and the open source movement now also move up the stack the way the proprietary world did into service.
00:24:54.144 - 00:24:54.442, Speaker C: Right?
00:24:54.496 - 00:25:09.726, Speaker D: It's a whole longer story. But to your question about exponential processing, I think one answer is composable software at the application layer. You're also seeing real progress at the kind of pure blockchain level, including the consensus layer. And I'll let Ali and Tim talk about that.
00:25:09.828 - 00:25:38.018, Speaker A: Right. So talking about the consensus layer, there's actually a really interesting backstory just on consensus in general because it's actually a classic topic in academic and practical computer science. So lots of fucking amount of work back in the 1980s, a couple of Turing Awards have been given out. You might say, wait a minute, 1980s consensus blockchains weren't even a gleam in anyone's eye back then, and the applications were very different. They were thinking about some big company like IBM having a database and they want to replicate it. So they get very high uptime. But as soon as you have a bunch of replicas, you got to keep them in sync.
00:25:38.018 - 00:26:08.222, Speaker A: So I guess you need a consensus protocol. And so, amazingly, a testament to the power of getting your abstractions right. Academic work in general, it turns out a huge number of the concepts and vocabulary that was developed by computer science researchers back then in the 80s is actually like a perfect fit for the needs of consensus. Also in a blockchain setting does help with uptime, but the goal more is to decentralization the ownerlessness property that we've talked about previously. That's really why you're doing consensus among lots of different nodes in a blockchain contest. Now, that said, the work from the 20th century can't be applied immediately off the shelf.
00:26:08.286 - 00:26:08.514, Speaker D: Right.
00:26:08.552 - 00:26:46.026, Speaker A: So back when you're thinking about IBM just buying seven machines, you know exactly which nodes are running your protocol, and you can build that into the protocol and people did in the 20th century. Whereas the very open vision for public blockchains is really anybody should be able to run a node. That's part of the power, that's part of the promise, really, of the ownerless property that just sort of all kinds of people without permission all over the globe should be able to contribute to running the protocol. So that means we have needed advances on the consensus layer first, even just to go from off to on. That's what Nakamoto did for us with Bitcoin. It was really the first permissionless consensus protocol that didn't care at all which were the nodes they were running the protocol. It's kind of amazing you can even do that, really, in principle.
00:26:46.026 - 00:27:38.666, Speaker A: But since Bitcoin, there's been many advances in consensus protocols in a blockchain context. And so part of the problems that have had to be solved have been like approaches to civil resistance, to the fact that you don't know if someone's a dog on the Internet, you don't know if a million different public keys all belong to the same person or really represent a million different entities. So you need sort of specific advances in proof of work or proof of stake. These are the examples of ways of handling civil resistance so that basically, nodes can't influence the amount of power that they have over the protocol without some significant economic costs. There's been a lot more understanding about how to harness the advances from the 1980s. So Byzantine fault tolerant consensus and have more and more powerful versions of that in a permissionless context, in effect, using something like a proof of stake slipper resistance as an outer wrapper to sort of reduce the 21st century problem back to the 20th century problem. And that's where right now we're seeing projects that are in production.
00:27:38.666 - 00:28:09.202, Speaker A: There are major Blockchain protocols which harness Byzantine faultol and consensus to get much higher throughput much higher transactions per second. And then there's also projects that are under development which take us to yet another level. So I think we're just seeing rapid advances. I mean, this really defines the computational power of computer in the sky. So it's obvious to everybody that this is sort of crucial for blockchains to realize their full potential. And now we've had some of the best minds, computer science, who are really focusing single handedly on optimizing consensus for the blockchain use context.
00:28:09.346 - 00:28:54.578, Speaker C: Yeah, absolutely. A big part of the conversation is focused on the scalability problem. More recently, as some of these applications have started to get actual real user demand, it's become clear that we need to improve the underlying infrastructure to be able to rise to the challenge and be able to support a higher level of throughput lower latency, lower cost per transaction. And I'd like to remember one of the key lessons from distributed systems or just systems in general. Actually, the work that's been done in the past from the 20th century, as Tim was talking about, just a scale system. What are the age old, tried and true techniques that people use to scale systems? And it's often really the case there are just two ways at which you scale a system. One of them is you use parallelism and another one is you use hierarchy.
00:28:54.578 - 00:30:04.922, Speaker C: And it's interesting to see that all of the work that's been done recently in the past, say three to four years in the crypto and web3 space have very much followed that as well. Like, if you look at all of the major approaches that people are trying in order to scale blockchains, they either fall in the camp of trying to paralyze the work that all of the nodes in a blockchain network have to do or trying to introduce hierarchy as a way of also gaining some scalability. For example, there's this whole conversation around layer twos where you're trying to basically build a specialized network that inherits the security of the main layer one network but is able to do something more efficiently by having, say, more. Powerful machines or having new techniques that allow for the processing of more transactions or for the processing of those transactions more quickly, but then also be able to just go back to the layer one. In the case that you need the additional security from the layer one, you can always fall back to it. So one analogy that many people have used is to think of the layer one as a kind of Supreme Court where the layer two is sort of a local court that deals with local issues and only when something needs to be escalated, the Supreme Court, do you actually do that. So this way you end up with scalability by introducing hierarchy and having sort of more specialized networks that do high performance work and essentially spare the one from doing itself.
00:30:04.922 - 00:30:29.070, Speaker C: And then in the case of parallelism, Sharding is this approach that a lot of people are trying to build, which is to try to split up the work that many different nodes have to do in the network across the node. So instead of having every node process every transaction, you can have some transactions be processed by some nodes and other transactions processed by other nodes. So that's kind of like the idea of horizontal scalability and it's an example of parallelism as a way of scaling blockchains.
00:30:29.150 - 00:30:30.246, Speaker E: Can you be a little bit more.
00:30:30.268 - 00:30:32.518, Speaker B: Specific, Ali, about the different challenges at.
00:30:32.524 - 00:30:41.842, Speaker E: The infrastructure level really quickly and share some examples of the areas that are addressing them? We'll dive into the apps later and other important developments in later episodes.
00:30:41.906 - 00:31:47.546, Speaker C: Okay, so as I mentioned, one of the big challenges is scalability is getting blockchains to be able to perform more transactions per second, to be able to perform those transactions more quickly, so you have finality more quickly, and to also be able to reduce the cost that people have to pay for each of those transactions. That's the cost per transaction gas that people have to pay. That's an often cited problem with blockchains today. A different problem is the problem of the developer experience. How do you build applications on top of blockchains that have all of the features that you want them to have, but that are also secure? And we've seen many examples of how it's possible to get it wrong and have bugs in smart contracts and programs that run on blockchains that lead to a lot of money being lost. And there's a lot of work that's being done to improve the tools and to improve the programming languages that people use to express programs in the space that make it more easy for developers to reason about the correctness of those programs. So that's a whole other area of work that's very important and I think it's more qualitative, it has to do more with the experience of the developer and with the tool chain that people build to make these things easier.
00:31:47.546 - 00:32:26.918, Speaker C: A third area of work is also on the user interface. So the user experience, what are the best practices, the tools that people use to interact with applications in the space? And this includes things like the wallet, like what does the wallet do to inform you of the kinds of things that you're doing when interacting with applications in the space. And then there's like a whole other set of challenges, including things like privacy interoperability between different blockchains. There's a lot of work that's being done to build bridges to connect different blockchains together. And all of these things are coming together to build this fabric of decentralized computation, on top of which you can build very rich applications. And as these challenges get addressed, the applications that can be built will be increasingly more powerful.
00:32:27.014 - 00:33:13.546, Speaker A: And I'll just add a little bit about challenges from the perspective of the research education side. One thing that I think is really important for web3 to really achieve its full potential is just a proper rigorous understanding of the design space and the various trade offs that are involved. So to give an analogy, the earliest computers are from the 1940s. So basically at the beginning Deeple would program just directly so in what we'd now call assembly language that the processor would interpret directly. But it was very obvious to everybody very quickly that there was going to be higher level languages that then are automatically translated into the lower level language that actually gets processed. There was clearly going to be a need for compilers from higher level languages to lower level ones. And so the compiler design is something people really were working hard on in the 50s without a lot of guidance about how to think about it.
00:33:13.546 - 00:33:40.030, Speaker A: It was a hard problem. Plus there was sort of a lack of clarity about how to go about it. And over time we saw. So the pilot design, specifically the progress is encapsulated in my mind by this famous textbook called The Dragon Book by EHO. Sethi and Alman basically took this previous super messy problem that everyone was having trouble thinking about and know, look, it's just still like a really complex problem. But here are the five different things that you need to get right for each of those five things. Here's sort of a menu of options.
00:33:40.030 - 00:34:21.166, Speaker A: The different ways you go about doing it here are sort of the trade offs, the pros and cons of each of those approaches to that particular piece of your compiler, to understand the needs of your particular sort of application, and then that should inform how you make these various trade offs. So the research is less educator in me. My dream is to have this exact same kind of playbook design of blockchain protocols and other protocols in Web Three, where we really just have the language and the sort of mental clarity around what are the important design pieces, what are the options, and what are the trade offs between the various options. And there's been some pretty rapid progress along these lines over the last few years, but there's clearly another, at least ten, if not 20 years of work to really map out this space. And I'm excited just to watch that happen.
00:34:21.268 - 00:34:23.354, Speaker D: Yeah, I mean, I think the things to look for it will be exciting.
00:34:23.402 - 00:34:24.366, Speaker C: I mean, some of the things we.
00:34:24.388 - 00:35:07.006, Speaker D: Discuss, like just the improvements at the technology kind of infrastructure layer, extending existing classes of apps, we'll see more build out in those classes. But the other, to me, kind of most fascinating part will be new classes emerging. My experience, and I think history suggests that once you create this kind of canvas of a computing platform, that developers surprise you, and that having millions of smart people around the world kind of run experiments and try things leads to all sorts of really interesting things. So that's for me, what makes this period so exciting. I mean, that technology is a means of the end, and ultimately the end is unlock seeing human creativity. And I believe we're in that peak creative moment of this movement in the next couple of years. And that should be really fun to watch.
00:35:07.108 - 00:35:13.470, Speaker E: Fantastic note to end on. I almost feel like we have nothing more to add there because that was a great note to end on. Okay, well, thank you so much for joining you guys.
00:35:13.540 - 00:35:14.558, Speaker B: Thanks again, everyone.
00:35:14.644 - 00:35:15.306, Speaker A: Thanks, Donald.
00:35:15.338 - 00:35:15.838, Speaker C: Thanks Donald.
00:35:15.854 - 00:35:16.274, Speaker A: Thanks everyone.
00:35:16.312 - 00:35:17.220, Speaker C: Thank you guys.
00:35:19.510 - 00:35:51.006, Speaker B: And that's our second episode of Web Three with a six and Z. Don't worry, we sort out the sound in the next episodes. You can find show notes with links to resources, books or any papers mentioned or discussed, transcripts and more@asicsycrypto.com. This episode was produced and edited by Sonal Chatsi. That's me. The episode was technically edited by our audio editor, Justin Golden, with thanks to longtime sound engineer Seven Morris. Credit also to Moonshot Design for the art and special acknowledgments to Chris Dixon, founding and Managing partner, CMO Molosovich and.
00:35:51.028 - 00:35:53.310, Speaker E: Several others on our team here for their support.
00:35:53.460 - 00:36:05.550, Speaker B: To follow more of our work and get updates, resources from us and from others, be sure to subscribe to our Web three weekly newsletter. You can find it on our website@asicscrypto.com. Thank you for listening.
