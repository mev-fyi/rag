00:00:07.200 - 00:00:07.750, Speaker A: You.
00:00:10.040 - 00:00:34.776, Speaker B: Pleased to introduce David Zohar from Hebrew University, where he's a professor. He's he's been in the space longer than almost anybody. For example, he's been already as early as 2012, he had kind of an official peer reviewed kind of paper about bitcoin and so on. So he's been doing this for a long time. Very excited to hear out what's on his mind these days. Aviv Hollywood.
00:00:34.968 - 00:01:12.552, Speaker A: Thank you. And thanks for the opportunity to be here. So people here also feel free to interrupt me. I'm used to Israeli crowds that are not staying silent during a talk. So what I want to do today is give a talk about topics from different papers that are recent, some newer than others. So I'm going to talk about basically proof of work based cryptocurrency mining. And I want to kind of give a rant about how after all this time, I've been in this space from 2012.
00:01:12.552 - 00:02:05.530, Speaker A: As Tim said, we still don't understand a lot of the economic aspects of cryptocurrency mining. We have a lot of paper and results, but we still don't have a clear framework where we can say we figured it out, we know what we're doing. So I'm going to give a lot of open questions and some of the recent results that I had and my research group had on this. And so for the first part, I'm going to look at some of the basics of mining. And here I'm going to talk about proof of work mining as option pricing specifically. So I understand there are some finance people in the audience. Tim warned me in advance this is going to be very simple finance stuff, which is almost trivial to people from finance, but I find it very surprising for CS and Econ people.
00:02:05.530 - 00:03:08.540, Speaker A: We'll get to that when I show you the stuff. The second part, I'm going to talk about manipulating this protocol so sort of selfish mining style attacks. And I want to talk about a timestamp manipulation attack that we found that you can actually see is being done in practice in Ethereum, right. Most selfish mining attacks we have not observed in the wild. So I think this is the first case of an instance where miners are manipulating the protocol for personal gain so we can no longer ignore these things and say, okay, maybe nobody does them, so we're safe. And the third part I want to talk about is a little bit about recent work on stretching and squeezing attacks where you can delay the time between blocks or make it shorter. And that produces this form of minor extractable value that reaches in from the consensus layer again into the economic layer and has implications.
00:03:08.540 - 00:03:53.132, Speaker A: So I'm going to try and do all three parts if we don't have time for out of time, maybe just the first two. So let's start with ASIC pricing. This is joint work with aviation, and I don't know if any of you have seen these things. This is a mining calculator that you can find online. Basically, if you are a person who buys one of these miners for yourself, you can try to figure out what's your return going to be on operating this machine. So you can type in the numbers hashing power, power consumption, electricity cost, and so on. And this gives you some expectation of what you're going to earn and how fast.
00:03:53.132 - 00:05:06.064, Speaker A: So don't take these numbers specifically. I think they're correct for a few years back when I took this screenshot. But basically, this thing works on expected utility, right? You can expect that given the current hash rate, given current conditions, given the current price and so on, your miner will mine so and so many bitcoins and you will earn so and so many dollars in return. And we in general can think of the expected utility model for mining as something that usually is captured by a formula like this. So I'm writing here what is the value of a mining opportunity? I'm thinking of a short period of time, maybe at time T when I'm evaluating it at time T and the exchange rate of bitcoin or whatever cryptocurrency we're mining over is given as CT. So what is the thing I would expect I have my reward, which is proportional to my share of the hash rate. H is my hash rate over the entire network's hash rate plus me.
00:05:06.064 - 00:06:05.076, Speaker A: So I have my part of the reward and I get some block reward in bitcoins and there's an exchange rate bitcoin to dollars. And then I have to pay for something like electricity or other costs. So maybe kilowatt. I'm spending over ten minutes of mining and I have an electricity cost, and there's a max between this and zero because I can always turn off my mining machine and decide not to mine, right? I can spare the costs of electricity but not get any of the rewards. And I'm assuming everything is smooth here because mining pools make it almost as smooth as you'd want. You don't actually have to wait the 20 years in expectation until one of these machines gets you bitcoin, but you can really get rewards quickly. Okay? And this model, when you think about it, is already interesting.
00:06:05.076 - 00:07:20.248, Speaker A: Why would people mine, right? So in regular competitive settings, we'd expect when there's competition and you have several miners competing for something, right? You'd expect naively for the profits to go to zero, right? Everybody's competing until the most efficient miners remain in the market and the other ones go away. That's like our standard economic way of thinking. So surprisingly, we know already that this isn't true. People are obviously mining. But even based on this expected utility model, there's a nice result coming from EC, I think, in 2019. By Amos Fiat, Ana, Carlin Laskatsupias and Christos Papa Dimitrio talking about energy equilibria in proof of work mining, saying that the market equilibrium of something like this is already that you would have at least two miners in any market and that they can both make money out of mining in equilibrium. And it's not like a second price scenario where the least efficient miner is kind of left with zero rewards.
00:07:20.248 - 00:08:13.950, Speaker A: So this is quite a surprising result, and it comes from this proportional aspect of mining. So this is what we were looking at when we were thinking of mining. Why would people mine? Is this reasonable thing to do? And you can always ask yourself this question of should I just maybe buy the bitcoins that the miner is going to give me instead of investing in all this hardware and running it and doing all this song and dance? If I'm an investor going into mining, should I just be holding bitcoin instead? Right. So I want to show you a different perspective on mining, different from the expected utility one. And this is where we go to finance, where people think about risk. Right. And maybe the basic insight that we had is that mining hardware is economically equivalent to a bundle of options.
00:08:13.950 - 00:08:46.824, Speaker A: So I want to give you the equivalence. Exactly. So let's talk about a European option. What is a European option? It's a contract, basically, that allows you to buy a certain asset at the exercise date at some future date for a predetermined strike price. You're going to be paying something to get it. And the option holder can decide, of course, not to buy the asset at the date. He can decide not to exercise the option.
00:08:46.824 - 00:09:14.656, Speaker A: Okay. And this contract itself is worth something because if I can tell you, you can buy one Apple stock in a year's time from now for $0.50, maybe that would be worth a lot. If you expect the price of the Apple stock to be more than $0.50, that would be worth something. So how does that equate to mining hardware? What is bitcoin mining hardware? It's a machine instead of a contract. Right.
00:09:14.656 - 00:09:45.384, Speaker A: But it allows you to obtain bitcoins at future dates. Right. So I'm going to say it's a bundle of options, not a single option. But at certain times in the future, what you need to get these bitcoins is to pay a fixed amount of electricity into the machine. You basically inject electricity, you get bitcoins and you can decide not to exercise the option in the sense that you turn off your mining machine and you don't get the bitcoins. Right. So that's your decision.
00:09:45.384 - 00:09:52.590, Speaker A: So this is we know how to price options, then we should know how to price bitcoin miners. Yeah.
00:09:53.440 - 00:09:59.280, Speaker B: You also have like, hash rate risk. Right. So then there's also a bit of a convergence rate, if I understand correctly.
00:10:00.420 - 00:10:32.356, Speaker A: So I need some model of how things would change. Right. Here there's an underlying model of how the stock price changes. Here you have an underlying model of how the exchange rate changes and we also have to reason about the hash rate. So what I'll actually claim is we can actually somehow endogenize the hash rate changes into the model, but we'll start with a model that assumes a predetermined growth of hash rates. So the mining calculators actually also do something like that. They assume some certain growth.
00:10:32.356 - 00:11:17.880, Speaker A: Right. You have to make assumptions, but once we have some model, we can start to think about it. So this is where I get really trivial for finance people, but I think the results end up being surprising for me, at least when I first saw this. So there is a model called the binomial model, which is a very simplified, discrete way of talking about what you might know as black Scholes. Black Scholes is a way of pricing options. The binomial model is something that computer scientists like to think in discrete terms can handle more easily instead of differential equations and so on. So in the binomial model, we have time that proceeded in rounds.
00:11:17.880 - 00:12:09.736, Speaker A: So we have a state that we're in at time T, we have the exchange rate or the price of the asset that we are building the option over. And there is a simple random walk that we do, which is with probability P, the price goes up. With probability one minus P, the price goes down. And this random walk is multiplicative. Okay, so we grow by delta times delta times the price or to lowercase delta times the price. Okay, this is the traditional model and Black Scholes has similar underlying assumptions using Gaussians instead of the discrete model. Right? So we continue this again after moving from T plus one to T plus two.
00:12:09.736 - 00:12:52.232, Speaker A: That price might change stochastically with some random walk. Okay, so that's the underlying model. And at the limit, if you take these time periods to be really short, you get the same gaussian noise and random walk as black holes. Okay, so now what do you do? We're going to look at a single time step and I'm going to try to price the mining opportunity of a miner at a certain time, right, at time T plus two. Okay, so this is the mining opportunity. It's going to happen here. I don't know the future price of bitcoin, but I'm going to try to sell it to someone today.
00:12:52.232 - 00:13:20.400, Speaker A: So think of a mining contract. Somebody says, I'll give you the proceeds of mining tomorrow if you pay the electricity cost for the mining. Okay? So now we already looked at this way of evaluating the cost of mining. If I'm going to make enough money compared to the cost of electricity, then this is going to be my reward. Otherwise zero. Right? I choose not to exercise the option. I just turn off my machine.
00:13:20.400 - 00:14:28.688, Speaker A: So now we want to know what is the value of this mining opportunity, not at timestep T, but at timestep T minus one. If I sell it ahead of time, what is it going to be worth? And at least for me, the first answer to this would have been temptation is to say, let's take the expected value of tomorrow, right, the expectation between these two events, and that's going to be the value today, right, assuming there's no interest rates over time or something like that. And that would be wrong. Okay. And a hint as to why it's wrong is because if you look at the value of the currency today, it is not the expected value of the currency tomorrow, right? The exchange rate is not what it is in expectation. So something is already off in the model. And what we capture here is that people are saying, the reason I'm valuing this currency less than its expectation tomorrow is because of this volatility.
00:14:28.688 - 00:15:07.970, Speaker A: And I don't like volatility. Maybe I have a business to run. I need returns that I can predict. And so I value something a little bit less if it's very volatile, so the price might change. And so my evaluation of bitcoin, for example, today versus one year is not an expected value. Okay? So what I'm going to show you to convince you that the expected value here is wrong is what you basically build when you solve for the pricing of an option. I'm going to give a numeric example just to convince everybody who doesn't know this already.
00:15:07.970 - 00:15:46.348, Speaker A: And in my numeric example, I'm going to show you a way that I can make money. If I sell this mining opportunity for the expected price, I can make money regardless of the future event that happens, it's risk free return. So this is very basic stuff for finance people. So I'm going to be selling a single mining opportunity at Time T. I'm assuming I just plugged in bogus numbers. This is not obviously the value of Bitcoin, but let's assume we are starting with a price of $400 per Bitcoin. With probability one half, the price doubles tomorrow, and with probability one half, it halves tomorrow.
00:15:46.348 - 00:16:51.830, Speaker A: Okay? So either 200 or 800. And now I have a mining machine that, given $250 worth of electricity, would give me a single bitcoin if I use it here. And I'm going to be selling a single mining opportunity at Time T, which will award us this one bitcoin if we pay for the electricity. And I'm going to assume the interest rate is 0% just to not have that factor in the equations. And now we can figure out what the value of this mining opportunity is in each one of these cases, right? So if the price goes to 800, I'm going to be getting $800 for my one bitcoin, but I'm paying $250 for electricity, so that's $550 left for me. On the other hand, if our price drops to $200, it's going to cost $250 to run the machine. So I choose not to do this if the price drops and I get zero.
00:16:51.830 - 00:17:24.190, Speaker A: Okay, so the expected value, right, half times 550 and half times zero is just $275. Okay. So that's what would have happened if we followed the expected value. Okay. Now I'm going to put that up there just so we remember it. And I'm going to show you how to make risk free profit. I'm going to sell this mining opportunity to someone for $275 and I'm going to make returns regardless of what happens.
00:17:24.190 - 00:18:06.296, Speaker A: So this is exactly what you do when you are pricing options. So I'm going to start with $0, right? I have kind of a portfolio that I'm holding in my hands at the start of the first day right here. And here are the actions that I take. First of all, I sell this mining opportunity to somebody for $275. So now I owe a mining opportunity and I have some cash. I borrow some more money, 183 and one third. And I buy eleven out of twelve bitcoins, right? 1112 of a bitcoin at $400 per bitcoin.
00:18:06.296 - 00:18:43.050, Speaker A: Okay, so now I have a little bit less cash, but I have an asset. I still owe stuff a mining opportunity for tomorrow. So now we have to look at the scenario that we get to on day two. I have this portfolio that I started with and let's assume that the price dropped to $200. Okay, what do I do now? This mining opportunity that I owed is worth zero, right? It doesn't give anybody, nobody's going to use it and nobody's going to get the bitcoins. So I no longer owe it. It's at zero.
00:18:43.050 - 00:19:16.880, Speaker A: Now I can basically sell the bitcoins that I have here for this $200, almost $200. And I can repay my debt. And I'm left with $91 and two thirds. You can check the math for me, but if you want. But I had almost a bitcoin that basically covers my debt and leaves me with a little bit of money. So that's nice. If the price drops, we just made a profit.
00:19:16.880 - 00:19:53.256, Speaker A: Okay, what happens if the price goes up to $800? So I now owe a mining opportunity. So first I'm going to have to give somebody a bitcoin in exchange for the electricity to run the machine. So I buy the remaining bitcoins that I need one twelveTH of a bitcoin. So I have a little less cash. It's very expensive. It's $800. I collect the electricity costs from this person and basically I give them the one bitcoin.
00:19:53.256 - 00:20:22.600, Speaker A: And now I no longer owe them the mining opportunity. And if we look at my debt again, I'm left with $91 and two thirds. Okay. So I made risk free return basically by just trading bitcoins in exchange for a mining opportunity. Okay, so for finance people, this will be trivial, but I find it surprising that you can do something and do better than expected value, right?
00:20:22.750 - 00:20:57.712, Speaker B: Yeah, I guess maybe an intuition, one intuition for what's going on here is that there already is an unfair bet in the economy, which is bitcoin, because bitcoin is making profits on average. Right. So I guess my intuition for this would be if you have an unfair bet, then any other bet which is correlated with your unfair bet has to be exactly as unfair. Because two of the things that are perfectly correlated, having different expected returns allows you to arbitrage. So I guess the intuition or the invented language would be sort of bitcoin. You program your risk premium in anything which is correlated with bitcoin. Must.
00:20:57.766 - 00:21:24.568, Speaker A: That's true. Right. So bitcoin has a risk premium in it, then mining has a risk premium involved in it. And then the no arbitrage rule basically says unless you sell it for the right price, you can make money. Right? That's true. Okay, so this has implications, right? So the basic implications about stock options now hold for bitcoin. Right? We made off with money anyway.
00:21:24.568 - 00:22:06.856, Speaker A: So the correct value of the option is not this $275. You have to subtract the money that I've just made from it. It's actually $183. And this is the risk premium. The reason it is valued less is because of the risk. So now we just did one time step, but you could actually do more. You can derive the price of the mining opportunity in the future going back as far as you want, and then you can basically write it down either as a formula or an algorithm to compute it backwards on this tree of states.
00:22:06.856 - 00:22:38.672, Speaker A: Okay, so this is the trivial finance aspect. The reason we're doing the algorithm is because when we go off the protocol for something else, we can still compute the values. Right? And we're not going to keep the protocol necessarily the same. For example, we might change the hash rate that's out there from step to step based on the price itself. The price itself. If the price goes up, many people rush to buy mining hardware and the conditions change. And we might even have path dependence on how we get to a certain state.
00:22:38.672 - 00:23:22.336, Speaker A: If we went up in price and down, people bought a lot of mining hardware and then turned it off, versus if we go down and then up, maybe there's less mining hardware out there to compete with me. And so I would expect things to be different. And this is where we deviate from the black scholes classical model, and we get interesting things that are kind of different. I won't go into all these results though, but I will show you that we actually went to amazon, we looked at hardware costs. So this is the ant minor s nine. I think this is the platform that was for sale for the longest period of time. And so it was interesting for us to look at it.
00:23:22.336 - 00:24:04.652, Speaker A: The expected value. If you make some assumptions about the price of electricity and so on, you see is much higher than how we expect asics to actually be priced, which is the red and green line. Basically, the green line is if you price the asics itself. And the red line is if you hold this portfolio that you're mimicking options with and you're actually paying for fees to actually do all the shifting of the portfolio that you need to do over time. So what we get is that in some sense, mining calculators overprice this hardware. All right. Yeah.
00:24:04.706 - 00:24:30.870, Speaker B: Quick question here. I guess the mining calculators make two mistakes, I guess, and one mistake is that they fail to account for the optionality. And then there actually the hardware is more valuable than they think it is. But the second thing is they fail to account for the risk premium given the optionality, which I think biases downwards. So I think it's actually ambiguous which way that goes. And it seems to suggest they're ignoring the risk premium is kind of the bigger effect. I guess.
00:24:31.400 - 00:24:51.884, Speaker A: They're not ignoring the risk premium because they're using the current price of bitcoin, which already includes some of the risk premium. Right. So maybe they're accounting for that. But the gap is huge. Right. Sometimes when we were looking at prices, you see we were pricing something at $4,000 and the expected value would have been double. Right.
00:24:51.884 - 00:24:53.516, Speaker A: That's a huge change.
00:24:53.698 - 00:25:02.304, Speaker B: Clarifying question. In the N minor game, do they choose the hash rate or you take it for different each of them?
00:25:02.422 - 00:25:48.104, Speaker A: So each miner chooses the hash rate. So what I showed you up until now is just an assumption that we have on the hash rate continuing to grow as it has grown before. But we have a second model in the paper where you are actually endogenizing the hash rate. You're saying, okay, as long as a mining machine is profitable, I will buy it until the moment where it's not. So we go back to this zero returns sort of thing. Like I add mining machines until the marginal profit goes to zero or to some level that it costs to manufacture these. And then you can actually have an endogenous mining rate by the rest of the world.
00:25:48.104 - 00:26:05.190, Speaker A: And if you have an increase in price, you can figure out what all the miners are going to do in terms of buying hash rates. And it doesn't matter which miner buys the hash rates. It's still competing. Miners can sell machines to each other. They're still in the market, they're still mining. So it doesn't really matter.
00:26:05.960 - 00:26:19.592, Speaker B: Yeah, sorry, another question here in your practice, I guess the question, do you have to actually take a stance on what the risk premium is or not? Because in classic black scholars, I should, but you actually don't. There's a trick where sort of the p actually falls out.
00:26:19.646 - 00:26:32.300, Speaker A: Right. Same here. We do this no arbitrage rule justice in classic black scholars, and it vanishes out. Right. I don't see the risk premium. That's the way of accounting for it. I guess this is why they got the Nobel prize.
00:26:32.300 - 00:27:25.570, Speaker A: So I want to talk about the implications, right? Let's think about what we know about option pricing, right? So first of all, bitcoin's volatility increases the asics value in some sense, right? If you think of options, they are worth more when the underlying asset is more volatile, right? Because your gains could grow if bitcoin price explodes. Suddenly you are making a lot more money. On the other hand, from below you are bounded by zero. You can just lose your investment. So you have bounded losses and potentially unbounded rewards if you increase volatility. So this is something that's interesting because the value of asics provides security to bitcoin. So this is something about bitcoin's security.
00:27:25.570 - 00:28:30.020, Speaker A: If bitcoin's volatility goes to zero, we are losing something from the value of these asics. Another thing is that imitating portfolios, right, holding these assets, that mimic a mining opportunity, that allowed me to fulfill a mining opportunity without actually having a minor. That's a competition. That's an alternative investment strategy to becoming a miner. And the thing that makes this slightly less efficient than actual mining is that I have to pay fees to readjust my portfolio as the price changes. So as we have lower volatility and lower exchange fees, right? If the market becomes better at doing these, then the gap is going to narrow and it's going to be easy to just hold imitating portfolios instead of mining. Which means we are losing security for bitcoin again, right, as well as not just the volatility of the currency, but also the exchange fees.
00:28:30.020 - 00:28:31.190, Speaker A: Yeah.
00:28:32.360 - 00:28:38.500, Speaker B: I have a couple of questions, but does this assume that everybody has to pay the same price for electricity?
00:28:39.800 - 00:29:15.856, Speaker A: Right? So the naive model does, of course. But you could of course think of situations where that's not the case, right. Some mining machines will be turned on and some off, right? If you have a certain mix, let's say you have an efficient and an inefficient miner present at the market at the same time, then some of them get turned off at different prices, right, as the price falls. You could definitely do that. Right. So this way of thinking and working with the discrete model is something that you can actually do the computations for a mixture of mining types as well.
00:29:15.958 - 00:29:24.484, Speaker B: Does it matter that a lot of miners in practice buy their electricity on a long term contract? Does that just stretch the time horizon out?
00:29:24.682 - 00:30:06.160, Speaker A: I don't think it does because you can buy our electricity on a long term market, you can also resell it on the short term market. So one thing that we've seen, right, I think in Texas there's a heat wave or something. Miners promise to release electricity back into the grid for air conditioners of people and they get the spot price. So the fact that they purchased in advance is just a position that they took on the price of electricity irrespective of what bitcoin mining does, and they can decide to forego it. That's that. I'm going to skip this in the interest of time. So the model covers a bunch more stuff.
00:30:06.160 - 00:30:45.516, Speaker A: There's actually innovation in mining hardware where you can lower the activity level of your miner to make it more efficient in terms of hash rate per jowl of energy that you put in. And this can also go into the model. Definitely an alternative to turning off the minor. So you could have different levels of activity and you can think of going deeper into the rabbit hole in terms of strategy for the ASIC manufacturers. Think of the ASIC manufacturer building an ASIC. If the price of bitcoin goes up, he's going to get sold out. But if the price tanks, he's going to be left holding a lot of hardware.
00:30:45.516 - 00:31:15.770, Speaker A: So sometimes they decide how much asics they have to manufacture in advance without knowing the future. There's also kind of a real option. These decisions are called real options, where they have to account for risk in the market themselves. Kind of a second level of pricing. Okay, so now I'm going to switch over to another topic. So I hope I got you interested in this. Probably not going to have time for all three.
00:31:15.770 - 00:31:50.180, Speaker A: So this is a recent discovery that we've made about mining manipulations. We call it uncle maker timestamping out the competition. It's going to be a timestamping attack in ethereum. And this is joint work with avivish and Gilad stern. Okay, so mining, right. We think of miners as being kind of usually honest because we haven't seen a manipulation in practice. But I'm going to show you, I think, what is clear evidence of manipulation.
00:31:50.180 - 00:32:22.492, Speaker A: Aviv likes to have memes in everything he does. So this is his meme. So when we're talking about selfish mining, right, we have this seminar work by Ajalin. Serere that shows a profitable deviation from honest mining in bitcoin. We just have a deviation. What we don't really have is a new equilibrium that miners would go to because that thing is not even clearly defined. But we've had other manipulations since then.
00:32:22.492 - 00:33:18.800, Speaker A: I think the same EC 19 conference that I mentioned before had a paper by Goren spiegelman also on the economics of mining, where they show that even turning on and off your miner on regular intervals is better than mining honestly in terms of rewards. So this is something that's going to be very hard to fight. There have been suggestions on how to stop selfish mining in the sense of the island serra, but I don't know how you do that with what goran and Spiegelmann suggested. And the question everybody keeps asking is why you don't see these in the wild. And the answer people usually give is that long term incentives are hypothesized to win over these short term gains. You're going to get bad reputation as a miner and that's going to hurt you. And the protocol might get changed after you do your manipulation.
00:33:18.800 - 00:33:52.200, Speaker A: So now I want to talk about the manipulation, but to show you where it happens, I have to kind of explain ethereum's difficulty adjustment algorithm. And this came out when we started to look at it and we tried to understand this interesting formula that kind of looked like it was pulled out of the hat. Right? So the difficulty of a block, block I plus one in Ethereum is the difficulty of block I. Right. And we have to change it if something happens. Right. Plus some term.
00:33:52.200 - 00:34:31.080, Speaker A: What is this term? Usually we add one here. We do this in increments of the difficulty over 2048. So we're going to make a one over 2048 increment in difficulty or a few steps more. So this term here is going to determine how many steps of increment are we going to make or decrement. So we're going to add one plus one. If this block has an uncle minus T over nine rounded down. T is the time between the current block that we are mining and the previous one.
00:34:31.080 - 00:35:20.164, Speaker A: So if 1 second has transpired, we're not going to deduct anything. But if many seconds have passed, the time between blocks is really long. We want to decrease the difficulty a little bit. Okay, so this goes T over 99 and the maximum decrement that we will have is -99 we don't want to lower the difficulty too much in one go. Okay, so this is a little bit of a weird formula. And when we were looking at this, we were wondering about this T. Where does it come from? As I am mining, is T the time between the last block and the block that I'm currently mining or is it the time between the two previous blocks? This would have been reasonable because this is something that's set and easy to decide.
00:35:20.164 - 00:36:02.416, Speaker A: But the Ethereum have decided somehow to make the current block time T. Okay, so T as I am mining, I'm incrementing the clock. I'm not succeeding in mining. And the mining actually gets easier and easier and easier as I go. Okay, so this is a strange choice, but this is what they did. And now I want to show you the attack. Okay, so let's suppose we have a blockchain and somebody just mined a block with 10 seconds interval here and I as an attacker decide to put 8 seconds on my timestamp.
00:36:02.416 - 00:36:32.184, Speaker A: I can change my timestamp to be whatever I want, right? So maybe naively, you know what, I'll go back for a second. You would think that if I push the time on my clock forward in time, it actually makes my mining easier. So maybe that's what I want to do. I want to mine with a higher probability of success, but kind of counterintuitively. I'm going to change in the other direction. I'm going to lower the timestamp on my block. So the inter block time is actually 8 seconds.
00:36:32.184 - 00:37:07.050, Speaker A: So what does that do? The next block that's created by an honest miner has to choose one of these two blocks. One of them is going to be the main chain block and the other one is going to be an uncle. Okay, and how do we choose between two chains of the same length? We choose based on difficulty. The higher difficulty chain is the one that wins. So how do I make my difficulty higher? I lower the time. T right. If I go over 9 seconds, this decrements the difficulty by one more step.
00:37:07.050 - 00:37:35.090, Speaker A: Okay, so my incentive is to actually fudge the timestamps in the other direction. Okay. So protocols choosing the highest difficulty chain have to prefer the attacker's block. And the thing that you need to remember is that uncles do get rewards in ethereum, but they get smaller rewards than the actual block reward. They don't get fees on transactions and they create less ethereum. Okay.
00:37:36.740 - 00:37:41.670, Speaker B: Deviation is only relevant when someone else finds a block basically at the same time.
00:37:42.120 - 00:38:01.816, Speaker A: So it's relatively rare. The impact is not high. Right. I'm going to make a little bit of money just converting from an uncle block to a main chain block. And it doesn't happen often because usually most of the blocks are found even faster. I think. Maybe not most, but a good number is.
00:38:01.816 - 00:38:51.476, Speaker A: It also the case that if I type in red block that creating my block is actually lower difficulty because there's greater time between whatever timestamp I choose and the previous two plus eight and whatever I choose versus a previous two plus ten. Sorry, I'm not sure the next block. So you're saying you have an incentive to pick the block with the older times, the earlier timestamp because it'll make your difficulty easier? Yes, I think you are right. But it also means that your block is easier for the attacker to attack. Right. If I've just attacked a block, I fudged the timestamp you're mining. Honestly, again, you have a higher difference than Ordinarily.
00:38:51.476 - 00:39:12.428, Speaker A: So the attack kind of helps itself in some sense. So here's the attack. Mine all blocks with the minimal inter block time of T equals one. You have to put in a value of at least 1 second higher than the previous block. That's the consensus rule in ethereum. And then you can have fewer uncles. Right, and you can just override the chain.
00:39:12.428 - 00:39:39.704, Speaker A: But if you think about it, this attack also makes double spending easier. You don't have to have a longer chain. If there is a single block in the chain that you're overriding that took longer than 9 seconds to create, then you can win in case of ties. This also makes selfish mining more effective. This is even better than gamma equals one. You can catch up to chains from behind if you know what selfish mining means. If you don't, then I won't go into it.
00:39:39.704 - 00:40:13.012, Speaker A: And in practice, what we see is a softer attack. So now I want to show you the graphs that we actually went looking for. So this is a histogram of all blocks created in Ethereum. You guys can't see exactly what's written here on the x axis, but this is basically the timestamp difference from your parent block. Okay? So you have the histogram. You might see these bumps at 8 seconds and at 17 seconds, which are slightly suspicious. We looked at that and we said, wait, something's going on here.
00:40:13.012 - 00:40:41.048, Speaker A: This is for blocks over height, 12 million in Ethereum, which was 500 and something days ago. Okay, so we have over 3 million blocks here in this histogram. So when we went to look at individual miners, these are aggregated over all miners. We found this. This is f to pool. Okay. It's one of them mining pools over Ethereum.
00:40:41.048 - 00:41:16.600, Speaker A: And you will notice that in the last 3 million blocks, f to pool created zero blocks that had 9 seconds interval to their parent, zero block that had 18 seconds, zero block that had 27 seconds from their predecessor, and so on. So what we assume that Ftpool is doing is basically every block that was supposed to be created 9 seconds after its predecessor, they just shifted to 8 seconds. So this column is almost twice as high as it should be. And that's exactly the missing piece. Right. So this is a softer form of attack.
00:41:16.670 - 00:41:20.120, Speaker B: This maps on your four T over nine kind of term.
00:41:20.620 - 00:41:44.508, Speaker A: Yes. So the nine rounded down, right. When you go to eight rounded down, you're basically one step lower. Okay, so this is kind of odd. They could have spread it out a bit more evenly, or they could have just subtracted the second from their timestamp at all times. I suppose there were other ways of doing this, but they chose a particular way. And we went looking for other miners.
00:41:44.508 - 00:42:17.100, Speaker A: So what you see F two pool is here in red, actually, that's this gap. But there are other miners which we don't know how to identify. We call the first one Sneezy, actually, because Sneezy is doing something that looks a bit more aggressive than F two pool. So if you look at F two pool's height here, this bar is roughly double the size of what it should be for the green one. It's much more than double. Right. So they're doing something more aggressive in terms of timestamp manipulation or so we suspect.
00:42:17.100 - 00:42:53.380, Speaker A: And again, all of these miners create zero blocks with 9 seconds after the predecessor. Okay? And one last graph to show you about this. This is not a victimless crime. If we're looking at uncles that are created by miners, by other miners. So Ethermine is the largest mining pool in Ethereum. You can see that when they create a block after 9 seconds, they have a higher uncle rate. So these are the number of this histogram shows the number of uncles these miners are creating.
00:42:53.380 - 00:43:25.292, Speaker A: So Ethermine is a victim here. And you see the bar is higher here. And Hivon, which is another mining pool, also has a higher bar of a higher rate of uncles here. And you have Eftopool for comparison. In green, they have zero uncles with 9 seconds because they don't create any of these blocks at all. Okay, so basically what this strategy does, it's a very simple thing, right. You change the timestamp in a block, you get fewer miners.
00:43:25.292 - 00:43:33.076, Speaker A: This translates to a certain small percentage of increase in your rewards, which for mining pools is very, very big, actually.
00:43:33.258 - 00:43:35.380, Speaker B: Why is there a decrease in trend?
00:43:37.240 - 00:44:08.000, Speaker A: So basically, if we knew nothing about this, this was supposed to be an exponential distribution, right? The inter arrival time of blocks is exponentially distributed. It's a memoryless process, mining, right? If I didn't succeed in the first 2nd, my expectation is for this distribution to be the same. It's the exponential distribution. Usually our inter arrival time should decay exponentially. There is a slight correction here.
00:44:08.070 - 00:44:13.852, Speaker B: Different one would be the fraction of blocks that were uncled and that you would expect to be flat.
00:44:13.916 - 00:44:59.036, Speaker A: Right? A fraction of blocks that were uncled would have been flat. This is how many uncles had 1 second from their parents? How many had two. After 2 seconds, maybe a block was found and I'm already mining on top of new chain. One thing that I should also talk about is why there's a difference. Sorry, why there's a difference at the beginning, right? Why is this not the 1 second? Why is it not higher than 2 seconds? I think that accounts for propagation time of the block. So usually when you get a block, you don't start to mine at time zero because it took a while to reach you. So even under honest behavior, so there is some effect of propagation.
00:44:59.036 - 00:45:35.944, Speaker A: But I think this is quite the smoking gun in terms of showing manipulation. Okay, so here we have our open questions like what is the equilibrium in mining in general? Right? We don't know. If you look at selfish mining, we have a game where you have hidden blocks, people withhold blocks. So we have hidden state. Right. It's not a normal forum game that we can just solve and find the equilibrium. We don't know if there's an incentive compatible mechanism.
00:45:35.944 - 00:46:01.110, Speaker A: We keep seeing things and researching. This is a moving target, right. Ethereum made up these rules. The Ethereum two is going to have different rules. We're going to look for new manipulations. Once the protocol is decided on, it keeps changing all the time, different aspects. When you go to look at the code, look different than what you thought they would be in the white papers or yellow papers and so on.
00:46:01.110 - 00:46:03.744, Speaker A: Yeah. Do you have a question, Joe.
00:46:03.872 - 00:46:17.800, Speaker B: Is there some kind of almost like prisoners dilemma here where the honest pools could notice that F Two pool or whoever is playing this game and just never include them as an uncle as punishment?
00:46:19.180 - 00:47:06.532, Speaker A: That could be done, but I think the first thing that I would do is I would also change my timestamps, right? If we're just in the domain of timestamp manipulation, everybody should always mine a block that's 1 second in the future after the previous one, and the Ethereum's timestamp clock stops for progressing correctly from now on. By the way, that has a lot of consequences for things built over Ethereum because some platforms actually look at the clock when they give you interest rates on deposits and collect interest rates for loans. So if the clock isn't moving correctly, you're in trouble. If we're thinking of behavior like that, like what you were suggesting, we're going to get to very dangerous domains.
00:47:06.676 - 00:47:16.168, Speaker B: Really? It seems like it's an equilibrium if all the big miners sort of agree, like, nobody's going to manipulate timestamps, and if you do, everybody else will punish you.
00:47:16.334 - 00:47:59.364, Speaker A: So if I took off a half a second from my timestamp at all times, how would you know that I'm manipulating? Maybe I'm just receiving all the blocks faster than you. There's no way to clearly determine that you're doing this. I mean, this manipulation that we see from F to pool is very crude, but they could do this much more subtly. Are you sure this is purposeful? I mean, look, the fact that it's from these multiples of nine come out from the formula. So what we know is that the second minor that was on the list here that I called Sneezy, the green one, started two days after F Two pool. So maybe it could be an accident, but I don't think so. They're doing it purposely.
00:47:59.364 - 00:48:41.576, Speaker A: Why would they concentrate on these multiples of nine? Because the multiples of nine appear in the code. That means that they just appear in the formula, right? So you should have gone to 1 second, but maybe people would have complained that the clock wasn't progressing correctly, so they wanted to do the minimal change. I think whenever you're at nine go to eight, that lowers your uncle rate and it does not perturb the protocol too much. I don't know why they you could do it another way where it's kind of less obvious that you're cheap. Clearly you could just share the second off. It was a glitch in the code, the multiples of nine to come out naturally. Somehow I highly doubt that.
00:48:41.576 - 00:49:00.380, Speaker A: I highly doubt it. I mean, a miner would ordinarily not touch the mining code if they wanted to be honest. I don't think you would change it. Right. There's a certain place where you have to do changes to the timestamp. It takes effort to change the timestamp.
00:49:02.880 - 00:49:14.000, Speaker B: Are you accumulating the skew in time? If they own the blocks ending by F two pool? Will they keep kind of pushing the time backwards?
00:49:14.340 - 00:49:45.772, Speaker A: So if every miner was doing this, you would be accumulating. But once there is a single honest miner, they use the correct time. There is, by the way, a limit. You cannot publish a block that's more than 15 seconds in the future according to the local clock of the machine. So you're not going to run forward too much, but you will catch up if there is an honest minor okay. As long as there is one. So I think this is fairly interesting.
00:49:45.772 - 00:50:00.370, Speaker A: I think the most interesting part, it's not that the attack is very sophisticated, it relies on something that you could describe as a glitch. I think the more interesting part is that somebody chose to exploit it, which is the new thing.
00:50:02.660 - 00:50:07.968, Speaker B: It's almost like an argument against epsilon approximate EPS equal to radar or something like that.
00:50:08.134 - 00:50:08.864, Speaker A: No, I don't know.
00:50:08.902 - 00:50:10.916, Speaker B: This is an epsilon and people wouldn't hit it and did it.
00:50:10.938 - 00:51:10.328, Speaker A: Right. So I had a lot of conversations with miners and they were telling me things that they are trying to shave off hundreds of milliseconds or tens of milliseconds on how fast their block gets sent out to the network. And the reason they were telling me this is if you're a mining pool, your profits are not the entire block. You're paying it out to the miners themselves. You make A-1-2 return on the actual block. And if you think about this, 100 milliseconds in sending out the block translates to a small percentage of the block reward being saved, potentially due to uncles and things like that. But having to pay out the rewards to miners, like if you pay per share or something like that, without thinking of the risk, you suffer the losses, they are eating up a lot of your 1% to 2%.
00:51:10.328 - 00:51:32.076, Speaker A: So for the miner, every small improvement gives them a lot of revenue. I think this is why you see mining pools doing things that look even ridiculously small and they're putting a lot of effort into infrastructure because it translates into their own bottom line quite well. Yeah.
00:51:32.178 - 00:51:37.116, Speaker B: Is the current difficulty of the rule, as you stated in the slide.
00:51:37.308 - 00:52:11.496, Speaker A: This is the current difficulty for Ethereum one. Yeah. So I'm just going to show a different result from a different paper where we actually revisit the same difficulty adjustment procedure. And in this paper, what we were trying to do again is manipulation for time between blocks. But this time we actually want to manipulate the actual time between blocks, not the timestamps. So I think of this my thinking of this is like this. We like to have our protocols arranged in layers, right.
00:52:11.496 - 00:52:57.560, Speaker A: We think of a networking layer and a consensus layer that works, assuming the networking layer works well. And then there's data on the blockchain that assumes consensus is okay. And we interpret this data as smart contracts and maybe the native currency to the blockchain and all these things. But really, when we have minor extractable value, the layer model breaks. The economics break it. Right? We have implications from the consensus layer affecting other layers. Right? And it's in some sense our fault because we pay rewards in the native currency to the consensus layer actors and we have sequencing that they decide on the order of things.
00:52:57.560 - 00:53:42.408, Speaker A: So this is minor extractable value, right? This is how we're used to thinking about it. So now I want to show you that the consensus layer can also change, maybe manipulate the time between blocks, which affect smart contracts in different ways. Okay? So that's another way of thinking of minor extractable value, not just through sequencing. So the results are basically that you can manipulate the time between blocks. You can stretch them or squeeze them. And I'll skip to maybe the most interesting part of the result and that's actually happening in Ethereum. Let me try to show this.
00:53:42.408 - 00:54:25.776, Speaker A: Okay, so we have another term that we briefly mentioned before. There's a one here that you increase the difficulty if your block that you're building has an uncle, right? So an uncle block, you're pointing to something. So this actually makes sense from a design perspective of the system. If you have a lot of uncles, that means blocks are getting sent slowly relative to the mining speed and you might want to slow down the system. So it makes sense to have a term here that slows down if you have too many uncles. But you could manipulate. Right? And what we found is that the 25% Miner, for example, can decide to just mine uncles.
00:54:25.776 - 00:55:15.332, Speaker A: How do you just decide to mine uncles? You mine blocks and you release them only once a competing block has been found. So you do this strategically on purpose and you keep bumping up the difficulty level. And what you get is like a 50 something percent slowdown in the rate of blocks in Ethereum compared to what it's supposed to be. And it's one that the difficulty adjustment algorithm does not correct for it. It creates. Right? And then what do you do with this? So you could do almost a 60% slowdown in Ethereum over a long period of time. So what you do is you go to D five platforms like Ave, right? And that accrues interest over time using the timestamps that we just talked about.
00:55:15.332 - 00:56:03.460, Speaker A: And you can go to compound where deposits and withdrawals accrue interest per block, not over time because they don't trust the timestamps, because you can manipulate the timestamps. And then you can take a loan in one deposit in the other and fudge the block rate. So this is minor extractable value. Again, somebody from the consensus layer is messing with the way we measure time in higher level protocols and can make money. So if you look at Aven compound. You have to get over a certain hurdle and that's that the deposit rate and borrow rate have a gap, right? Usually you have to pay higher interest for borrows than you get for deposits. This is the profit that the platform makes and the way it accounts for risk.
00:56:03.460 - 00:56:39.730, Speaker A: But because you can slow down ethereum by so much, you can make it worth your while and you can take larger and larger loans in theory and screw up these protocols, right? Make money. So I will grant you that this is slightly more theoretical. You need very large loans to make a large amount of money. But this is something that we have to think about when we're measuring time. We're talking about higher level protocols that measure time. There could be other interests to slow down the blockchain. Maybe you want to increase congestion as part of a different attack.
00:56:39.730 - 00:56:49.010, Speaker A: If you slow down the rate of blocks, transaction fees will grow. Maybe you can make money off of that in some way.
00:56:49.780 - 00:56:59.590, Speaker B: Is it correct to say that if in the last column everybody's doing the same thing, then there's no opportunity right here? What do you mean? Everyone was doing per ton.
00:57:02.220 - 00:57:43.524, Speaker A: So I think there will still be an opportunity, right? Because suppose depending on the platform, right, so if you're paying, maybe you took a loan in fixed interest rate, you could change the rate after you took the loan, right, that's assumed a certain rate of blocks, right? The interest rate was calculated for you in advance and set in stone for the next year, for example. So that's already an economic mechanism that you make invalid. By this you could also take external loans. I mean, a regular bank uses time and not blocks, right? So you could take an external loan off the blockchain, borrow money for some interest rate, put it into the blockchain and then manipulate block rates and do all sorts of weird things.
00:57:43.562 - 00:57:49.264, Speaker B: So basically, any application that's implicitly relying on a kind of rate of block.
00:57:49.312 - 00:58:48.820, Speaker A: Creation could be subject to failure, right? So I will say that once you take out this aspect of the uncles from ethereum, it becomes significantly better and it even outperforms bitcoin in bitcoin. What you could do, the attack would be very simple, right? If you look at gorn and Spiegelman's result turning off and on the miners, if you turn off half the mining power, for example, what happens to the block time? It just doubles, right? Half the miners are gone. So a two week mining period becomes a four week mining period, right? And then you put back that half that you took off, then the block rate doubles. Instead of a two week period, you have a one week period. So we did basically two epochs. Instead of doing them in four weeks, we do them in five weeks. So we actually slowed down the protocol by 25% with a 50% minor.
00:58:48.820 - 00:59:28.180, Speaker A: Okay, so instead of taking off the mining power, what you really could you don't want to do that because you're losing money on this. You could switch from selfish mining to not. If you're selfish mining for a while, you're actually overriding the chain occasionally, but a lot of mining power is actually off now. And then you switch it on and off. Or you switch your mining from cryptocurrency to cryptocurrency, you switch over. So you're still making a rate of return, but you're manipulating time. So something here is broken, but in bitcoin, it takes you two weeks to adjust the rate.
00:59:28.180 - 00:59:59.600, Speaker A: Ethereum responds much faster if you take off this penalty for uncles. So maybe this is solvable at the protocol level, but definitely the current protocols don't handle it that well. Okay, so I'll stop here. I think I gave you a bunch of examples. There's more stuff I didn't talk about. I know Tim's worked on this, on the TX fee mechanism. There's a lot of stuff going on there that's somewhat arbitrary.
00:59:59.600 - 01:00:29.640, Speaker A: There's a lot of interesting works. You can look at futures on blockspace that itai tabari was working on. How do you do the gas cost manipulation? I think there's like a menu of costs which is arbitrary for computational actions. Proof of stake is going to be a whole new ballgame. I don't know what's going to go on there. Every protocol is very different. I think my rant is that we know less than we should right at this point in time.
01:00:29.640 - 01:01:23.000, Speaker A: This is basic thing that incentivizes all of cryptocurrencies and we see it break or our misunderstanding of it in many different forms that I tried to show you today. Right. So I was talking about proof of work that's CPU based, but you could think of space memory or bus access, so on. They would have different characteristics and different manipulations would work on them, I think. All right, so I'll stop here and thank you for participating. So Clement was asking any sense of how much this is worth in terms of excess payment the dishonest miners earn. So I'm guessing this means the manipulation for Ftipool.
01:01:23.000 - 01:01:58.080, Speaker A: So we have numbers. I don't think it's a lot of money. I think uncles make maybe 80%, 85% of what a block makes in terms of printed money, and you lose the fees. I don't have exact figures for right now that I can pull out. I probably have them in the paper. So it's not a huge percentage of rewards because it only operates right now. They're only gaining on blocks that are created exactly 918, 27 seconds.
01:01:58.080 - 01:02:38.192, Speaker A: They're not even attacking blocks that are created 10 seconds, after which they could have attacked. They could have had fewer uncles there. So the attack that they did make is relatively limited. You could have done better even if you would have done the full scale attack. I don't think it would have been a huge percentage, but as I said, these minor improvements for them mean a lot to their bottom line. Okay, so I'm surprised that, as you said, that epsilon equilibrium has to be rethought. I'm not sure it's an epsilon for them, though, but it's very easy to rewrite the code for the attack.
01:02:38.192 - 01:03:16.628, Speaker A: You just have to change the timestamp. It could be even external to the mining code. You could do what Avivya ish did when he was coding this. He actually did a container that changed the time selectively, I think, for this. Okay. Neil asks any thoughts on how these pools figured this out? Trial and error? So we have no idea. I think Aviva saw anecdotally on some minor forums that they were discussing this, that they wanted to do something with the timestamps.
01:03:16.628 - 01:04:06.556, Speaker A: I think if you go and you read the yellow paper, you see this nine rounded down kind of stick out, and maybe that's what they did. Somebody probably paid to look at these things at these mining pools, but it's all speculation. Matt asked just to confirm for the timestamp manipulation attack, they actually have a one over 2048 lower probability of finding a block by doing this attack. But the uncle probability is much higher than this. Yeah, exactly. So Matt is saying, when you're manipulating the timestamp, you're making it harder for you to mine, but you have a certain uncle rate that naturally occurs for this to be worth your while, right? That's correct.
01:04:06.738 - 01:04:22.896, Speaker B: Okay, follow up to that question. I might be interested in saying, but is the solution to a harder is the solution to a harder adhering problem automatically a solution to the easier one? In the sense that sort of like you might accidentally, when trying to solve the easier problem, have a solution that's.
01:04:22.928 - 01:04:33.348, Speaker A: A solution to no, you have to decide in advance what you're trying to solve for, and then basically you're tossing a coin and there's a probability of success. That's how you but you have to.
01:04:33.354 - 01:04:35.336, Speaker B: Commit in advance to solve the harder problem.
01:04:35.438 - 01:04:40.200, Speaker A: Right? You commit to solving the harder problem, and then you toss your coin.
01:04:40.700 - 01:04:46.088, Speaker B: Correct me if I'm wrong, but you actually put the difficulty parameter into the block header, which is then what you're hashing.
01:04:46.184 - 01:04:57.810, Speaker A: Yeah, the timestamp itself is in the header, and then when you're hashing that, you've committed to this approach. Okay.
01:04:58.420 - 01:05:02.320, Speaker B: And in Bitcoin, is it possible to do the same kind of manipulation?
01:05:03.140 - 01:05:41.070, Speaker A: So I think there are timestamp attacks on Bitcoin. I think they work more at the end of the two week epoch, so you can slightly change the difficulty. I don't think that they're very drastic. You could also have a slight drift of what's called network time, the time that which window of time they're accepted into Bitcoin. So their manipulations are much smaller. They're not as interesting. I guess here there's this question of uncles which doesn't exist in Bitcoin at all.
01:05:41.070 - 01:05:43.230, Speaker A: All right, thank you.
