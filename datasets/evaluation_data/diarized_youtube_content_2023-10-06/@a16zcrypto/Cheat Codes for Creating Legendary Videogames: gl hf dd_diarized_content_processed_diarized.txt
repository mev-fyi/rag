00:00:00.330 - 00:00:31.622, Speaker A: You. All right. Good morning, everyone. Thanks for being here to listen to me talk a little bit about video games. So just to start this whole thing off, I'm just curious how many people even know what the name of this talk is and what those letters stand for? Any hands? Few people. So this is saying, Good luck. Have fun.
00:00:31.622 - 00:01:14.254, Speaker A: Don't die. And as near as I can tell, it originated back in StarCraft days when you would play a multi play a three on three game of StarCraft, usually with strangers, and this would be the way you'd always start the game, is by saying these words, good luck, have fun. Don't die. Which meant, please don't mess up as my teammate. So the reason I show this one is it's actually the first game that I worked on as a game designer in the industry. So a lot of my career was at Blizzard Entertainment, and my background is in game design. So I was the lead game designer on StarCraft, Brood, Warcraft Three and World of Warcraft.
00:01:14.254 - 00:01:55.860, Speaker A: And then it is around that time where Blizzard really started scaling like crazy. We went from, I think, 500 employees to like, 4000 over the next couple of years. And then my role also changed and we were also making more and more games. So these are some of the games I worked on during my history. And then I left in 2014, which is just right before Overwatch came out, which is why I didn't put Overwatch on here. And then I took a couple of years off and started Bonfire Studios in 2016. And no, we're not making crypto games, but Chris Dixon is on the board, so he asked me to come and talk today.
00:01:55.860 - 00:03:04.120, Speaker A: And this was really when we went to Sandhill Road. What we wrote down is kind of our plan of how we wanted to build the company and how we wanted to be successful, which is really around hiring awesome game developers, developing the game. Iteratively but also making sure that you pick the game that makes sense for your team and then making sure to not ship the game until it's ready. And it's perfect and it's awesome. So this made a lot of sense, and I thought it was great because we had dinner that night with Chris Dixon and Mark Andreessen felt like it was going really well, and we had never pitched to get venture capital, so I asked, oh, well, how did it go? What did you guys think of the pitch? And then Mark literally raised his hand and wanted to give me some feedback. And he's like, It's really, really good, but we're used to getting pitched a plan and you didn't actually have a plan. You know, my response was largely like this, which is, no, no, it is a great plan.
00:03:04.120 - 00:03:32.560, Speaker A: Please fund us. Which, happy to say, they did decide to do that alongside with Riot games. So we were able to found the company. And since then, we've been working on our first game. So today I'm going to talk a little bit about creating legendary games. And I know that not a lot of people in the room are probably making video games. So I'm going to try to make it a little more applicable to any sort of products that people might be able to make with a team.
00:03:32.560 - 00:04:22.350, Speaker A: So first, I just want to have a little bit of a definition setting. So when I say Legendary game, we're really trying to make games that are those really special games. And it's the games that people are going to play for hundreds, if not thousands of hours and really become a favorite hobby, have a deep and imaginary world that people actually cosplay. Like that center one under Immersive World was the winner of one of the BlizzCon costume contests of a StarCraft adjutant. And you really want to have these games that cause so much love and joy that it ignites fandom around the world and becomes timeless. So those are the types of games that I'm talking about. I'm not talking about how to make a quick mobile game and quick buck.
00:04:22.350 - 00:05:39.500, Speaker A: So if you want to try to make a game industry masterpiece, these are some of the steps that I think are important and we're going to go through all of them. The first thing is it is a talent driven industry, just like I think any industries are. But the thing I think people don't realize about video games is the types of humans that put these things together are really, really different from each other. It's like you have everything from sound design to obviously engineering, which I'm sure people here are familiar with, but it's also a very artistic industry. And you have character artists, you have animators, you have special effects artists, and you also have game designers and project managers. And the other thing that's tricky about getting all of these people to work really well together is that they all think pretty differently about how to make creative product. And so much of like, my job on these teams have almost been like a translation layer to try to get artists and engineers to be able to hear each other from the same language, since oftentimes engineers will be talking in thinking words and artists will be talking in feeling words.
00:05:39.500 - 00:06:38.090, Speaker A: So a lot of it is really about getting the right talent first and then from there really start thinking about what is the big idea. And I feel like so often finding the right idea is put on too high of a pedestal. Because really my belief is great games and probably great products are really made on great execution, which is not really about the idea itself. I feel like so many teams have more than enough ideas to make more games than their lifetimes will allow them to do. So for me, it's much more about having the right idea for the team. And to me, great teams will always elevate mediocre ideas and execute. So at Bonfire, we went through a process where we actually had everyone in the company pitch ideas.
00:06:38.090 - 00:07:36.650, Speaker A: And during that phase, I think we ended up with over 35 pitch decks that were all authored by different people. We eventually whittled that down to like a top seven that we spent a little bit more time on. And even from there, it's still unknown which idea that we should actually go develop into a piece of software. And the question I asked the team to really consider was out of all these ideas, which is the one that really this team will create the very best version of? Because you really want the idea that people already either have the skills or experience or the passion. Like if you're going to make a new IP or new art style, then it sure would be great if those artists already drew that sort of art in their spare time. So it's really setting the team up for success. So we picked one and then there's just a lot of what I'd call journey and fellowship.
00:07:36.650 - 00:08:47.140, Speaker A: So what I mean by this is making games is a long trek and every time I've gone on a new game project, I've basically told myself and told the team that the next game that I make is going to be the hardest one that I've ever made. Because you really got to be ready for the journey. And a lot of what you're doing is as much as you're trying to find the game, you're also trying to bring the team together. And when it comes to making games, making games are incredibly hard for a lot of reasons, many of which I've already talked about. But the big thing is there's a bunch of things that people try to optimize with games, and I think I've learned that the creative process doesn't allow for a lot of the optimization that people think they can find. It's like you're going to end up rebuilding the game over three times. And as much as we've tried in the past, like, oh, we can prototype something and this time we'll be able to shorten that time, it never ends up working out.
00:08:47.140 - 00:09:47.938, Speaker A: And one of my engineers finally just said, oh, I just know we're going to rewrite the game three times, but each time we think it's going to be the right one and then it's always going to blow up. And I remember Warcraft Three I think was a really good example of this because when we announced the game, it actually had a totally different camera angle. It was going to be like a squad based tactics strategy game. We'd announced it to the world and then I think six months to a year later, it just wasn't really playing the way we wanted to play it. And we had to make a really big shift, shifted to more of the top down camera that we launched with and went on from there. But it's like every single project I've been on has had at least one big blow up. And the other thing that always happens is at the end of projects, we always do these post mortems and we're always like, okay, this time when we start the next game, we'll follow these other best practices and then we won't make those same mistakes.
00:09:47.938 - 00:10:31.474, Speaker A: But then every game is its own journey. So what I've again, just kind of had to learn is like best practices sometimes even work against you in games. So then it's really about finding the fun. And so much with games and I think energy, entertainment, product is you can't really write down on paper and know what's going to have the emotional response. And fun is exactly like that as well. So what I've really learned is you need to try to get the game stood up so that you can play it as soon as possible. And so much of games is really going to be about fast iteration.
00:10:31.474 - 00:11:42.350, Speaker A: So what I really optimize for is how do you get the game up and playable? How do you get the tools to a state that you can be playing the game every day and making fast iteration changes. With Hearthstone, it worked out really well because we could actually play the game in 2D. We just did a Flash prototype and we're able to play the game from a pretty early stage. And then it was another one of these good examples where we almost had to blow up the project because we needed to take a lot of the devs onto World of Warcraft to finish an expansion. But we left the two designers behind, which could then just play the Flash prototype for the next nine months. But what was really great about it in retrospect was it allowed them nine months where they didn't have to feed the rest of the team features and come up with art or come up with features for the engineers to prototype so they were able to actually find the fun in the game. So I think so much of it is really trying to figure out early in the project, what can we stand up so that we can start getting those iteration loops.
00:11:42.350 - 00:12:47.380, Speaker A: And then inevitably there's going to be a place in the project which I always call merckwood. For those of you that have seen or read the Hobit, you will know that it is the place where the Hobbits got lost in the middle of merckwood and that is the place where projects go to. You know, there's the obvious things which is games get killed because they run out of resources, they don't have the key talent. Maybe the team is dysfunctional. The other reason that I've seen games die is the team doesn't know where to go next. I unfortunately had to kill a fair amount of projects back at Blizzard, and this would be like one of the things I started to look for with teams. If they got to a place where they were starting to ask me the answers and ask me for where they thought they should go next, then that was really a big sign that the team was lost and we probably needed to kill the project and do something else.
00:12:47.380 - 00:13:59.980, Speaker A: But then there's also the optimistic side of that, which is if the team trusts in itself and the team has really good morale and they pivot and they think about where they're going to go next, they'll find their way out of it. And probably the biggest crazy example of this was a MMO project that I was leading at Blizzard called Project Titan. And Titan was a project that we had been working on for six, maybe even seven years, and we believed in it, but we kind of got to our merckwood moment where we had to make a really hard decision and we shut down the project. And then we ended up putting only 20% of the team on it. We deleted like 80% of the code, but during that time frame, we were able to take the part of Titan that was actually pretty fun, and take all the cool IP and concept art and take the greatest hits from all that. And then that's what turned into overwatch, which we're able to ship three years later. So the lesson really always is, as long as the team has high morale and they have belief, there's always a way out.
00:13:59.980 - 00:14:53.740, Speaker A: And what you're really looking for, and this is the important thing, is you really want the team to fall in love with the product. Because once the team falls in love, that's how you know that the game is going to be good. Many times the press would always ask me like, well, how do you know when a game is going to be a hit? And I'd always answer the same way, which is it would be the time where I would have to go to the team and tell the team, hey, you're playing the game too much, you need to stop playing your own game. So I can ship the game. And every game that I've ever shipped has gotten to that point where I've had to give some version of that speech. And every game that I've killed never got to the milestone. The tricky part is you can never put the milestone on the schedule or the plan, but it is the most important one to get to.
00:14:53.740 - 00:15:32.520, Speaker A: So this is how game development often looks. It does not go in a linear way. It's like you'll make progress forward, then in this case, you might have to rewrite the server. You're trying to get tools online. The art style may not may change at some point. And what's kind of happening is creative inspiration comes at different times in the project. And every time I've been on a project, there's always different parts that happen earlier or later than others.
00:15:32.520 - 00:16:40.810, Speaker A: And the other thing that I think is counterintuitive about games is what happens in the home stretch, which is once you get to that point where the team has fallen in love with the game and they know what they're doing, really progress accelerates a lot. And to use world of warcraft as the example, in the last six to nine months, a massive number of features and zones and creatures all came online. These were all things that were added in the beta. And what's important is that if the team loves the game and you haven't burnt out the team and put them on some sort of crunch death march, then you'll be in a place where you'll be able to add so many things and really be responsive at the end. And the other thing you get when the team actually loves the game, they put in all kinds of interesting, fun things. It's like any of you that have seen wow, and you've seen all the crazy dances or all the pop culture references, these are all examples of things that were not in a design document. They weren't part of the vision.
00:16:40.810 - 00:17:55.262, Speaker A: They were all just things that came out of the output for a team that really loved the game that they were making, because they've gone from a place of being a fan of the thing they're making, and they get to do that thing that all fans love to do, which is they get to work on their favorite thing. So by the end of this, it's like, this is kind of, I think, what I've learned the most about games. I know that you can come up with these great thesis and we all want to be really smart and we're going to know what the next thing to do is. But the thing I've probably looked at more than ever now is really think about, well, is the team in level what they're making to use like a hearthstone example? Hearthstone was a game that most people within blizzard and certainly at our corporate overlords at Activision thought was a mistake and thought that we should not be making that game. And there was many attempts to try to kill that game and kill the team. And I also did not necessarily know it was going to be a great game. Hearthstone in retrospect seems obvious, but at the time there wasn't really a big market for online card games.
00:17:55.262 - 00:18:54.760, Speaker A: So it seemed like not a great use of our time. It didn't seem like there was a lot of upside. But the reason that I protected that team and was able to provide cover fire for them was really because I saw that the team had a lot of talent and they were in love with their game and I knew if that was the case, they were going to make something great. So coming back to Bonfire Studios, the way that I really think about Bonfire and I like to talk about what we're really doing is we're not going to make games for everyone. We're going to make a very limited number of games, but we want to make games, create games that we love, and we want to do that with people that we love. And then we want to share it with a community of players, is going to love them as well. And then we want to make sure that anyone that loves our games can feel like they belong and can be a part of our community.
00:18:54.760 - 00:19:06.520, Speaker A: And even the word Bonfire is a metaphor for the games themselves and for the warm and welcoming community that we want to have around them. Thank you.
