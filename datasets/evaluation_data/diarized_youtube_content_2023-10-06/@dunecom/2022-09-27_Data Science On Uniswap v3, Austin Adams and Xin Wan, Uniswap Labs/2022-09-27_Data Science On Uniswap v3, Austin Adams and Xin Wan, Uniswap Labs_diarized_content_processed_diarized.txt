00:00:09.680 - 00:00:34.640, Speaker A: Hi, everyone. Thanks for coming. I was just going to do this sitting down, so it's a bit laid back. So, my name is Shin, and I'm joined here by my colleague Austin here today. We're both researchers at Uniswap Labs. First of all, I want to thank Dune for inviting us. Very happy to be here, and share some of the stuff we do at Uniswap Labs.
00:00:34.640 - 00:01:23.456, Speaker A: And these analyses are actually only possible with the help of Dune. And so give a bit more context on that. The Uniswap protocol is this decentralized exchange protocol and implemented in a set of self executing smart contracts that facilities trading of ERC 20 tokens. On the other hand, there's Uniswap labs, which is a software development studio and a major contributor to the Uniswap protocol. And both Austin and I are employees at the Uniswap labs. Prior to Uniswap, I was a researcher at a quant hedge fund, and before that I was a market maker or trader in the mortgage backed securities derivatives market. Austin, you want to.
00:01:23.528 - 00:01:30.100, Speaker B: Yeah. And before I worked at Uniswap labs, I was a researcher at the Federal Reserve and Economic Research.
00:01:31.760 - 00:02:23.790, Speaker A: Cool. So today we want to provide some information to hopefully help you do data analysis related to the Uniswap protocol. We do a lot of these type of analysis ourselves at the labs, and the presentation contains some of the information we find to be most useful to us. There's three sections to this presentation. The first two sections are going to be just general Uniswap data information, how they're generated, how you can use them for analysis. And in the last section, I'm going to show one example of slightly more involved technique and market analysis. And the specific market phenomenon we're going to analyze is called just in time liquidity.
00:02:23.790 - 00:02:27.426, Speaker A: So with that, I'm going to turn over to Austin here.
00:02:27.578 - 00:03:18.248, Speaker B: Yeah. So first is, what type of data does the protocol generate and how do we ingest it for data analysis? So, first, thankfully, the protocol devs for Uniswap did most of the work for us by providing events. Events are specific logs and values emitted by the EVM contracts. The Uniswap protocol devs actually meticulously crafted these events to really ensure that all the useful data, or most useful data, could be easily found in them. Major uniswap functionality on v two and v three, like mints and burns, collects and swaps, all have events associated with them. The schema is known, and an event is really fired every single time the protocol executes. These codes associated with these functions and events are essentially defined as schema, so they're really easily transformed for data analysis.
00:03:18.248 - 00:04:08.980, Speaker B: And one event always has the same schema, and the variables that it outputs really directly relate to an EVM variable. Before dune, the best way to get events was to constantly listen to a node for updates. You could use an archive node to backfill updates, or you could have to constantly stream from a node, and it's really both slow and requires complex data engineering setup. Events also really need to be decoded using the contract ABI, which requires an extra step, and it's not trivial in SQL at all. But thankfully Dune exists. So Dune updates and decodes events for you. It takes away a lot of the difficulty of working with events and lets data analysts focus on data work instead of complex data engineering that really they're not the best suited for.
00:04:08.980 - 00:05:01.918, Speaker B: And on top of updating and decoding these events, Dune also provides easy to use charting and helper databases like prices, USD and ERC 20 tokens. And with these tables and events, we can really create complex queries to understand and work with on chain data. So here's an example of an event provided by Dune. So this is specifically a swap event on Uniswap V three and the five bips USDC weth pool. And so with this you can see when the event fired, what the block was, what the swap was, how much liquidity it took from the pool, the recipient and the sender, the price of the swap and the tick that the pool ended at. And with this you can really understand what the pool state was before and after the swap. And with these you can create a lot of really complex analysis and understand what changes went on in the the pool itself.
00:05:01.918 - 00:05:51.290, Speaker B: And so if you really want to understand more about these events, you can look at the contract API, the protocol documentation, or even really the contract itself to understand what types of variables were provided. Or alternatively, you can just use a do an abstraction. So further abstractions like Dex tables really helps to join together all the dexs. And with these abstractions we can create increasingly complex queries without worrying about the data engineering that has to go on under the hood. And at labs, we use this Dex trades table frequently, since it includes both Uniswap V two and V three. It also really has a good coverage on the Dex landscape. So we can really focus on this data instead of having to create a new schema for every single time a new Dex launches.
00:05:51.290 - 00:06:38.090, Speaker B: So working with on chain data, first we have a plot of wallet retention on the Uniswap interface. So this chart shows how many users come back a quarter to four quarters after their initial swap. This query exclusively uses the Dex trades table. The y axis is average user retention and the X axis is the quarters after their initial swap. And you can see from this that about 36% of wallets swap again in the next quarter after their initial swap. And like, why does labs care about this data? It's really important to labs because we want to understand how different products and initiatives impact retention on the protocol. Labs really wants to best support growth in the protocol, so we want to make data driven decisions on future initiatives and products.
00:06:38.090 - 00:07:32.030, Speaker B: Here's another chart. It shows volume by token on the Uniswap interface. And just for context, the Uniswap interface is the web app that Uniswap lab maintains for interacting with Uniswap protocol. This chart uses the Dex trades and ERC 20 tokens abstractions on Doom and the X axis is the week and the Y axis is weekly USD volume. And this data is really important to labs because it helps inform future product developments for the Uniswap interface. We want to make sure that we are providing and displaying information and data that's most helpful to our users, and we also really want to understand what types of products our users care about and trade. And finally, we have a breakdown of USD volume by dexs according to the type of tokens that are traded on it.
00:07:32.030 - 00:08:37.520, Speaker B: This uses the Dex trades and the ERC 20 tokens to create labels and determine the volume by token. The y axis shows the volume by the token category and the x axis shows the specific Dex. And here you can see in blue that we thought we USDC pairs really dominant on Uniswap and they take about 60% of the volume. And in contrast, dexs like dodo specialize in USD USD pairs and there is really a really widespread distribution of tokens that are traded on different deXs. And you can see sort of specialization that occurs in other dexs and at labs. We really want to keep track of this competitive Dex landscape and make sure that we understand where other dexs may be specializing in the we also really want to understand what pairs are best supported by the Uniswap protocol and if there are really any protocol improvements that we can make to best support these new token types. And overall, Dune is really amazing for the type of work that we do because it allows us to easily chart and provide complex data sets for our cross functional team.
00:08:37.520 - 00:08:55.360, Speaker B: Shin and I are able to make queries that we can send to engineers and product and growth and strategy to help them make data driven decisions about the interface and future labs products. And Dune allows us to really focus on building these queries and not have to do a lot of engineering.
00:08:57.020 - 00:09:46.130, Speaker A: All right, thanks. So, okay, so now that we have seen some of the general application, let's zoom in on one specific and slightly complicated topic, which is just in time liquidity. This is going to honestly require at least some understanding of Uniswap V three, and also just general knowledge of the financial market. But if I ever lose you, don't worry about it, because we published a blog post last Friday on the blog section of Uniswap Labs website, and you can just read the blog anytime. It has actually more analysis there than what we're covering today. So with that, let me dive in here. What is just in time liquidity.
00:09:46.130 - 00:10:37.510, Speaker A: So, on Uniswap protocol, broadly speaking, there's two groups of people. There's liquidity providers who deposits some capital to facilitate trading. Then there's traders who are liquidity takers. They send in crypto, they're sending one crypto and they take out another. Now, traders pay a fee to the pool for using liquidity, and then that fee gets distributed to liquidity providers, and that's proportional to the liquidity they provided during their time as an LP. Now JIT or just in time liquidity is basically some liquidity that's deposited to specifically service one swap. And what happens is the following.
00:10:37.510 - 00:11:23.544, Speaker A: You have this one trader who submits a usually large swap into the manpool. So now it's like available to be seen by everyone who's watching. And then you have this sophisticated LLP who sees that swap sitting in the manpool waiting to be executed. He takes it out of. Then he creates a bundle in flashbots. In this bundle, he's going to have a liquidity deposit or mint action. Then he's going to have that swap happen right after the mint and goes in the exact same tick that he deposit his liquidity in.
00:11:23.544 - 00:12:02.146, Speaker A: And after that's what happened, he's going to take out his liquidity and everything happens intro block. So from the outsider, you don't see anything. But if you look at this GiF here, we're just replaying the liquidity distribution on the five bps with USDC pool here. And if you watch that pink line in the middle that's flashing in and out. So we're playing this intro block as well. And that line is the amount of liquidity that's being deposited and burnt intrablock. So this is two scales.
00:12:02.146 - 00:13:09.162, Speaker A: You can see how much that liquidity is compared to the rest of the pool, and that's because it's very, very concentrated. So it's got a lot of effective leverage here. Now, why do we care about adjusting time liquidity? It's actually something we anticipated when we were designing Uniswap V three, but we weren't sure how prevalent this phenomenon is going to be. And it just tells us a lot about the price improvement implications for traders, because just in time liquidity actually gives trader a better price. It tells us the dynamic, the competition competitive dynamic between LP's, and then it also tells us just the level of sophistication overall of participants in the Uniswap protocol. So we want to monitor this to guide future protocol developments. Ok, so a quick question we can ask is, well, how prevalent is it? Right? There actually has been some controversy on Twitter.
00:13:09.162 - 00:13:57.160, Speaker A: I don't know if people are following, but some people are saying, oh, it's going to destroy dynamic for LP's. That's not what we found. So overall, we found very, very little amount of JIt in terms of absolute volume. So in this chart, the x axis is date and y axis is USD volume of JIT liquidity supplied. And on average, or in most days, it's actually less than a million dollars. For reference, the Uniswap protocol supports about a billion dollar of trading on an average day. So that's like about ten basis points or one 10th of a percent of the total volume going against just in time liquidity.
00:13:57.160 - 00:14:57.188, Speaker A: And because fees are distributed proportional to liquidity supplies, overall, there's about 0.1 to 0.2% of overall fees going to just in time liquidity providers and barely matters for the other LP's. On the flip side, when just in time liquidity is happening, it tends to be extremely concentrated and so on. Uniswap V three, you can choose to concentrate your capital in a narrow range and then you effectively provide more liquidity within the range. But the downside is when you're out of the range, when price move out of your range, you're no longer providing any liquidity and you're no longer earning any fees. Now for just in time liquidity, that's not an issue because you know exactly what that swap will happen at, right? It's literally one swap at one point in time.
00:14:57.188 - 00:16:22.010, Speaker A: So the just in time liquidity provider can literally concentrate all their liquidity in one tick and get like 1000 x or even more leverage on their liquidity. And so what happens is, for these swaps, the adjusting time liquidity is usually their major counterparty. So if you look at this chart, the x axis is date again, but the y axis is the percent of a swap going against just in time liquidity. So each dot here represents one swap that was using just in time liquidity as its counterparty. And you see that all these dots are kind of clustered at the top of the graph, and a lot of them are very close to 100%. Meaning when you have just in time liquidity, it tends to take a majority of that swap as its counterparty. So if you just combine this graph and the last one, what it tells us is you have this jit thing that takes on more than 50% of a swap when it happens, but overall, it's like less than 1% or maybe one 10th of a percent.
00:16:22.010 - 00:17:24.870, Speaker A: That just means this thing happens extremely rarely over time. And that actually makes sense, because if you read our blog post, we theoretically derived a set of conditions that the swap has to satisfy in order for it to be optimal for the JIT LP to do the JIT. Because usually these sophisticated players, they have access to other forms of arbitrage or other type of ways of making money. And so it's rarely optimal for them to do this. But when they do this, they provide really good execution for the trader, because essentially, your price impact is limited within that tick. Okay, so everything that I just talked about about JIT is produced by one single query on doom. And that's for free.
00:17:24.870 - 00:18:08.614, Speaker A: There's only about 300 lines of code. And if you just look at the screenshots of code that I included here, it's very wasteful of space. There's lines with just select. And then star is another line from is another line. It uses a couple of tables, Uniswap V, three NFT positions, as well as some other abstract contract that Austin just covered. So I just really want to use this opportunity to demonstrate that Dune is an incredibly convenient tool that allows you to do interesting and involved analysis like this one, and an open source fashion for free. And we're just very excited to keep using Dune for more fun stuff like this.
00:18:08.614 - 00:18:28.090, Speaker A: And we hope you join us on this journey of on chain discovery. So if you want more fun analysis like the JIT one, check out our blog. Follow us on Twitter. And with that, I'd like to conclude the presentation. Thanks again to Dune for inviting us, and thank you all for your time.
00:18:45.360 - 00:18:47.528, Speaker B: You can ask any question you have, guys, now.
00:18:47.584 - 00:18:47.832, Speaker C: Sorry.
00:18:47.856 - 00:18:48.460, Speaker B: Yeah.
00:19:00.680 - 00:19:25.790, Speaker D: Yeah. Thanks for talking about Jit. It was like really awesome. So did you try to dig one layer beyond the JIT, beyond the simple liquid provisioning, to see where the capital was coming from? I'm going to do that if you tell me you didn't do it. So is it like flash loans? Is it like, what is it? Is it like borrowing from protocols? Or is it like spot treasury? Where's the capital coming from to provide the liquidity?
00:19:27.170 - 00:19:43.632, Speaker A: You actually cannot use flash loan for JIt because there's three transactions at least, there's mint swap burn, and so the flash needs to be repaid within one transaction. So that's not going to work.
00:19:43.696 - 00:19:54.740, Speaker B: And from our analysis, very few of them are actually borrowing. A lot of the earlier jits would borrow from like AAVE or compound, but the later ones are doing it from a book, usually.
00:19:55.720 - 00:19:56.780, Speaker D: Cool, thanks.
00:20:06.770 - 00:20:41.580, Speaker C: Yeah, so great talk. Just a comment that maybe a more relevant analysis would be also to analyze the p and l of the LP's and not only the fees, because I'm guessing that a lot of the just in time liquidity also come with a bigger profit. I'm sorry, I'm guessing that a lot of the just in time liquidity also come when the profit is higher. So just analyzing the fees and not the p and l might be only partial picture because the percentage of in the p and l might be much higher.
00:20:42.760 - 00:20:54.120, Speaker A: So you mean instead of just looking at the fee earned by just in time liquidity provider, you're also looking at the position that they take by being the counterparty of the.
00:20:54.200 - 00:20:54.488, Speaker B: Yeah, yeah.
00:20:54.504 - 00:21:01.376, Speaker C: Because maybe they still like half a bips or whatever, or half a percent, maybe, I don't know, like behind the order book.
00:21:01.568 - 00:21:15.840, Speaker A: Right. So that's part of the analysis you can read about in the blog because, you know, once it's large enough, there's multiple ways you can take advantage of the price difference. And it's not always optimal to do Jit, right? You can, you can just swap it if you want.
00:21:15.920 - 00:21:23.958, Speaker C: Yeah, yeah. I'm just saying that in general, the p and L might be much bigger than the fees and also the percentage in the total p and L. Right.
00:21:24.014 - 00:22:00.548, Speaker A: But P and L comes from somewhere. And the reason that you have that p and L, sometimes due to price difference between different liquidity venues. And when you have that difference, it's not always optimal to do JIt. And these players, they are usually rational and they're able to figure out what's the optimal way. So when you see Jitz, it's usually when it's optimal to do JIt and so it usually means you don't have a very easy way to get that. You can't just swap in and out and just collect the price difference is what I'm trying to say.
00:22:00.644 - 00:22:00.852, Speaker C: Yeah.
00:22:00.876 - 00:22:16.120, Speaker B: In the blog we showed that it's about two times the fee tier of the pool is the maximum p and L that you gain via Jit. Otherwise it's more efficient to backrun it than provide a JIT, which is like ten bits usually for USDC, with five bits of.
00:22:17.650 - 00:22:18.550, Speaker C: Thank you.
00:22:20.490 - 00:22:44.110, Speaker E: Yeah, thanks. Great talk. Do you foresee in the future that JIt could potentially harm normal liquidity providers? In a way. I mean, strategically, looking into the future with MeV boost and maybe something like build up, proposal separation, all that stuff, do you see a future where like this professional JiT industry potentially could harm normal liquidity providers?
00:22:44.530 - 00:22:45.594, Speaker A: You want to take that?
00:22:45.722 - 00:23:12.360, Speaker B: Yeah, I think that from what we found, JIt is like an extremely. It's optimal in a very, extremely small set of circumstances. Usually swaps have more than ten bits of slippage on v three. And so I don't really know if we can foresee the future, but I think we have to remember that Jit is such an extremely, has a very small range of optimality as a strategy.
00:23:12.820 - 00:23:32.360, Speaker A: And one other thing I just want to add is we actually look at the time series of Jits from when it's possible, basically from deployment of v three to now. And it's not a growing trend at all. If anything, it's actually coming down a little bit. So. Yeah, I just don't see it growing exponentially.
00:23:46.230 - 00:23:46.974, Speaker C: Sure. Yeah.
00:23:47.062 - 00:23:50.010, Speaker A: If you want, whoever wants to, you can go first.
00:23:55.430 - 00:24:14.160, Speaker D: I mean, it's like so fascinating. So what about reverse Jit? If you're already providing liquidity in a huge pool and you know the swap is coming to and you basically pull out the liquidity and just readjust it and put it back to be able to, let's say, encourage maximum slippage. Is that even a strategy that's contemplated? Well, can be contemplated.
00:24:15.860 - 00:24:19.560, Speaker A: Sorry. So the hypothetical strategy is you are.
00:24:19.860 - 00:24:32.990, Speaker D: Like in the JIT case, basically you come to provide the liquidity in the reverse JIT. Basically, you know, the trade is coming, but you just like remove it and just place it somewhere else to be able to cause maximum slippage.
00:24:34.250 - 00:25:06.958, Speaker B: Yeah, I think gas costs on that would be so expensive that it probably wouldn't be worth it. Because another thing we don't talk about in this is you have to hedge off chain and that's usually on FTX or Coinbase, and it's like a ten bps fee, like a seven bps fee. And so it's pretty. I think if you had to pull and then re put a swap back, or you had to burn then mint and then burn again and then mint again, that's extremely expensive, gas wise. And the P and L on a Jit is already really small. So I think that would just eat into it significantly, I guess. Is that your question?
00:25:07.094 - 00:25:14.850, Speaker D: Yeah, I was talking for, let's call it a low liquidity pool, where you can actually encourage maximum slippage by removing the liquidity and replace it somewhere else.
00:25:15.710 - 00:25:26.156, Speaker A: But if you just don't have liquidity in the first place, isn't that the same? Like, why would you put liquidity in there and then pull it out when people are trading?
00:25:26.278 - 00:25:30.580, Speaker D: Because you're doing a mix of, like, opportunistic fee maximization.
00:25:31.720 - 00:25:43.272, Speaker A: So you're saying I put in liquidity so that people think there's liquidity, and then when they trade, I take it out, and then you buy something when they cause a lot of impact.
00:25:43.416 - 00:25:46.000, Speaker D: Anyways, it's a long conversation. We can just continue.
00:25:46.080 - 00:25:47.980, Speaker A: Okay. Yeah, we can talk offline for sure.
00:25:49.120 - 00:25:50.260, Speaker C: Final question.
00:25:54.530 - 00:26:39.892, Speaker A: So I guess in this blog, you've kind of established that Jit isn't too big of a worry to be concerned with. What's next for you guys? Do you have any areas that you're looking into or things you're concerned about now? I mean, there's. We're constantly thinking about how to make the market more efficient, how to make it more fair and more accessible. I don't know, to be honest, how much I can share about the product in development. But we do a lot of this empirical economics analysis. That's what Austin and I was doing prior to this job. So if you follow our blogs, you would see something coming along in the next month or two.
00:26:39.996 - 00:26:43.740, Speaker B: Something like this leaky alpha, you know, gotta keep that.
00:26:46.480 - 00:26:54.560, Speaker C: And with that question, let's give a great round of applause to Austin and I.
