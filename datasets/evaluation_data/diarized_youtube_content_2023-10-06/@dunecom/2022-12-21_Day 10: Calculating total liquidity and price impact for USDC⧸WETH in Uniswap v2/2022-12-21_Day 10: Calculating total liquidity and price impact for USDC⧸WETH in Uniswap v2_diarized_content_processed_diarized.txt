00:00:00.800 - 00:00:18.250, Speaker A: Welcome back to day ten of our program where we're using all ten of our fingers today, so stay tuned for what happens tomorrow. So for today we're going to look at what is the total liquidity of the pair and the slippage. And without further ado, I will hand it over to Andrew.
00:00:19.310 - 00:00:52.880, Speaker B: Oh, query ten. So today we're finally getting into the concept of slippage, which I'm sure you've probably heard the terminal thrown around. So let me just walk you through this. So we're going to start by taking reserves. This is the same thing we did over here, but instead of just taking the last or the most recent reserves update, we're going to get all of the reserve updates. And what else we need is we need the swap price which we can calculate from reserves. And then we want to simulate a swap both ways.
00:00:52.880 - 00:01:46.722, Speaker B: So that's going to be simulating 1000 USDC swapped and simulating two eth swapped. Let's do 2000 USD. So when you simulate a swap, you're basically saying, okay, I have some x in and a quoted y out, but the price moves along the curve, xy equals k before the swap occurs. So y out will always be less than quoted. This difference between actual and quoted is the slippage as a percent. To get this, we're going to have to figure out slippage formula that accounts for the 0.03% fee which I will show later on.
00:01:46.722 - 00:02:26.536, Speaker B: And ultimately, ultimately we'll end up with a time series of daily slippage. Cool. So let's save this day ten total reserves and slippage over time for USDC. We've, and with this we can get started with the query. So first thing first, let's look at yesterday's query and let's take the reserve data. Right, I'm going to take this portion here. We're going to use a CTE that we're just going to call reserves as yada.
00:02:26.536 - 00:03:26.160, Speaker B: I don't want all pairs, I only want our USDC pair. Right? So that's where contract address equals pair address, which we can go and find from one of our previous queries. Let's go here, copy paste this over. Okay, so we don't want this row number thing. We just care about the reserves over time. Let's start by truncating the date to, let's say day. All right? And what we can do on top of this is say, select all from reserves and we want the median reserve, let's say.
00:03:26.160 - 00:03:56.780, Speaker B: Actually, you know what, let's do this as the last reserve of each day. So we are going to keep the row number and we're going to partition by pair and we're going to order it by. Let's do this. Descending. Actually we're going to partition by pair and also by the day. And then we're going to order by the block. Time descending as last.
00:03:56.780 - 00:04:31.028, Speaker B: Now we're going to select from here where last sink equals one. So we want the last sink of every day. Let's run this and see what we get. Okay, so we have our results here and let's just see if this looks right. So this is reserve zero over time. This looks fairly correct. And if we wanted to see reserve one over time, obviously we have to remove reserve zero.
00:04:31.028 - 00:05:21.378, Speaker B: All right, this looks good enough. I'm not seeing any random spikes in the data, so I'm comfortable with this. So now let's also put in our simulated amounts. So that's going to be 1000 as amount zero simulated. And that's going to be two as amount one simulated where we know that token one is we and that token zero is USDC. If you're wondering how I know this, I can just go to etherscan, plug in, contract, go to contract, go to the read function and look at token zero and token one. And I recognize that this address is USDC and that this address is weth.
00:05:21.378 - 00:06:19.746, Speaker B: Right. We know this, have the amount simulated in here and I am going to move this in here. Excuse the fact that I have unconsistent capitalization. Alright, so we have reserves. Now let us figure out the slippage. So for slippage we're going to have the day. We're still going to keep token zero and token one.
00:06:19.746 - 00:07:08.980, Speaker B: Basically all of these columns up here, right? So token zero, oops. Token zero address token zero symbol. Token token one address token one, SIm symbol. We're going to have our reserve zero of the day, our reserve one of the day. And then we have our amount zero simulated amount one simulator. Alright, now let's add our new columns. So let me add a select and from reserves.
00:07:08.980 - 00:08:06.540, Speaker B: Right. So we're going to say, all right, how do we figure out what the slippage is based off of how much is going in? Did a bunch of googling around. There's a bunch of derivations for this. So I would say that a good example for understanding the slippage in general is if you go to YouTube and search up this video. Lisa does a great explanation on amm math, but our simulations are a little more complicated because we want to capture the fee as well. So I'm going to use this formula that someone has nicely derived in this GitHub Dunjay Park Dayjunpark excuse me. So we're going to copy this in, right? It looks like it's the fee times our input, right? So we have phi times our input, which would be the amount zero simulated.
00:08:06.540 - 00:09:06.970, Speaker B: And then we have the reserve of eth. So that's reserve one. And I'm dividing that by the USDC reserve, which is amount or reserve zero plus the total minus the fee of the input again. Alright, so let me just add parentheses around everything here so that it is consistent. And this is going to be as output simulated trading from token zero to one. Right. This is how much you're actually going to get when swapping token one to token zero or token zero to token one.
00:09:06.970 - 00:10:00.880, Speaker B: I'm going to take the same thing here and just reverse the ones and zeros. And then this is swapping from token one to token zero. Obviously we want to get the quoted prices as well. So what we can do is we can take amount zero simulated and multiply it by the reserve price of one. So how much you're getting out for, how much you're putting in. Basically that's just how exchange works, as quoted zero to one. And let's change this to output supposed, just so the naming is consistent, supposed one to zero.
00:10:00.880 - 00:10:35.212, Speaker B: And I'm going to change this to one. And now this. I'm seeing how much I get out of zero for every one. Alright, so this is our outputs. Something that would be nice just to sanity check things is I'm going to join on prices USD and we're going to have that join on blockchain equals Ethereum and minute equals day. And also we want that the contract address of the price is equal to the token zero address. So we actually need this twice.
00:10:35.212 - 00:11:20.870, Speaker B: So I'm going to alias things here. Why do we need it twice? We need the prices for both token zero and token one at this time, just so we can have a good comparison to see if we have errors somewhere. And this would be on the token one address. And so let's just place this in here. We have p zero, price as price zero, and p one price as price one. Let's select all from this. All right, it ran moment of truth.
00:11:20.870 - 00:12:22.394, Speaker B: Let's see, we have our prices of our tokens, the output supposed, and then the output simulated, so it looks like the outputs are very close. So that means we didn't completely screw up. Now the price is price per token. So what we want here is 0.0997 or 0.997 times 1000, which gives us 999, right is the price of what's going in. Okay, so if we want to check the prices against the actual, something we should actually do is amount zero simulated multiplied by p one price divided by p zero price as prices supposed zero to one.
00:12:22.394 - 00:12:59.840, Speaker B: And I realized I spelled supposed wrong here. And let's just do this for the other way around as well so we can compare things more accurately. And what I'm also going to do is just to make this run faster, we're going to do where block time is greater than now minus interval. Let's just say six months or six might be too short. Let's say ten months and let's run again month, not months. All right, our query has run. Let's see if this matches up.
00:12:59.840 - 00:13:54.994, Speaker B: I have clearly mixed up the prices here. Or is it, this should be the zero price on top. So for amount out we should have gotten, let's see, we're simulating 2000 or 1000, right? So it should be 1000 times 1263 divided by one would have been price one over. So we want the other way, which gives us the supposed is 0.79. The token quoted Washington 0.78. The simulated is 0.782. You can see that this is already confusing to compare, so let's just reorganize things so that it is less confusing to compare.
00:13:54.994 - 00:14:31.158, Speaker B: And we will run it one more time. Okay, cool. So we have it again. Let's just compare this in a line chart at this point where we have the prices supposed, the output supposed, and then the output simulated, you can see they almost match up exactly. But every single day there's a little bit of a difference, right? So that kind of tells you like, okay, for the actual price on like a centralized exchange you would get 0.81 ETH out for 1000 USD. The quote you would have gotten on Uniswap is 0.804
00:14:31.158 - 00:15:03.600, Speaker B: and after slippage you would have gotten 0.802. So we have a few more steps before we're done. We're going to want to parameterize the simulated amounts and we want to be able to get percentage slippage. So we're going to finish those two and then we're done with today's query. All right, let's finish this off. So here we hard coded it. I'm going to put this as amount zero simulation.
00:15:03.600 - 00:15:41.606, Speaker B: We're going to put quotes around it and then we're also going to do amount one simulation or amount zero. Since this is USDC, we're sticking with 1000. For this one we're going to to change this to number. This one is just going to be two because this is eth. Let's make sure this is a number. All right. And so we have this.
00:15:41.606 - 00:16:38.850, Speaker B: Lastly we do percentages. So percentage slippage as. And in this case we want everything from slippage base except now let's take speed all. We also want the output, simulated over output supposed, right. As slippage one 20. So this is telling us out of the expected amount we were supposed to receive how much did we actually get? Right. And it's always going to be a lower percent.
00:16:38.850 - 00:17:15.870, Speaker B: You can't get more than you're quoted. So let's change these. Right. So this is going to give us like 99% or 98%. So we need to do a one minus here to give us the actual slippage amounts. So we're going to select from this and we should be done. Cannot apply var car.
00:17:15.870 - 00:17:59.350, Speaker B: Let's see. I think this is thinking it's a num text so let's remove those. Okay, so our query has run and it looks like this still is correct. I'm just going to call this as this is going to be prices. What did I do here? Prices. Zero to one comparison. And we're just going to make this like five decimals.
00:17:59.350 - 00:18:51.548, Speaker B: Right. So you can kind of see the differences. If we look at our query results we should now see there is kind of a slippage percentage here, right. So what we can do is we can now figure out what the slippages are. So in our case this is percent percentage slippage for slippage. For given simulated amounts. Alright.
00:18:51.548 - 00:19:26.588, Speaker B: So we can see, all right. Slippage is pretty low for what we're assimilating over time. It's like 0.3% on each trade. It looks like it's gone up marginally. So I need a few more decimals here just to see what's going on. Yeah, it looks like it's been going up very, very slightly over the last eight months or so by like 0.002%
00:19:26.588 - 00:19:54.374, Speaker B: has been the increase in slippage. Now obviously slippage is going to look different for the pairs based off of what you put here. It's always going to depend on that. Let's also make a visualization for the reserves. Just so we have it, total reserves and we have reserve zero. Reserve one. Let's enable a right axes.
00:19:54.374 - 00:20:12.030, Speaker B: Put reserve one on the right axes and say reserve one notional. Reserve zero. Notional zero a 0.00 a. Zero a 0.00 a. And cool.
00:20:12.030 - 00:20:34.194, Speaker B: We can see the reserves of each token over time. Obviously, when one reserve dips and the other increases, that's because the price of wheat is changing. So naturally the reserves are going to change to reflect the prices because of the swaps. So with that, we are done with day ten.
00:20:34.322 - 00:20:54.980, Speaker A: Thank you, Andrew, for that amazing walkthrough. I definitely learned a lot about slippage in this query walkthrough. So for Boydman's point, try to think about a smarter way of figuring out simulated swap amounts. So you could use one, two and three standard deviations from the average that Andrew used in the query and simulate all three of those.
