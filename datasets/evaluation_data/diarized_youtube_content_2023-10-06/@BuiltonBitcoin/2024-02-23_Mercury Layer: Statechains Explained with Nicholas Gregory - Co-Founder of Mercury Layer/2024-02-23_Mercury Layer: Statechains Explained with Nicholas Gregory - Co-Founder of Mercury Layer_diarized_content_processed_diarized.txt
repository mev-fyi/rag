00:00:00.410 - 00:00:02.318, Speaker A: Nick, how are you doing, my man?
00:00:02.484 - 00:00:04.880, Speaker B: I'm good. Thanks for inviting us to your show.
00:00:05.570 - 00:00:31.238, Speaker A: Absolutely good to have you. Excited to talk about what you guys are working on, because mercury layer sounds interesting. I keep hearing from people I trust that state chains are a powerful primitive for scaling bitcoin. But whenever I try and read some articles, I quickly go into, like, I don't. This is too heavy. I don't understand it. And so if I'm feeling that way, I think a lot of people are like, it's too early.
00:00:31.238 - 00:00:59.866, Speaker A: It's too in the weeds. It does seem like you guys are kind of at the bleeding edge too, of like, whatever a state chain is. Mercury layer is currently the bleeding edge of that tech. So a lot to cover. Very excited to chat with you about all these topics. And as bitcoin rabbit holes go, we'll probably go into some la la land at some point. But just to kind of start, I'd love to get, like, a brief background of you and how you got into bitcoin.
00:01:00.058 - 00:01:26.098, Speaker B: Sure. So I'm a software engineer by trade. I was from college. I was programming c plus plus Java, weird stuff like Eiffel, Python. And I was living in the US, actually, at the time, working for banks in New York. And I think some guy randomly at the gym mentioned that you could run a bitcoin miner at home and make money. Now, fortunately, this was 212 213.
00:01:26.098 - 00:01:51.790, Speaker B: You couldn't just run it anymore. You had to have a quite sophisticated setup. But it was pretty cool to. When I searched on the Internet, there were these guys in their basement with all these GPU graphics cards and heating extractions. And then slowly I got into it that, I mean, I was already working for banks. I was a bit confused by 2008 how the banks went socialist and got free money from the government. I kind of was looking at gold.
00:01:51.790 - 00:02:19.530, Speaker B: I wouldn't say I was a gold bug, but I was a bit interested in gold. And then when I saw bitcoin, it felt natural. It was kind of interesting. And there was a good meetup scene in New York as well, which helped. I think if I was in a town that didn't have a good meetup scene, I don't know if I'd have stuck with it. But that kind of helped me get me into it. And from there, I think around 2016 17, I started working in it full time, founded Commerce block, and been doing that ever since.
00:02:19.530 - 00:02:41.738, Speaker B: Originally, commerce block was building bitcoin side chains. We pivoted because that didn't really take off. Around 2019 20 to other L2s. Yeah. Ruben Samson wrote the paper state chains, and we decided to give it a go. I guess we're very different from what Ruben wrote. We originally called it mercury Wallet, and then we pivoted again to mercury layer.
00:02:41.738 - 00:02:52.580, Speaker B: And there's a few reasons why. And yeah, that's where we are. Hopefully mercury layer will be live in days, maybe weeks, but there's not going to be any code change. It's pretty stable now.
00:02:53.190 - 00:03:23.390, Speaker A: Okay, very exciting time then. Well, I think that's probably a pretty good segue. Then just jump right in, because I'm sure there's going to be a lot to cover as far as, like, the edge cases. It sounds like you've been focused on scaling for quite a bit of time. And we've seen lightning has been a darling for a while, since 2016. 2017 as the payments lightning, the payment scaling solution. And now we're seeing with high fees, you have a lot of problems when it comes to channel management.
00:03:23.390 - 00:03:45.950, Speaker A: So maybe first, if you could help us understand what is state chains in the kind of landscape of the scaling solutions that people kind of understand. So help us block it with things like a side chain, like liquid and lightning and some of the other things so we can kind of put it on a landscape.
00:03:46.110 - 00:04:04.042, Speaker B: Yeah. So I think to start off with, I don't think there is clearly there's not one scaling solution. So it's not in competition. Definitely not in competition with lightning side chains. I mean, that's a different one. I've worked in side chains. I can go into that, but at its easiest level.
00:04:04.042 - 00:04:06.170, Speaker B: Are you familiar with open dimes?
00:04:08.430 - 00:04:10.860, Speaker A: Roughly? Yeah, exactly.
00:04:11.550 - 00:04:33.874, Speaker B: Open dimes is a USB stick. I don't exactly remember the whole operation, but you can put some bitcoin on there and then basically you can give it around to people. That is a scaling solution. That's a L2. But what are you giving? You're not giving the bitcoin, you're giving the private key. And anyone who takes that private key can crack it open, extract the money. Essentially, that's what a state chain is.
00:04:33.874 - 00:05:03.070, Speaker B: It's a virtual open dime. So you create a state chain, and there's a lot of funky cryptography and stuff in the background to doing that. And then once you've created it, you can deposit some funds, whatever you want. Could be one bitcoin, 0.1 bitcoin. And at that point afterwards, you can send it around virtually, and again, there's some funky behavior there to send it, but from the user's point of view, you're just sending it around now, it doesn't last forever. We time lock it for a year and there's a few reasons.
00:05:03.070 - 00:05:26.610, Speaker B: And you don't necessarily get a full year. Every time you move it, it decrements by 8 hours. And this is part of the whole security model. But essentially it works like an open dime. Now, what are the limitations? Well, you can only move around what's on that state coin. So if you've got 0.1245 BTC on it, that's all you can move around.
00:05:26.610 - 00:05:49.610, Speaker B: So it's not like lightning where you can send whatever you want. Where you choose the digits, it's fixed. So there are limitations there. But what's better than lightning is you're just sending this bitcoin around. There's no inbound liquidity, there's no capital locked up in lightning nodes. And that's probably the key difference. So I'd say it complements lightning somehow.
00:05:49.610 - 00:06:08.562, Speaker B: Look, as a company, we are working to integrate it into lightning. There's a lot of challenges there may work, may not, but I hope that explains it. Simply. It's just a way of moving private keys around, which as you can imagine, that breaks some of the rules of bitcoin. Not your keys, not your coin. You shouldn't be doing that. So that was the cool thing about it.
00:06:08.562 - 00:06:13.300, Speaker B: But I mean that's what opendimes does. You've basically got a private key there that you're giving around.
00:06:13.990 - 00:06:40.026, Speaker A: And if I remember correctly, the open dime is the one where it's a USB stick as you mentioned. And there's some kind of mechanism where you break something or poke something and that closes a circuit to reveal the private key. So are open dimes one time use or could you use them, spend them, pass it on again? Use them, spend them. Or they just, like. They use it once you spend.
00:06:40.208 - 00:07:05.154, Speaker B: Yeah, yeah, use it once, spend, it's dead. And I guess mercury is like that. I mean, open dimes is ultimately unlimited, of course. Meaning you could sit in a pub and bar and give it to each other a thousand times over ten years. Nothing changes there. There are limitations of mercury there. But yeah, once you break the open dime, you basically reveal the private key and then you can use that to give the money to yourself.
00:07:05.154 - 00:07:11.320, Speaker B: And I guess state chains is like that. Once you pull back on chains in October, the state chain is gone.
00:07:11.770 - 00:07:25.002, Speaker A: Got it. Okay. Yeah. So it sounds like in the way that people would use an open dime is it's kind of like an IOU. You can verify that there's money on that open dime by checking the public.
00:07:25.056 - 00:07:33.374, Speaker B: Keyme and I and you, it's a bearer asset, which is one of the cool things about it, because the bitcoin is on there. It's true.
00:07:33.492 - 00:08:05.030, Speaker A: So the friction point is that I do have a claim to the bitcoin, but we're in this kind of, like, off chain, person to person network of. We know for sure there's $20 in bitcoin on this. So instead of cash appping you $20 or whatever, I'm just going to give you this open dime. You can confirm it has $20, and then you can hold it and go on chain if you want to, and you lose some transaction fees, or we can keep passing it around, and we continuously know that we have $20 from that barrier asset when we want to pop it.
00:08:05.180 - 00:08:07.560, Speaker B: Yeah, got it.
00:08:08.490 - 00:08:34.142, Speaker A: Okay. Yeah. Because that's one of the things when it comes to off chain that people. Everyone wants to do things on chain. So it's verifiable, and you get all these security benefits versus an open dime is like, I guess you're susceptible to like a wrench attack or if you lose it, just like a hardware wallet. So there's that. But you mentioned it's time locked for a year.
00:08:34.142 - 00:08:57.270, Speaker A: And there's something about, I think one thing that people understand kind of well, is lightning. And this bar tab analogy, which is kind of similar, I guess, where it's like once you go on chain, you can route it a bunch of times, and it's not till you close your tab that things settle and they go onto main chain. Does that analogy still roughly hold in state chains?
00:08:59.770 - 00:09:26.066, Speaker B: Well, with state chains, there's no liquidity. I mean, if I want to send you a state chain, all you need is a state chain address that you don't need any inbound liquidity. That's kind of not my problem. My problem is creating the state coin, putting money on there and then sending it around you as the receiver. You just don't give a shit. I mean, you get stake coin, you can crack it open and pull it to chain, or you can give it to someone else if there's enough time. So it's a simpler use case like that.
00:09:26.066 - 00:09:54.806, Speaker B: It's a simpler flow in that way, because you as the receiver wouldn't have to worry about inbound liquidity. I think lightning, obviously, you have to be online as well. State points in that way. Yeah, it's in a weird way. It's like opposite of everything lightning is. But its limitations are what the strengths of lightning. What's lightning good for lightning if it works noncustodially, which is a challenge.
00:09:54.806 - 00:10:10.046, Speaker B: We all know it's great for micro payments. I can send you whatever I want. I could pay you right now something. It's cool. But I mean, it's all the operational stuff around it. With lightning, that's kind of clunky lightning. And mercury doesn't have that.
00:10:10.046 - 00:10:14.000, Speaker B: Mercury is just like giving open dimes around or bars of gold around some.
00:10:14.390 - 00:10:52.986, Speaker A: I see. Okay then on that topic then, because if we have the kind of like lightning analogy where you can move the bar time around, but it has certain what we call liveness issues, inbound liquidity issues. So it's like connecting to that peer somewhere globally distributed is a tricky endeavor currently. And I can pass it to you, but I have to be in your physical location or send it via mail. That's like the delivery mechanism that solves kind of like the liveness issue that lightning has. Since this is all virtual, how do you get private keys, in this case securely to the people in a state chain environment?
00:10:53.178 - 00:11:18.858, Speaker B: Yes. So the technology that we use, essentially I'll go through how it works and hopefully that explains it. The process is you come to our server, which is what we call a blinded server. So it doesn't know what the hell it's doing, which is part of the trick. And you don't buy a stake coin off us. How do you explain you basically buy a mercury layer session for example. We'll call it a session.
00:11:18.858 - 00:11:42.006, Speaker B: I don't know what we call it but you basically come in, you deposit some lightning or main chain and now you've got this blinded server session for one year. And now you with our server and your private key. And on our back end we've got a private key. You can create a bitcoin address which you create on your wallet. We don't see it. We have no idea what you're doing it. We're a blinded server.
00:11:42.006 - 00:11:55.318, Speaker B: We could be signing my mother's shopping list or whatever. So you create this bitcoin address. You now deposit money again. We don't see it. We don't even know if you've done it. And then that's it. You've got, let's call it a stake coin.
00:11:55.318 - 00:12:22.700, Speaker B: It's yours. It's on a bitcoin address that you own and we know nothing. Now as you move it around you have to cooperate with us. But when I say cooperate with us, all you're doing is asking us for a blinded signature and blinded is the key word we don't know what we're signing. You tell us, please sign this. We sign it, and that's it. Now, if you wake up one day and mercury layer is gone, I'm gone.
00:12:22.700 - 00:12:54.594, Speaker B: You do always have this thing called a backout transaction that allows you to pull the funds off chain on chain. Sorry. And that's the security model that's kind of baked it. Now, hopefully we never go away, and we may not be there for perfectly good reasons. The Internet is down or the server that we are running is slow for an afternoon. That could happen. So that mechanism allows you to always claim your funds and you have to work with us to move your funds, but we don't know what you're doing.
00:12:54.594 - 00:13:07.046, Speaker B: So we like to say we're permissionless. It's not permissionless because we have to be up, but we don't know what we're doing. So there's no censorship in that sense. And then that's how it works. That's the lifecycle of it.
00:13:07.228 - 00:13:19.002, Speaker A: Okay. I'm drawing a diagram here to kind of piece it in my head, and I have some follow up questions. One thing to make sure. Are you calling it a state coin once I peg in? I'm not sure if pegging is the right term here.
00:13:19.056 - 00:13:37.806, Speaker B: Yeah, we used to call it a state coin because that was what we've written in the software. But, I mean, we don't see anything. We have no idea what you're doing. From our point of view, we're a blinded signer. It's very simple in our point of view. I mean, look, it's complicated cryptography, I.
00:13:37.828 - 00:14:13.806, Speaker A: Was going to say. So the way that people can understand this and you could tell me if I'm wrong, is that in a lightning environment, it's peer to peer by nature. So, like, I can only connect to nick if we have a channel together or a route to each other and we both got to be online, et cetera, with this. What you're saying is a blinded server, which kind of acts like an operator, but because of the way it's written, it's very cryptographically secure. And you have no. You're doing. It's just checking against the cryptography, signing things when it needs to.
00:14:13.806 - 00:14:30.274, Speaker A: And so you are working as a user. It's kind of like a very robust black box that can watch things and send them. But you peg in BTC, then you get this representation of the state coin that equals that same one to one peg, if you.
00:14:30.472 - 00:15:00.330, Speaker B: Yeah. So, yeah, there's a few things there. So it is centralized. I mean, look, there could be a mesh of murky letter nodes in the mean everything we've done is open source, but we're not responsible for that. So if people were serious about it, we have an open telegram group. I think we've dockerized the server so people could run it. But until that happens, but even if we did build, even if people started to run their own mercury layers, they wouldn't be fungible.
00:15:00.330 - 00:15:24.930, Speaker B: You would only be able to work with the server that you originally created one from. And that's one challenge. Like every L2, the trust is not perfect. As you know, in lightning, there are pending attacks and stuff like that. There are attack vectors. That's why you have punishment transactions with mercury layer. You have to trust us to behave honestly.
00:15:24.930 - 00:16:19.910, Speaker B: I'd say the difference with us is if we were to misbehave, like, if we lied about the cryptography we were running, things like that, you would have evidence that we behaved badly, and that's part of the protocol. So we are what we call, I think, the best way to call us. Well, I think every L2 that's noncustodial or doesn't have custodiality does have a few trust assumptions. We would say we're proactively noncustodial. Like, no one can come to us and stick a gun to our head if we act honestly and say, take your funds, because all we have is a bunch of private. We have a bunch of private keys that we delete upon transaction, but we don't know what they're signing, we don't know what they're doing and things like that. But if we were to misbehave and not do the things we've said we've done and try and capture information, if you were to wake up one day and not see your funds there, you would have cryptographic proof that we misbehaved.
00:16:19.910 - 00:16:21.814, Speaker B: Does that make sense?
00:16:22.012 - 00:16:22.918, Speaker A: It does.
00:16:23.084 - 00:16:41.586, Speaker B: We've written a lot of stuff. Like, we provide proofs. We've done a lot of stuff for that. We've even run the software, the private key signing in an HSM, we provide proofs at the HSMs. So it has to really go wrong. And at the moment, we're confident that won't. There is a risk.
00:16:41.586 - 00:17:14.230, Speaker B: I want to say every L2 has a risk. If you want layer security, you're going to have to pay layer one transaction. As I said, we're very different to lightning, but we run lightning nodes. We were involved with lightning. It's just a different tool. There's clearly not going to be one scaling solution for bitcoin, unless you count coinbase as a scaling solution or something. But in this kind of like non custodial, trustless world, it's going to be a mesh of things and that's just reality.
00:17:16.410 - 00:18:10.858, Speaker A: Okay. Yeah, I definitely got some follow up questions because this is, there's this thing where it's like everyone wants things to be perfectly trustless and then there's like a murky valley quickly after that and people don't talk honestly enough about it. And so you guys are very forthright of what you guys are, what you guys aren't. So the way to think about this is that, as you said, you are centralized, but the way the server is written, you have no idea really what's going on on the server. You can't see amounts, you can't see destinations, you can't see receiver addresses. So I guess one thing to try and understand is either for you guys or if someone is running a mercury layer or a state chain, what do they see that they could attack things come in and they could just not sign a transaction or they could try.
00:18:10.864 - 00:18:35.650, Speaker B: And what, I'm happy to go through an attack vector. So for example, let's invent one. Okay, so I work for the company who runs the mercury node. Yeah, the mercury server. I could, in the chain of stake coins, be one of the owners at one previous time. So you have a stake coin. I could be a previous owner of that stake coin.
00:18:35.650 - 00:19:26.820, Speaker B: I, you could say, could work with. The company runs this to not have deleted your key share. So that means I could cooperate with the server to steal your funds. But if I was to do maybe first of all, a, that can't happen because we run software in an HSM, a hardware security module that deletes all that and we provide a proof. But just to say we didn't do that, I managed to break the HSM because that's what we'd, or not have to break some of the software. If I was to work with the server to steal your funds because you're the latest owner, which was signed by the server, you would have proof that there was dishonesty. Now how much is that worth to you? I don't know, but we're a UK company.
00:19:26.820 - 00:19:34.866, Speaker B: You've got cryptographic proof that the server was dishonest. Does that make sense?
00:19:34.888 - 00:19:38.658, Speaker A: Got it. It does. Yeah.
00:19:38.744 - 00:20:09.946, Speaker B: I guess there's a lot of software that has been built to not allow that happen and we haven't finished there. So eventually when people transition. We're going to give a signature to prove that we've deleted everything on the server side. One of the hardest things in computer science is to prove you've deleted software. Anyone can go on their computer and click delete. But as you know, even if you go on your laptop, which I assume you're using, you click delete. It's not actually deleted, it's to be in the paste bin.
00:20:09.946 - 00:20:37.400, Speaker B: If it's in Linux example, it's in this kind of buffer area and it gets defragged later. So proving you delete something is actually one of the challenges. So what we did is we run this in an HSM to do the, you know, hsms can be hacked. I mean we're not going to lie there, but this is bitcoin. I mean there's a risk to any of these L2s and we've kind of decided to be upfront with the risk and then give you proof if something bad has happened.
00:20:39.370 - 00:20:58.990, Speaker A: That makes sense. Yeah, I think that's something probably people don't understand when it comes to computers. It's like when you delete it from your waste bin, you don't see it anymore, but that code is still there until you override it with something else or you use some program to clear it because otherwise you're just going to be a bunch of extra wear on your hard drive, is my understanding.
00:21:01.090 - 00:21:19.830, Speaker B: This is not me bashing lightning. As I said, we as a company and we're small, we're about eight people, we work on lightning software and part of our running our nodes. There's a lot of attack vectors in lightning. Lightning has these punishment transactions to keep it honest, which is a good thing. That's quite illustrative. But it has a different set of attack vectors.
00:21:20.570 - 00:22:06.546, Speaker A: Makes sense. Yeah, we've seen this too in the ordinal space because psbts have been around for a few years, but they really got use case with trading ordinals where you're just moving BTC around and there's this attack vector where it's like if I sign my transaction side and I'm selling something for 0.1 btc and it goes down or up in value, I have to hope that the marketplace I'm using is going to delete that PSBT. Otherwise there's a claim in the future that they could post so similar idea. It's like you think you delisted, but did you really? It's hard to say depending on the marketplace. Go ahead. No, go ahead.
00:22:06.546 - 00:22:08.386, Speaker A: If you have any follow up a.
00:22:08.408 - 00:22:42.190, Speaker B: Lot of ordinal projects have come up to us saying, could they use mercury layer? And the first thing I said, I wouldn't know. If you're an ordinal project, just pay the fee. But you can imagine from why ordinal projects would love mercury layer, because as I said, we're moving around private keys. But those private keys could be ordinal jpegs. So now you could create trading games on top of mercury layer to swap your ordinals, and you could swap one for two, two for one. And yeah, we've had some initial chats. I think I put a tweet on how you would do it using API.
00:22:42.190 - 00:22:59.038, Speaker B: We looked into it. Our API does not not support. It doesn't explicitly support ordinals, but it doesn't not support ordinals. So we decided to leave it and explain how we can do it. But I'm not getting into the. I don't give a shit if people want to put jpegs on the blockchain. Bitcoin's permissionless.
00:22:59.038 - 00:23:19.130, Speaker B: We have to deal with it. I'm not into filtering and all that. I guess I've been enough in bitcoin to see that this has been done for years. I mean, we had this with counterparty and the rare pepes. It'll come back, it'll go, and I think something good will come out of ordinals anyway. Maybe there'll be innovation, like doing zero knowledge proofs on bitcoin.
00:23:20.110 - 00:23:48.158, Speaker A: Totally, yeah. Well said. I want to touch base on the trust model a little bit more because one thing that was interesting talking to some of the fetty guys is it's clear what it is. It is a federation. So you're trusting a multi sig. They do some chami and blinded ecash stuff, but it's a multi sig. Don't assume fed is going to be the perfect scale solution.
00:23:48.158 - 00:24:33.410, Speaker A: You're trusting some subset. And so their thing is like, I think they call it like a wallet test, where it's like, what group would you be willing to give your wallet away to for some amount of money? Like if there's $20 in there, that group can be more untrusted than if there's 1000 versus 10,000. And so your trust assumptions need to increase of who's in that federation depending on how much you're going to put in there, it sounds like. Tell me if I'm wrong with this. You're trusting the server. So that's a centralized piece. So there's a reputation aspect there of like, do you trust blockstream, for example? Do you trust mercury layer? But when it comes to the signing piece in fediment, it's like a seven of twelve, whatever it is.
00:24:33.410 - 00:24:41.398, Speaker A: Is this a one of two, technically, where it's like I'm signing and the server is signing and that's how things move around? Or is there something else there?
00:24:41.564 - 00:25:18.738, Speaker B: No, essentially it's a two of two. So for you to move a state coin, you've got to sign it with your private tree. In cooperation with us. The security label is, if you wake up in the morning and we're gone, you've got the ability to basically broadcast a transaction to go back onto the main chain. And if your funds are gone because you've got that transaction, that transaction acts as cryptographic proof to show that you're the owner of those funds. And we do get questions a lot. Why didn't you have a federation on the server? Well, with the current blinded server, I'm not sure.
00:25:18.738 - 00:26:04.320, Speaker B: That would be a lot of kind of cryptography. I'm not sure if the cryptography is mature enough, but even if it was, the question is, well, who's the federation? I mean, one of the questions blockstream goes get asked about liquid is who are their 15 members and are they public? Are they not? And as a company, if you wake up one morning and you say to me, your funds are gone, what am I going to do? Oh, it's the free federation members out of Mongolia or whatever. We felt it was better just to have a security protocol where we're blindingly signing. We run our software as secure as possible, we use BPCs, proper company. We do all that, and then we have a protocol basically, for you to pull out your money and we can generate proofs that we've behaving honestly. And that's. I think it's the best you can do.
00:26:05.890 - 00:26:11.002, Speaker A: Yes, that makes sense. Okay, some nuanced questions on that.
00:26:11.076 - 00:26:32.038, Speaker B: People who build lightning wallets, they get blamed for the performance of lightning network and they're. Yeah, I don't want to be blaming the Federation. So I think that's complicated. And, yeah, Fetty is shared custody. I mean, they're quite open about not. You've got to share your friends that you decide to Fetty up with, per se.
00:26:32.204 - 00:26:33.980, Speaker A: Feddy up with. I like it.
00:26:34.590 - 00:26:50.960, Speaker B: I'm familiar with Fetty. I think in another side project I work on, we look at the Fetty code quite a lot. I mentioned yours involves something called Siv kits. I mean, it's a tool. These are all tools. And you can't be religious for your screwdriver. The hammer may be useful sometimes.
00:26:51.810 - 00:27:24.506, Speaker A: Totally. Yeah. We're still in the early days too, where a lot of these don't talk, but in the future they're definitely going to be like, it's going to be much easier to switch from the screwdriver to the drill to the hammer. So that's just a matter of time. On the topic of state coins, I want to make sure do these amounts so you could peg in, say, one BTC, and that's a time lock. So you can use that state chain for up to a year, but you can peg out early if you want.
00:27:24.528 - 00:27:25.754, Speaker B: To, whenever you want.
00:27:25.792 - 00:27:39.646, Speaker A: Yeah, but once you're on that state chain, does the balances move? Like, I want to break down fungibility and spend point whatever, or do I have to peg in the amounts I'm going to go ahead?
00:27:39.668 - 00:27:59.138, Speaker B: In theory, you could swap with someone, but there's nothing in the pro. The only thing that allows that to happen is you could swap your stake coin for other state coins. So you could have 0.5 and you could swap it for five point ones. But that's nothing to do with us. They're fixed. That's the benefit and the limitation.
00:27:59.138 - 00:28:00.230, Speaker B: They're fixed.
00:28:00.890 - 00:28:03.590, Speaker A: Got it. That sounds like a pretty big limitation.
00:28:05.930 - 00:28:06.840, Speaker B: For that.
00:28:07.450 - 00:28:16.986, Speaker A: Interesting. So what are the big use cases then here if we can't increase or. It sounds like your pegging amount has to be very deliberate for a use case.
00:28:17.168 - 00:29:14.240, Speaker B: Yeah. So this is the second version of state chains we built. We built mercury wallet before people, and we never had a huge amount of users, but people would always do zero point ones and they would build up a set of things like five point ones. That's how they built it. But if you think of it, if you combine this with lightning, all the problems you have with lightning are kind of solved with mercury in that no inbound liquidity, capital inefficiency, mercury has none of that. So if you combine it with lightning, and if you had a service where you could swap your stakecoin into a lightning channel, for example, then that limitation of state chains goes a way, because when you want some loose change, you just go to a lightning channel or you could flip. I don't know if the market will appear, but if a market appears on nostra, some sort of decentralized market where you can atomic swap from a state coin into a lightning channel, that'd be awesome.
00:29:14.240 - 00:29:47.510, Speaker B: I don't know if that's going to happen, but that would be cool. And I think maybe lightning service providers who realize they've got to have all this liquidity locked up to support lightning, maybe they could push some funds around with stakeholders. People have discussed that. We wrote a spec on how to do that. But be honest, it's very experimental. There's a lot of things that can go wrong. But maybe as lightning starts to struggle under high load, or maybe because it needs so much liquidity, you can't get any more liquidity.
00:29:47.510 - 00:30:04.094, Speaker B: Maybe people would look at integrated state chains and. Yeah, some of the lightning guys that I've spoken to, they're curious about it, they're open to it. I think the problem with lightning is it still doesn't have that many users, if we're honest. I mean, it has more users than us, but that's not low bar.
00:30:04.212 - 00:30:07.200, Speaker A: Yeah, look, a bull market.
00:30:07.570 - 00:30:18.740, Speaker B: A bunch of jpegs on the blockchain, transaction fees of 30 $40. That could bring a lot of demand in this space for lightning. State chains and side chains, to be clear.
00:30:19.990 - 00:31:04.894, Speaker A: Yes, that makes sense. Okay, on the topic of you using this, people know how to peg into a side chain like liquid or known. You can see how you peg into that process and you get that representation of one to one on RGB, it's a little harder to grock and most people haven't used RGB yet, but it's client side for the most part. So once you peg in, it's just like tied to Utxos. For this, if people are looking in the forward, things are live and they're using a state chain. What's the user flow like from a wallet to pegging in? What's that look like?
00:31:05.012 - 00:31:27.414, Speaker B: Yes, I'll probably tweet some screenshots of a sample wallet by the end of the week. But it's very simple. You literally go on your wallet, you create a private key, as per usual. Twelve words. You generate a few bitcoin addresses, which are your state coins. Every state coin you have as an id. That's what we see.
00:31:27.414 - 00:31:44.138, Speaker B: You create them and you deposit what you want. You just posit one bitcoin 0.1 bitcoin, and it's very simple. Then after that, you can just send them around. We already built a wallet previously, mercury wallet, but that's obviously deprecated. Now. We've dumped that.
00:31:44.138 - 00:32:04.420, Speaker B: The UI was always kind of simple. I think at the time there was just not really a strong use case for it. I think now with ordinals, high fees, I think that'll be different. And we've changed the approach we're not going to be pushing aggressively a wallet. We really hope we can get this integrated into other wallets and we've spoken to people already. That's happening.
00:32:05.990 - 00:32:06.980, Speaker A: Got it.
00:32:07.910 - 00:32:21.260, Speaker B: I don't think there's a market for state chains only wallet because then you're going to want a bitcoin main wallet and all that stuff. And then why would we be in a position? I mean, I think there's enough good wallets out there. It's really to integrate to others.
00:32:23.150 - 00:32:37.930, Speaker A: I see. So the way you use this is you spin up a mercury address or a state chain address, and then you send bitcoin to that address, which is a basic bitcoin transaction.
00:32:38.010 - 00:33:00.138, Speaker B: Bitcoin address that you generate on your wallet or device. It's a normal bitcoin address. You're just cooperating with us to generate that private key. You're using your private key and basically a signature from signed transaction signature from our server to combine that to generate you a private key that could represent stakecoin.
00:33:00.334 - 00:33:22.586, Speaker A: Got it. And I'm assuming because people are always concerned about increasing fees and so there becomes this question of how dense is the transaction? Like, obviously sending basic bitcoin to some other address is not super intensive versus like a very. You have a bunch of stuff in the transaction on chain.
00:33:22.618 - 00:33:29.310, Speaker B: It just looks like a normal bitcoin address. There's nothing. There's no metadata, there's nothing. All the funky stuff is done off chain.
00:33:29.970 - 00:33:48.478, Speaker A: Got it. Okay, so the address is just the fact you've spent the address is the innovation. As far as what the on chain sees. If you look in anchor block of someone who's merged binding root stock, you could tell they're merged binding root stock. There's no way to tell they're pegging into a mercury layer.
00:33:48.654 - 00:33:58.070, Speaker B: Yeah. And that's where people say it's private because all you see is another address and pulse. Obviously, if you move that stake coin around, nothing moves around on the bitcoin blockchain.
00:33:58.590 - 00:34:12.830, Speaker A: Got it. Okay, that's really interesting. On the topic of moving things around, then, what's the mechanism of action here? Is it happening through the server? Are wallets supporting some kind of network connectivity?
00:34:13.170 - 00:34:37.990, Speaker B: Well, you have to connect to the server to get a signature, to sign a movement. But the way you connect with the guy you want to move to, the person you want to move to has to generate you an address for you to send to. And of course that person has to interact with the server. So you do need at that level. But in terms of sending no, that's between you and the user.
00:34:38.570 - 00:34:42.006, Speaker A: This has been super helpful, first of all. So thanks for breaking this all down.
00:34:42.188 - 00:34:43.720, Speaker B: Thanks for talking about it.
00:34:44.330 - 00:35:38.200, Speaker A: Yeah, I could definitely see the scaling benefits and the privacy benefits. The limitations on the things being locked sides is really big, especially as far as traditional use cases. This becomes like, if I'm imagining what this will look like is you'd have a marketplace, for example, for ordinals. And then when you agree to a purchase price, that's when the wallet address gets spun up, and then you start the process of pegging into the mercury layer. I guess there's a question here. What is common use cases? You identify that the market could see, as far as how you've scripted them, it doesn't seem mean. Like, how would a builder leverage mercury to build out a use case that the market might sustain based on current behavior, if that makes sense.
00:35:40.330 - 00:36:07.380, Speaker B: Yeah. So the kind of people we've spoken to, I mean, we're involved with Nostra a bit. One of our biggest fans is fiat Jaff. So he tweets a lot about state chains, but you could see, like, a market on Nostra where people are swapping these stake coins into lightning channels, anatomically. So you use stake coins to move around. You're now stuck with this stake coin you can't spend because it doesn't fit anywhere. You then flip it into a lightning channel.
00:36:07.380 - 00:36:56.240, Speaker B: There'll be a fee there, of course. There always is an arbitrage fee, but that's the kind of thing we see. And how you flip that, there's a lot of ways to do it. And then, look, as I said, for us, the goal, I don't know if this is even possible, but this is the research we do, is mercury is just providing these signatures that allow you to move private keys. Why can't those private keys be private keys to lightning channels? Now, we wrote a spec about it, but when I say a spec, it was very high level. There was a lot of attack vectors. But maybe in a high fear environment, maybe if some of the lightning guys get interested, you could see a world where you could, instead of just moving bitcoin around, you're moving lightning channels around.
00:36:56.240 - 00:37:20.810, Speaker B: That'd be cool. Now, you can just imagine on the back of a postit note, there are a lot of challenges there. What happens if you move a lightning channel and then the previous owner broadcasts a backup state and things like that? There's a lot of things that can go wrong, but I think that's a model that we aspire to that we think could work after some research, some hardening as well, maybe some upgrades to lightning.
00:37:22.270 - 00:37:41.950, Speaker A: Got it. Okay, very interesting. You briefly mentioned that you guys might be dropping stuff in the next week or two. What's the current state of the product as is, especially for people watching this? They're devs and they want to interact with it. How can they get started? But yeah, where's that currently? And then people jump in.
00:37:42.100 - 00:38:03.206, Speaker B: We're just cleaning. We're just setting up hardware to run it in prod. Come to our telegram channel. It is active. There are people already that come to us, and we've had phone calls of various projects around the world, people who want to build on top. We want to promote this. Clearly, we want to support this.
00:38:03.206 - 00:38:17.290, Speaker B: We'll get on. There was two weeks ago, I had a 06:00 a.m. Call with people in Asia, and then 06:00 p.m. Call with people in California. We're pushing this. We're not asking for money. We'll give you dev support.
00:38:17.290 - 00:38:35.486, Speaker B: We just want people to use the service. This is something we've been working for for years. And we just want user adoption. We want that network effect. And we're there, though, once we go live, we're going to start building little APIs, very hello world stuff, just to get people started. We'll do some nostril works. That's obviously a growing ecosystem.
00:38:35.486 - 00:38:44.900, Speaker B: Internally, we're going to do more and more research on lightning integration because we think that's key, but that's where we are. Okay, perfect.
00:38:46.070 - 00:39:26.740, Speaker A: A couple more questions. These might be broader questions, or we'll kind of like take left turns. But one thing I love is trying to get new devs into the ecosystem. And one thing that's cool about ordinals for me is that before ordinals, bitcoin, l one, seemed like, very elitist, like, it's very hard to grok. Not a lot of good tutorials out there. And so people went to l two s or they went to ethereum, because it's just easier to build on. If you are a new dev, new ish, and you want to build on bitcoin, what do you recommend they start on? This could be a hard question because you've been in dev for so long, so it's hard to think back to your baby years, but if you were getting started, where would you point them?
00:39:28.390 - 00:39:59.050, Speaker B: Yeah, I mean, I think, look, bitcoin core dev is hard, and I think you hit it and it's kind of no disrespect to the bitcoin core guys, but it is a maintenance project right now. Obviously. Upgrades to bitcoin take years. Had a lot of shouting on Twitter as well. Yeah, it's a hard one. I just think start building. I mean, if bitcoin dev came to me right now, I'd actually send them to Nostra because that's a fun ecosystem.
00:39:59.050 - 00:40:36.002, Speaker B: It's a bit crazy, very experimental, but I think you learn a lot. I mean, 95% of the stuff in Nostra is probably not going to work, but they've got that kind of attitude of build first, throw it out, see what happens. Nostra is obviously heavily dependent, although it's not needed on lightning. But yeah, that's why I would sense it depends on the experience. But if you just want to have fun, if you want to understand the ecosystem, I would say look at Nostra. Maybe build some silly things in Nostra, like set up a Nostra node, get that, get zapping, get lightning integrated. And yeah, with Nostra you can choose your language.
00:40:36.002 - 00:41:06.914, Speaker B: If you don't want to do a low level thing like rust, there's stuff in Python there as well. Lmbits is written in Python, which is a different kind of a bit of a higher level. There's stuff in JavaScript as well, if that's what we want to prefer. I think the hard thing about learning coding in bitcoin is just the terminologies. There's things like weird bitcoin scripting, stuff that we take for granted, which people come into the space. What's a tap root address? What's a multi sig, stuff like that. You just need to get that out of the way.
00:41:06.914 - 00:41:25.910, Speaker B: And there's all the weird behavior of bitcoin, which to someone who's been in bitcoin for few years is obvious. It's not obvious to new people, but we've had a lot of fun with Nostra. I think it's a different culture. I think even if Nostra fails, that's not me thinking it's going to fail. It's changed the culture on bitcoin, and that's been positive.
00:41:26.570 - 00:41:42.140, Speaker A: Okay, that's good advice, I guess. Last question I have. What are you most excited about right now? And we can keep this broad. It could be bitcoin, it could be non, it could be bitcoin upgrades, it could be something else. What are you seeing that gets you stoked right now?
00:41:42.510 - 00:42:02.638, Speaker B: We can moan a lot, and if you go on Twitter, there's a lot of moaning. But the culture of bitcoin in the last twelve months changed l two s. There wasn't many people building l two s. You could list all the l two companies in your right hand. We were one of them and now there's thousands. Now I got a bit. A lot of these l two s coming out are crap.
00:42:02.638 - 00:42:39.662, Speaker B: They're no better than counterparty that was built six years ago. In fact, those guys would be better off taking the counterparty code, renaming a few variables, renaming a few classes, and then relaunching counterparty, honestly. But I think you're going to see innovation come through that and in cycles, 99% of the stuff that happens is crap. It's like the.com boom where most dot coms were junk, but out of it we got Amazon and Google. I think you're going to see that on every cycle. So out of all the junk l two s we've got right now, you are going to see people that pioneer with zero knowledge proofs one person is going to get that right.
00:42:39.662 - 00:42:54.770, Speaker B: That may improve things. Or not. And I think that's the interesting thing. I think that's what's great. We do have developer transaction. Four years ago, those guys wouldn't be anywhere near bitcoin. They would be near protocol or something weird.
00:42:54.770 - 00:43:03.960, Speaker B: They're working on bitcoin now, which I think is good. It's going to be embarrassing. There's going to be some bad things, but I think long term it'll be good.
00:43:04.490 - 00:43:25.500, Speaker A: Yes, I could not agree more. It's definitely going to be harder to maintain the signal through the noise, but through that there's going to be a whole lot of badass good innovation. Once we get through all this kind of like hypey, frothy, noisy area, it's going to be very good for bitcoin. I definitely.
00:43:26.910 - 00:43:49.046, Speaker B: I'm. A lot of people are hating on lightning. I think maybe lightning is not visa. I think sometimes people thought it was visa, but I feel as a b to b protocol, it's very good. It's unique. There's no way to send someone money in a nanosecond around the world with no counterparty risk. It's just the noncustodial experience is not great.
00:43:49.046 - 00:44:11.606, Speaker B: And maybe we never sold that. Maybe lightning just stays as just l two and one of the cashew type people build an l three to make it work. You have to be open minded. But I think for what it does, it's brilliant. It's amazing when you think about it. Businesses, gaming guys, game developers, being able to settle with anyone in the world in a microsecond. It's nuts.
00:44:11.606 - 00:44:13.120, Speaker B: We've never had that in the world.
00:44:14.530 - 00:44:15.258, Speaker A: Totally.
00:44:15.354 - 00:44:15.566, Speaker B: Yeah.
00:44:15.588 - 00:44:26.950, Speaker A: It's also interesting that I'm not sure if we would have thought this critically about lightning until we got these crazy high fees for weeks and months on end where you got to see the crash fray.
00:44:27.130 - 00:44:47.846, Speaker B: I don't know. I'm not blaming anyone, but for some reason I think people thought, if you look at what ecash is, people think lightning is ecash. Like, I can have something in my mobile phone that's going to be totally trustless, totally permissionless and basically so easy for me to send any amount of money to anyone in the world and not pay any fees and probably not going to happen.
00:44:48.028 - 00:44:53.994, Speaker A: If it sounds too good to be true, it probably is. The old adage remains and paypal already.
00:44:54.032 - 00:44:56.970, Speaker B: Invented that and look what happened to PayPal. It's getting worse and worse.
00:44:57.390 - 00:45:08.480, Speaker A: Right. Well, man, Nick, this has been great. Any closing thoughts you have or things that I didn't touch on that you want to disclose? Right.
00:45:09.250 - 00:45:39.590, Speaker B: Mean, look, yeah, no, thanks for having. Yeah. If you've got people who watch this who want to learn more, come on our telegram channel. I also have a part time job working on this open source initiative called Sivkit. Won't go into big details, but that was really a combination of a few tools and ideas to basically get the circular economy moving a bit more. Anything I touch, I'll try and integrate into Sivkit. But it's open source, it's a way of doing a decentralized marketplace.
00:45:39.590 - 00:46:02.606, Speaker B: But it's run like BTC pay server, there's no company, there's no entity behind it. It's me part time, if I'm honest. I'm doing more project management and high level architecture, a couple of devs that are funded by people in the peer to peer space, namely Ray Yusef. And it's great, it's good. We'll try and integrate all the bits and bobs into it as well. Very cool.
00:46:02.708 - 00:46:20.546, Speaker A: And I'll get all those links, they'll be in the description below for people who want to learn more about mercury layer or you or Sifkit. But yeah, thank you so much for coming on. It's been fascinating. Thanks for dropping knowledge about state change and mercury. So, yeah, appreciate you coming on, Nick.
00:46:20.658 - 00:46:21.560, Speaker B: Yeah, thanks.
00:46:22.250 - 00:47:18.998, Speaker C: Thank you for listening this far into the episode. If you found it enjoyable, please do, like, subscribe on whatever platform that you're listening on YouTube does me a huge favor to like and subscribe. Find me on Twitter at Jake blockchain show me some love. I reply to every DM and if you are a bitcoin builder that is kind of at this forefront of building new use cases, whether it's l one, lightning stacks, rootstock, roll ups, ordinals, BRC 20, I want to talk to you. So when I'm not doing this podcast, I am the sourcing partner at the Bitcoin Frontier Fund, where we invest in bitcoin startups at the earliest stages, give you access to whatever you need, whether it's legal, product, fundraising, help, as well as capital. So let me talk to you.
00:47:19.084 - 00:47:20.518, Speaker A: You can hit me up again.
00:47:20.604 - 00:47:25.250, Speaker C: Find me on Twitter at Jake blockchain and shoot me a DM.
00:47:25.330 - 00:47:26.390, Speaker A: I'll read everything.
00:47:26.540 - 00:47:29.030, Speaker C: Let me talk to you guys. All right, peace.
00:47:30.210 - 00:47:50.700, Speaker B: You. Welcome to built on bitcoin. I know that things don't always go your way, but I'll be right here waiting, waiting. Now, I've been trying to figure out a way to make it out make it out because I don't think about everything going wrong. Oh.
