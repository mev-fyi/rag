00:00:09.770 - 00:00:45.450, Speaker A: Welcome to the infinite Jungle. I'm your host, Christine Kim, VP of research at Galaxy. And I'm so excited to be recording this episode because we are recording from East Denver, one of the largest Ethereum conferences in the world. And it really does, does feel like you can see the entire ecosystem of Ethereum, the sprawling jungle that is Ethereum here. So I'm very excited to be recording actually a couple episodes here at the conference at this beautiful interview room. Thank you to Yap Global for helping us book these rooms. We're going to be recording a few episodes here.
00:00:45.450 - 00:01:28.130, Speaker A: So if you're watching from the YouTube, you can get comfortable with this new setup with the purple Velvet chairs and the new plants that we have here. We're a traveling show. We go to where the jungle is most present. For today's episode, we are going to stick to what we usually do, which is talk a little bit about what Ethereum developers are talking about. We're going to talk about one of the main topics that was discussed on the latest Ethereum core dev call the topic of account abstraction. So we're going to talk about account abstraction today, and then we're going to bring back on our dear, dear friend Nixo from ETH Staker. Before we start the show, here's a quick disclaimer.
00:01:28.130 - 00:02:35.342, Speaker A: I need to remind you to please refer to the disclaimer linked in the podcast show notes and note that none of the information in this podcast constitutes investment advice, an offer, recommendation, or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities. So yesterday, on Thursday at all core developers execution call number one eight two developers debated quite heavily a couple of code changes, a couple of eips, Ethereum improvement proposals related to account abstraction. What is account abstraction? The way you can think about it is there are two types of accounts on Ethereum. There's externally owned accounts, which are accounts that are controlled by public private keys. They're controlled by a user. You can create account on Ethereum and you can control the transactions that are sent from the account by signing every transaction with your own private key. This is like the password that you never want to give out to anyone so that they don't hijack the assets in your account.
00:02:35.342 - 00:03:22.270, Speaker A: These are externally owned accounts controlled by a user. You also have smart contract accounts, which is unique to general purpose blockchains, blockchains that can do a lot more than just send around eth or send around a cryptocurrency from one account to another. Smart contracts are accounts that are controlled by code, you write rules to dictate when assets can flow into and out of a smart contract. You can dictate different functionalities, different number of features and operations. These are really flexible types of accounts that are controlled by code. Self executing code is what we call smart contracts. So you've got smart contracts and you've got externally owned accounts, eOas.
00:03:22.270 - 00:04:37.070, Speaker A: Now, the idea of account abstraction is to make eoas a lot more programmable and flexible, like smart contracts. Instead of the difficulty, there's a number of difficulties around using your private key, because losing that private key could mean that you lose your assets forever, and that's not a great user experience. So account abstraction is all about creating what are called smart contract wallets to be able to make eoas more programmable, more usable, and it addresses a number of different features. So right now, one of the types of things that you can make for an EOA that makes it a little bit more secure are multi signature wallets. So instead of just one signature, one private key being able to control and dictate what transactions are being authorized from an account, you have three of four signatures that are required, two of three. These are multi signature wallets. But to go even beyond that, one of the things that Vitalik Buterin was talking about, co founder of Theorem, what he was talking about on yesterday's call was there are certain features in account abstraction that you really want for eoas.
00:04:37.070 - 00:05:15.022, Speaker A: Just checking my notes here, but these notes that I'm reading are all up on Galaxy.com. So if you want the full write up, be sure to check that out on galaxy.com. But looking at the notes from yesterday's call, four of the things that he really highlighted are needed for account abstraction and are the goals of account abstraction is things like key rotation and key deprecation. So let's just say one of your private keys are compromised. Somebody, I don't know, they got a hold of it. To be able to rotate out the key and use a different key, to be able to deprecate the private key that you're using to authorize your transactions, that would be a huge feature.
00:05:15.086 - 00:05:15.700, Speaker B: Add.
00:05:16.150 - 00:06:09.438, Speaker A: And this would also help with quantum resistance. If by any chance, the cryptographic type of security that you're using with these private public key structures are no longer as secure as we thought they were because of new technologies like quantum computing, we can switch out the cryptography, switch out the keys that are necessary to control a user's asset. So key deprecation, key rotation are two big ones. Another one is batching. With an EOA, you have to authorize every single transaction with a signature, with that private key. But what if you could batch together and authorize, say, a batch of five transactions all in one go? This is great for usability and decentralized finance applications if you're using a decentralized exchange and just want to be able to authorize this transaction in one go. Sponsorship, gas, sponsorship.
00:06:09.438 - 00:07:04.590, Speaker A: Another big goal of account abstraction is to be able to allow other types of applications, other types of accounts to pay the fee for your transaction. So let's just say you have an application that really wants to encourage users to use that application and say, look, if you're going to interact with our application on Ethereum, then we'll pay for your gas, we'll pay for the fees that are required to interact with our application. So being able to sponsor people's transactions, that's another big feature. We have a little bit of background noise, but that's because we're in the jungle. Okay, we're in the jungle at East Denver, so stay with me here. So those are four kind of major features. Of course, there's other features that come with making eoas a lot more flexible of being able to have smart contract wallets that users can use a lot more easily than the strict.
00:07:04.590 - 00:08:05.590, Speaker A: You have to be super careful with that one private key and make sure that you never lose it for the rest of your life. So that's account abstraction, sort of. In a nutshell. And last year at East Denver, there was an out of protocol standard for account abstraction that was launched, ERC 4337, and it didn't change anything about the Ethereum protocol, but it offered the first initial steps to enabling smart contract wallets on Ethereum, it's called ERC four three seven. But there are a number of difficulties that come with trying to enable account abstraction in an out of protocol way, in a way that doesn't touch the Ethereum protocol. It makes transactions with smart contract wallets a lot more expensive, and it also comes with certain difficulties. If you currently have all your assets in an eoa, just a normal eoa, it's difficult to move all of your assets then to a smart contract wallet enabled by ERC four three seven.
00:08:05.590 - 00:09:07.930, Speaker A: There's no real protocol enabled solution to be able to help users migrate their assets from eoas to a smart contract wallet. And there's a couple of other disadvantages that come with ERC four three seven because it's out of protocol. And so what developers were talking about in the latest dev call were two code changes that would be in protocol to help make account abstraction on Ethereum a reality. The two eips that were discussed and debated quite a bit were EIP three seven four and five eight six. Again, if you want to learn more about these code changes in depth, do check out the full write up of the call. But developers are really debating the trade offs and the advantages of these two code changes. They don't enable the entirety of account abstraction, but they would enable certain features like batching transactions, gas, sponsorship, and do so in certain ways that may require trust in, like a centralized entity in a relay infrastructure provider.
00:09:07.930 - 00:10:16.580, Speaker A: The complexity of some of these cone changes were debated. The reliance of these two eips on trusted entities like relays was actually a pretty big part of the discussion. But there were a number of other concerns that developers had talked about regarding the strengths of one of the eips, EIP 374 versus EIP five eight six. And so the conversation around account abstraction is going to continue to happen because these are two eips that are in the running for the electra upgrade, which we've talked about a ton on this show, the upgrade that will be coming after the Dencun upgrade on March 13. So for Prague Electra, that's the combined upgrade name for the upgrade after the Denkoon upgrade, but Prague Electra to get account abstraction in. These are the two contenders. A big question is whether or not account abstraction, even in its form with these two eips, is going to be in Electra at all.
00:10:16.580 - 00:11:49.850, Speaker A: To reiterate, these are code changes that are not necessarily focused on changing or improving, really like the security of Ethereum, really changing kind of the data structure of Ethereum, which we've talked about with the vertical upgrade a little bit with Ben in a prior episode. These are code changes that are really focused on the user experience and on improving the DApp ecosystem of Ethereum. And one of the things I've noticed in prior upgrades is that user experience changing things that impact smart contract developers are oftentimes a lower priority than major changes to the protocol of Ethereum that impact Ethereum's consensus, impact Ethereum's security, impact Ethereum's efficiency, I guess, as a general purpose blockchain. But things that really target kind of the user experience and the decentralized application ecosystem on Ethereum are code changes that are kind of tacked on to an upgrade in the Denkoon upgrade. Another good example is 4844. Really helps execution and users on l two s and the kind of smaller code changes that were included after years of discussion that will impact the application layer of Ethereum itself, like transient storage, the deprecation of self destruct. These are code changes that are smaller and took a much longer time, I think to include in an upgrade.
00:11:49.850 - 00:13:11.478, Speaker A: And so on this topic of account abstraction, on this topic of prioritizing upgrades that directly impact the user experience on Ethereum and its priority, I got to chat with some Ethereum core developers, the Prism team actually at East Denver this year, and really grill them about why do we think that account abstraction, do we think that code changes that impact the user experience and smart contract developers, do we think it's going to be prioritized in further upgrades? And if it's not prioritized, why isn't it a higher priority for core developers? So I want to show you guys this clip, or I want to run this clip in this episode now because I think it's really relevant to this conversation. So take a look at this clip of the panel. If you want the recording for the full panel, you can find that also on the East Denver or Twitter website. But this clip is one that I wanted to bring onto this show. And then afterwards we'll chat with Nixo about a couple of other things that are happening at this conference. So here's the clip. A big feature that we're talking about that developers talked about on today's call, on today's developer call was account abstraction and basically code changes that are going to impact the end user and also DAP developers.
00:13:11.478 - 00:14:26.994, Speaker A: So in Dencoon, actually there's a couple of upgrades that are going to improve the smart contract developer experience like transient storage that has been championed for several years, the deprecation of self destruct. These are always minor code changes that are a little bit hard to get into, upgrades and kind of tacked on. Have you guys thought a little bit about prioritizing the smart contract developer experience for certain upgrades? Like I've always seen the main feature being the merge and it seems as though as Ethereum focuses more on being a DA layer, these code changes that are focused on making Ethereum a good execution layer are starting to really the wind in their sails is lessening. And I worry that things like EOF, improving the solidity language, improving the EVM, all of these code changes that are more focused on users, on the developers, on Ethereum, they're not going to headline an upgrade. Is that concerning to you? Or do you guys want developers to leave Ethereum? Is that really the goal here?
00:14:27.192 - 00:15:14.350, Speaker C: Definitely don't want developers to leave Ethereum. And I hear you on some of these pain points here. In my personal opinion, some of the things you listed are on the tech debt side of things like state expiry and deprecating self destruct. I think we should really be focusing on these things, but it's also hard because we have a lot of Alt L1s that are like, oh, we're going to ship the feature faster and they have the advantage of not having this tech debt with them. So it's kind of this balance of how do we move fast and have new features and stay competitive, but also take care of the mess that we're leaving behind from maybe just poor design or things that are no longer relevant anymore.
00:15:15.090 - 00:15:43.290, Speaker D: So I think a caveat as president and I are mostly on consensus layer, so we cannot speak so much on the execution side. But from the consensus side, we actually have been trying to make the developer easier. For example, we are exposing the beacon route onto the EVM that helps Eigenveil layer with the restaking, helps rocket pool. And then for the electra we also have this attitude layer trigger withdrawal that also helps Eigenveil layer and staking pool. So we're trying to make the Dapps easier, but there's not much we can do because we mostly focus on the consensus layer.
00:15:44.990 - 00:16:31.894, Speaker A: Yeah, I mean, I feel like in the upgrade there's competing visions of what Ethereum should be like. There's certain upgrades, certain code changes that will really help keep the developer DAP ecosystem on Ethereum strong, and others that will push encourage users and dapps to move to other protocols like the l two s. So that's all I have to say about account abstraction. We'll see if either of those two code changes related to account abstraction will actually be included in Electra. There's so many different high priority issues that I think developers are wrestling with figuring out what to prioritize, what not to prioritize. But now at least you guys know that these are two contenders, and we'll see what developers end up going with for the final scope of Electra. Now we're going to transition over to chatting with Nixo.
00:16:31.894 - 00:17:04.414, Speaker A: She's been on the show before and we love chatting with her to get the updates on what's happening in the Ethereum staking ecosystem. She was on a panel recently at East Denver about Ethereum client diversity, so we'll get a little update from her about the client diversity initiative, which we chatted with her about on the last time she was on this show. So yeah, very excited to chat with Nixo. Let's bring her on the show. All right. We are back at the infinite jungle. We are here with my dear friend Nixo from East Acre.
00:17:04.414 - 00:17:05.854, Speaker A: Thank you for coming back, Nixo.
00:17:05.902 - 00:17:08.214, Speaker B: I am so stoked to be here with you in person.
00:17:08.332 - 00:17:20.874, Speaker A: I know at East Denver we're at a new studio. We're still in the jungle, but it's a new scene. I love your jungle theme outfit. You're looking beautiful. How's the conference been so far?
00:17:20.992 - 00:17:32.918, Speaker B: Really good. I did something new, this conference where I spent three days, like socializing and doing things, and then I spent two days totally alone working, and now I'm back to conference bone.
00:17:33.094 - 00:17:36.846, Speaker A: I love that we need those breaks because conference, like the conference circuit, can.
00:17:36.868 - 00:17:50.930, Speaker B: Be exhausting and it's so valuable to be with people talking in person to people, being able to interrupt and have visual cues that you can't have on Zoom, and being peopleed out and tired, it feels like such a waste.
00:17:51.750 - 00:18:15.750, Speaker A: 100%. Well, I want to talk to you about one of the in person things you had at this conference, and that's the panel that you had about client diversity. The last time we were here, we were talking with you and Torsten about the issue of the supermajority risk on Ethereum. What are the updates that have happened since then? How did that panel go? Did you think that there had been some progress since we last chatted?
00:18:15.830 - 00:18:22.310, Speaker B: So the panel was really fun. It was basically four of us on stage who agreed about most of the issues.
00:18:22.400 - 00:18:23.338, Speaker A: Nothing spicy.
00:18:23.434 - 00:19:02.054, Speaker B: Not a whole lot spicy. I wish there was a little bit more spice, but honestly, client diversity is an issue without a villain, and so nobody's going to really push back against it. Everybody agrees that client diversity, that dealing with a supermajority risk is important, just different ways of getting there. So the panel went really well. Right before the panel, Coinbase and kiln both made announcements. Coinbase made an announcement that they are going to be switching over half of their validators to Nethermind validators by the end of March. And Kiln has already switched over half of its validators to Nethermind.
00:19:02.054 - 00:19:11.750, Speaker B: And so together they're like 20% of all staked eth. And so that already represented a 10% drop in geth supermajorities.
00:19:11.830 - 00:19:13.500, Speaker A: So what is geth at now?
00:19:13.870 - 00:19:47.270, Speaker B: Very good question. We don't actually have like a great picture of it. We know that during this whole Baysu Nethermind stuff, it was at 85% and so the best I don't know if we've talked about this before, but there are two different data sets, and one data set is just node crawlers and one data set is survey results. And the reason node crawlers isn't great is because it gives you node client diversity instead of validator client diversity. So it weights node with one validator equally with a node with 600 validators. And what we care about is validator client diversity.
00:19:47.790 - 00:19:51.100, Speaker A: Can you run different clients on the same node, though?
00:19:52.670 - 00:20:22.754, Speaker B: You can have fallbacks, you can have different setups. It does matter. And so the other data set is surveys. So it's just sonic from Beacon chain calling up a bunch of professional operators going, what do you run? Just report it to me so I can put it on my website. And that shows a very different picture. So when you looked at that four months ago, node client diversity looked like guests was at 58%, while validator client diversity looked like it was at 85%.
00:20:22.872 - 00:20:25.698, Speaker A: And so there was wildly different numbers, wildly different.
00:20:25.784 - 00:20:40.390, Speaker B: And so there was disagreement about which data set to use. But then when Nethermine and basic went offline, the number of validators that went offline correlated to the number of validators that were using those clients. So it was actually the best indicator that we've gotten of which data set is closer to reality.
00:20:40.470 - 00:20:43.014, Speaker A: The survey data was found to be more accurate.
00:20:43.062 - 00:21:43.414, Speaker B: Yes, much more accurate. And the reason for that is node client diversity actually overrepresents homestakers, because homestakers run fewer validators on their nodes, so they're more of the nodes on the network, but less of the validators on the network. And homestakers are generally more up to date with what's going on with the staking world, and more responsible when it comes to supermajority risk. It dropped from 85 to right after the bugs, there was a huge push on Twitter to pay attention to the supermajority risk. It dropped to like 70 something percent based on survey data, 78%, 75%, and with this 10%, or it'll be going to around the 66% mark, perhaps below it, not really sure, because so much of the network still doesn't report on what its client diversity status is. And so we kind of just estimate with that. And so one of the estimations, clientiversity.org,
00:21:43.414 - 00:21:45.350, Speaker B: just assumes all of them are guests.
00:21:45.510 - 00:22:05.614, Speaker A: Okay, as the baseline. But that's huge. If you assume that it went down 10% from the initial kind of scare with the best Besu and Nethermind node outage, and then another 10% based on the kiln and the Coinbase announcements, which were made this week, that's a major drop in the number of validators running on guests.
00:22:05.662 - 00:22:24.698, Speaker B: It is a huge win for the social layer. It is a huge validation of the fact that the social layer works. That, yeah, there are Karens on Twitter, but sometimes it's useful and necessary to yell at the institutions and be like, hey, pay attention. We're paying attention exactly what the protocol needs and you guys need to pay more attention to.
00:22:24.784 - 00:22:29.962, Speaker A: That is really good news. And also that's like good on you. Ethereum community, we are proud of you.
00:22:30.016 - 00:22:30.618, Speaker B: Right?
00:22:30.784 - 00:22:33.354, Speaker A: We celebrate that on this show right now.
00:22:33.472 - 00:22:38.206, Speaker B: Yeah, I posted Twitter status the other day that I was like, I'm so proud of the Ethereum community.
00:22:38.388 - 00:23:06.120, Speaker A: I love it. There's hope. So aside from the improvement around the client diversity narrative, I'm really glad that there's been that major shift. Any other kind of big topics takeaways that you're thinking so far from East Denver? What do you think are kind of like the big ideas that people are mostly talking about in the conference right now? Any major learnings outside of the client diversity stuff that you've been thinking about?
00:23:06.570 - 00:23:45.662, Speaker B: I will say I sort of seek out what I want to talk about. And so I've mostly been going to the staking relay builder talks. I guess this could lead in well, but the staking issuance thing came out last week, so I've been seeking out people because it's so much better to talk about these big ideas in person when you have all of the people there, everybody can interrupt each other. You get body language. And I have all these smart people around me that I wouldn't always just DM. Hey, what do you think about execution tickets?
00:23:45.806 - 00:24:14.906, Speaker A: Right? Okay, so give us the details around what people are saying about that. First of all, explain the issuance reduction first for our listeners because I think people, we talked about it a little bit on the last episode, but I think you could probably explain it a little bit more. And then I want all the details. What have people been saying about it? Is it going to happen? Is it not going to happen? But yeah, first we'll just give our listeners a little one on one on this issuance reduction.
00:24:15.018 - 00:24:58.870, Speaker B: Okay. So right now, 25% of all ETH is staked. And when withdrawals happen, we figured like, oh, a lot of people are going to withdraw, things are going to even out. But it turns out that that was actually an event that made proof of stake seem more secure because you could put it in, you can get it out. It's been proven to work. And so what we've seen is there's just been a huge demand for staking, especially with liquid staking providers, because it's so easy to throw your money into lido or rocket pool and then get it right back and get a liquid staking token, sell the liquid staking token. And so there hasn't really been a drop in demand for setting up validators.
00:24:58.870 - 00:25:28.786, Speaker B: And so we're sort of on the path that there is a possibility that all ETH will be staked. 99% of ETH will be staked eventually. And that represents kind of a systemic risk to ethereum, especially because the reason that we stake is to secure the network. And I see some people on Twitter or in their bios or talking about it like, oh, Etha is meant to be staked. And I'm like, that's not true. That's not true at all. Ethereum isn't meant to benefit validators.
00:25:28.786 - 00:26:20.230, Speaker B: Validators are meant to provide a service for the network. And at this point we know that validators adequately provide that service. We have the security that validators provide at 25% right now. So why overpay? Because as we have more and more east staked, we get more and more inflation in east, and so we're really overpaying for security at that point. But we keep making it profitable to stake. So there's this idea that Caspar and Ansgar, who are ethereum researchers, put out, which is should we change the staking issuance to target a certain amount? And that could either look like driving the issuance, so driving the yield that validators make down to nearly zero once you get to like 99%. So there's no real incentive to stake because while ETH is inflating, you're getting like 0.1%.
00:26:20.230 - 00:26:26.326, Speaker B: It really evens out. There's not really like a good reason to be staking and running hardware for that.
00:26:26.428 - 00:27:16.534, Speaker A: Okay, but I have a bunch of questions around this and around issuance reduction, because to me it just sounds like a horrible idea. And let me tell you why don't, if you reduce the issuance such that it's actually more expensive to run your hardware, run the validator, maintain it, then you're actually getting rewarded, then it's not just like 10% of validators you're losing. It's going to be uneconomical for everybody. And if you make it so that, okay, so the issuance just evens out, maybe you make just like 1% of profit. It's not a huge amount, but you are making something. And if the ease at which you can earn that yield through liquid staking providers like lido still exists, then no matter how low the staking rewards are, why wouldn't people do it? Even if it's like a tiny bit that you'd be making?
00:27:16.652 - 00:28:07.810, Speaker B: Yeah. So that is the problem. How do you disincentivize staking up to 99% without disproportionately disincentivizing decentralized forms of staking, like solo staking? The issuance changes that we're talking about. One of the things that they talked about in their research post was changing it so that when you get to the tail end, it starts going lower and lower. So it's relatively unaffected from like zero to 25%. So it wouldn't really change anything today, which is sort of the issue, or another proposal is that you could make staking issuance negative at some point. So, like, if 50, 60% of ETH is staked, one more percent gets staked, it goes negative, and validators start getting penalized for being online, which does cause incentive for validators to start getting offline.
00:28:07.810 - 00:28:49.646, Speaker B: And hopefully that would affect, one of the ideas is that liquid staking is so elastic, it's so easy to get in and so easy to get out, that they'll be the first to exit. Whereas people who stake liquid staking providers and homestakers have set up their validators, they've invested the hardware. They can't get that investment back. Like, mostly, you can't really get that investment back. Liquid Staking providers would never exit completely. They would stay in the game somehow. And so hopefully, the idea would be that liquid staking token holders pull out their capital preferentially.
00:28:49.646 - 00:29:05.994, Speaker B: So it preferentially affects liquid staking providers. We don't know if that's going to be the case. And honestly, one of the problems that I have with it is that 25% is a really random number to choose. And the only reason it's chosen is because, well, that's where we are right now.
00:29:06.192 - 00:29:23.870, Speaker A: Yes, that was the other question that I was going to ask, because it seems like such an arbitrary limit. And how do we know? Do we know? Okay, based on today's prices, how much is 25% of total eat staked?
00:29:24.210 - 00:29:27.220, Speaker B: I want to say when that paper was published, it was like 30 million.
00:29:28.950 - 00:29:32.754, Speaker A: I think I have the number, and it is an important number.
00:29:32.872 - 00:29:35.640, Speaker B: I don't even know what the price of this show right now.
00:29:36.970 - 00:29:39.778, Speaker A: You are so incredible.
00:29:39.954 - 00:29:41.560, Speaker B: I know. We broke 3000.
00:29:43.210 - 00:30:04.382, Speaker A: Okay. Because one of the reasons is an estimated $106.6 billion worth of Ethereum is staked right now. So $106,000,000,000 is the security of Ethereum. But we have inflation. Right. And if we get to a point where $106.6
00:30:04.382 - 00:30:25.474, Speaker A: billion is not easy to overcome the network with, say, let's just say it's like extremely easy to get $200 billion by ETH, stake it, and then overpower all the validators. Do we have to then change the issuance? Once again, what is optimal security? Wouldn't you want as much ETH staked as possible?
00:30:25.672 - 00:31:25.810, Speaker B: So that brings up a good point. And that can be something that I think I just messed with my mic. That can be something that is taken into account with a staking issuance proposal is it could be elastic along with the total ETH supply so it doesn't have to be subject to inflation and security going down. But more ETH staked isn't necessarily more security. We have adequate security right now with making sure that attestations get on chain, making sure that they're finalized, making sure that the parties on the network can't necessarily collude. And I think the idea behind 25% is that if we change issuance to target a number, and it is below what we're currently at, it is going to be a painful thing for validators. If they go through a fork where they're making 3% before the fork and they're making 1% after the fork, people are going to be upset.
00:31:25.970 - 00:31:35.606, Speaker A: I mean, it's 26% right now. And I know that it's going to probably get to like 30% by the time we have, what, like Denku and maybe Electra, the next upgrade.
00:31:35.638 - 00:31:36.586, Speaker B: Oh, it's going to be so high.
00:31:36.688 - 00:31:41.866, Speaker A: And if you're targeting 25% right now as we're talking about this, this is going to be painful.
00:31:41.978 - 00:32:28.060, Speaker B: I think the more subtle thing is it's also about who's advocating for these protocol changes. And so if you save 25% and it doesn't look necessarily like super painful right now, then nobody's going to push too hard against it just because it's in their interest. Like a money party isn't going to come in and be like, this is, I mean, they are, but less so. This is going to destroy our business. You can't do this and just fight harder for. Yeah, let's stake 99% of ETH because staking 99% of ETH benefits primarily liquid staking providers because they get a portion of everybody's rewards. And the more ETH that they have under their control, the more money that they make.
00:32:28.910 - 00:33:07.238, Speaker A: Yeah, I mean, I think the ease at which you can stake through liquid staking providers is one of the primary risks because all of these liquid staking providers are essentially just like smart contracts built on Ethereum. I think one of the longer term solutions that I've been thinking is going to be more effective in introducing more security to Ethereum. Making sure that even if there's a very high staking rate, like 50%, it doesn't all go to Lido is an in protocol liquid staking solution. Have you heard about this when you're talking with developers? Is that a contender for maybe being a more pertinent strategy, effective strategy, than a reduction in issue?
00:33:07.324 - 00:33:47.730, Speaker B: I have heard a lot of conversation about it. I'm not going to lie. I'm not super up to date with what the current proposals are, but I do know that there's so many moving parts right now that it's hard to account. Even Mev is hard because people talk about, oh, staking, issuance goes down, but Mev is going to account for an amount of rewards, and then there are exogenous yields like restaking. How is that going to affect everything? And so if solo stakers are making 0.1% with their own withdrawal address, but restakers are making this amount, like, are we just moving the risk to a different party? But it's still like the same risk profile is still just as high. Yeah, exactly.
00:33:47.730 - 00:33:58.054, Speaker B: Yeah. So I don't know what the solution is, and there are going to be a lot of moving parts, and I'm trying to keep up with the staking world, but there's rainbow staking now. There are execution Rainbow.
00:33:58.102 - 00:34:00.422, Speaker A: What the frick is rainbow staking?
00:34:00.486 - 00:34:44.018, Speaker B: So that's a proposal by Barnaby, and that's separating light duties and heavy duties so that solo stakers have sort of like, less of a burden, not professional operators have less of a burden of technical requirement. And I'm not going to lie, that's also above my head. Execution tickets also does that. It separates attesters and proposers and sort of moves things to a world where professional operators are handling more of the consensus, which I'm not a fan of because it's like, more and more diminishing the role of solo stakers.
00:34:44.034 - 00:34:44.166, Speaker A: Yeah.
00:34:44.188 - 00:34:49.902, Speaker B: The role of the validators, which is the thing that makes our network the most decentralized.
00:34:50.066 - 00:35:13.534, Speaker A: Yeah. I got to say, the future does not look great for home stakers, for independent stakers. However, this is exactly why I have you on this show, because you know a ton about what these conversations, what conversations are happening now in the staking community that are going to be impacting the staking community. And it's a lot to keep track of. But this is why I like to talk to you.
00:35:13.572 - 00:35:50.214, Speaker B: It's so much to keep track of. And one of the nice things that I like about solo staking, about home staking, is that a lot of people who do it work completely unrelated jobs. This is a hobby for them. They do it in their downtime. And so the downside to that is that they're not super engaged in what's going on in the protocol. And I think a lot of people come back and they hear all these proposals and they think, wow, is Ethereum paying attention to solo stakers? Am I being forgotten as a solo staker? And so they feel like they don't really have an advocate. And so I'm trying to do my best keeping up with everything and keeping the solo staking community informed.
00:35:50.214 - 00:36:16.406, Speaker B: So that my hope is that if I keep them informed enough, in an accessible enough way, that some solo stakers will come and be curious and do a little bit more diving in and sort of help me provide a voice. Because solo stakers are a wide range of people. I can't be a voice for people. Not everybody who stakes looks like me, acts like me, thinks like me. We need more solo stakers. Being an advocate for themselves. Yeah.
00:36:16.508 - 00:37:13.426, Speaker A: Here. I love the work that you do. It's such important work. And I'm really glad that hopefully you continue to have more platforms on which you can encourage the solo staking community to have a greater voice on these topics like issuance, curve reduction, and down the line on MEV execution tickets, some of these other stuff. One final question for you as it relates to a small win for homestakers, let me know if this is totally just marketing, but I've been told that distributed validator technology being adopted by Lido, the largest liquid staking protocol, is a major win for at home stakers. Because now they can run validators for Lido. Like, instead of being this professional node operator that is vetted by the Lido foundation or Lido Dao or whatnot, you have DVT.
00:37:13.426 - 00:37:36.206, Speaker A: That's what we talked about in the last episode, this simple DVT module going live, and it's going to allow at home stakers to be exposed and to be able to be a node operator for Lido. I mean, is this a big win? Do you think DVT and the technology there is kind of like the saving, like the major kind of way in which at home stakers stay in the game.
00:37:36.308 - 00:38:13.914, Speaker B: So I have mixed feelings about this. One of the things is that DVT is a hard thing, a hard sell at this point. So say you can stake with one eth with the DVT home staking node. Your home staking node is going to cost you $800, maybe $500 at minimum, $1,200 at maximum. It can cost you whatever, but on average it's going to cost you about $800. You're going to be making three ish percent on one e and it's going to take you years to make up the cost of a home staking node. And those costs are always going down.
00:38:13.914 - 00:38:53.662, Speaker B: We're hopefully going to be able to stake on smaller and smaller machines. So I do think that this is a weird time where I don't think DBT is that helpful right now without stakers having their hardware costs covered or something. But I do see it as a win as having more operators on the Lido network or on the Lido protocol. But the entire point of decentralization is removing control from a single party. And I find it hard to believe that Lido will give up a meaningful amount of control over their stakes. So yes, they have a community staking module. I want to know.
00:38:53.662 - 00:39:55.926, Speaker B: I haven't been able to find the answers to these questions, but I want to know if it's permissionless and any stakeroom can come in. If that staker goes offline, can the lido Dao choose to exit that staker? Because that still exerts a degree of control over a staker's ability to validate on the network. And so if the US government or something comes in and says Lido, we don't like any of this, can they exit all of the stakers? And so that still exerts a meaningful amount of control over that validator, especially because their whole thing is we're decentralized, we're dow organized. All the voting happens through LDO tokens. But the fact is, if you go and look at all the votes that happen, the majority of them are decided with two or three addresses. And I don't know who all of those addresses are, but I assume that they're people who have a lot of LDO tokens and are associated with the protocol.
00:39:56.118 - 00:40:35.986, Speaker A: Yeah, these are hard questions and these are the exact questions that need to be answered to really know the level of security and decentralization that is being added to the lid of kernel crawl through DVT. I am under the impression at least that the validators that get to partake in the simple DVT module, at least for now, is all permission. So the oval network and the SSV network are all vetting and making sure that the people who's part of the DVT clusters and the validators, it's not a fully permissionless thing for sure, but in terms of the exit, I think that is probably all done through smart contracts.
00:40:36.018 - 00:41:10.578, Speaker B: Yeah. And I don't blame them for being permissioned right now because Obel and SSV have a coordination problem among validators. So if you have ten validators with 3.2 e each trying to get to 32 e, there's a distributed key generation event where everybody has to be online at the same time. You have to make sure everybody's running their validator. I don't know what happens if you drop below the threshold if you have to exit your validator, but it's a coordination issue that I assume that design will fix. Like, I like diva staking's thing where you don't have to coordinate with the people that you're running your validator with.
00:41:10.578 - 00:41:49.534, Speaker B: They trustlessly pair you with people. So I think that as DBT design gets better, and I know Obel at least is working on that, I think it'll make it easier to permissionlessly onboard things. So I don't blame Lido for that part. But I would like to see more details on their design. I have seen they have lots of topics or they have a community forum where they post updates and people can submit ideas, but I haven't seen a detailed design structure of what they're actually building. And I sometimes press them on Twitter. Like, I would like to see what you're building.
00:41:49.534 - 00:42:13.218, Speaker B: Why are you building in private? Like, this is Ethereum. Everything should be happening sort of in public, but I see more and more things moving towards like a private closed source type. But a community staking module should be very much built in public, right? Yeah, they're building it semi in public, but I think most of the design is happening behind the curtain.
00:42:13.394 - 00:42:45.322, Speaker A: As soon as you find out, call me. As soon as you know, we'll know. Well, thank you so much, Nixo, for coming back onto the show. I'm so glad that we got to be able to catch up in person here at Denver and we're going to definitely have to have you back to dive deeper into DVT and get an update on some of the other things we talked about around the issuance curve reduction policy and of course, around the continued work for reducing the supermajority risk on Ethereum.
00:42:45.386 - 00:42:48.142, Speaker B: Rad, thank you so much for having me. It's great to hang out with you.
00:42:48.196 - 00:43:13.780, Speaker A: Yeah. All right. Well, thanks, everyone, for tuning into another episode of infinite Jungle. We'll be back again next week. Please be sure to, like subscribe, interact with the show, give us your feedback. We're always looking to improve the show. So anyways, we're going to have more episodes from East Denver coming up in the next couple weeks, so be sure to tune in, and I'll see you guys again next week.
