00:00:10.200 - 00:01:47.694, Speaker A: Welcome to the infinite Jungle. On today's show, I'm going to be summarizing all core developers execution call number 190, the latest Ethereum developer call that happened on Thursday, June 20. Before we get started with the show, here is a quick show disclaimer. I need to remind you to please refer to the disclaimer linked in the podcast show notes and note that none of the information in this podcast constitutes investment advice, an offer, recommendation, or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities. ACDE number 190 was the first call in a very long time that Ethereum developers did not spend the majority of the call talking about the scope of Pektra, the next Ethereum network wide upgrade. They spent most of the time talking about their implementation work, their ability, the progress that they've been making on the code changes they want to implement into the upgrade, and that they have already agreed to include into the upgrade. I think that Acde 190 is a good turning point for how developers are shifting their focus from figuring out what should or shouldn't be included in the upgrade to now finalizing the boundaries of that upgrade, finalizing its scope, and just simply focusing on building out the upgrade itself, making sure that the upgrade will eventually be activated on Mainnet, and doing the work to to make that happen.
00:01:47.694 - 00:02:28.910, Speaker A: So on Acde 190, developers shared an update on their progress on the core Pectra eips. Those eips are the eips that were finalized pretty early on this year. I would say like maybe January or February. Developers had really coalesced around a certain set of Pectra eips, and then over time, over the next couple months, they started adding in new eips such as Eofdemen, peer, Das. So developers gave quite a few updates on their implementation work. For all of those, the coreptre eips, Eof, and Peerdas. They also shared some updates on other parallel initiatives, or I should say lack thereof.
00:02:28.910 - 00:03:14.290, Speaker A: Updates, lack thereof for other parallel initiatives like history expiry. So let's get into first some of the updates on the progress. Again, there wasn't much talk on anything else that they're including, so I think developers have really closed the door. We know now exactly what Pectra will look like. There is still a question of whether or not Pectra will be split out into two hard forks. I think it's very likely, given how much has already been included in Pectra. I really think that developers are should seriously consider and will likely split out the upgrade into two different hard forks, but we'll see how things go TBD on that.
00:03:14.290 - 00:04:45.636, Speaker A: The main focus was of course Petra Devnet one. Developers had a testnet for some of the core Pectra eips a couple of weeks ago, I would say, and over the next week, over the next seven days before the next ACD call, which will be consensus focus call, the next AC DC call, they plan on launching another Devnet, Petra Devnet one. And the two main changes between the specifications that are being tested on Devnet zero versus Devnet one is that Devnet one will now have execution layer triggerable validator consolidations, which is very nice for smart contract staking focused applications on Ethereum that are smart contract based applications like Lido, rocket pool, maybe even certain restaking applications might benefit from this. Basically the ability to consolidate validator balances of greater than 32 eth. That kind of behavior and activity will be that kind of activity and activity. Smart contracts will be able to trigger it from the execution layer of Ethereum rather than having to rely on a validator node operator doing that process manually by submitting a request directly through the consensus layer. So that is one of the features and one of the mechanisms that is being tested for Pectra Devnet one that wasn't tested on Pectra Devnet zero.
00:04:45.636 - 00:06:06.040, Speaker A: The other one is the swapping out the replacement of EIP 3074 with EIP 7702. Developers, due to the controversy around the security considerations of EIP 3074, have decided to take it out of the upgrade. Instead, they're replacing it with EIP 7702, and EIP 7702 will be able to support the same kind of functionality as 3074, but do so in a different way through a different model for transactions and for giving user controlled accounts, that is, EOAS externally owned accounts more programmability and flexibility. This one is the code change that we've discussed on prior shows as it relates to account abstraction and as it relates is something that is very focused on improving the user experience of Ethereum and most execution layer. Client teams are very confident in their implementation work for Pectra Devnet one. The Baesu team, Nethermind, Aragon, Ethereum, J's, Reth, Geth, they all shared updates and if you want the specific updates for every single client team, definitely check out the full call notes that I write up every single week. The one for ACde 190 will be linked in the show notes.
00:06:06.040 - 00:07:45.588, Speaker A: I will just highlight though, that three out of these 16s are very focused on still finishing up their draft implementations of EIP 7702. And the one thing to note about EIP 7702 is for that code change. Developers are not certain about the revocation mechanism for or EIP 7702. So EIP 7702 authorizes certain smart contracts to control the account of a user, to control the assets of that held within that account. And there is quite a push from various client teams and developers that are working on the code change to include a way for users to revoke easily revoke these authorizations that are given through EIP 7702 and the kind of implementation that the EIP 7702 will have on Devnet. One, it doesn't have a robust revocation mechanism. That's something that developers will have to add and are trying to finalize for testing and implementation on a future devnet, ideally the next Devnet Devnet two, Tim Biko, who chairs the ACDE calls, was saying that EIP 7702 and the lack of finality around figuring out, figuring out really what we're going to do about this aspect of this code change, the ability to revoke authorizations that he said, quote this is the number one outstanding spec issue for Pektra, and so developers will be having a dedicated breakout meeting again for finalizing the details.
00:07:45.588 - 00:09:22.508, Speaker A: And one of the leading proposals that was mentioned on the call and that developers discussed for quite some time on this call was a revocation mechanism that allows you to save authorizations that a user has given to various smart contracts to the account of that user itself, rather than including those authorizations into a transaction. Now, I'm not 100% clear on the exact technicalities of this proposal, and light client, who's a pseudonymous geth developer on the call, was explaining it in such a way where the revocation mechanism, rather than living within ephemeral transactions, would live in the account of a user itself, he gave a bit more details around it. But for the exact technical details, I think better to read the pull request, the GitHub proposal that he has created, and I'll actually link to that in the show notes too. For anybody listening, that's a little bit more technically minded. I personally couldn't really decipher the exact technical details of this new proposal, but the one important thing that I got out of it and that I got from that discussion around this proposal is, number one, it's more complex. It'll make EIP 7702 in its implementation more complex for client teams. And that created another discussion within the call with some of the other developers.
00:09:22.508 - 00:11:14.248, Speaker A: The Bayesu developer Daniel Lerner was saying if a significant part of the specifications code specifications for EIP 7702 will change. Does it really make sense to implement EIP 7702 now in Devnet one? And I think he had a really good point that it doesn't make sense to expend quite a bit of work implementing an EIP that will change quite heavily over the next few weeks. And to that I think there was a little bit of pushback. Of course, some representatives of wallet teams, people that service ethereum users with different wallet implementations and wallet softwares, was saying that even a version of EIP 7702, even if it's not the final version, it would be helpful, hopeful to have something like that live on a testnet for wallet teams to interact with to see how it performs, to see how it works. And also Biko was also saying, I say Biko, I said this on the last infinite jungle, but sometimes I refer to these developers by their last name because that's how I write it in the call notes. But his first name is Tim. But anyways, so Tim was saying that because developers are pretty close to finishing up their EIP 7702 implementations from what he had gathered, and he felt confident that developers would at least two client teams would be ready for launching Devnet one over the next week, it probably would do more harm than good removing the EIP 7702 specifications from Devnet one now, and that could just create more bugs and risks for the Devnet launch.
00:11:14.248 - 00:12:58.698, Speaker A: So I also saw that point, but it kind of highlighted the fact that, yes, the scope of Pectra is more or less finalized, at least for the execution layer side. However, among the code changes that developers have agreed to include into the upgrade, developers are still working out quite a few different open design questions for these eips. For certain eips, especially EIP 7702, which hopefully developers will be ready to be able to implement and finalize a pretty stable version of hopefully for the next Devnet Devnet two. But that was a large chunk of the call talking about EIP 7702 progress. The next, I would say major part of the call was sharing updates on other code changes that have already been included into Pectrade. One of them is EOF, this major set of eips that will change and improve the functionality of the Ethereum virtual machine, the EVM that executes smart contract code and calculates how much computational resources certain smart contracts require, certain transactions require to execute prices them into gas, units of gas. The EVM does a lot back in my Coindesk days, when I used to be a journalist reporter for Coindesk, there was an article that one of my superiors, one of the senior, I guess, writers at Coindesk had written, and she wrote it on the EVM and she titled it the Heart of Ethereum.
00:12:58.698 - 00:13:47.432, Speaker A: EVM as the heart of Ethereum. And I really like that analogy. But so Eofdemen has quite a few implementation, quite a lot of implementation and testing work still to be done. Luckily, the specifications, though, of EOF are finalized. So developers are not, you know, in, it's not in the same stage as EIP 7702 in which developers really need to hammer out how they're going to be implementing this thing. It's really about client teams taking the time to look at all these code changes and incorporate it into pectra specifications. And unlike what we had talked about in the prior call, EOF will be developed on top of the pectra upgrade, as opposed to the finalized specifications of Deneb.
00:13:47.432 - 00:14:43.278, Speaker A: Deneb is the last, the most recent upgrade that went live on Ethereum mainnet. And one of the upgrades that will be one part of the upgrade that will be developed kind of in silo, just in an environment. On top of the finalized specifications for Deneb is peer Das. That is a major change to networking that is coming up for Ethereum. That will make Ethereum consensus nodes, consensus layer clients, a lot more efficient when it comes to verifying and propagating data focused transactions. Blobs, we call those blobs on Ethereum, which is a little bit of a funny name. With the upgrade, you had a couple of maybe, I think a maximum of six blobs that can be propagated at any given time on Ethereum per block.
00:14:43.278 - 00:15:53.642, Speaker A: Of course, there's lots of different messages and data being passed around on the networking layer of Ethereum. And the addition of blobs to that networking layer, of course, creates more stress, creates more computational resources required from nodes to be able to move that data around. But very recently, the price of blob transactions actually spiked quite a bit on Ethereum. So there's still a lot of demand, scalability constraints for the data propagation, for being able to process large quantities of these blobs. And peer Das is really all about expanding that capability for Ethereum quite a bit. And peer Das is being developed in silo from the other pectra Eips and a VOF, so that the bugs that are discovered from testing peer Das can be more easily identified and developers won't be confusing it with any bugs related to pectra. But EOF, on the other hand, will actually be tested on top of Pectra specifications.
00:15:53.642 - 00:17:22.144, Speaker A: So as Pectra specifications are changing, EOF is being built on top of that, layered on top of those Pectra eips. And while Petra Eips will definitely be tested on Devnet one, it's unclear when EOF will be added to these devnets. There wasn't a clear timeline for developers shared on the latest call related to seeing EOF on a Devnet. And as I had explained on a prior episode, because the scope of Pectra is so large, it will be really important to continue tracking what eips and what code changes in their implementation is actually being tested on a devnet. So right now we know for sure that there are certain code changes like maximum effective balance, increasing the maximum effective balance that is validated consolidations, reformatting, validator attestations like certain code changes that are actively being tested and on these devnets. But there are others that are being worked on like EOF that we haven't yet seen on a live death net. So I think it'll be a pretty important step when EOF does get included into a devnet to just confirm that it is actually going into pectra and it will be implemented with the pectra mainnet upgrade.
00:17:22.144 - 00:18:54.310, Speaker A: I also think that any bugs and significant challenges when it comes to layering these aspects of pectra on top of one another. So say the core pectra eips on Devnet four all get tested and then EOF is layered on on Devnet seven and then you layer on peer Das and rebase all of the peer Das work onto the pectra specs on say devnet ten. The sentiment from developers around the increase in complexity of of activating all those code changes at once, and the delayed timeline of when developers actually want to implement Pektra I think will result in more I think will result in more developers wanting to split out the upgrade. For example, if the core Petra EFPs are finalized and developers feel really confident about them, but they know that layering on EOF and layering on Puritas will extend the time before those core pectra eIPs goes live on Mainnet, extend that time for say yet another two or four months of testing work to really layer those on and to test it all together. And even then, maybe developers will still feel a little bit uncomfortable about activating all those code changes together. They may decide to split it out into two and schedule those out separately, which would again change kind of the activation timeline for these code changes. So EOF.
00:18:54.310 - 00:20:03.200, Speaker A: There were some updates about implementation work for that, but still no specific timelines around exactly when we'll see EOF on a Devnet. But one kind of programming note I would say around the EOF work is that while client teams are testing EOF and making progress, they have changed their EOF breakout calls from a regular weekly cadence to now biweekly. Given that a lot of the work for implementation happens asynchronously and it's really just up to client teams to spend the time and the resources on that. Client teams are also working on peer Das in parallel, which we just talked about. They expect to have another peer Das Devnet up and running. I believe this is the second one in the next week or two for a similar timeline as Devnet one. You'll also will also likely get an update from developers on the next AC DC call or the next Acde call about the launch of the peer Das Devnet.
00:20:03.200 - 00:21:51.964, Speaker A: And then finally developers shared one of the developers lite client, which who also did the proposal for the revocation mechanism for EIP 772 light client also asked on the call later on if there was any updates on client team's implementation work for dropping pre merge block history. This is an effort to try and minimize the size of nodes, make them more lightweight so that they don't have to continue to, they don't have to continue to carry all of the history of the blockchain data. That might not really even be useful for a node operator creating an alternative network, the portal network, where that kind of data, historical data, block data can be serviced through a different alternative peer to peer network. That's the portal network. There is efforts to create client integrations with the portal network and be able to coordinate around an upgrade such as the Petra upgrade, to be able to finally be able to remove that data. This effort is also sometimes talked about in relation to the broader effort of history expiry, which is of a similar kind of motivation and effort, but would just mean, I think developers decide maybe just nodes, full nodes, just have to keep up and running a year's worth of block data, as opposed to say, when did the merge happen? I think the merge happened in 2022 September. I'd have to go back and see.
00:21:51.964 - 00:22:50.000, Speaker A: But yeah, so being able to really achieve more regularity when it comes to pruning this kind of data and make it more of a regular occurrence for Ethereum nodes. So progress on history expiry is really what lightclient wanted to get an update on and unfortunately there wasn't any updates to be shared. Client teams didn't have anything to say at all really about their work there and I think it's because there's quite a lot of competing priorities. Developers, client teams I should say rather on the execution layer side are working on EOF. They're working on EIP 7702. They're working on, you know, execution layer, trickable consolidations for EIP 7251. There's only so much resources that a client team has and some client teams, you know, significantly less resources and manpower than other client teams depending on how they're financed.
00:22:50.000 - 00:24:17.736, Speaker A: So there really wasn't much. There wasn't any updates on the parallel initiative for history expiring and getting the portal network up and running. So I have a sense that this particular area might not see a lot of progress over the next couple months as developers are really heads down working on Petra, which is a little bit of a shame because the way that developers talked about history expiring efforts for portal network was that it would be one of these efforts that developers work on alongside the other ones for Pectra and try and aim to have it actually ready for Pectra by the time of pectra mainnet activation. But I have a sense that because the scope of the upgrade has already increased so much, this is one of those initiatives that may fall to the wayside or may not be as prioritized by client teams and not ultimately be ready by time of pectra mainnet activation. So those were really all of the updates on what client teams are working on. They are clearly very busy and there was a few other last minute at the very end of the call, a few minor announcements that were shared. One of them Tim had shared was a new default template for eips, Ethereum improvement proposals.
00:24:17.736 - 00:25:16.726, Speaker A: Every time there's a new code change proposed by somebody from the Ethereum community, be it a protocol developer, a researcher, these eips are discussed on ACD calls. But in order to ensure that ACD calls, the agenda doesn't get too packed on these calls, Tim had recommended that reviews of eips actually happen outside of the call first, and he created a template for EIP authors to fill out to facilitate these discussions. Facilitate these reviews. Before the call, he asks that client teams review the template that he has proposed and that can be found on the Ethereum magicians. Post more details about it in the call notes, the full call notes. And then the other thing is one of the Ethereum Foundation DevOps engineers, Perry had shared a new GitHub page called ETH clients. It's got quite a few resources for Ethereum developers.
00:25:16.726 - 00:26:21.276, Speaker A: It has the canonical code configurations for all of the Ethereum testnets and Ethereum mainnet. It's got a few other important tools and software packages that people can use to better understand the Ethereum network run different versions or implementations of Ethereum, and it is maintained currently by a representative from each of the consensus layer client teams. And Perry was asking for volunteers from the execution layer side to get representatives from execution layer client teams to also help maintain that GitHub Page and have it be a resource for the Ethereum community. And last but not least, the other one was related to the next ACDE call. The next ACDE call will happen in two weeks because the ACDE calls are biweekly. And then for next week we have the consensus layer call, the ACDC. But for the next ACDE call, ACdE number 191, that falls on a us holiday July 4.
00:26:21.276 - 00:27:31.872, Speaker A: So Tim had created a poll on discord asking if developers wanted to continue to have the call or if they should take a break. And the overwhelming majority of developers voted to continue to have that call happen, just to make sure that to share updates like they did on this call, on their progress, discuss any open design questions. Maybe there will be some interesting updates for EIP 7702 from the breakout meeting that happens for EIP 7702. So Tim had said, you know, given that he himself, who will be observing July 4, he's gonna take a break from chairing that call. And in his place, Ethereum foundation researcher Alex Stokes will chair the call. And on that note, I too who recorded these shows from New York, will also not be covering the next acde call like I usually do. So there will not be an infinite jungle episode for after that call.
00:27:31.872 - 00:28:56.630, Speaker A: Summarizing Acde 191 although I will probably listen back on the call and maybe if there's anything important, I will shared on this show while I do the AC DC recap the week after. So don't worry, there will still be a regular cadence of Infinite Jungle episodes next week because that's the AC DC call. But I guess as a heads up for July 4 for the next ACdE call, there will not be a dedicated summary from me like I usually do. And I had shared this actually a little bit prior on my Twitter page, but the Galaxy research team is looking for. We have open positions looking for people to join the team, and I personally would love some help covering these calls, being able to have a stand in, similar to how Tim has a stand in when he's not able to chair the calls to come and help me cover Ethereum protocol development. So if you are listening to this show, and you also are very passionate about crypto research and passionate about Ethereum protocol development from a research angle, consider applying to the open positions for Galaxy research because those are open. And I will link to the greenhouse job posting on the show notes for this episode.
00:28:56.630 - 00:30:26.058, Speaker A: So those were a few quick little programming announcements. I think that really the biggest takeaway from AcdE 190 is that developers seem finally confident enough to move away from the scope discussion for Pectra and is now just focusing on the implementation work, which is quite a bit because of all the code changes that are going into Pectra. And for next week's AC DC call, I think it'll be important to watch out and really pay attention to kind of the implementation updates that are happening more for the consensus layer side of upgrades, really focusing on again updates for peer Das, but also potentially updates on the inclusion of say, SSC changes which are changes to data serialization on the consensus layer side that developers are still kind of considering. It'll be important to see if the scope of the Pectra upgrade on the consensus layer side is also in as finalized position as it is clearly for the execution layer side to see how those discussions have progressed since the last AC DC call. So some things to be expected for to, you know, expect from the from the next call. And I will be back to summarize that call and talk about it with you all next week. So thank you so much for listening to the infinite jungle show this week.
00:30:26.058 - 00:30:46.190, Speaker A: I hope you learned something new about Ethereum, primarily on the progress that developers in ranking with the Pectra upgrade. I hope you will join me again for the next episode of this show. I am signing off from the concrete jungle during your explorations of the infinite jungle that is Ethereum. Be safe out there, everyone.
