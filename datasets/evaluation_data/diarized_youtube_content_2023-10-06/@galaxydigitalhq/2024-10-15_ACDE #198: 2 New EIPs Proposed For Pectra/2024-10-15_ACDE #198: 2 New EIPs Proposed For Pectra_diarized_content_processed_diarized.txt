00:00:10.240 - 00:01:02.515, Speaker A: Welcome back to the Infinite Jungle. On today's episode I am going to be talking about the main takeaways from all core developers execution call number 198 where developers talked about two new EIPs for potential inclusion in Petra. We're going to talk about what those two EIPs are as a little bit of a note for people watching on the YouTube, I will be looking at my phone for this episode to refer to the notes of the call because the printer was not working today. So here I am with this. Also, as you can tell it's getting a bit chilly in New York so I have my coat on as well. Anyways, not super relevant to the call, but I thought I'd call these out before we start the show. Also before we start the show, as per usual, here is a quick show disclaimer I need to remind you to.
00:01:02.555 - 00:01:17.835, Speaker B: Please refer to the disclaimer linked in the podcast Show Notes and note that none of the information in this podcast constitutes investment advice, an offer recommendation or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities.
00:01:17.995 - 00:02:21.415, Speaker A: On the call there were two new EIPs discussed for potential inclusion in Petra. And if you're thinking what I'm thinking, it's oh my goodness, developers already have a slate of EIPs that they are considering for Petra. Why consider for inclusion even more code changes? Especially because it wasn't too long ago that developers split the Petra upgrade and postponed the majority of code changes that was going into the upgrade because they thought the upgrade was getting too big. And yet here we are. Developers are now considering two new EIPs for inclusion, but they are EIPs that are aimed at scalability. So the majority of VIPs that developers are considering for inclusion in Petra are related to blobs. They're related to increasing the DA capacity of Ethereum, the ability for even more roll ups to post data to Ethereum, and this is a scalability improvement for Ethereum.
00:02:21.415 - 00:03:43.725, Speaker A: However, the concern around blobs, if you recall from prior episodes, was that increasing the BLOB throughput could negatively impact solo stakers, these users that are operating validators on resource constrained devices. And so in response to the potential that perhaps a BLOB throughput increase will not go into petra, are there other types of scalability improvements developers can activate on Ethereum in lieu of a change to the BLOB fee market? So these two co changes that developers discussed primarily enhance the scalability of Ethereum directly. It is not primarily improvements that target BLOBS or blob capacity on Ethereum. So without further ado, the first one was EIP7782. I believe when it was first proposed there were news articles and other kind of reporting done on this proposal that also called the EIP EIP7781. But I believe the final number, the EIP number that was assigned to this code change or this proposal was actually 7782. But anyways, this was proposed by Nethermine developer Ben Adams.
00:03:43.725 - 00:04:44.735, Speaker A: And what the code change does is it's very simple. It basically proposes the reduction of slot times from 12 to 8 seconds. You can think of a slot time as basically the block time of Ethereum. How quickly the chain produces new blocks, finalizes transactions and the interval between when a block can be proposed right now is 12 seconds long. But reducing it would mean that there's more blocks being produced and a greater transaction throughput. One of the developers, the Ethereum foundation researchers that was commenting on this proposal had said about EIP7782 that this would increase Ethereum's transaction throughput by 50%, reduce transaction confirmation speeds by 33% and make decentralized exchanges more efficient through faster transaction execution. So lots of great scalability benefits.
00:04:44.735 - 00:05:43.215, Speaker A: But there was also several concerns raised about the proposal as well. One of them being of course the increasing rate of state growth on Ethereum. When there's more blocks, if the rate of block production goes up, then state growth on Ethereum also increases. And state is the database, the entire ledger of accounts on Ethereum smart contract code, the account balances. This means that the record, all those records are growing at a faster rate because the new data that's being appended to the chain, new transactions that are being appended to the change reads and writes to accounts, all of that is being updated a lot faster. And so there is the potential that State would be growing at a faster rate as well. And there was discussion about this on the call.
00:05:43.215 - 00:06:49.549, Speaker A: Some of the maintainers, some of the the developers on the call that are working on Virkal, which is an upcoming upgrade to try and radically reduce the state growth of Ethereum. They were mentioning how this is a co change that could negatively impact and make that transition to Virkal harder. Another concern that was raised on the call related to EIP7782 was related to the fact that certain applications may be relying on the 12 second block time as a constant. As a note, developers did say that when you're programming smart contract applications you shouldn't assume that the block time, the slot time for Ethereum will stay a constant 12 seconds. So you should really be using the field. There's a particular field to refer to what the slot time of the network is. But of course there may be certain applications that have hard coded that number in instead of just using a field to refer to the slot time.
00:06:49.549 - 00:07:45.159, Speaker A: So they were saying that if the slot time does change on Ethereum, this could be a breaking change for certain applications that require these smart contract applications running on Ethereum to upgrade. Some of the other discussion that was had about this EIP was that this EIP could have a negative impact related to mev. The shorter that the block time is, the more competitive, I'd say the MEV landscape is. MEV is this additional value that you can extract off of user transactions. And the longer these specialized actors that are looking at user transactions, trying to see what way to order them to extract more value, the shorter the block time is. There could be certain actors in the MEV space that are just not as competitive. They can't, you know, make valuable blocks.
00:07:45.159 - 00:08:51.735, Speaker A: And so you could see a greater centralizing effect happen with the, with the MEV landscape and the actors that are participating and trying to earn mev. It makes the MEV game harder is another way I suppose to put it. So there was a variety of concerns talked about both on the call, but also before asynchronously, when this proposal was first posted, I believe to the GitHub of one of the Ethereum, one of the Ethereum related code repositories. There's a lot of discussion and in response to this eip, there was another EIP that was proposed and this one, the second one was proposed by Aragon developer Julio Rubuffo. He presented EIP 7,783 and this EIP is a less involved change. So changing the block time of course would impact applications, it would impact state growth. Definitely change changes the game, makes the MEV game harder because you have shorter block times, you have to produce your block faster.
00:08:51.735 - 00:09:57.097, Speaker A: This EIP that was proposed by Aragon developer Julio, he explained that this is an EIP that wouldn't even require a hard fork. It doesn't require client teams to make any backwards incompatible code changes. EIP7783 creates a mechanism for client teams to gradually, gradually increase. I was about to say reduce, but I guess it could go both ways. If developers suddenly want to make the gas target lower, but for the effect of trying to increase the scalability of Ethereum this is a mechanism that would allow developers to gradually change the gas target and increase it over time, potentially increase it over time. So what is the gas target on Ethereum? Transactions all have a computational cost associated with it, and these are measured in units of gas. So if there's a transaction or an operation that takes a lot of computational energy to kind of execute on chain, it costs higher gas.
00:09:57.097 - 00:10:46.939, Speaker A: And every single block on Ethereum has a gas limit. So there's a max, a total amount of gas that can be included in a block and there's also a target gas. So on Ethereum I believe the target is 15 million gas. And so the network dynamically prices blocks such that the gas target is always met. This is through the base fee of transactions. The base fee will increase if the network notices that blocks are being filled with transactions that total a gas total that's higher than the target and vice versa, if it's lower than the target, base fee will go down. So this so effectively, if you increase the target, that means more transactions can be included in a block.
00:10:46.939 - 00:11:50.855, Speaker A: That means the size of blocks gets bigger. So to put it very simply, an increase to the gas target, it is an increase to the size of Ethereum blocks. And of course, increasing block sizes is a concern because blocks that are too big could be very hard for again, solo stakers to propagate throughout the network. It requires more performant hardware. So developers really want to make sure that they're increasing the computational requirements of being able to operate a node in step with what the solo staking community has access to. Hardware costs due to Moore's Law does decrease over time, and perhaps solo stakers do have access to a lot more performant machines than say, they used to have when Ethereum set the gas target to 15 million. So there is that bandwidth to be able to increase it, but increase it by how much was really one of the questions that was shared on the call.
00:11:50.855 - 00:13:45.795, Speaker A: And so I think there was a lot more, less hesitation about, I would say the second EIP developers such as Prism developer POTUS and Lodestar developer Gujinder, they both expressed support for the EAP primarily because the mechanism itself to grab gradually increase the gas target is a better one than simply the current mechanism which exists which would, you know, which would increase the size of blocks or any changes to the gas target would not be done in a gradual way. So developers agreed that implementing some kind of a mechanism to increase the target gradually is something that is needed. But the question is, what would that increase be? And for that Some analysis is needed, research is needed on what the right target should be and because it doesn't require a hard fork. One of the suggestions that was made on the call by Tim, who is Tim Byiko, who's an Ethereum foundation, who's the Ethereum foundation protocol support lead and he usually moderates the calls, he's usually the chair of these, of these meetings. He said this could be an initiative that developers focus on right after the Petra upgrade goes live. So he was suggesting that developers focus on Petra and this is one of those code changes that developers could turn to after Petra, get it out the door, doesn't require an upgrade and then move on to focusing on Fusaka, the upgrade after Petra. In my opinion, I don't think that either of these two code changes are likely going to be included in Pectra.
00:13:45.795 - 00:15:40.475, Speaker A: They are alternatives to increasing the scalability of Ethereum without touching the Blob GAS fee market, the Blob transaction throughput of Ethereum. I do think that the second one that Julio presented is more palatable for developers because it does not specify exactly by how much the scalability of Ethereum should change. It's just a new mechanism for which developers could adjust the GAS target and do so in a way that doesn't do so in a safer manner because it happens in kind of like a cliff like manner rather than going from the previous Gas Target to the new one immediately in the span of one block. So I think that developers will eventually kind of move towards adopting that mechanism. But I think the focus right now is Pectra and I don't see a likelihood for either of these EIPs to be a shoo in. I still think that the Blob throughput increase for Ethereum is likely to be going into Petra. Developers have not made a firm decision about whether or not to include EIPs related to increasing the BLOB throughput, but I think those EIPs are, you know, have a higher chance of making it into the upgrade than these two because there are, I think more developers have expressed support in prior calls for the da, the data availability related improvements to Ethereum and so especially the increase to the cost of call data is one that I think developers are likely to include this Tony, who's the author of this EIP, I believe it's EIP 7623.
00:15:40.475 - 00:16:48.971, Speaker A: He shared an update on minor kind of changes to the EAP that he's making to make it more elegant to implement. And then of course the increase to the BLOB target number from I believe the target right now is three blobs per block. Increasing that to four blobs per block is something that developers still have to discuss, but I think it is more likely to get into Pectra than the two that was discussed on the latest call. So let's talk now a little bit about how the conversation how, you know, since last time we talked on Infinite Jungle, how all of this impacts the timeline for Pectra. So far I would say the developments shared on the latest call do not really have a major impact on the PETRA timeline as I don't think either of those EIPs are really likely for inclusion. Developers shared on this call on the latest call that pector DEVNET 3 debugging is almost complete. There was an issue with the Geth client that developers actively resolved during the span of the latest call.
00:16:48.971 - 00:17:52.171, Speaker A: So by the end of the call developers are saying how DevNet 3 is stable again and they can move on to DevNet 4. DevNet 4 has not yet launched. Developers are trying to aim to launch the next DevNet by Thursday, October 17th and if if they succeed, I would budget about two weeks time for developers to debug DevNet 4 and make sure that it's stable. If they're planning to launch Devnet 4 by October 17, two weeks from there, that puts you at the end of October. By the end of October developers are now starting to prepare for devcon, which is the annual Ethereum developer conference. This year it's happening in Bangkok, Thailand. As discussed both on this week's call and last week's call, developers are trying to create and build a public Pectra testnet for all the attendees of the conference to hack on build applications on start interacting with the code changes.
00:17:52.171 - 00:19:30.025, Speaker A: So I would imagine that a version of DevNet 4 is used to create that public pectra testnet. However, I will note there were a couple of major changes related to the BLS precompile. This is a new cryptographic scheme, cryptographic signature scheme that creates some very helpful kind of privacy enhancing features for applications. Greater ability to be able to integrate zero knowledge technology into these applications. The precompile for that, the pricing, there's still quite a bit of conversation around how exactly to price those new precompiles and those changes that are coming to the precompile has not yet been confirmed. Those changes are likely to be finalized for testing in DevNet 5, which means that there are still some work that's going to be done on the code changes that are on Devnet 4 that developers will need to test out on Devnet 5. And so there could be a limited as application developers are testing their applications on the public Pectra testnet, they should still anticipate some things about the code changes to change when those code changes are actually live on mainnet and we'll likely have to test those applications again when Petra is ready for rolling out on the public Ethereum testnets like Holski and Sepolia.
00:19:30.025 - 00:21:16.384, Speaker A: Noting that I think that Devnet 4 and the public testnet launch for Devcon will really keep developers busy at least until mid November. Once devcon is over, I think developers will switch their focus to the next DevNet DevNet 5 where again they'll input in all of these other code changes that they've been putting off that they hadn't included in DevNet4 the BLS, the finalized pricing for BLS signatures and as debugging work happens for DevNet 5 developers will have to I would hope reach an agreement about the finalized scope of the upgrade, the inclusion of the DA, the blob related EIPs or which I don't again I don't think this is likely but or some of these other the other one or the other of the scalability EIPs that was discussed on today's call. So kind of finalizing the scope of Pectra what other code changes to include and then move on to incorporating those code changes onto a DevNet and testing those new EIPs properly and those I think that's, I think going to take some time. That's going to take at least one to two devnets to really test out those new aips. So I think budgeting about a month for that makes sense. After mid November you've got work on DevNet 5. I think December will be a time where developers are really talking about the finalized scope of the upgrade, planning out when to implement the new code changes onto a new DevNet.
00:21:16.384 - 00:22:31.715, Speaker A: I think January is going to be more DevNets DevNet 6, DevNet 7 hopefully in February, March, hopefully by March developers will be ready to start updating the public Ethereum testnets with the final specifications of the PETRA upgrade. By that point, I think the clarity around when PETRA will go live on mainnet, things will be a lot clearer. There will be more clarity then. So there you have it. A little bit of I don't think the timeline really has changed that much since the prior call. I will say that those two new EIPs that were proposed do illustrate and emphasize how creative developers are getting about different ways to improve the scalability of Ethereum. There's of course increasing the scalability of Ethereum as a data availability layer, but as you can tell, there are these other code changes that would improve the scalability of Ethereum as its own chain, as its own execution layer as well.
00:22:31.715 - 00:23:20.491, Speaker A: This is a bit of a shorter episode this week, but that's because there wasn't too many important updates, I would say, shared on the call. As always, you can get the full write up of what was discussed on ACDE198 linked in the show Notes I hope that you will join me again for another episode of the Infinite Jungle in another week. Actually, the next Infinite Jungle episode will be a guest episode as per usual, and that will come out tomorrow on Wednesday. So I hope you will tune in for that. I hope that you learned something new about Ethereum on today's episode. Thank you again for tuning in. I am signing off from the concrete jungle that is New York City in your explorations of the infinite jungle that is Ethereum.
00:23:20.491 - 00:23:21.355, Speaker A: Stay safe out there.
