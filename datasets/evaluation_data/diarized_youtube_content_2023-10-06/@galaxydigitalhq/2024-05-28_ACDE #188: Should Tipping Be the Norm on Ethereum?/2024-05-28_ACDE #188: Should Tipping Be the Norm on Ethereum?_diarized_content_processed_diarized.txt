00:00:10.200 - 00:00:56.554, Speaker A: Welcome to the Infinite Jungle. On today's episode, I am going to be talking about what developers discussed on all core developers execution call number 188. It has been a little bit of time. It's been two weeks since I did one of these solo episodes, and a lot has happened, not only when it comes to Ethereum core protocol development, but also some very important regulatory updates, at least for many people in the US, for the native currency of Ethereum. So we are going to be diving into some of these updates. I'm very excited to be back and doing this show again, or this version of the Infinite Jungle episode. We're going to jump right in.
00:00:56.554 - 00:02:17.394, Speaker A: But before we do, here is a quick show disclaimer. I need to remind you to please refer to the disclaimer linked in the podcast show notes and note that none of the information in this podcast constitutes investment advice, an offer, recommendation, or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities. So before we get into ACDE 188, I want to give a quick shout out to a very exciting development that happened over the last couple of days, and that is the US Securities Exchange Commission approved the 19 v four applications for ETH spot ETF's. This is a huge win for the crypto industry. There was so much surprise at this very quick turnaround for the ETH spot ETF approvals for the last several months. I'd say after the bitcoin spot ETF was approved in January, there weren't many people who thought that the spot ETH ETF would actually be approved in this cycle, in this year even. But over the last couple days, there's been a significant shift in political sentiment around crypto among regulators and lawmakers.
00:02:17.394 - 00:03:40.172, Speaker A: And we've seen that not only with this ETF decision, but also with a couple of other bills that have gone through that have been approved in the US. So I just wanted to give a little bit of space on this episode to celebrate that decision. This is, again, another indication that perhaps the regulatory sentiment in the US for crypto products and crypto businesses is shifting for the better. And the fact that 19 B four s were approved means that there is a very efficient and widely accepted financial vehicle through which institutions in particular could now invest in ETH ETH, the native asset of Ethereum. And this is also a big regulatory de risking event for Ethereum and ETH asset securities. If an asset is deemed a security, there are stricter requirements for the purchase and the sale and the exchange of securities securities assets. But for ETH in this process of getting the spot ETF applications approved, this is basically a nod from the SEC affirming that ETH is not a security.
00:03:40.172 - 00:04:49.880, Speaker A: And now there are some lingering questions because the 19 B four applications that were approved only approve spot ETH ETF applications and products where the asset, the, the ETH is not staked. So there has been some speculation around whether the SEC may try to loop a thread where staked ETH is a security. But that is not fully, that's not for sure. And that's obviously not, that's something we'll have to wait for further clarification about. But at the very least, and I think this is still a big derisking, a regulatory derisking event for ETH in that ETH, the native asset unstaked, is not a security. And it offers quite a bit of clarity for other crypto projects, for other types of cryptocurrencies. It lays a very clear path for how to be approved in the US for having like an ETF, a spot ETF application.
00:04:49.880 - 00:05:47.554, Speaker A: Bitcoin clearly was the first to run this very long. It took several years for the bitcoin spot ETF to be approved. And the rationale that the SEC gave for its approval is almost exactly the same rationale for approving the ETH spot ETF. Both assets are traded on a regulated market, on a CME futures market. And that is one of the core reasons why both of those assets, the SEC deemed could also be traded in a spot ETF vehicle as well. And so it's a confirmation, again, it wasn't just bitcoin that the SEC deemed, not as a security and approved for a spot ETF vehicle, but also now eth. So really great progress, I think, being made.
00:05:47.554 - 00:07:28.452, Speaker A: And one of the other kind of lingering questions outside of ETH's status as an asset when it's staked is also the fact that these 19 B four s are not the only round of approvals that still yet need to happen before the ETh spot ETF products go live. There is another forum, another process, where s one s for these ETF products actually need to be approved. So there's quite a bit of speculation also on when, how long it's going going to take for the SEC to approve those s one s and for us to actually see the ETh spot ETF's go live. So this is not to say that everything is completely done and over with, but I think the approvals very recently were quite a shock to this industry, a pleasant surprise, and definitely a pretty big milestone in regulatory, in regulatory events in the US for the crypto industry. So not related to Ethereum protocol development, which I know is what usually our listeners are here on this episode, here on this show to get. But I just wanted to highlight that and highlight the significance of it because yes, it definitely made me happy seeing as I work in this industry and I focus a lot of my attention on Ethereum. But back to the technology of Ethereum and back to giving you guys a little bit of an update on what's been going on on the protocol.
00:07:28.452 - 00:08:39.254, Speaker A: The core protocol development side of Ethereum developers came back from a one week hiatus from these developer calls and they came back for Acde 188. They talked about a bunch of different topics. I will highlight just a few of these that I think are the most important to summarize. If you want the full detailed overview of exactly what was talked about in what order, be sure to check out the full write up which is linked in the show notes. The first kind of main topic of discussion, I would say, was around the topic of default minimum priority fees on Ethereum. The way that you attach fees to transactions is through the base fee and the priority the tip this is actually a pretty new invention that was implemented on Ethereum in the last few years. Ethereum didn't always have the separation of the fee attached to a Ethereum transaction, the split of it being the base fee and the priority tip.
00:08:39.254 - 00:10:17.772, Speaker A: But they implemented this structure to improve the user experience when submitting a transaction to Ethereum. The most important thing to know about this tip and about the way fees are calculated on Ethereum is instead of users having to guess what is the optimal amount amount of fees to attach to a transaction in order for that transaction to be included in a block, instead of having to guess and say, oh, you know, I'm going to send to ETh and I really want to make sure that it gets accepted into a block, that a validator, aka a block proposer, looks at that transaction and puts it into a block for that transaction to be processed and finalized on chain, users don't have to look at how busy the network is, don't have to do their own analysis on the fees that were the average fees that was included in transactions in the prior finalized block. The network will calculate it for the user. The user. All they have to do is set a max willingness to pay. They say, I'm willing to pay a maximum of this amount of fees for this transaction to be included on chain and the protocol has a mechanism to determine what the base fee for all ethereum transactions should be in a particular block. And if your willingness to pay is a lot higher than what the network deemed was the appropriate base fee, the network will refund the user back the difference.
00:10:17.772 - 00:11:11.024, Speaker A: So that's what the base fee is. And if you do not set a high enough willingness to pay, your transaction is actually invalid. Your transaction will definitely not be included in a block in the block where the base fee is calculated. However, if the base fee of course goes down in the next block, then maybe you're able to get in a later block. But that mechanism is not the only mechanism. There's another one which is a priority tip. And the base fee is really designed to ensure that the guessing game of what is considered a transaction that can be included in a block, that should be included in a block, that guessing game is not on the user, and the protocol is really dictating the clear threshold through which transactions should be considered valid and should be included in the network.
00:11:11.024 - 00:11:59.066, Speaker A: And those base fees, I should also mention, are burned. They are not given as a reward to the block proposer. The network simply takes that eth out of circulation. The priority tip, however, has a much different dynamic and it's a different mechanism, optional for users to pay technically. And the idea of the priority tip is so that a user can try and get their transaction in in the very next block. So instead of the transaction getting in in any of the blocks in the future, it's not a time sensitive transaction. The user technically should only have to pay the base fee, and that for that transaction to be valid and included in a block.
00:11:59.066 - 00:12:38.646, Speaker A: But if there is time sensitivity to that transaction, it really has to go in the next block. Develop. The user sending that transaction really wants to get it in. They can attach a priority tip which goes directly to the block proposer. It's an incentive mechanism for the block proposer to take special priority of that transaction. So that is how transaction fees work on Ethereum today. And even before these mechanisms were introduced through the EIP 1559 code change, the London upgrade, the Geth client on Ethereum.
00:12:38.646 - 00:13:45.450, Speaker A: This is the software that validators, block proposers run in order to connect to the network, in order to validate the rules of the network. And the Geth client, which is the majority execution layer client that nearly all node operators run, their dominance is I think somewhere around 60%. Although the data analytics for even determining the client diversity of Ethereum is a little bit finicky. Geth is a very, very popular client and I think it's around 60%. That 60% of node operators run geth. Since the very beginning of ethereum, even before the priority tip and the base fee were implemented, the Geth client had a default setting where transactions without any tip at all, no, just zero fees attached to the transaction, would not be considered valid. They had a default minimum fee, a default minimum threshold for transactions considered valid.
00:13:45.450 - 00:14:39.202, Speaker A: And now this default. Of course, the person running the geth client can adjust so that the default is higher or lower, or doesn't exist at all. But they had this to kind of encourage the norm of transactions that would give value back to the block proposer. And ever since the mechanisms of a base fee and a prior tip were implemented on Ethereum, the default was shifted to a default priority tip, default minimum priority tip for that transaction to be valid. And again, this was just a default. So people running the geth client could always change it. And ever since the merge, which is when ethereum transitioned from proof of stake to from proof of work to proof of stake, that default mechanism was not working in the way that it should have.
00:14:39.202 - 00:15:13.570, Speaker A: Basically, the default was not being enforced. And to be clear, the mechanisms of a base tip and a priority free were implemented before the merge. The merge happened in 2022, I think the London upgrade happened in 2021, if I'm not mistaken. And so the default was working. But then at the merge, the default stopped working. And Geth developers very recently noticed that it wasn't. So they rejigged it, they fixed it so that the default priority tip was being enforced.
00:15:13.570 - 00:16:22.394, Speaker A: And when they did that, the default was set to one GUI. So at the very least a transaction should have, in a priority tip associated with it of one GUI. And this caused a bit of pushback from users on Ethereum who are running, who noticed that all of a sudden blocks produced through the Geth client were significantly emptier than blocks produced by other clients. It was clear that a lot of transactions were not being included in the block because of this default setting. And so this created a bit of controversy, which was then discussed on the latest Ethereum dev call, and developers discussed whether or not the default there should be a default at all. And one of the reasons why I think the default was created such a was so noticeable in terms of why geth blocks were so much emptier than other blocks, was also because right now transaction fees on Ethereum are quite low. The base fee on Ethereum is quite low.
00:16:22.394 - 00:17:42.389, Speaker A: The protocol is noticing that there's not quite, there's not a lot of congestion or transaction activity happening relative to other parts of Ethereum, of the Ethereum network's history. And so the base fee, I believe is maybe like five or six GUI. So having a default priority fee, a priority tip of one GUI, is quite significant. So yes, so I think the geth developer who brought this up, Peter Sisigali, I hope I'm saying his name correctly, even though I may not be apologies, Peter, he made a pretty good point that a lot of this is a philosophical decision. One of the things to note is of course the network. Even if a transaction doesn't have a priority tip attached to it, it will still consider transactions that have a base fee but zero priority tips valid, and hence those transactions should be included in a block. But the only thing is, with this default, it could mean that those transactions don't get into a block for an extended amount of time until there's a block proposer that doesn't have that has, that has either changed that default setting or is using a different client that doesn't enforce any defaults.
00:17:42.389 - 00:18:36.714, Speaker A: For the minimum priority tip, that transaction is not going to be included. And it's a philosophical kind of argument or topic to think about. Because while the network, of course, would prefer that these transactions get into a block, so long as there's space for them and it's valid, the base fee is paid. There's not a ton of reason, economic reason, for a financially motivated actor like a block proposer to include those transactions into a block. It introduces latency to the time in which they're building that block, even though a lot of proposers on Ethereum don't actually build their own blocks. But we're not going to talk about that right now. The idea that these financially motivated actors that are preparing blocks, there's really no reason for them to include a transaction without any priority tips.
00:18:36.714 - 00:19:57.042, Speaker A: The base fee, of course gets burned, and so it would be a little bit altruistic for them to include, to fill up the empty block space with all of these transactions. And I think another kind of aspect to this is what the base fee is really meant to do and what the priority tip is really meant to do. And so it was an interesting discussion, but at the very end of the discussion, I think developers were clear that because this is a default setting and can be changed, the Geth team should be free to set the minimum to whatever they want, and users are of course free to change that setting or to use a different client. And the Geth team, I believe, will do a little bit more research on what that minimum should be and can and possibly lower that more likely. I think it's very likely that they will lower that minimum priority tip to something around 0.01 instead of one way, because again, the transaction, the base fee on Ethereum at present is already quite low. I think it, I think this was more an educational, I guess, explanation of why developers were talking about it and how fees work on Ethereum.
00:19:57.042 - 00:21:23.848, Speaker A: But in the grand scheme of things, it's really not that important, I think, to the protocol or network health if the default and the minimum priority tip was mandated in some way, shape or form across all clients, I think that's when it would be a much bigger issue. It could potentially change the dynamics of bay fees and priority tips. It would be making a little bit of a stronger statement on whether or not financially motivated actors like validators and block builders should be including these transactions. But I think because developers have really left it up to the clients, the client teams, and there's more than one client team on Ethereum, more than one client that users are able to run, and this default setting is optional. Again, it really doesn't matter all that much. So all this to say, I think in my very weak opinion, it is better not to have any minimum priority tip, any setting, even a default, so that the purity of what the base fee is meant to do and what the priority tip is meant to do is held intact. I think enforcing, not enforcing, but I think setting, even a default, has the potential to potentially skew the mechanisms of what EIP 1559 was meant to do.
00:21:23.848 - 00:22:46.084, Speaker A: However, I also understand the logic and the rationale of trying to create a norm in which block proposers are encouraged to, are financially encouraged and motivated to include transactions into a block. So lots of different kind of, lots of different kind of ways in which you can think about this. And developers really did take the time in going over this issue and going over all of the concerns that users raised about the default minimum priority tip. But I think at the end of the day, and I think at the end of the conversation, it was clear that, you know what? It's up to the Geth team, and it's not a default setting that is enforced in any client, and the Geth team is free to do what they wish, and users that are unhappy with it always have the optionality to use a different client or change the default settings. So we're going to leave it at that. I hope that did clarify, however, an important detail about how fees work on Ethereum that may become relevant for other discussions when it comes to Ethereum's fee dynamics and Ethereum's fee mechanisms. Let's move on to what I'm sure a lot of people want to hear about and get an update on, which is Ethereum's next upgrade, Pectra.
00:22:46.084 - 00:23:34.732, Speaker A: We talked on the last one of these infinite Jungle episodes where I was recapping an ACD call that developers are preparing for their very first multiclient test network, Devnet, for Pektra, and they launched it. So the first Pektra devnet is live pectra devnet zero. And developers are working hard and they're trying to very quickly move on to the next Devnet devnet pectra devnet one. But I'd like to highlight a few aspects of the Devnet zero to just highlight that testing is really still in the early stages. We're going to have multiple devnets. This is the first of many. So to be clear, developers are still debugging Devnet zero.
00:23:34.732 - 00:24:32.954, Speaker A: There's kinks in client software that they need to work out. There are certain eips, like EIP 3074, that hasn't been robustly tested on Devnet Zero. There's edge cases about these eips and the interactions of how certain code changes being implemented in Pectra. It will impact other code changes also impact included in Pektra, basically the knock on effects of two eips that are touching the same part of the Ethereum code base. Those kinds of deep testing has not yet been done on Devnet zero, really. Developers have only tested these eips in isolation for client implementations. So while it definitely is again a win, a little bit of a milestone in the journey to get Pektra implemented on Ethereum mainnet, it is still early days for testing, and there's quite a bit of testing that hasn't yet been done on Devnet Zero.
00:24:32.954 - 00:25:17.924, Speaker A: Developers, though, are trying to move on to Devnet one, where client teams are going to be releasing updated versions of their clients for testing on Pector Devnet one. And one of the things they agreed upon on the latest call is actually to remove EIP 3074, which is quite nice because EIP 3074 wasn't even robustly tested on EIP devnet zero. So we can probably skip a little bit of work there. They've decided to remove EIP 3074 for Pectra Devnet one and include EIP 7702. We've talked about these two eips on the call. They are related to making user controlled accounts on Ethereum. Ethereum EOA is a lot more programmable and flexible.
00:25:17.924 - 00:26:24.224, Speaker A: EIP 7702 is the newer version of EIP 3074 that was proposed by co founder of Ethereum, Vitalik Buterin. But there are important implementation details of VIP 772 that developers still need to work out. So while it is while developers have the intention of including it into the next Devnet for Pektra, developers are going to have a breakout meeting to really hammer out the final details of what EIP 7702 looks like. And I think there is still a bit of controversy around how this EIP should be implemented, particularly around the revocability of authorizations enabled through this EIP. So it by no means is an Eip. I think that is a shoe in for Pectra. I think it's fairly clear, I'd say, that developers are not going to move forward with EIP 3074 because of the lack of consensus around that EIP from the Ethereum community and Ethereum stakeholders, but TBD and it remains to be seen whether or not EIP 7702 is a suitable alternative.
00:26:24.224 - 00:27:19.592, Speaker A: Developers also discussed a few other pending code changes that they're still deciding whether or not it should even be in Pectra. Eof is one of those, those code changes still TBD. We had an entire episode on that infinite Jungle episode on EOF, an interview with Dan of if you'd like to learn more about EOF, we developers also discussed the status of EIP. Any updates? They discussed updates to EIP 7623. They increased to call data cost, which could help increase the blob count on Ethereum EIP 7212, which is a precompile for a new cryptographic signature scheme. There's already the BLS signature scheme going into Pektra, but this one is one that's being implemented on L2 s. So it was presented, it was rediscussed on the latest Ethereum and dev call for potentially including it in Pectra.
00:27:19.592 - 00:28:35.288, Speaker A: So that there's some parallels, there's some similarities between what's being implemented on L2 s and layer one. So quite a few code changes that may or may not go into Pectra. I think one thing that was really clear from the latest call is that developers want to finalize the scope of Pectra, especially because there's a lot of concern that Pectra may not be ready for this year, ready for activation this year, and there's no way that developers can really focus and start developing full steam ahead for an upgrade that continues to change. For an upgrade, who's that's which if the scope of the upgrade continues to change. So while while developers did discuss a few more options, I think the sentiment was that in two weeks time on the next Acde call, they really want to try and finalize the scope of Pectra. And to that, developers talked again about the timeline for Pectra. And while developers, I think have been talking a lot about timing for Pectra, I think the discussion is really not at all about timing and really more about complexity.
00:28:35.288 - 00:29:25.628, Speaker A: Because it doesn't really matter if the Petra upgrade happens in late 2024 or early 2025. I don't think that in the grand scheme of things, it matters if Ethereum does have an upgrade once every six months. That hasn't been the way that upgrades have ever happened on Ethereum. Sure, developers may have tried to keep a very regular cadence of upgrades on Ethereum, but the governance of Ethereum, as we've talked about on this show, is chaotic, as it should be. It's a decentralized protocol that doesn't always have a strict timeline for how things should happen. Heck, the merge was several years, I think over seven years delayed. So I don't think that timing really matters.
00:29:25.628 - 00:30:39.082, Speaker A: When Pektra happens doesn't really matter, but the complexity of the upgrade does matter. And one of the things that the testing team of Ethereum has raised is the concern that if we try and include and pack as many code changes as possible into pectra, then it's a risky upgrade and it will take a long time, of course, to test. But even with that amount of testing and as much testing as possible, the fact that these eips have compounding effects on one another could present some challenges for testing. And hence there was a proposal to potentially split pectra into two different hard forks, two different upgrades that happen one after the other. And this of course would delay the upgrade that developers were planning to do after Pektra, which is an upgrade that would include changes to Ethereum's data structure. The Verkl upgrade, which is also something that developers, that developers who are working on Virkl currently was concerned about, this proposal to actually split Pektra into two hard forks, because that would delay Verkl. And so I think really the question is about upgrade complexity, and another question is about priority.
00:30:39.082 - 00:31:30.548, Speaker A: Developers also mentioned that one of the things missing from the current scope of Pektra is a clear improvement to Ethereum's data availability capacity. Can we increase the number of blobs? And should that really be the basis and the main focus of Pectra, not these code changes that are improving the user experience of Ethereum L1, and I think that's a valid concern. I think there's a lot of competing heating priorities in the Petra upgrade right now. Developers have shared concerns about Ethereum, censorship, resistance, it's decentralization. And there are code changes that could be prioritized in Pectra to tackle those issues. There are eips that could be included in Pectra to tackle the issues of user experience. Like EOF.
00:31:30.548 - 00:33:22.822, Speaker A: There are clearly code changes that could be included to tackle the issue of scalability through L2. And so I think developers are still in a position of deciding what the priority should be for Pectra and how to ensure that the complexity of that upgrade is not too much, that it risks the health and the security of Ethereum. So timing discussions aside, taking out whether it happens in late 2024, 2025, I think the real focus of what developers, of what developers really need to coalesce and create consensus around is the level of complexity that they are comfortable with deploying in one upgrade at once. Like what is the level of code complexity that the testing team of the Ethereum foundation is comfortable with testing? At the same time, if there's just too many eips that interact with one another in complex ways that they are certain they want to split out and make sure that the impact of one is live on the network before implementing the other, then I think that is a very valid argument for why the pectra upgrade should be split into two. And then, of course coming to consensus about what the priority of Ethereum should be right now. What is Ethereum trying to be? What is the most important issue for Ethereum to address in the next immediate hard fork? So these are some big questions that developers are wrestling with. And again, I think aside from timing, the real question is around complexity and Ethereum's the network's priority.
00:33:22.822 - 00:33:44.034, Speaker A: What is Ethereum trying to prioritize? So that's it for today's episode. I hope that you learned something new about Ethereum and Ethereum's core protocol development. Thank you for listening to this episode. I am signing off from the concrete jungle, New York City. And until next time, stay safe out there. Everyone.
