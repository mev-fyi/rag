00:00:10.080 - 00:00:58.512, Speaker A: Welcome to the infinite Jungle. On today's show, I'm going to be talking about all core developers consensus call number 135. It was a call where developers talked about their preparations for Pektra and specifically their preparations for peer Das, which they have recently decided to include in the Pectra upgrade and has created some concerns around the increasing scope and complexity of the Pectra upgrade overall. So we're going to talk about the discussion and the debate that had been had on ACDC 135. But before we get started, a quick programming note about this week's shows. Usually we have two episodes that go out per week, but this will be the only episode that goes out this week. Buckle in.
00:00:58.512 - 00:02:49.586, Speaker A: We're going to be talking about AC DC 135, and for what you can do on your spare time on the Wednesday where usually the episode is published, it's actually a holiday in the US, it's the juneteenth holiday. So for that day, instead of listening to this podcast, you can spend that time with maybe friends or loved ones. And also, before we get started, the other thing that we'll do, as per usual, is get started with a quick show disclaimer. I need to remind you to please refer to the disclaimer linked in the podcast show notes and note that none of the information in this podcast constitutes investment advice, an offer, recommendation, or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities. All right? On ACDC 135 before developers went into their progress on Pektra, they spent some time giving two very quick announcements. The first announcement was that the Ethereum package Kurtosis module would be migrated from oversight and management and development by the Kurtosis team to the Ethereum foundation, specifically a team within the Ethereum foundation under the developer operations team called EtH Panda Ops. They're a team that is dedicated for testing that Eth Panda Ops became a thing, became a group of developers within the Ethereum foundation primarily during the time of the merge, when there needed to be quite a bit of intensive testing efforts dedicated to making sure that that upgrade went well.
00:02:49.586 - 00:03:54.718, Speaker A: And the Kurtosis module that will now be overseen by the ETH Panda Ops team is the module that developers have used quite heavily already. This is a software package that developers use to spin up Ethereum test nets. And not only does this package spin up the testnet, but it also spins up necessary tooling for monitoring and tracking that testnet. And so it's a really important tool that developers will continue to use quite heavily and in this migration process, from having it overseen by the Kurtosis team to now the Ethereum foundation. There may be differences in links for where that package is hosted. Various redirects are currently being built. So for any users out there that have been using that package, please note that now further iterations of that software will be coming out from the ETH Panda Ops team as opposed to the Kurtosis team.
00:03:54.718 - 00:06:05.156, Speaker A: So that was the first announcement, and then the second announcement was by Ethereum foundation protocol support lead Tim Biko, who had mentioned this on the prior ACD call last week. But now hes created a draft proposal for the new labels that hed like to implement on eips Ethereum improvement proposals, the three labels that he wants to formalize is the scheduled for inclusion label considered for inclusion and proposed for inclusion, basically identifying what stage of this EIP? What stage is this EIP in? Is it just proposed for an upgrade? Is it being considered for an upgrade, or is it finally scheduled? And as I mentioned on the infinite jungle show last week, I don't think that these labels are going to be helpful. I think the time spent debating on what the label of EIP is could be better spent talking about the merits of the EIP, talking about the implementation work that has happened on that EIP, and really whether or not that EIP is going to be included in ultimately included in an upgrade or not. Most of the, you know, whether an EIP has the label of being cfied or not, it doesn't help the EIP's case for whether or not it gets included into an upgrade ultimately. So the amount of time spent labeling these eips with labels that don't actually really matter at the end of the day, I think the time could be better spent identifying other properties or aspects of an EIP's progress that are a bit more objective and forward looking to what suggests that the EIP will actually be included in an upgrade or not. But I digress. We're not going to get into that because it's not actually that important.
00:06:05.156 - 00:07:16.598, Speaker A: The most important part of the call was really about developers implementation work with peer Das. So first, let's talk about the core pectra eips. The core Pectra eips that are being implemented on Ethereum include some pretty major changes to Ethereum's validator dynamics to Ethereum's for other aspects of Ethereum's core protocol and peer das is a code change that will only impact Ethereum's networking layer. The way that Ethereum nodes validate and propagate data through the peer to peer networking layer of Ethereum. It doesn't change the core protocol, the core rules of the Ethereum network, the Ethereum blockchain. So on the topic of what will impact the core protocol of Ethereum, the core Pektra upgrade itself, developers are preparing for the next Devnet. They had successfully launched Devnet Zero, but it was quite a janky testnet full of lots of bugs.
00:07:16.598 - 00:08:18.694, Speaker A: And developers are getting ready to launch the next iteration of the Pectra Devnet. And this iteration, Devnet one, is going to be based on new specifications. We talked a little bit on a prior infinite jungle episode about how these upgrades are tested. And for Devnet one, there's going to be a new set of code specifications, code specifications that client teams will then implement into a new client release. So developers talked about the next major specs released for the consensus layer of Ethereum, because this is the AC DC call focused primarily on consensus layer progress and development. Next week we'll have the execution layer call, but for the consensus layer side of the upgrade, and this upgrade is called Elektra, the major release that's going be coming up is version one, 5.0 alpha three, and developers are really putting in their finishing touches on those specs.
00:08:18.694 - 00:09:10.711, Speaker A: There's a few parts of the specs that developers need to hammer out. Still, there's questions about whether or not those specs should include support for things like validator consolidation triggered by the execution layer. There was some talks around data formatting that developers resolved on this week's call. So once the latest and the new version of lecture specifications are out, client teams have said that they should be able to put out a release within one to two weeks of the specs being finalized and thereafter test all of those releases on Devnet one. So progress is being made. Pectra is slowly but surely coming together. And that was the state of affairs for Pectra.
00:09:10.711 - 00:10:57.570, Speaker A: Moving on to peer Das, which, as I mentioned, is the networking change, a major networking change coming to Ethereum that is supposed to enhance Ethereum's data availability capacity, the ability for Ethereum to verify and propagate and act as this data availability layer for L2 rollups. When large amounts of data are submitted to Ethereum, that's quite a heavy load on nodes to be able to validate and process all of that information and of course store it then on the network as well. But this mechanism of data availability sampling, basically not having to require notes to download the full amount of data, but rather sample different parts of it, and through some math that is beyond my pay grade or beyond my educational level that but through probability and through mathematics sampling that data nodes are able to have 99.99, near 100% certainty that the full data was submitted and verify that data and propagate it around. So peer das is quite a major change to Ethereum's networking that is upcoming, and it seems now to be the headliner for Pektra. There was months in which developers really spent time on what core Pectra EIPs should be included in the upgrade and not. But very recently developers have decided to include peer Das as well into the Pectra upgrade.
00:10:57.570 - 00:12:03.430, Speaker A: And while this is a networking change, this does appear to be the headlining feature of Pectra now. And on the latest developer call, developers really talked about many different aspects of how peer Das will be tested. Developers are very adamant that they want it ready for the Pectra upgrade, so being able to implement it simultaneously or shortly after the other Pectra eips are activated on mainnet. And we had talked on the prior infinite jungle show about how the testing for peer Das would be a little bit different from the other Pectra EIPs. It would be activated on a different epoch than the other Pectra EIPs. So you'll see on devnets and testnets the Pectra EIPs activated and then say the networking change through peer Das on a later activation epoch. Now, developers had a few breakout calls since then, just part primarily to focus on peer das development.
00:12:03.430 - 00:12:59.300, Speaker A: And there's been some changes on how developers are planning on working on peer Das and the sum of what they're talking about. Basically the major takeaway is that peer Das is going to be developed even more separately than the other Pectra eips. So not only is it going to be activated on a different epoch, but it may just be tested on entirely different test nets, entirely different devnets. Basically, developers will move forward with implementing pure das on the state of Ethereum. That has already been activated, that has already been finalized through the Deneb upgrade. Deneb is the latest upgrade that has gone live on Ethereum. That is the most recent network wide upgrade that has happened on Ethereum.
00:12:59.300 - 00:15:33.860, Speaker A: The most recent code changes that have been finalized and is live on Ethereum, mainnet and peer to will be implemented as if those are the only code changes that have happened. This is so that peer Das can work. Developers working on peer desk can work on a more stable foundation of protocol code than say, if they tried to implement pure Das and Pectra EiP simultaneously developers had talked at the latest call about the difficulty around trying to identify a bug if both were being implemented at the same time. Is this a networking bug, or is this a bug associated with the core pectra eips? So the core pectra eips, of course, will also be developed and tested on top of the Deneb upgrade, as will peer Das, and at a later date, once both code changes, once both implementations are more stabilized, that's when developers will try and do the merging work, the rebasing work to make sure that peer das works on top of the pectra eips. Pushback from developers on the call of why not just simply do the heavy lifting now and rebase and continue to work on both simultaneously? Activate them on the same test nets, work on peered ass on top of the pectra eips, but again, for the reasons of the Pektra scope and Pectra eips continuing to change and shift, it sounded like it would actually slow down the work for peer Das quite a bit if peer Das was amalgamated with the other pectoral eips. So one of the big confirmations that came out of this week's call was that Peer Das would be developed in its own kind of timeline and on its own networks, on its own devnets, and at a future date, developers would identify when would be a good time to try and merge those two together. So Peer Das and Pectra Eips are going to be developed in parallel still, and but peer Das does appear to be probably the headlining feature of the Pectra upgrade, which is why another big part of the way that the Pectra Eips and Peer Das, the interdependencies between the two.
00:15:33.860 - 00:17:30.484, Speaker A: Another major point of discussion around this ongoing development work for the two was about changes to the blob count on Ethereum. So as I mentioned, Peer Das is a networking change, doesn't necessarily change the rules of the network, but with Peer Das, the core protocol of Ethereum will be able to be a lot more free, a lot more lax around certain rules limiting how many blob transactions can be added to a block. Blob transactions are these special types of transactions on Ethereum designed to process, designed to store temporarily large amounts of arbitrary data? And because of the limitations around Ethereum, around the nodes that support Ethereum, we have a set limit of a target of three blobs per block, I think, with a maximum of six on Ethereum, and the price of the blob transactions does fluctuate depending on the demand for blobs and to ensure that that target is continually met per block. But with peer Das, if peer Das does get activated, then in theory, the network should be able to handle a lot higher number of blobs per block. But the change, the ability for developers to increase the blob count on Ethereum, that does require a change to the protocol rules. And it does require, it may require some pretty invasive changes to the way that block rules work. So let me divide this down into to two different questions that was raised on this week's call, and that I thought the person who was chairing the call, Ethereum foundation researcher Alex Stokes, summarized quite nicely.
00:17:30.484 - 00:18:40.384, Speaker A: The first question is, right now, the blob count is hard coded into the execution layer. It requires an execution layer code change. You need to change that three, six, the target of three, maximum of six numbers to a different constant. But in the event that peer data and most of the consensus layer, most of the consensus layer changes that support higher numbers of blobs on Ethereum. Assuming that all of that works, then developers may want to remove that hard coded constant from the execution layer altogether, such that the maximum amount of blobs, the target number of blobs, is actually dictated by the consensus layer rather than the execution layer. Removing that hard coded limit from the execution layer means that there needs to be a way for the consensus layer to communicate to the execution layer of Ethereum. Hey, these are the new rules for what? For the number of blobs, the target number of blobs that should be added to a block.
00:18:40.384 - 00:19:42.130, Speaker A: So that's a change that developers aren't sure of how exactly should be made. There's multiple different ways to go about doing this. And the second thing that was initially mentioned by Ethereum foundation researcher Dankard Feist was around gas computations. Gas is a unit of measurement on Ethereum. It measures how much computational resources a certain action requires on Ethereum. So, you know, sending a certain amount of eth from my wallet to another person's wallet requires a certain amount of computation, and there's a constant gap, a number, it's x amount of gas that that transaction requires. But if I was coding a smart contract that is going to also be a lending protocol and has multiple different, you know, triggers, multiple different actions on the network, stores a bunch of code.
00:19:42.130 - 00:21:34.304, Speaker A: On Ethereum, the calculation of gas, how much gas that requires, is going to be a lot higher. And now the number, the amount of gas that you know, is required for a blob transfer transaction that's fixed the price, the gas price is boundless, the gas price is constantly changing, and the gas price is basically what the network determines it should be the conversion between gas and ETH. So how much should one gas unit cost in terms of the native asset of Ethereum, which is ether, and that gas price changes every single block depending on the amount of block space that's used up. And the gas price is quite volatile because demand for Ethereum block space is quite volatile. And usually the units, in terms of converting gas into ethics, is actually converting gas units into Guay, which is 1,000,000,000th of an ETH of an ether one eth. And so if you continue to convert that back into USD prices, prices that maybe you and I listening to this pod are more familiar with, that's really how you compute. How much does a transaction cost on Ethereum? So while transactions on Ethereum, sending a transaction on Ethereum can cause anywhere can change on a day to day basis in terms of how much USD you're paying, how much eth you're paying to send over that transaction, the computational resources that's required for that transaction to be processed as measured in gas units doesn't change.
00:21:34.304 - 00:22:46.404, Speaker A: But of course, if you change the gas, the blob target or the blob limit, you are going to change the maximum amount of gas that's going to be included in a block. And every single block on Ethereum there is a block gas limit. And the way that gas is computed per block is quite important to the network, to the protocol, to ensure that the computational resources of the network is not being overloaded. Again, as I said, the network actually computes what the price of gas should be based on how much block space is utilized, and that block space is dependent on how much gas is used per block. So it has ripple effects. And the biggest point of this conversation is that changes to the blob limit on Ethereum will also impact gas computation. And these are changes that developers need to consider and need to make changes accordingly, update accordingly, so that gas computation for blocks continues to happen in a correct way way.
00:22:46.404 - 00:24:14.694, Speaker A: So lots of different ripple effects of changing the blob target. Which is why the other major question around peer Das development is if peer Das is ready in time for Pectra, should developers couple peer Das with an immediate change to the blob count to the blob number per block? And the testing team of Ethereum from the Ethereum Foundation Panda ops team was saying that its quite risky to couple both together. One of the DevOps engineers, Barnabas had mentioned that Pectra in and of itself as an upgrade is just becoming far too large. He had said, quote the point is we have so many eips and I feel like we just keep shoveling more and more things and its never going to end. So we have to draw some line somewhere. And I think shipping pure Das and increasing the bob count is just not something we can do in the next year and a half testing wise, end quote. So he's expressing basically that the scope of pectra is continuing to change and adding in a blob count change on top of peer Das is just going to be too much.
00:24:14.694 - 00:26:07.334, Speaker A: But another argument from one of the other developers on the call, Francesco, was that what is the point of really trying to get peer Das into Pektra if it doesn't provide material benefit to changing or to improving Ethereum's data availability capacity? If you implement pure das in Pectra but you don't couple it with any changes to the blob count, then effectively the cost of data availability, the ability for rollups to commit data down to Ethereum is the same. It's unchanged. Sure there's more efficient ways to sample the data on the networking layer, but it doesn't actually change the cost of data availability for L2 rollups. In which case maybe it would be better to allow for more time to prepare the pure Das upgrade and not try and activate it along with the pectra eips rather activated at a time when peer to ask can safely be coupled with an increase to the blob count. So that was another kind of counterargument and to that, another kind of pushback from the testing team, this time by ETH DevOps engineer Perry one of the things that he had mentioned was around his experience testing blobs for the Dengkun upgrade for EIP 4844. And he mentioned that when they were testing blobs on Devnet for Denkun, the testing environment and the simulations that were had did not perfectly map out to what they actually ended up seeing on Ethereum mainnet, he said. Jayanthi said, quote, we did do a lot of great 4844 related testing, but the way blobs played out on Mainnet is not a one to one analogue on how it played out to how it played out in testing.
00:26:07.334 - 00:27:05.516, Speaker A: We do see weaker nodes having issues, we do see timing games being played. And that's the main reason why even if we simulate a perfect world in which peer Das, along with the blog increase does work in all of our devnets. It doesn't actually mean anything to mainnet. And that's my main argument for why we should probably do things step by step rather than all at once. End quote. And now to this, another pretty important counterargument that was shared by one of the Ethereum foundation researcher Ansgar, who did, who was saying that an increase to the blob count would be fine and should be coupled with the peer das activation. Ansgar mentioned the fact that when developers are testing peer Das, they have to set a value for the target blob count and limit anyways, and it doesn't necessarily make sense for developers to just use the same numbers as what's being used on main net.
00:27:05.516 - 00:28:16.954, Speaker A: There's not an entirely strong rationale to do that unless developers plan on activating peer Das in such a way where it does uphold the current three six constant values. And if peer Das for some reason goes wrong, the network can then fall back to EIP 4844 rules and still continue to uphold that three six limit. But that's increasing complexity for peer desk in and of itself to create such a fallback mechanism. So if there isn't such a fallback mechanism and developers are going to have to choose a value anyways for testing peer to ask why not just choose a value that will support and that will utilize the data availability sampling to its, you know, to its potential, which is a number higher than a number significantly higher than three six and dietrix. Ansgar, sorry, I keep saying his last name because that's how I write these call notes. I use formal, I use people's last names instead of their first names because it seems, seems too personal. But you know, on the pot we can be a lot more casual.
00:28:16.954 - 00:30:14.624, Speaker A: So Ansgar was saying that to the point, though, of increasing complexity in pectra, to the point of just concerns around the risks of putting, of packing in too many changes all at once in one upgrade. He said the better solution would not be to, you know, to prevent a change to the blob count along with pure Das, but rather simply split pectra into two different hard forks. And this is an idea, and this is a plan that developers had talked about in prior calls. And it seems like based on this past week's conversation, there is a higher likelihood that Pektra may become two separate hard forks on Ethereum and that the subsequent upgrade that was supposed to happen after Pectra, the Osaka fork with the VRKL upgrade, that that could actually become not the next immediate upgrade after Pektra, but the second one after the second version of Pectra goes live. So lots of kind of important developments, I think, that are starting to shift the sentiment in developers thinking around the pectra upgrade and a higher likelihood that Pectra may become to hard forks and to that one of the very last things, a couple of the last things that were shared on the call was around the inclusion of different SSC related eips. And this is around the data serialization upgrading the data serialization format of Ethereum. Developers are still unsure about whether or not this is even going to be added into pectra, and based on the hesitation around changing the blob count, I don't think that there's a high likelihood of even including these SSE related eips, even though implications implementation work is continuing to progress on these unless Pektra is split into two forks.
00:30:14.624 - 00:31:04.826, Speaker A: And then finally, of course, developers spent very, very a couple very last few seconds on the call talking about what the name of the CL upgrade should be accompanying the Osaka upgrade. They evaluated a bunch of star names that start with the letter f because this will be the beacon chains, the consensus layer six network wide upgrade. But that's not important once the naming the naming the name of the next consensus layer upgrade after Elektra is determined. I'll announce it on this show. I'll share it with you guys on this show, but I don't have any opinions or have any thoughts to share about what exactly the star name should be for the next consensus layer upgrade. I could not care less. And I think that was also kind of the general sentiment of developers on the call too.
00:31:04.826 - 00:31:39.454, Speaker A: They were like, we have other important matters attend to, and they really do. So that's the summary, and those are my insights from the latest all core developers call. I hope that you learned something new about Ethereum on today's show. I hope you enjoyed listening. I will talk to you guys again for the next infinite Jungle episode. Reminder, this will be the only episode for this week, but I'll be back with new episodes next week. Thank you for listening, and until next time, stay safe out there, everyone.
