00:00:10.040 - 00:00:43.598, Speaker A: Welcome to the infinite Jungle. On today's show, I'm going to be recapping all core developers execution call number 189. On this call, developers agreed to include EOF and EIP 7702 into the Pektra upgrade. On today's show, we're going to be talking about what those two code changes are and how developers came to the decision to include them in the Pectra upgrade, and some of the concerns that developers shared that the Pectra upgrade is just getting way too big. So we're going to get into all of that. But before we do, here is a quick show disclaimer.
00:00:43.766 - 00:01:00.388, Speaker B: I need to remind you to please refer to the disclaimer linked in the podcast show notes and note that none of the information in this podcast constitutes investment advice, and offer recommendation or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities.
00:01:00.516 - 00:01:43.186, Speaker A: All right, so developers have been calling Pektra possibly the largest upgrade in Ethereum's history. And that is because on the latest acde call, developers included two new code changes into Pectra, EOF and EIP 7702. Let's start with EOF. EOF we've talked about on this show before. It's a bundle of code changes. I believe it's now eleven different Ethereum improvement proposals, eleven different eips that are being implemented to enhance and improve the functionality of the Ethereum virtual machine. The virtual machine on Ethereum is what allows code of arbitrary complexity to be processed.
00:01:43.186 - 00:02:19.544, Speaker A: On Ethereum. It is the virtual machine that executes smart contract code, and this code is written in a high level programming language like solidity or Viper, and then is crunched down into lower machine code bytecode on ethereum. And this is the virtual machine that does all of the processing for this code. It hasn't been upgraded for several years. The EVM hasn't undergone many upgrades since it launched in 2015. It was the first of its kind. Ethereum was the first general purpose blockchain.
00:02:19.544 - 00:03:40.192, Speaker A: It remains the most popular and used general purpose blockchain in the world, and EOF is an upgrade that developers have been trying to have implemented for several years now. One of the EIP editors, I believe on the call, Greg Colvin, said rather dramatically that he would really like to see EOF included in an upgrade before he dies. And I think one of the things I want to highlight about EOF being included into Pectra is just how difficult the journey was. We had had Dan of, who was also very supportive of having EOF in the upgrade, explain the process in which EOF was being considered for the upgrade. But this past ACde call, the discussion itself showed quite a bit of persisting disagreement among developers about whether or not EOF should even be included. Of course, as I said at the top of this show, EOF has been included, and this because of the support of most client teams. But one client team really did not want EOf to be included for a variety of reasons, and that was the geth team.
00:03:40.192 - 00:04:29.310, Speaker A: Geth is the most popular Ethereum client software out there. It is the software client that most Ethereum nodes are running to connect to the Ethereum blockchain and guest developers raised quite a number of different concerns. They said, look, if we implement eoF, then we're going to delay other code changes like Verkl and make it harder to implement Verkle in the future. The primary developer on the Geth team that's working on the Virkel upgrade, his name is Guillain Ballet. And he said, quote, is Eof really that urgent? I don't think so. I've read several of the arguments for shipping it in Prague. The more I read these arguments, the more I realize, no, there's nothing that really justifies eof.
00:04:29.310 - 00:05:45.844, Speaker A: And to this there was, there was quite a bit of pushback on the call. Solidity developers, people who are other client teams on the call, even individuals from the testing team on the Ethereum foundation developer operations team, said this is an important code change that users want and that we're supportive of. To the concerns raised by Guillaume and other Geth developers about whether or not it would delay the upgrade, there were quite a bit of pushback from the ref team, another execution layer client team who talked about how it wouldnt delay Verkel all that much. Vercal is an upgrade that isnt ready for implementation yet, and the vertical implementation, the verkle transition of course takes longer. The more ethereum state grows. That is the size of all the Ethereum accounts and the ethereum, the state of Ethereum, all that data that has to be processed. As the Ethereum chain continues to grow, that state growth according to the data is actually declining, not increasing.
00:05:45.844 - 00:07:29.226, Speaker A: And so the additional say three weeks or say a month that implementing EOf would create that delay is not enough. It's not too significant of a period of time that it's going to detrimentally impact the implementation of Verkle. So there was quite a bit of counterarguments to the geth teams concerns of we understand that it may delay verkle a bit but that delta, that time between implementing Verkle sooner is something that developers are willing to sacrifice. And so much to the chagrin of gaff developers on the call, Tim Biko, who is the chair of the ACDE calls, said, let's move forward with putting EOF in, and let's now try and figure out a way to ensure that the inclusion of EOF does not significantly impact the progress that developers have been making so far with testing the Pectra upgrade. We know that Pectra has already been tested the Eips that have been included into pectra outside of EOF. We know that they've been tested on a multi client testnet, a Devnet, Devnet Zero, and developers are now working towards launching Devnet one, which is the next iteration of the Pectra testnets. And for this next Devnet, if developers and client teams are trying to implement EOF, which is a major, it's a pretty complex change, it's got more than eleven different eips included in it.
00:07:29.226 - 00:08:47.534, Speaker A: If developers and client teams are trying to implement EOF on top of the bugs and the fixes that they need to do coming out of Devnet zero, it could significantly delay the time in which devnet one launches. So biker recommended, why don't we keep Devnet one, the scope of Devnet one contained to the existing Eips and only layer on top EOF on a later stage, Devnet on a Devnet where client teams have had enough time to implement EOF. Let's, yeah, basically, basically try and scope out every single Devnet with a subset of the Pectra eips. And this is something that client teams were supportive of. There was one of the testing team members, the Ethereum Foundation. DevOps engineer Perry had said that the interdependencies between EOF and the other execution layer eips were pretty minimal. So EOF tests could be developed independently and in parallel to the tests that are being developed for the other Eips.
00:08:47.534 - 00:10:15.154, Speaker A: He did, though mention a very quick note about his concern around the testing that will be needed for the consensus layer eips. He did note that there are quite a bit of interdependencies there that do need more test coverage. And broadly, I think that with the inclusion of EOF in the upgrade and the inclusion of peer Das on the consensus layer side, which we talked about on the last call, the scope of pectra is indeed increasing quite a bit. So moving on a little bit from EOF, the second code change that was included, officially included into the pector upgrade is EIP 7702. This is the alternative to EIP 3074. Both code changes are trying to introduce more programmability to externally owned accounts, to user controlled accounts on Ethereum, to to really improve the user experience when it comes to users executing transactions and interacting with decentralized applications on Ethereum. So there's quite a bit of issues, I would say, still with the implementation of EIP 7702, particularly about the revocability of authorizations that you can activate with this EIP and the amount of control that a wallet has versus the user of that wallet to authorize various transactions.
00:10:15.154 - 00:11:22.674, Speaker A: So EIP 772, there's still quite a bit of work that needs to be done, but there wasn't really that much opposition, I'd say, to including EIP 7702 in the next immediate Devnet one. Of course, this does make sense because EIP 7702 is not as complex of a code change as EOF. There's not as much to prepare and to do in terms of the implementation and the testing side for EIP 7702. But what's clear is that it's very important in the next couple weeks and months to see what code changes are actually being implemented on Devnets. The idea of a staged devnet process is pretty new to this entire Ethereum upgrade timeline. Normally developers would decide on a set of eips, prioritize one over another. Sometimes there's just one large eip in that upgrade and just a few minor ones beside it, kind of like Shanghai.
00:11:22.674 - 00:12:02.920, Speaker A: The major one was staked Eth withdrawals for Den kun. It was EIP 4844. For this one, we thought it may have been maxi b as the front runner, but now it doesn't seem so. One of the unique things about Pectra and the way that it's shaping up to be is that there's many competing priorities. There's many different eips that have now been included into Pectra. And the way that developers are going to move forward with this extremely large EIP set is they're going to test them gradually. They're going to test them in a layered way.
00:12:02.920 - 00:13:12.228, Speaker A: You have your core set of pectra eips that have already been tested on Devnet zero. And over the course of the following Devnets for Devnet one, developers are planning and hopefully going to add EIP 7702, which was included in the latest call, and maybe in Devnet three or Devnet four, they add in Eof. And alongside this, of course, on the consensus layer side, developers, once they're ready will activate peer Das, an upgrade to implement data availability sampling on Ethereum. This developers agreed on the last call to implement on an entirely different activation epoch as the other eips, but still bundle it into the same client release. So as you can see, the testing process is getting a little bit complicated and will require a lot more, I guess, attention in order to know what the final scope of the upgrade is going to be. There's many different priorities and I do not think that all of them are going to be implemented into Pectra. I think there is a good chance that Pektra gets divided into two different upgrades.
00:13:12.228 - 00:14:53.854, Speaker A: I think there's also a good chance that as developers test the core set of Pectra eIPs and then they try to layer on a few other EIPs like 7702 EOF peer Das, they notice that the time to prepare this upgrade for mainnet activation becomes extended, that the upgrade itself does get delayed, and it takes more time to test these, these code changes. So I think there's a high likelihood that the upgrade does get split out into two. There might be some more hard conversations coming up of if we do have to drop a code change, for example, if we do have to drop EOf or drop peer das, do we do that in a separate hard fork altogether and then do the vertical upgrade? I think that is actually the most likely scenario, but it will of course, again irk geth developers that are trying to get VRKL in as quickly as possible based on the amount of opposition they had to EOF. I think further conversations of potentially doing a hard fork in between Pectra and VRKL in the Osaka upgrade is going to cause more disagreement down the road. So that being said, again, developers have talked a little bit about how Pectra is shaping up to be much larger than they expected. Keep in mind this was an upgrade that developers wanted to implement before the end of this year. Now, again, there does not seem any likelihood of that.
00:14:53.854 - 00:16:06.954, Speaker A: And I think some developers that had noted earlier on there is no such thing as a small fork. The way that Pektra is shaped out to be, it seems to affirm the fact that there is no such thing as a, as a small fork. And one other thing that I'll also mention alongside these discussions, because it was mentioned on the latest ACD call, is some of the parallel initiatives that are happening alongside implementation of Pectra eips. Peer Das, which is data availability sampling on ethereum, is expected to enable a higher blob count, a higher number of blob transactions that can be attached to an ethereum block, basically increasing the size of a block without increasing the computational resources that a node needs to process each block. While data availability sampling. While that mechanism can be implemented without technically a hard fork, a network wide upgrade, in order for the network to utilize that mechanism and really experience the benefits of it, they do need to change the block gas limit. They do need to change the number of blobs that can be attached to a block.
00:16:06.954 - 00:17:04.226, Speaker A: And so that in and of itself will require an eid. It will require an additional co change to be added into the pectra upgrade to change the blob count of ethereum. So peer Das is a bit of a parallel initiative that if it does go well and if it is ready for implementation by the time of Pektra, will likely also motivate ethereum developers to include yet another EIP. Changing the block gas limit, which is not a major change and probably testing wise, doesn't need to take that long. But there are other parallel initiatives that I think is important to keep in mind. One of them that was mentioned on the latest call is history expiry. Aside from state growth, which is kind of like the present amount of data, the full list of accounts and their balances on Ethereum, the history of Ethereum is the historical data of transactions.
00:17:04.226 - 00:18:20.648, Speaker A: Every single transaction that has ever happened in Ethereum's history since Genesis. It's a lot of data for nodes to carry, and developers are working towards offloading the responsibility of carrying that history away from Ethereum nodes to a separate peer to peer network. And one of those networks is the portal network. And so developers are working on integrations with the portal network to support this initiative for history expiry. And as that parallel initiative for history expiry continues to happen, there are eips that would coordinate all of the clients to be able to drop history from before the Ethereum merge from before the upgrade. That made Ethereum a proof of stake blockchain for nodes to be able to coordinate at the pectra upgrade, or a future upgrade thereafter to be able to coordinate, you know, a single point where all of the clients can kind of of dropped that history, can stop servicing it to users. So who knows if the history expiry and the integrations with the portal network will be ready by the time of Pektra.
00:18:20.648 - 00:19:29.064, Speaker A: But if it is, there is yet another EIP, yet another code change that developers will try and work in alongside the rest of the pectra eips that have already been being included into Ethereum. So quite a few parallel initiatives, I'd say. And keep in mind, as we know from the prior ACD call, the upgrade scope on the consensus layer side for Elektra. It is still being hashed out, I think on the execution layer side, execution layer client teams are pretty much capped. They're pretty much with EOf included into Pectra, there's really not much else that we're going to be able to do. On the consensus layer side, developers are still wrestling with whether or not they want to include a code change that helps make the Ethereum makes the code changes that are being included into pectra already more forward compatible with the SSE container format. And this is a data structure that is being heavily used on the consensus layer but not really used on the execution layer.
00:19:29.064 - 00:20:23.044, Speaker A: And over the long term, developers really want to increase interoperability, decrease technical depth by SSE ifying the execution layer of Ethereum. And there are certain code changes that can be implemented on the consensus layer side to make Ethereum more forward compatible for that future that consensus layer developers are still wrestling with. So that being said, the scope of Pectra will continue to change. It is by no means set in stone, more so than I would say during prior upgrades. I think developers really are. This is a new development in the upgrade process that I haven't seen before in my five, six or so years of covering Ethereum protocol development. In that the scope of Pectra I expect now to just continue to change.
00:20:23.044 - 00:21:48.854, Speaker A: As I said, we're going to have to continue to see what code changes are included in forthcoming devnets to really be able to understand the actual scope of what, what Petra will be. Developers have certainly, they're certainly shooting for all of the above and implementing everything together. But I have the sense that the complexity of this upgrade is very large and doing it all at once may not be something that developers can do, and they may have to split it out into two, or just simply delay the upgrade to say the second half of 2025 or something like that. So yeah, so still lots up in the air, I think. One last thing that I'll also mention around the process in which Ethereum developers are planning these upgrades, I guess a couple notes that Tim Bico had talked about. He's the chair of these ACD calls, and he's usually the one that tries to bring client teams into consensus when there's a lot of disagreement on these calls. Tim really steps in to try and summarize people's arguments and offer questions and offer paths forward that everybody, most people can agree on.
00:21:48.854 - 00:23:05.084, Speaker A: Again, it's not about creating consensus, is not about making sure that everybody agrees on a particular issue, but just that most people in the call agree. So, like in the case of EOF, Geth did not agree even until the very last moment of the call. But developers still agreed to. I mean, the basic conclusion of the call was still to implement EOF into pectra, even despite the disagreement of Geth. And one of the things that Byko had recommended at the last couple minutes of the call were two different changes to the way that these upgrades are planned. Number one, he said, look, instead of having people present their code changes for Ethereum on these calls, let's try and review those proposals asynchronously outside of the calls before they get mentioned on ACD to make sure that these calls, the time being spent on these calls are, is put to good use. It's true, you know, ACD calls are usually, the agenda is extremely long and there's way too many topics to be able to talk about in just an hour and a half timespan.
00:23:05.084 - 00:23:59.864, Speaker A: So I personally thought that that was a bit of a no brainer. You know, these, the forum for these calls should be trying to make decisions and not necessarily to present, you know, topics that developers may not have had the time to really formulate an educated opinion about. So Biko had suggested, let's ensure that in the future, when we're trying to plan for new upgrades, if there's eips that people want to include to that upgrade, we review those proposals outside of the call rather than on the call first. And if there's anything that needs to be discussed on the calls, we can do it then. The second thing that he talked about was around labeling different code changes with different terms. One of the labels that's used frequently is considered for inclusion CFI label. And this is supposed to indicate whether EIP is being considered for inclusion in an upgrade or not.
00:23:59.864 - 00:25:03.786, Speaker A: I personally think that label is useless. It doesn't actually give a good, it's not a good signal of whether or not this code change is going to be included in an upgrade or not. The CFI label was not technically, it was not technically used. I would say historically for many upgrades on Ethereum, I think it's a relatively new label that's started and the CFI label for certain code changes that have been included in Denkun, many of them have just kind of bypassed the CFI level. I mean, Peer Das is a good example of a code change that doesn't even have an EIP really number associated with it. I can't recall if developers have really formally attached the CFI label to that particular code change. Same thing with EIP 7702.
00:25:03.786 - 00:26:24.332, Speaker A: It was a very last minute code change that was presented by Vitalik Buterin. Not really something that I think went through the formal stages of is it CFI'd or not? And a lot of the discussion around should a code change be cfied or not? It's not. It's not an important discussion. The important thing about a code change is whether or not it goes into an upgrade, not necessarily whether or not it has the label of CFI. But anyways, Bico had recommended on top of the label of CFI, perhaps creating another label called propose for inclusion PFI, where that label would be attached to a larger subset of code changes. Any code change that's proposed for an upgrade, it has the PFI label, and then some subset of the PFIs are CFied, and then some subset of the CFIs are included into the upgrade. Now that sounds very logical, but in practice, I think the way that we've seen code changes included in the dancun upgrade and then excluded, taken out again, it doesn't follow a linear process of PFI to CFI to included really these code changes and the decision making process around these code changes.
00:26:24.332 - 00:28:06.454, Speaker A: It can be very circular in time. Some code changes go in and out of approval and disapproval phases. Depending on the week, it can take three weeks to seven years to getting a code change in. And really the most important part of a code change that I think outside stakeholders, people like me, really want to know is simply whether or not that code change is going to be included in the next upgrade of Ethereum or not, and whether or not it's tentatively scheduled for a future upgrade, for example, like Virkel and Osaka. And when it comes to other concrete details about that code change, similar to how implementation work has already started for an EIP, even before that EIP is is included into an upgrade. I think those details about an EIP, the implementation work that has already happened on that EIP, the kind of testing that would be needed for that EIP, the amount of support from client teams for that EIP's inclusion, these are the types of signals, I think, that are most important to highlight about an EIP, not necessarily discussions about what label it should be given, as those labels don't really, generally don't really have very much meaning and don't have much impact on the actual decisions that are made about that code change. So lots of changes and lots of different discussions I think, about how the upgrade process is moving.
00:28:06.454 - 00:29:31.694, Speaker A: Especially there's some very new developments happening with the spectra upgrade. This idea of layering on new code changes in later stage devnets is something that I'll definitely be watching, that we, you and me, my listeners, should be watching very carefully as we move forward. This could, you know, if it goes well, it could be the start of a new norm for how Ethereum upgrades are planned. But I do foresee quite a bit of continual kind of discussion and debate needed about the scope of Pectra generally before the scope of forks was decided upon, and then client teams were really heads down just trying to ship those upgrades. But now I think the discussion around the scope of the fork will carry on a lot longer than for prior forks, so that's something to keep in mind. And then of course these changes to the formal process, the kinds of labels that developers are using to move code changes forward, the kind of discussions that they have around the EIP process, the Ethereum improvement proposal process is something to continue to watch as all of these decisions do impact how Ethereum, the world's most valuable general purpose blockchain, evolves. So thank you for listening to this episode of the Infinite Jungle.
00:29:31.694 - 00:29:54.604, Speaker A: I hope that you learned something new about Ethereum, and I hope that you are just as excited as I am to really see how Pectra, how Pectra shapes up to be from here. I hope you'll join me again for another episode of the Infinite Jungle. I am signing off from New York City. Until next time, stay safe.
