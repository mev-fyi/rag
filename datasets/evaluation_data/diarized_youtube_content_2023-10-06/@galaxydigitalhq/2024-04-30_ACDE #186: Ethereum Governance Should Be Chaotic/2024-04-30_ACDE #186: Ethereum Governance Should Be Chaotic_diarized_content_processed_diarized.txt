00:00:10.400 - 00:00:40.194, Speaker A: Welcome to the infinite Jungle, the podcast about the evolution of Ethereum. On today's show, I'm going to be talking about what was discussed on AcdE 186, all core developers execution call 186. And particularly I'm going to be talking about the part of the call where developers debated the inclusion of EIP 3074 in the Pectra upgrade. But before we actually get started, here is a quick show disclaimer.
00:00:40.534 - 00:00:57.330, Speaker B: I need to remind you to please refer to the disclaimer linked in the podcast show notes and note that none of the information in this podcast constitutes investment advice, an offer, recommendation, or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities.
00:00:57.502 - 00:03:03.366, Speaker A: AcdE 186 was a pretty spicy call, primarily because developers debated quite a bit on the governance process for deciding what gets into an Ethereum upgrade. There were questions that developers were asking on the call and debating on the call, like, should there be a greater number of stakeholders represented in this EIP process outside of core developers? Is there enough kind of representation from other segments of the Ethereum ecosystem and community than just client teams, Ethereum researchers and Ethereum testing EF DevOps group, which these three people we talked about on the last infinite jungle, last week's infinite jungle episode. But yeah, so questions like that of should there be more, should there be more stakeholders, different types of people on these calls, voicing their opinions about what should go into an upgrade and what shouldn't. There were also questions about how exactly these stakeholders that might not have as high of a technical understanding of how Ethereum works, how they can necessarily chime in and participate in the EIP governance process in this process, of how eips, which are code changes, how they get implemented and activated on ethereum. Ethereum. There were questions about if these stakeholders that aren't full time Ethereum core developers aren't really working on the Ethereum protocol as their day job and can't dedicate the time to even joining these ACD calls where governance decisions are made, how else are they supposed to participate and chime in? There were questions around the impact of the L2 roll up ecosystem, how L2 changes on L2 can and should impact what code changes get impact get included in on Ethereum protocol. On Ethereum layer one, there were.
00:03:03.366 - 00:03:53.706, Speaker A: So there was a lot, there was a lot of talk and a lot of debate about the governance process. And primarily these questions, none of these questions are really new. These questions are asked every once in a while in the Ethereum developer community and the broader ecosystem as a whole. When there is a controversial code change to talk about. This is generally what reignites the topic, the big topic of capital G governance. And of course, there were quite a bit of talk about the governance process when the merge was happening, which was Ethereum's most riskiest, largest upgrade, where Ethereum transitioned from a proof of work blockchain to proof of stake. And that upgrade notably basically removed a stakeholder group from Ethereum miners.
00:03:53.706 - 00:04:55.392, Speaker A: Ethereum miners were booted off the network. So of course there was some contention there. There was progpal, which is another, it was another co change that was discussed in the Ethereum community community that would impact miners and miner revenue. It basically was a co change discussing whether or not the mining algorithm of Ethereum should change to be more ASIC resistant. ASICs are these specialized mining machines and should the mining algorithm be changed to be more favorable to people running just general purpose machines, mining machines, GPU's a very recent one, which we've talked about quite a bit with Nixo estakers. Nixo is issuance, issuance the topic of changing Ethereum's issuance because it impacts the stakeholder groups of validators and of course, ETH holders who are staking their ETH. That too has been a contentious, contentious topic that has reignited conversation about Ethereum governance.
00:04:55.392 - 00:06:23.882, Speaker A: And on the latest Ethereum developer call, AcdE 186, the latest code change that developers that was controversial on the call and that reignited again a lot of these governance questions that I mentioned was EIP 307. And what EIP 307 does is it introduces these two opcodes on Ethereum, which are basically new types of operations that you can execute through the Ethereum virtual machine execute on chain. It introduces two new opcodes, Auth and Auth call. Auth as in short, for authorization. But anyways, Auth and Auth call and these opcodes would create more programmability for user controlled accounts. We've talked about the concept of account abstraction, and EIP 374 is a small step towards account abstraction, and account abstraction is this idea of trying to create more programmability into user controlled accounts. User controlled accounts on Ethereum are called externally owned accounts, eoas, and they are controlled by private public keys, which can be difficult to manage, can be difficult for users to get the hang of, because most people, I would say, in this world, are used to using, say, an email and their own password.
00:06:23.882 - 00:07:52.178, Speaker A: Some people don't even use password managers, so we're not familiar with using cryptographic keys to sign off on transactions. And account abstraction would imbue more programmability into EOA so that you can make the authorization of transactions from your EOA a lot more flexible, a lot more programmable. You can create a bunch of different ways to authorize transactions from your account by creating things like biometrics to be able to authorize transactions from your account, say different types of thresholds, signature thresholds. So maybe you need to use, you can recover, if you lose one of your private keys that normally allows you to sign transactions, you can recover it through a different account or different means. One of the interesting things that auth and auth call will be able to enable that will be really powerful is things like sponsored transactions, so you can have somebody else pay the fee for your transaction, so that when you send it off, you can send it off basically free of cost to you because somebody else is sponsoring that transaction. There's transaction batching. This is very helpful for interacting with decentralized finance applications that require you to sign off multiple times on your transactions every time you want to make a trade.
00:07:52.178 - 00:10:15.194, Speaker A: But if you want to do things quickly and be able to get ahead of certain trades, you can batch transactions together and authorize them all in one go. There's quite a long list of benefits for making eoas a lot more flexible, some of which will definitely be enabled through the creation of auth and auth call. And just looking at my notes here, I notice that when it comes to the conversation around EIP 3074, one of the things that's important to keep in mind is the history of that code change, EIP 3074, it's actually a code change that has been talked about in the Ethereum community, at least mainly in the Ethereum community, but also among developers on ACD calls since as early as 2024 years ago. But one of the reasons why developers were hesitant to implement it at the time and over the years is one of the reasons because obviously there's a lot of competing priorities of what gets into an upgrade always has been because Ethereum has grown a lot since its debut in 2015, and there's always been quite a lot of interest in Ethereum. But anyways, in 2020, when the EIP was created and developers had started to, had started to discuss it, one of the concerns was the security risks that this EIP would create for eoas. The concern is that if you authorize a smart contract to start approving transactions on your behalf, what if the authorization that you've given is to a malicious smart contract created by somebody who just wants to steal your funds? Is there ways to revoke authorizations once they've been given? Are there ways to limit authorize the number of authorizations that you make? What is the process in which the authorizations are put forth into the network and then revoked again? So these are questions that developers have been wrestling with. And on the call or over the last couple years, developers have been designing EIP 3074 in a way that is able to address these security concerns.
00:10:15.194 - 00:10:58.090, Speaker A: And a lot of work has been done on the EIP so that authorizations can be revoked. And there are different ways in which the security concerns about EIP 3074 is mitigated. Which is why on the last ACdE call, AcdE 185 developers did agree to include EIP 3074 finally in the Pectra upgrade. And they had said, you know what? We think it's ready to go, ready to be implemented on chain. And right after that call, based on the Twitter feed that I have, I thought the Ethereum community was ecstatic about this decision. I saw many tweets being like, yay, Eiv 307 is in. Everybody's so happy.
00:10:58.090 - 00:12:08.362, Speaker A: It's going to make the user experience on Ethereum a lot better. So I thought it was all green, Dandy, all good. But I realized in hindsight, that is probably because my Twitter timeline is very much, you know, it's very much focused on Ethereum protocol developers because that's what I research for most of my days. So the curated timeline is not an my curated timeline, and neither is anybody else's Twitter timeline, I would say. You know, and a reflection of the, of the broader ethereum ecosystem, especially, again, given how vast and how, how many different interests there are on Ethereum. On the latest ACD call, which was AcdE 186, the representatives of developers who have been working on AA account abstraction for quite a while now, they've been working on ERC 4337, which is an out of protocol solution to make EOas more programmable. Basically, representatives of people who are interested in AA really spoke up on this this on the latest ACDE 186 call, and they shared concerns and thoughts about EIP 3074.
00:12:08.362 - 00:14:09.044, Speaker A: They said they were cut off by the approval of this code change into the Pectra upgrade. They said it shouldn't be implemented in its current form because of security concerns that still exist even with the updated design, and that there should be deeper technical analysis done on EIP 3074. There should be more discussion about ways in which it's design can be changed to be safer for users and wallets to incorporate into their operational workflow and EIP 3074 one of the concerns is that while it does give near term benefits to programmability for EOas, EIP 3074 may also complicate and possibly make it harder for a full version of in protocol account abstraction to be implemented on Ethereum down the road. So there were concerns that by including this code change, which does give some benefits, some more programmability and flexibility, you don't actually get the full benefit of account abstraction. And if that's the case, is it possible to include some other eips that do bring forth the full vision of what in protocol account abstraction could look like on Ethereum? So that was a surprise to say the least. But on Acde 186, what developers ultimately agreed on doing was okay, clearly there's some pushback on this decision to include EIP 3074 into the pector upgrade. Let us go back and let's all come together into a separate meeting, a breakout meeting, as developers call it.
00:14:09.044 - 00:15:41.730, Speaker A: And they do a lot of these breakout meetings for controversial code changes or for code changes that require dedicated time to really discuss only that one code change and none of the other topics. Usually there's quite a lot to discuss on these ACD calls, and you can't spend a full call on just one topic. So developers decided, let's do a breakout meeting just for deciding on the implementation and the design of EIP 3074 that we can all agree on, not just client developers, but clearly the people that had joined Acde 186 to express their concerns about the protocol. Let's make sure that everybody is involved and incorporated into this process. Let's have that breakout meeting, and let's basically decide on a design free IP 3074 that everybody agrees with and move on from there. And they also heard the concerns that this EIP may not be the best EIP for the long run of in protocol account abstraction for Ethereum. And hence we should also discuss what is the long term roadmap for getting to in protocol account abstraction? How does EIP 3074 fit into that picture? And how do we ensure that the next steps if EIP 3074 is included in Pectra, making sure that there is a clear roadmap and a vision for getting in protocol account abstraction.
00:15:41.730 - 00:17:14.524, Speaker A: And this isn't just like a one off change that developers have to revisit and have to deal with the consequences of at a later date when, you know, they have more bandwidth to include more complex code changes related to account abstraction. So two things that I want to point out about Ethereum governance in light of this call, I don't know exactly who the people were that said they are representative of the account abstraction community and the ERC 4337 community. And also, I'm not an expert on what the detailed roadmap for in protocol account abstraction is, what the full vision of it even really looks like. And I'm pretty sure neither did Ethereum developers or some Ethereum developers on the call. They also didn't know exactly who the people joining the call were expressing these concerns. Not all of them were experts on the roadmap for account abstraction, as a lot of it has been being worked on through the ERC 4337 group, which is trying to implement it in an out of protocol way. Which is why protocol developers, Ethereum protocol developers that are on the ACD call focusing their time on protocol developments for Ethereum, may not also be super familiar with all the works that's happening on, that's happening in the ERC 4337 group.
00:17:14.524 - 00:19:27.042, Speaker A: But I think those two things are things that we should spend a little bit more time talking about and thinking about. Because one of the concerns, going back to some of the debate on governance that came out of these discussions is is it okay that this late into the proxy process, quote unquote, late in that, you know, the EIP has already been approved into the, into the upgrade and developers have been talking about it for years. Is it okay that all of a sudden we're now revisiting whether or not it should even go into the upgrade, what possibly major changes to its design should be made to it? And, you know, is it okay that the, the process has derailed in a way from what developers expected when they had initially approved that code change into the upgrade? And to that, I think it's really important to note that this is a really healthy example of Ethereum governance actually working. It would be really odd if every single co change that developers work on, there is no pushback, there is no community input. Everybody, once developers have tested the upgrade, they all willingly, like sheep, just implement that software into their nodes, into their computers in order to connect to the Ethereum blockchain. That would be, I think, more dangerous. But the idea that anyone, whoever it is, even if you don't really, even if you're not a well known person in the industry, you can join these calls at any point in the governance process to speak up about any issue, even issues that developers may not be the most familiar with, the fact that this can happen and can significantly change the outcome of governance is a really important and beautiful, I would say part of Ethereum governance.
00:19:27.042 - 00:20:33.220, Speaker A: And it should always be the case because this is really good in the sense of security. One upgrade that happened on Ethereum way back when Constantinople was derailed, stopped at the last minute because a security auditing firm noticed that there was a bug in the code. And so developers at the very last minute had to stop the upgrade, had to change it and re reactivate it on the Ethereum network with the fix. So I think the idea that this governance process is so malleable and just available for anybody to participate in is a really good thing. And I don't think it necessarily means that developers are doing a bad job in getting the community involved. The community and people that are not Ethereum core developers don't always have the time to participate in every step of governance. In the early stages of when developers are debating what code changes should go in and out, sometimes the community is.
00:20:33.220 - 00:21:37.474, Speaker A: Some people in the community are late to the game and they realize, oh, an upgrade is happening on Ethereum. And I didn't realize, and it's happening in the next week. I'm going to look into it right now. And at that point joined the very next Ethereum developer call to voice concerns about any concerns that they find about the upgrade. I think that should always be a reality on Ethereum, something that can happen. And I think developers really have to reckon with if, after this breakout meeting for EIP 3074, if consensus cannot be reached, if client teams, Ethereum researchers, protocol developers are, have come to consensus about wanting it in the upgrade, but they cannot seem to reach a consensus with the broader group, with the rest of developers who say they're working on ERC 4337, who are working on other account abstraction solutions. If they are not able to create broader consensus in the Ethereum community, then I do not think EIP 3074 should make it into the Petra upgrade.
00:21:37.474 - 00:22:38.616, Speaker A: No matter if there was a governance decision on an ACD call prior where client teams agreed to include it, I think it's okay that decisions are reversed based on community input and community involvement. And that is the sign of healthy governance. That is the sign of being able of there being no control over the Ethereum protocol concentrated on just one group. So there is a second thing that I want to talk about in relation to this governance topic, and that is the idea of governance on Ethereum becoming more complex. So another part of the call, developers started to talk about the way that L2 code changes can or should impact the code changes that are implemented on layer one ethereum. I'm not going to go into the full discussion and the debate. There was some pretty good question quotes, I would say, from that discussion.
00:22:38.616 - 00:23:54.730, Speaker A: And if you want the full summary of the call, you should check out the written write up of Acde 186, which is in the show notes. But one thing that I'll say about from that discussion is that Ethereum harping back to what I was saying about there always being a lot of interest in Ethereum. There has been, over time, an increasing complexity when it comes to the number of people and stakeholders involved in the Ethereum ecosystem. When Ethereum first launched, it was miners, maybe a few dapps, a few smart contract developers and users, and of course the developers, but the developer community. Since then, since Ethereum's launch of 2015, has grown dramatically Dapps on Ethereum decentralized applications, there's so much more interest in them, so much more usage and adoption for them. And now there's quite a bit of different types of decentralized applications that have different interests than, say, developers and other stakeholder groups. On Ethereum, for example, decentralized finance is a very popular type of dapp being built on Ethereum.
00:23:54.730 - 00:25:52.862, Speaker A: That has also created MEV maximal extractable value, a whole new can of worms where developers now have to consider the interests of MEV players like builders and relays, in addition to of course, the users and the smart contract developers of decentralized finance applications and other types of decentralized applications. And with the transition to proof of stake, now you don't have to really have any consideration for the interests of miners, but now you have to have the interests of a much broader group of providers, of individuals and entities. They are in the form of staking pools like lido and rocket pool. But then you have the stakers themselves, like ETH holders, and then you have the node operators, the number and the types and the profiles of people involved in Ethereum governance has become increasingly complex. And with Ethereum now transitioning to a roll up centric roadmap, you have these conversations like what we heard on the latest developer call, talking about the interests of L2 rollups and developers themselves, protocol developers themselves are not, they're not independent and kind of like the gatekeepers of deciding what voices in this governance arena really matter, or don't. Client teams, yes, they know the most about the Ethereum protocol and are probably the ones that will have the highest say in terms of what does, what will negatively impact the security of the protocol and the health of the network, because that's their full time job. But Ethereum protocol developers and specifically researchers, they themselves are championing different code changes that in their view they want to see get into an Ethereum upgrade.
00:25:52.862 - 00:26:55.934, Speaker A: So they, like everybody else in the Ethereum ecosystem, is trying to get code changes into upgrades, trying to champion upgrades that they think are very important, even if they're not full time participants in the MEV ecosystem, even if they're not full time account abstraction developers. These Ethereum protocol developers are the ones that are not only building the clients, but are also have their own interests of what they think should go into the upgrade. And they, like everybody else, needs to convince all the other groups, needs to get community buy in. So they're, they're part of that, of that system. And one of the easy, this is really my point of my long rambling. It's easy to think that as the governance process becomes more complex, you have to create more concrete processes. You have to make sure that because it's becoming more complex and difficult to manage, you have to control it in some way.
00:26:55.934 - 00:28:32.058, Speaker A: And this can lead to governance becoming more opaque and more closed off, more difficult for really anybody to participate in governance. It can become, the natural inclination might be to ensure that the governance process doesn't go off the rails, so to speak. But I would argue, and this is my last point, I would argue that if you do this, it creates more centralization, if you add more concrete processes to these, to the governance process, to define who exactly are the stakeholders, when they can talk, when they should talk, in what order and how the process should go, you necessarily have to have an entity that dictates that and have an authoritative voice to be the people that creates that. And while I think that processes can be helpful in making things more transparent and understandable, that is not the job of any single person. That is the job of everybody involved in the ethereum ecosystem, no matter what your full time job is. And I think less control, less processes, less labels of exactly figuring out exactly how things should get done and when in the governance process is better for ethereum decentralization in the long run. And it does mean that probably not as many things get done, upgrades take a lot longer, and many code changes do take years to really build up the proper consensus for.
00:28:32.058 - 00:29:25.944, Speaker A: But that is, I think the process that ensures Ethereum, that proves that Ethereum really is a decentralized open source software. So I am all for the participation of people who are trying to make this governance process as it becomes more complex, more transparent, without forcing molds into the governance process. I'll just quickly shout out a lot of ways in which people can stay up to date with the Ethereum, with Ethereum protocol development. Of course, there's this podcast and the written write ups that I do. But there are individuals in the EF, like in the Ethereum foundation, like Tim Biko, that gives summaries of calls. There's newsletters. My favorite, one of my favorites is Weekend Ethereum news.
00:29:25.944 - 00:30:43.344, Speaker A: That is a really great way to keep up to date. So all this to say, I think that the Ethereum governance process and people in it should embrace the chaos and should continue to speak up in any way that they feel comfortable to at any point in the Ethereum governance process, no matter who they are or what their background is, because it shouldn't matter exactly who you know in this space. It should matter what you're saying, how you're saying it, and, and what you're actually doing in the space. And yeah, this does mean that a lot of it means that this is, this is very open, which means that there is a need for people to be very respectful, especially in online environments where you don't actually, you don't really know the person that you're speaking to. This does mean that it's important to remain civil and speak to people with respect. But now I'm just talking about what I think an ideal world or an ideal way to interact with people would be. But anyways, those are my thoughts and my two cent on, on the governance discussion around ethereum.
00:30:43.344 - 00:31:08.284, Speaker A: That's it for today's episode. I'm going to be signing off today from Boston. If you're not listening but actually watching this video, on watching this episode on YouTube, you'll notice that's a little bit of a different background. But that's because I'm in Boston here for the ETH Boston conference. I hope that you enjoyed the show, and more importantly, I hope you learned something new about Ethereum. Until next time, stay safe out there.
