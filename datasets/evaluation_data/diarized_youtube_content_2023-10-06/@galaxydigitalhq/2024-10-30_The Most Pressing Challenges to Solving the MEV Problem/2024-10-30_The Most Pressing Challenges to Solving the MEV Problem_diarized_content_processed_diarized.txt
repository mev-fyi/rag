00:00:10.360 - 00:00:19.377, Speaker A: Welcome back to the Infinite Jungle. On today's episode, I have with me two special guests. I have Lily Johnson, engineer at astriolabs. Hi, Lily.
00:00:19.481 - 00:00:21.485, Speaker B: Hello. Excited to be here.
00:00:21.985 - 00:00:25.129, Speaker A: And also Robert Miller, product lead at flashbots.
00:00:25.257 - 00:00:31.281, Speaker C: Thank you for having me. I was rugged by you last time with the jungle apparel, so I'm in all black this time.
00:00:31.353 - 00:00:35.785, Speaker A: That's awful. I told you I would show up this time for this episode.
00:00:35.865 - 00:00:37.645, Speaker C: You lost my trust in the first one.
00:00:38.025 - 00:00:49.801, Speaker A: I have to rebuild the trust with Robert. Clearly you guys are very New Yorkers. Like New York fashion. I mean, it's all black. Both Lily and Robert. I mean, it's like we're at a funeral.
00:00:49.993 - 00:00:52.805, Speaker C: Oh, okay. That took a different turn.
00:00:53.265 - 00:01:07.717, Speaker A: I mean, exactly. That's all black anyways. Well, no, no, no. I mean, that's a little bit of a damper. But we're gonna have a very lively conversation. Very. We're going to talk about the latest developments in the MEV ecosystem and very excited to get into it with you.
00:01:07.717 - 00:01:58.133, Speaker A: We're going to talk about Roll Up Boost and we're going to talk about EIP7727. Before we get started with the show, here is a quick show disclaimer. I need to remind you to please refer to the disclaimer linked in the podcast show Notes. And note that none of the information in this podcast constitutes investment advice, an offer, recommendation or solicitation, but by Galaxy Digital or any of its affiliates to buy or sell any security. Robert, as the representative of flashbots, congratulations on the Rollup Boost things. Lily and I have so many questions for you about it because it does a lot. I mean, let's start with can you give us the basics on how does rollup Boost work? And then we'll get into the nitty gritties of some of the mechanisms and questions about trade offs.
00:01:58.229 - 00:02:25.665, Speaker C: Of course. Yeah. So Rollup Boost is. I'll give you two different perspectives on it. One sort of the product perspective and then one, the more engineering perspective. From the product perspective, it's Flashbot's platform for features for rollups. So things around performance, security, decentralization as well as expressibility, sort of new types of features like co processing would fit under that last category.
00:02:25.665 - 00:02:49.419, Speaker C: The engineering perspective on it is it's the sidecar. It's a process that a sequencer can run that will hook into the opnode and op geth eventually, probably other things too, or parts of the rollup process and enable these really cool features that are built on top of Rollup Boost as well, so we can talk about either of those perspectives, depending on what you care about.
00:02:49.557 - 00:03:19.493, Speaker A: Yes. How does it. There's so many specific. There's a bit of flexibility in what you described there and there's a specific application for it that's going to be going live soon. With the Unichain, there were specific characteristics about some features that Roll Up Boost will be able to enable on the Unichain, which is things like fast block times and no reverts for transactions. Can you unpack how those guarantees are made?
00:03:19.679 - 00:04:20.201, Speaker C: Of course, yeah. So one of the first things that we did with Rollup Boost was figure out how could you allow the sequencer to enable a specialized third party to order blocks on their behalf. Block building in the same mental model as what you have on ETH L1, except in the context of the L2, it's just a single specialized party that they're sort of outsourcing to instead of this Thunderdome competition on L1 that we've all come to know and love to say kindly. So Rollup Boost enables the sequencer with an easy feature flag to start outsourcing the building of their blocks to the specialized party, the builder. Then on top of that, we've built infrastructure that is really interesting, like fast block times, faster than the OP stack right now can allow. So the default for the OP stack and the geth configuration of things is 2 second block times. It's actually unable to go lower than 1 second block times.
00:04:20.201 - 00:05:20.915, Speaker C: So you can't go lower than a second in the OP stack normally. But what we can do is we can have this block builder that you're outsourcing ordering to emit what the state is every 250 milliseconds in kind of a pre confirmation. We like to think of it in terms of streaming state. So every you're outsourcing building to the specialized entity and then every 250 milliseconds it says, hey, here's the block that I have made so far, here's the latest state. And the interesting thing about this as well is that the builder inserts a transaction to note whenever One of these 250 millisecond flash blocks is what we call them is created. And so you even have an internal notion within a block of where you are within it. So we emit these intermediate state streams back to the sequencer and the sequencer can farm it out to all the wallets and users that are interested in reading that data faster than the actual block time itself.
00:05:20.915 - 00:05:36.871, Speaker C: We're also doing this inside of a te, which I'll just briefly mention because I'm sure we'll get into a little bit more later. But that's the basic the sequencer outsources building to a specialized entity and then the specialized entity streams state as the block is built every 250 milliseconds.
00:05:36.983 - 00:05:37.519, Speaker A: Gotcha.
00:05:37.607 - 00:05:54.375, Speaker B: Do you guys envision a separate marketplace forming around to the right to build? Would roll ups try to do a EPBS or just PBS situation? Because I feel like there's some conflict with that in terms of just pre confirmations or the fast finality that it's being offered.
00:05:54.495 - 00:06:38.907, Speaker C: You probably aren't going to see people, you aren't going to see rollups, just import the L1 market structure because it's a different context. You can gate things by governance, particularly where on L1 that is just never going to work. You're not going to get all the proposers to g governance or something. We're trying to create much more decentralized context than rollups. So it makes a lot more sense, particularly when you want to do things that are a lot more purpose built like Unichain, to select one provider and have that provider be sort of internally decentralized. So we have plans to make the actual TE builder that is providing these state streamings and fast block times actually be decentralized to itself. But it's one sort of block building network as opposed to many different block builders and open competition like it is.
00:06:38.931 - 00:06:51.723, Speaker B: Eth l1 I feel like that unlocks so many cool I guess user guarantees or user experience upgrades just having one specified person doing a lot of the work. So is it cool that you guys are making that more accessible to more roll ups?
00:06:51.899 - 00:07:20.945, Speaker C: Yeah, exactly. And making it easier for other people to build these different types of new product experiences that you get by having a single block builder in this context, which is already what sequencers have. But this is now allowing specialized parties like ourselves to take that to the next level and push it to its limits in some ways to unlock new types of product experiences. Priority fee ordering is one of them. The state streaming with flash blocks is another. But there's all sorts of interesting things that you might want to do. Preconfs is the other one too.
00:07:21.105 - 00:07:42.373, Speaker A: Yeah, you had mentioned Robert, in our preparation for the show that some of the inspiration for designing roll up boost came from ecosystems outside of Ethereum like Celestia and Solana. Can you talk a little bit about those inspirations? Like what parts of their tech ST really played a part in making this on Solana?
00:07:42.429 - 00:08:25.155, Speaker C: It's called shreds, where as the block is being built, it emits these shreds of a block. It's like state. In the process of building a block, I think it's every 400 milliseconds. In Solana, it's either 200 or 400, I forget. But that gets streamed to nodes which then as the block is actually being built, they can be executing and verifying the correctness of the block. And we're going to do that on the context of NL2. So instead of full nodes, while they're syncing every two seconds, receiving a new block and then starting to execute and verify it, they're going to be using the whole time of that 2 seconds every 250 milliseconds to execute and verify a part of the block.
00:08:25.155 - 00:09:04.607, Speaker C: And so you can better use the existing bandwidth and time and get more throughput out of the system as well. And that's inspired by this notion of shreds within Solana. I forget what the Celestia calls it, but they have a similar thing where state is streamed to nodes over time. Right now, the bottleneck for scaling these systems is the ability for full nodes to keep up syncing. So this is really an innovation in architecture in order to let them do more work faster by better using time. Instead of only executing and verifying blocks every two seconds, we're continuously doing this over time as the block gets built.
00:09:04.751 - 00:09:12.115, Speaker B: Do you see users receiving the guarantees of inclusion or even execution every, I guess, shred time Mark?
00:09:12.455 - 00:10:11.533, Speaker C: Yeah. So the way that it actually works is the builder will tell you every 250 milliseconds. This is what I have executed in the last 250 milliseconds. And so, you know, my trade will be executed with whatever the builder has said at that point. There's then the whole process of actually stamping this thing with a block header, emitting it, and then a whole finality process after that. But since we're in a trusted execution environment here, you can know that the builder is not going to go back on its word or lie to you about what the state is, and you get some sort of initial guarantee. And what's interesting about uni is that while you may get this 250 millisecond guarantee from the TE builder, which is a pretty good guarantee, but not the maybe not all that you want to rely on, they are creating this layer of validators that is going to provide fast crypto economic finality on top of that, separate from the trusted hardware cryptographic finality.
00:10:11.533 - 00:10:27.251, Speaker C: That we are offering every 250 milliseconds. I think that's pretty interesting. It's like layering different levels of finality on top of this thing so you can be absolutely sure that your trade is actually executed. And it's more than just inclusion guarantees too.
00:10:27.283 - 00:10:59.211, Speaker A: To your point, on the topic of the use of teas for this, most of the cryptographic guarantees you're talking about the ability to know that there's a certain transaction ordering scheme that's happening. You had mentioned the highest priority fee ordering. That's all guaranteed by the fact that it's a T builder. Correct. The reason why you can have these transaction ordering like different strategies enforced, reliably enforced, I guess.
00:10:59.323 - 00:11:27.721, Speaker C: Yeah. So the way that it will work is that you can verify the actual binary of the code running inside of the te. And so you can see this service that is building blocks here is actually producing blocks according to this code. You can go in, you can look at the code and make sure that it's actually doing the thing that you want. Of course not everybody's going to do that, but we will have the power users that will. Maybe you will Christine and you will.
00:11:27.753 - 00:11:29.113, Speaker A: Lily go and no, I definitely will.
00:11:29.129 - 00:12:04.881, Speaker C: Not read it and tweet about it if we've done it wrong or we're malicious or something like that. The other interesting thing that this gives you is that as an end user you can actually send a transaction directly to this thing and have a end to end encrypted channel that is attested to that your transaction both is confidential so no one else has seen it and it's processed by this entity running a piece of code that you know has the rules that you want it to execute. So I think this is pretty interesting.
00:12:05.033 - 00:12:14.055, Speaker B: Do you know if unichain, if they're going to enforce on a block validity level like a priority ordering or are they just relying on the TE to do that ordering?
00:12:14.995 - 00:13:03.175, Speaker C: It's not within consensus, so it's not on the block validity level, if that's what you mean. Yes, they're just relying on the TE otherwise. But they do want to have the unichain validators help enforce this by providing, I think they call it attestations, which is sort of a little confusing because you have TE associations which is separate. But the basic notion as I understand it, is that these validators for unichain are going to be checking things like were the individual flash blocks ordered by priority fee or is there something else funky going on there? So maybe at some point it's within consensus or it won't be finalized. But initially it's just relying on the TEE builder and people eyeballing this thing on Etherscan, I guess Uniscan and you.
00:13:03.215 - 00:13:12.195, Speaker A: Probably get this comment or I guess question a lot related to teas, but what happens if there is like an exploit or a vulnerability in the hardware itself?
00:13:13.255 - 00:14:05.805, Speaker C: So oftentimes that there's a couple considerations here. First, if you're really interested in the details, you should have Andrew Miller, who's one of the folks on Flashbots, he's a Flashbots mate come on the show. He's been working on SGX and TE security for the better part of a decade. I think he's broke it more times than anyone else and he's working as a part of our team, among other things of trying to make sure that this is as secure as possible so you can get into all the details with him. Second thing is that oftentimes many of the attacks for tes have to do with actual physical access to the server. I see. So you have a piece of hardware and you take an electron microscope to it and you see if I send this transaction like how does that perturb the electrons? And then can you infer a private key from that or something.
00:14:05.805 - 00:15:01.051, Speaker C: So a lot of the attacks where a key or some sensitive information would get exfiltrated has you need physical access for these things. But you can actually attest that these machines are only being run in a cloud environment where there's a dude with a Glock preventing anyone from getting physical access actually like AWS or Azure or whatever their security team is. And that already gives you a larger moat of security by preventing a priori a lot of the or making it way harder to get physical access to a machine and then preventing a whole class of attacks and if there then is a critical vulnerability thereafter there's a whole procedure for how you're able to update the software or to patch things, et cetera, et cetera that we red teamed and walked through and have a whole procedure for.
00:15:01.163 - 00:15:27.789, Speaker B: Oh like I think in this scenario also like the tee, it's not like so much like making sure user funds are spent correctly because that's what the block validation process does with the verification through Unichain like the te just like providing more like I guess like better like user guarantees through priority ordering but like user funds like in this model, like I don't think are like at risk unless you're just like considering like the. Or the opportunity to participate in an MEV opportunity as an exploitable thing.
00:15:27.877 - 00:15:29.149, Speaker A: Yeah, that makes sense.
00:15:29.277 - 00:15:38.765, Speaker C: Initially we're going to be running the thing also and we're not going to be messing with the internals of the T or we're not taking an electron microscope to it or something like that.
00:15:38.925 - 00:15:56.301, Speaker A: Yeah, yeah. Lily, had you thought about kind of like in context of Astria, the impacts of roll up boost and if it is adopted by more L2's thoughts on how this might change the the game for your.
00:15:56.373 - 00:16:37.335, Speaker B: For sure, yeah. So like at Astra, like I guess for more context, I'm a rust dev at Astra, but then my research is more focused on like how can we build better like blockchain infrastructure to enable applications to like capture and create more value for the users. So in terms of like Astria's like architecture is like pretty different. So like I think rollaboost like offers like a lot of things to like applications trying to like monetize. But at Astria we're definitely like interested in like pushing forward like different blockchain architecture decisions to better enable applications to be more profitable. In terms of I feel like at Azure we're just doing something fundamentally different in terms of how we enable applications to control their own sequencing.
00:16:38.275 - 00:17:00.243, Speaker A: To that point, let's pivot a little bit to talking about some of your latest research. You presented EIP EIP 7727, it's been gaining some discussion I've seen on the Ethereum Magicians thread. What has the feedback been like from your perspective? What do you think are next steps for that eip? For sure, yeah.
00:17:00.339 - 00:17:54.031, Speaker B: Yeah. So I guess like for context, EIP7727 the goal of the EIP is to enable applications to have their own, I guess like anointed builder for their own state inside of like a wider shared block. And the eip, like the whole EIP process is like first you start, anyone can write an eip, but then the author of the EIP is then supposed to shepherd through the EIP through the whole process of convincing the client dev teams to implement it. Right now I'm at the process of gaining feedback from applications to see if this is something that they even want. I've gotten a lot of feedback on the composability of the solution. I think it's still pretty composable in terms of if an application wants to sequence themselves and another application wants to also interact with them, then they would make probably a shared builder that would sequence both of their state. But this is more getting into the territory.
00:17:54.031 - 00:18:03.303, Speaker B: I guess of priority ordering. This is another different solution to achieve the same things of just enabling applications to capture their own MEV value.
00:18:03.439 - 00:18:18.769, Speaker A: Yeah, it's interesting that you mentioned composability as one of the challenges because that was also mentioned for Rollup Caboose as one of the challenges that you guys that Flashbots has been thinking about when it comes to more adoption of this kind of technology. Right?
00:18:18.937 - 00:18:43.535, Speaker C: Yeah, there's multiple layers to this and so we're definitely interested in composability in sort of an application on priority fee ordering basis and there are some challenges to work through there. And then we're also interested in composability in the sense of how do you let different rollups synchronously interoperate within the same block and that may be a future roll up boost feature.
00:18:44.835 - 00:19:22.729, Speaker A: Still more to come One of the questions that I had when I was reading through EIP7727 is the extent to which apps can benefit from giving their private order flow to a specific builder. I mean obviously this would be a more equitable way to go about transparently showing the sequencing, especially if it's a decentralized exchange, these rules. But when it comes to the financial incentive to keep things the way that they are, what are your thoughts on the inertia of status quo?
00:19:22.857 - 00:19:52.555, Speaker B: Yeah, I think it depends on your definition of an application. When I see application, I mean an on chain protocol that has money locked inside of it. I know that there's wallets and then telegram bots who are selling user order flow to builders, but in my definition of an application that's not an application just in terms of the users. I guess the applications I'm working on that I care about are the people, the LPs who have money in the box, not so much the users trying to make money around this box of money.
00:19:52.715 - 00:19:55.575, Speaker C: Well, but Banana Gun has a smart contract too.
00:19:56.385 - 00:19:59.105, Speaker B: Do they? Or I'm not sure about how Banana Gun works.
00:19:59.145 - 00:20:12.257, Speaker C: They do have a have a smart contract and so I'm not sure that the distinction is all that tight actually because the telegram bot is just a front end to the smart contract that they have as like a front end to the LPing is too.
00:20:12.361 - 00:20:19.337, Speaker B: Do you know if they're like Banana Gun is like only trading on their own like liquidity pools that they manage or if they're using like other liquidity.
00:20:19.441 - 00:20:31.055, Speaker C: No, they're definitely using other liquidity. Maybe they have their own. I sort of doubt it. But they are composing into other other liquidity. But I think that they're, they're still an application. I don't know, I don't know how you draw the boundaries necessarily.
00:20:31.095 - 00:21:00.685, Speaker B: Yeah, like EIP 7727 definitely like has the side effect of like breaking down some of the current like, I guess like ways that crypto applications are like monetizing just in terms of like right now. Like I started this research because I was looking at block builders right now and like how much like MEV revenue is being like kind of redirected to block builders and to the validators. I think in the last week I saw like a thousand eth was like redirected and like that's like what, $2.5 million right now.
00:21:01.145 - 00:21:03.073, Speaker C: To builders or to validators?
00:21:03.169 - 00:21:15.565, Speaker B: Both. But like, I don't know if this is like a spicy take. I don't know if validators are like entitled to like MEV revenue. Like I really think the people who have like the money and the on chain protocols that the money should be flowing to them instead.
00:21:16.825 - 00:22:11.839, Speaker C: I don't know that that's particularly spicy. I feel like everyone would say the thing that makes the most sense is to give maximal value back to users. I think that the sort of caveat to that is that validators do have monopoly on block space and so both they should be compensated for that. And then there's a problem of attribution. Oftentimes that I feel like is very hard to say who is the user that deserves some amount of money. And so if you use, if you look at the case of a telegram bot, if someone enables trading on their token and someone pays $100,000 in order to back run that, who should get that money? Is it the validator? Is it the token deployer? Is it the user who paid the $100,000 for the fee? It's like very hard to say exactly and attribute who it is. And any sort of trade off that you make, you end up opening up space for a different person to say, well no, I think someone else should get this money in this case.
00:22:11.839 - 00:22:41.247, Speaker C: And the other thing that I would note is that the thousand ETH number is a little deceiving. I don't think you're trying to be deceiving, but it is a little deceiving because a lot of that money that builders are internalizing right now is getting refunded back to order flow providers. Also there's just no visibility because the top builders aren't sharing what their numbers are. But you can guarantee you that the number is something like 90% of that captured Value by a builder ends up flowing back to the user in the first place. So I think maybe you should actually be happy with the status quo.
00:22:41.351 - 00:22:46.063, Speaker B: I guess my stance is that liquidity providers should be the ones getting the MEV value.
00:22:46.199 - 00:22:56.607, Speaker C: But why over someone who's made the token, someone who's made a trade, or the validator who's using their supply in order to meet the demand of a user?
00:22:56.711 - 00:23:04.815, Speaker B: If protocols to exist for a long time, the people who keep their money in the protocol should probably be properly incentivized to keep their money there for sure.
00:23:04.855 - 00:23:21.279, Speaker C: But the question is what is properly incentivized and how much is properly incentivized? Who gets what piece of what pie basically? And it feels like you're taking the strong stance that all of it should go to the LPs. And that's not immediately clear to me that that should be true.
00:23:21.367 - 00:23:30.551, Speaker B: Yeah, I'm just watching applications move off of Ethereum because they're not able to express themselves on chain today, like Uniswap for sure.
00:23:30.583 - 00:24:25.037, Speaker C: But I think that actually has to do with other parameters, like having lower block times as an example. Also the MEV environment on Ethel 1 to some extent on being able to do stuff like priority fee ordering. But that's in part because of the parameters that Ethereum is trying to optimize for and why it went down the roll up centric roadmap in the first place. Right. So Ethereum needs to be this very decentralized, hopefully geographically diverse network itself, but it allows for more centralized environments like Unichain to try things that are a lot more centralizing, like fast block times like priority fee ordering, which neither of those things is immediately clear to me that you can actually meaningfully decentralize too. So yes, applications are moving off of Ethereum for some of these choices, but it's not immediately clear to me that you solve that problem by giving all the money to the LPs. One thing.
00:24:25.037 - 00:24:34.399, Speaker C: And the second thing is they are moving onto EVM rollups. And whether you think that's a good thing or not, we can talk about also. But in part the thesis is playing out.
00:24:34.527 - 00:25:12.465, Speaker B: Oh yeah, it's like, I don't know, the goal of EIP7727 is just to allow on chain applications the ability to express more sequencing preferences. And yeah, it's like the reason why I'm trying to make this an EIP instead of, I guess a block ordering thing offered by the block builder is that if you make it on the level of the EIP inside the EVM itself, then the same code could be ran on Eth L1 and EverL2 in a way that where applications don't have to ask, okay, how are these blocks being built? Does this MEV redirection mechanism, is it safe to run in this environment or not?
00:25:13.005 - 00:25:25.501, Speaker C: But don't you need the notion of a builder anyway in order to sequence the application specific thing? So you're just moving the boundaries of what is verifiable or not, but you still need that like if you're running.
00:25:25.533 - 00:25:40.533, Speaker B: Like an off chain auction, there's always going to be a part addressed or like that's my current understanding of like running off chain auctions. But I think the applications are probably better suited to be that entity instead of like a generalized like monopolistic like block builder or like the validator of a block.
00:25:40.669 - 00:25:53.951, Speaker C: But why doesn't the builder end up running all these things anyway? So the builder has the most information at the time of building a block to do application specific sequencing. Doesn't that mean that they're going to be the most competitive at running all of the app specific sequencing anyway?
00:25:54.053 - 00:26:07.499, Speaker B: Well, the idea of 777 is that applications would be running their own mini builders for their state. I see the flow would be like the MEV flow would be going to the applications like RPC or block building box instead of the main builder.
00:26:07.587 - 00:26:11.411, Speaker C: Yeah, but then why don't they just outsource it to the main builder?
00:26:11.523 - 00:26:25.855, Speaker B: Oh, they could part this anyway. Part of the EIP is the bundles are composable or just it allows for block builders like sequence multiple applications at the same time. Which is the way that composability can still be offered through the cip.
00:26:26.195 - 00:26:30.375, Speaker C: Yeah, interesting. I mean it's like generalized Uniswap X or something. Something like that.
00:26:30.875 - 00:27:24.395, Speaker A: Maybe in the context of some of those trade offs, the decentralization of that system doesn't matter so much on the L2. But when it comes to the L1 there are certain, I guess considerations more complexity around figuring out something like being able to give more flexibility to apps with their sequencing rights. Like thinking about how this might impact the decentralization of the builder market. Is it true then on the L2s, when we're thinking about designing MEV space, Is it a little bit easier to design MEV systems, do we think? Because you don't have to really care so much about decentralization. Whereas maybe the problems for MEV on the E1 are a lot harder to solve and a lot harder to get through, because decentralization is like the be all, end all.
00:27:24.555 - 00:27:42.519, Speaker B: Like, if you can assume like censorship resistance, you get like a lot of cool, like, properties that are unlocked and like L2s, like their sequencers are able to like offer this as like a reputation based, like, guarantee that we're not going to censor people. But like, yeah, doing that on the L1 or like with a decentralized, like sequencer side, like that could become more difficult to enforce.
00:27:42.627 - 00:28:30.629, Speaker C: Yeah, I think Ethereum is building in many ways on hard mode because it is trying to be meaningfully decentralized. And not just decentralized in the sense that you have many different proposers, hopefully many different builders, but also decentralized in a geographic sense as well. So you want homestakers in various different parts of the world to have many different jurisdictions represented among proposers. And that's really, really hard to do. And if you can relax that requirements and say, like, okay, you know, we're actually fine with 100 or maybe even one of these proposers constrained in some other ways, a lot of stuff gets a lot easier. Yeah, but the problem is that Ethereum has been designing from day one to be maximally decentralized. And then that makes a much harder.
00:28:30.629 - 00:28:40.923, Speaker C: That's a lot harder of a constraint in an environment to design for, I say a problem, but that's just the. It makes it a lot harder. It's not necessarily a problem that, that's Ethereum's trade off, so to speak.
00:28:41.019 - 00:28:55.571, Speaker A: Yeah, the design space and kind of the conversation, the features that are accessible, I guess, on the L2s just seem so wildly unattainable on the L1. Sometimes when I'm thinking about this in.
00:28:55.603 - 00:29:49.467, Speaker C: Context, I think one interesting place that this came up with was, is some months ago there was a discussion around the judo folks killing their mempool because sandwiching had popped up on Solana. Sandwiching, as everybody knows, is a thing on Ethereum as well. The Solana side of the camp decided to play the cat and mouse game of let's kill the mempool and let's try to prevent sandwiching overall. And that caused a lot of consternation in the Ethereum camp of like, well, why is there all the sandwiching here? You can see this other L1 that is taking much more opinionated choices to try to stamp it out. And maybe that's a good thing. And Solana can do that because it's relatively more centralized than Ethereum is. And it turned out that that didn't even entirely work because Sandwiching has popped up in a variety of different places in the Solana stack that's really hard to stamp out.
00:29:49.467 - 00:31:03.551, Speaker C: So it turns out that even that is such a, or is a sufficiently decentralized environment that doing things like trying to stamp out sandwiching by going to validators and telling them not to do it doesn't even work in that context. And Ethereum just went to the limit of that playing out and said, okay, let's optimize around the fact that we do have this public mempool and we do have this decentralized proposer set that we can't go around police everybody for and is now designing around sandwiching, which makes a really hard application environment to begin with. But that then gets people to think in the long term about how do you minimize, how do you give applications more control over their sequencing, how do you create designs that are better so that this MEV doesn't even exist in the first place. But that was sort of a trial run in the real world of different levels of trade off and centralization, decentralization and how they played out in trying to stamp out some forms of MEV in different places. On the decentralization, centralization, trade off spectrum that I thought was pretty interesting. You can probably like in the context of an L2, you already do have private mempools and it's a lot easier to stamp out sandwiching in that case. Right.
00:31:03.551 - 00:31:14.555, Speaker C: Because you know who runs the sequencer in this case we're going to be running the TE builder. You can see that we're not sandwiching the code, et cetera. So this is taking that conversation to the ultimate other end of the spectrum in some ways.
00:31:15.335 - 00:31:50.725, Speaker A: One last question for the two of you and given that there has been quite a bit of evolution on not only like the app layer of Ethereum, but with this roll up centric roadmap moving execution to L2s. I think when we think about the main challenges to combating the centralizing forces of mev, the discussion has changed quite a bit. Robert, we were talking about how like a couple years ago during the merge, our biggest concern was around the centralization of the builder market.
00:31:52.245 - 00:31:55.501, Speaker C: Well, your biggest concern was that flashbots.
00:31:55.573 - 00:32:20.487, Speaker A: Was the biggest centralized builder and flashbots would take over the world. Yes. But again we are in the process of rebuilding trust and I think a lot of the conversation has changed. So I'm curious to know, what do you think is kind of the biggest challenge right now when it comes to the field or the space, I guess.
00:32:20.511 - 00:33:03.435, Speaker B: Of mev I'd be interested in more people trying to quantify the need for composability or the value of composability. I was reading some research by Greenfield Capital I think, and they were analyzing the swap volume of the Uniswap V2 and V3 pools on Ethereum since the merge and they noted that 28% of pool volume is for centralized decentralized arb and only like 2% of the volume they saw was for cross pool orbs on chain. So I would be curious to know what are the real needs of applications in terms of composability. How much should this be valued and built into the solutions that we're building as an ecosystem?
00:33:05.135 - 00:33:14.419, Speaker C: I think there are two things that come to mind. One is the same answer that I gave you the last time I was on this podcast, which is geographic decentralization.
00:33:14.587 - 00:33:15.987, Speaker A: Yes, I remember this.
00:33:16.091 - 00:33:32.215, Speaker C: For these systems to be meaningfully decentralized you need many different jurisdictions represented in the proposer set. Ethereum is trying to achieve this with its home stakers, but there are a lot of centralizing pressures on geography.
00:33:32.515 - 00:33:34.155, Speaker A: The colocation effect.
00:33:34.315 - 00:34:10.945, Speaker C: Yes. On L1 we are fighting for every single millisecond at this point. And a single millisecond can give you an edge in the MEV Boost auction at this moment. And that means you make more money if you're a single millisecond faster or you're a millisecond closer to someone in some way. And that's a big financial incentive for everybody to get in the same data center all around the world. And in parallel we are pushing these roll ups to be as fast as possible, which again is a colocation incentive because they're going to be doing. You're pushing out more data, you want to be closer in order to.
00:34:10.945 - 00:35:05.745, Speaker C: For a variety of reasons. And we want to make these things interoperate too. So there's a lot of incentives for everybody to just get in a single data center across the ecosystem, which is not good because then you're just exposed to whatever the laws of that data center and the jurisdiction is. You don't have some sort of diversity of your geography. I think that's the number one thing that that comes to mind. I think I'm also sort of loosely worried about all of this activity that used to go on on chain is increasingly moving and it has been for some time into these off chain sort of venues where intents are settled by maybe just one router or something like that. And this is great for a variety of reasons, but it also means that an increasing amount of activity is just routed through single servers in AWS east or something like that, which is also not good for similar reasons to what I had just been saying.
00:35:05.745 - 00:35:19.045, Speaker C: And to me, I don't think we have that great solutions for either of those things. Maybe a lot more about how do you decentralize intense settlement than geographic diversity. And so that remains to me, the top problem in mev.
00:35:20.705 - 00:35:23.649, Speaker A: Yeah, the forest appears to be getting.
00:35:23.697 - 00:35:27.085, Speaker B: Darker where the forest is like one tree.
00:35:28.465 - 00:35:31.805, Speaker C: Yeah, just one really big tree.
00:35:32.465 - 00:36:04.857, Speaker A: Little concerning. Okay, well, thank you guys for the conversation. Thank you for the insights on what's been happening in the MEV space. Would love to have you both back on the show. And thank you to all of our listeners who were tuning in to this episode of the Infinite Jungle. We hope that you learned something new about Ethereum L2s and MEV, and we hope that you will join again for another episode of the show. We are signing off from the concrete jungle that is New York City in your explorations of the infinite jungle that is Ethereum.
00:36:04.857 - 00:36:05.585, Speaker A: Stay safe out there.
