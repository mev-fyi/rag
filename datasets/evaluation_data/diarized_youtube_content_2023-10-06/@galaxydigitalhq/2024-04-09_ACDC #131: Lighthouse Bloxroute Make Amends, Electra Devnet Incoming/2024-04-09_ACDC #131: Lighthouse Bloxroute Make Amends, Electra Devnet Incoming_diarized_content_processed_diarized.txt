00:00:10.040 - 00:01:04.064, Speaker A: Welcome to the infinite Jungle, the podcast about the evolution of Ethereum. I'm your host Christine Kim, VP of research at Galaxy, and today on the show we are going to be starting off with a quick update on the show content and schedule. I have some changes that I'm going to be making to this show that I want to let all of my listeners know about, and then we're going to be going into a summary, as per usual, of the latest Ethereum developer call where developers resurfaced learnings from last week's missing mainnet missing blocks incident. We talked about it on last week's show, and there has been some new information that has come out since that show. So we'll get into a little bit more about the mainnet missing blocks incident. Before we get started with the show. Here is a quick disclaimer.
00:01:04.064 - 00:03:01.846, Speaker A: I need to remind you to please refer to the disclaimer linked in the podcast show notes and note that none of the information in this podcast constitutes investment advice, an offer, recommendation, or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities all right, so I want to start off this show firstly by thanking everyone who has been listening so far to the infinite jungle. I have been enjoying very much everybody's feedback on the show, and one of the things that we are going, that I'm going to try and start doing now is changing up a little bit of the show structure and the show content. For people who have been following along for the last several weeks, you will know that this show is very technical, but also it has a lot of content in it. We get started with diving into what's happening on the protocol layer of Ethereum, what's happening to core development, and then we switch over to what's happening in the broader Ethereum ecosystem, talking with builders, project founders, developers about what's on their mind, and it's a lot to package into one episode. So moving forward, I am going to be releasing two episodes a week and breaking out the content so that first you are going to get the summary of the all core developer call and really rather than a summary, because you can always get the full summary of the call. These podcast versions are meant to pinpoint important parts of the call only and really give more insight, more opinionated takes on what was said on the call. That is still going to happen, and that is going to be the bulk of one of the two episodes that come out on the week.
00:03:01.846 - 00:04:18.004, Speaker A: On Tuesdays is the plan right now. And then for the second episode that comes out for the week. That will be the interview portion going into what's going on in the Ethereum ecosystem, talking with a subject matter expert about something like shared sequencing like we had last week, or talking about stake centralization like we had a couple weeks ago. And the reason why we're doing this, and hopefully to people who are listening to this, it'll be a good update, is because sometimes it can be a lot to try and wrap your head around all that's going on on Ethereum. And so by splitting out the episode so that we have the protocol update first, and then the very next day the interview, the ecosystem update, hopefully that'll make the content more digestible and it gives you, the listener, a little bit more time to process the information and then move on. And this is something that I also want to highlight is part of the evolution of this show. Ethereum is constantly evolving and changing.
00:04:18.004 - 00:05:03.610, Speaker A: Similarly to Ethereum, this show, the Infinite Jungle, will also continue to evolve and change. So this is one quick show update. Moving forward, starting from this week, you will get the infinite jungle all core developer call update, and then you will get the Infinite Jungle interview ecosystem update on the very following day on Wednesday. So moving forward, that will be the cadence. Let me know what you guys think about this change. I hope it makes the show a lot more fun to listen to. And for me personally, I really, my attention span, it's very short.
00:05:03.610 - 00:06:20.866, Speaker A: And so sometimes listening to podcasts that are even over an hour long can be very difficult. And for me, trying to package in so much content into one episode, it makes me talk faster. It makes me not spend as much time as I want on certain topics. So having the room to be able to keep the episodes short for all of the listeners like me that have very short attention spans, keep them short, but also be able to have the time to really go in depth into the topics that I want to go into and not have to rush through technical concepts that deserve the time to, to fully and properly explain. So I'm excited about this change and we're going to try it out right now because we're going to now talk about what developers talked about in the latest developer call. And I feel good because now I don't have to rush through this segment so that I can get to the interview segment. This entire episode will be about the developer call, and one of the main things around the developer call that was discussed or that was the topic of the call on the mainnet missing blocks incident.
00:06:20.866 - 00:07:22.264, Speaker A: If you don't know what that is, go. Listen very quickly right now to the first, like 15 minutes of the prior episode. There has been some new information that has come out around what exactly happened and why there was a high number of missed blocks on Ethereum in recent weeks. I should say one of the things that we had known about the missing blocks is that most of the missing blocks on Ethereum were coming from a particular relay. A relay, again, is a marketplace where these specialized actors called builders, are able to create blocks containing Ethereum transactions. And these transactions have fees associated with it. But these transactions can also be ordered in particular ways, so that the value that is able to be extracted from these transactions are a lot higher than if you had just ordered these transactions by the highest fee to lowest fee.
00:07:22.264 - 00:08:33.044, Speaker A: And a lot of the value is created by using traditional market strategies like front running, back running, sandwiching transactions to create a lot more value. So people that are very knowledgeable about the way decentralized finance works are able to kind of manipulate ordering of transactions to be able to get extract this value. And these builders are these very highly specialized actors that do this. They simulate blocks simulate different ways to package transactions into blocks so that the block has the highest amount of value possible. And they market these blocks on a relay. And the relay is that trusted entity between the block proposer, which is also called the validator on Ethereum and that builder. And it appeared as though the blocks that one particular relay on Ethereum was sending out was the source of the missing blocks of blocks that were not being proposed and submitted to the Ethereum network on time, according to what validators were expecting.
00:08:33.044 - 00:09:12.774, Speaker A: So that was the blocks route, really. And we knew that there was some kind of an issue there. Why wasn't the blocks route relay submitting and proposing their blocks in a timely manner? And there were missed slots. Slots are kind of like the interval of 12 seconds where a block is supposed to be proposed. There should be a block for every slot on Ethereum, every 12 seconds, like clockwork. But of course, due to a variety of reasons, there are times when blocks aren't proposed during that window and they go missed. And there was quite a high number of missed blocks, missed slots rather.
00:09:12.774 - 00:10:08.458, Speaker A: And again, the reason why it appeared that the reason why was primarily something to do with the blocks route relay. There weren't a lot of details about what exactly was wrong with the Bloxroute relay. If anything, the Bloxroute team was very adamant that it didn't appear to be an error in the way that they implemented the latest Ethereum upgrade, which was the den kun upgrade. It didn't appear, in their view, to be an issue with the updates that they had made to their software since the dancun upgrade activation. And one of the new pieces of information that came out our last episode is a postmortem by the Bloxroute team. And the Bloxroute team had explained, you know, we investigated this, and the reason why this happened was due to our BDN. Our block distribution network blocks routes.
00:10:08.458 - 00:11:13.872, Speaker A: BDN is this private networking layer where people connecting to that layer can submit their blocks faster, can propagate their blocks through the Ethereum network faster than if they use the regular public gossip sub. Gossip sub is the name of Ethereum's public block distribution network, their peer to peer networking layer. And so Bloxroute had said their BDN is what's causing the issue. Their BDN is not, you know, propagating blocks in the way that they had expected because of. Because of an unexpected interaction between the BDN and the lighthouse client. The BDN, according to the blocks are team, relies very heavily on this consensus layer client, on the lighthouse client, and the lighthouse client's API to work. And the interaction between that client and the BDN is really what's causing the issues.
00:11:13.872 - 00:12:43.664, Speaker A: And it did kind of seem like the blockchain was indicating that the real issue is not really with their software, but the Lighthouse client software. And that did ruffle some feathers. After the postmortem was released, the Lighthouse team responded and said, the way that your BDN is using the API is not the way that the API is supposed to be used or the way that we had scoped it out to be used. And further, you know, the Lighthouse team had indicated that there were some issues with communication between Lighthouse and the blocks route team when the mainnet missing blocks incident was happening. Delays in trying to get logs of what was really going on, concerns about the way the BDN is even, you know, just relying on a single client like lighthouse, rather than relying on more like a diversity of clients. Just the fact at all that, you know, the BDN is kind of like a private networking layer that when really, you know, developers and client teams on Ethereum want people to be using open source public software like the gossip sub. So there was, you know, a bit of a disagreement and a back and forth, I think, after the Bloxrout post mortem came out indicating that the real issue is between their BDN and the Lighthouse client.
00:12:43.664 - 00:14:39.122, Speaker A: But that disagreement was, I would say, fairly quickly resolved. The blockstrout team, in response to the Lighthouse teams response, had said publicly on Twitter, we recognize that there should have been a lot more testing between that interaction of the BDN and the lighthouse client API. And the incident was happening right before the long weekend, the Easter weekend, where lots of people go on vacation. Which is also why there may have been a delayed response between figuring out what was really going on and really the kind of resolution to all of this was an agreement to work more closely together the Bloxroute and the Lighthouse client team do more testing with these interactions moving forward. And this was also echoed in the latest developer call. But developers in the latest developer call, Terrence and Alex Stokes was saying how the biggest takeaway and reiterating steps forward is to make sure that these interactions are caught in testing. So before the dancun upgrade goes live on Mainnet, to have the Bloxroute BDN, a version of it, running on a testnet and checking all these interactions, also to make sure that communities communication between client teams and various service providers on Ethereum, in the Ethereum ecosystem that are building software, that of course the Ethereum core developers, protocol developers are not vetting to know that as the Ethereum ecosystem grows, these are stakeholders that need to be engaged with, that need to be reached out to, and that need to, that there needs to be more communication with and just closer cooperation with.
00:14:39.122 - 00:16:16.714, Speaker A: So all's well that ends well, you know, blocks route and the Lighthouse team handshake emoji, they are, you know, it appears on good terms and have agreed to kind of move forward in a really positive way, just increased cooperation to make sure that a similar incident doesn't happen again. So yeah, that's really the wrap up. And I really think that was kind of the best way to resolve things, the best way that this incident could have been resolved. It's true that as Ethereum, as the infinite jungle of Ethereum becomes more complex, there are interactions with the Ethereum protocol that developers are not going to be able to foresee. They're not going to be able to foresee all of the ways in which a certain endpoint of their API will be used for purposes and reasons that are outside of their scope, unless there's more communication, unless there's greater transparency, unless there are incidents like these to kind of make developers more aware. And the MEV ecosystem, again, about MEV, maximal extractable value, creating the most valuable blocks. This is a very lucrative activity on Ethereum and it's one of, I would say, one of the most important topics and areas of evolution in Ethereum that will continue to impact significantly the protocol development of Ethereum.
00:16:16.714 - 00:17:01.848, Speaker A: So as Ethereum developers are testing changes to the protocol layer, the secondary impacts to the MEV ecosystem, to MEV stakeholders like relay operators and builders is top of mind and priority. So that was just like reinforced and stressed again through this incident. And I think that was one of the main takeaways that both MeV players and Ethereum core developers like took away. And so yes, woohoo. Yay for cooperation and increased communication. So that's the mainnet missing blocks incident, some of the new information and the resolution that finally came out, one of the other kind of major topics on the call. I'm so happy that I have time to talk about all of this now.
00:17:01.848 - 00:18:05.434, Speaker A: I feel less kind of rushed through this segment of the show. But one of the other things that developers had talked about on the latest call is getting started with the next upgrade. Den Kun happened 22 days ago, and developers on this latest call said, okay, now it's time to start building the next upgrade. So as I've said many times on the show, Ethereum, because it has two layers, the execution layer and the consensus layer, upgrades on Ethereum are activated twice at the same time simultaneously. So the merge upgrade was a code change that impacted the execution layer of Ethereum and the beacon chain. The beacon chain is Ethereum's consensus layer, and it basically tied and merged those two networks together. My upgrade primarily impacted the consensus layer, enabling staked ETH withdrawals, but it also impacted the execution layer.
00:18:05.434 - 00:19:07.744, Speaker A: Den Koon impacted both. And these upgrades on both networks happen simultaneously at the same time. The consensus layer upgrade that is going to be happening on Ethereum is called Elektra, and the execution layer upgrade name is called prog. And so the combined upgrade name for the next immediate Ethereum upgrade that developers are really aiming to try and do by the end of this year, at some point before the end of 2024, but most likely it'll happen in 2025. In my opinion, the combined upgrade name is Pectra, and yesterday the call was primarily focused on the electra upgrade. On the consensus layer side, what code changes are really going into the consensus layer, and developers agreed it'll be, for now, four initial code changes on the execution layer side. Those four code changes do require some changes to the execution layer, so execution layer client teams for the prog upgrade are going to be working on the same four code changes.
00:19:07.744 - 00:20:31.780, Speaker A: In addition to one more EIP, one more Ethereum improvement proposal that really only impacts the execution layer, but talking just specifically about the consensus layer side, because that was the latest call. And next week there's going to be a call that's more focused on execution layer side upgrades. So we can talk about execution layer side code changes next week. But this week for this consensus layer upgrade, Electra developers agreed to start off with four code changes, the first being allowing the validator deposits. So when a validator needs 32 ETH in order to be a validator, and they deposit that amount onto the execution layer, and there's this process in which the amount deposited on the execution layer gets understood and validated on the consensus layer. So it's a bit of a more drawn out process than it needs to be. It's a bit of a drawn out process, I guess, between having that activity on the execution layer and then having the consensus layer verify and validate the deposit activity and verify the smart contract address where all those deposits are going to, and verify all the activity that's happening there.
00:20:31.780 - 00:21:52.420, Speaker A: So this code change, EIP 6110 moves all of that validation and the bulk of the deposit process for validators to the execution layer. So it all happens on the execution layer and it, it doesn't require additional voting or additional kind of activity from the consensus layer. So it's a little bit of a cleanup code change, I would say that further optimizes the execution layer and consensus layer processes for initiating and creating validators on chain. The second code change, I don't have the exact number, but it basically allows execution layer triggerable validator exits. So validators on Ethereum can deposit and become a new validator, and they can also exit and leave. And usually the exit process requires manual kind of intervention from the person that is running the validator node. And it's not easily possible for a smart contract basically automatically executing code on the execution layer to trigger those exits from the execution layer.
00:21:52.420 - 00:23:23.336, Speaker A: So a user normally has to manually kind of trigger that exit for the validator. But in the case of decentralized staking pools like rocket pool and other kind of smart contract based staking pools, that many of their operations are actually done through smart contracts code on Ethereum that just runs and self executes, this co change would allow more trustless operations to happen in those staking pools. So when you spin up a validator, when you delegate your stake to these staking pools, for the code to be able to trigger exits, rather than relying on the influence of an actual human being or an actual individual or company that's running those validators. So in short, it's a way to make staking pools on Ethereum run by smart contracts more trustless because it allows those staking pools to be able to trigger validator exits rather than having to rely on the goodwill of the validator node operators, whoever has been contracted to operate these validators on behalf of the person that's staking their ETH. So that's the second one, the third one we've talked about quite a bit. Max EB, the ability for validators to have a higher effective balance than 32 ETH. This is intended to really greatly reduce the number of active validators on Ethereum.
00:23:23.336 - 00:24:57.314, Speaker A: So instead of having over a million validators, have those validators that are earning rewards from their balance of 32 ETH, to be able to consolidate their balances into just one large validator and then be able to earn rewards off of a larger effective balance. An effective balance greater than 32. There's some very interesting open questions, design questions about how to implement Max EB that relates to creating, possibly creating customized partial withdrawal ceilings, that relates to whether or not these behaviors, like the consolidation of validators, should be triggerable from the execution layer or be a beacon chain operation, a consensus layer operation requiring more manual intervention. There's quite a few, some big discussions happening on how Max EB should be implemented, and Max EB is one of the biggest changes that I think will impact the staking operations that is going into Elektra. So developers are going to have a breakout meeting to discuss the design of Max EB. And I would highly encourage anybody who's listening who does operate validators or is participating in a staking pool to follow up and to keep an eye out for or how the design of Max EB evolves. This is a pretty major change that's coming to staking operations.
00:24:57.314 - 00:26:20.764, Speaker A: And then last but not least, the fourth code change going in is about basically being able to package attestations into blocks a lot more tightly. Attestations are just votes on whether or not blocks on Ethereum are valid, and all validators are required to participate in these, these voting rounds. And the ability to be able to package more attestations into a block is kind of an optimization for the network that makes the network more performant, more efficient again. So yeah, a few code changes, I think, that are more related to cleanup, to minor enhancements, improvements to the network, and then a few others that I think are going to have larger impacts on staking pools and staking operations. So those are the four that are going to be going into electra that developers are building out, trying to implement. And developers may include other code changes into the upgrade as they go. But at the very least, developers have said, look, these are the four that we're going to start with, and hopefully they'll have a complete, the complete code specifications for Elektra.
00:26:20.764 - 00:27:20.882, Speaker A: They're aiming to have that finished and ready to go by the end of this month. And if they have those specifications kind of solidified by the end of this month, then they can also use those specifications to create a testnet, a devnet, a developer focused test network, to try out, test out those specifications and start working out the bugs. So things are moving fast, you know, already we're well underway for the electra upgrade. It's quite, yeah, it's quite surprising and kind of amazing how fine tuned, I think the upgrade mechanism, like the upgrade process is becoming for Ethereum, it's like one upgrade done, like just immediately move on to the next one. Yeah. And yeah, those were the, I think the two main things, some things to keep looking out for. And especially for next week's call, we're going to dive into probably a little bit more of the execution layer side of the upgrade.
00:27:20.882 - 00:28:05.364, Speaker A: What's going into Prague and what are the list of eips that we're starting off with there? So that's something to look forward to. It's weird because now this is the end of the episode. It was a lot of information, actually. So I hope this gives people time to digest this information, digest all I've talked about today. Stay tuned for another episode of infinite Jungle coming out tomorrow that will focus a little bit more on things happening in the Ethereum ecosystem. This week I'm going to be talking with ETH Staker's Nyxo. She's been on the show before and we love having her to talk about staking ecosystem developments.
00:28:05.364 - 00:28:14.344, Speaker A: But anyways, I hope you enjoyed the show today and I will talk to you all again tomorrow. Thanks, guys.
