00:00:10.280 - 00:01:22.661, Speaker A: Welcome to the Infinite Jungle. On today's episode, I'm going to be talking about the main takeaways from all core developers consensus call number 140. I also have a couple of announcements that I'd like to make on the show related to programming as I will be going on vacation next week. And finally, I'd like to highlight a few insights from a new Galaxy Research report highlighting the impacts of the latest Ethereum Dencun upgrade on rollups and fee revenue on Ethereum. So we're going to be going into all of those topics, but as usual, before I get started with the show, here is a quick show disclaimer I need to remind you to please refer to the disclaimer linked in the podcast Show Notes and note that none of the information in this podcast constitutes investment advice, an offer recommendation or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities. The latest Ethereum developer call was pretty uneventful, I would say. There weren't too many updates, which is why I'm going to whiz through some of the main takeaways and highlight a few process items for upcoming calls to watch out for.
00:01:22.661 - 00:02:15.705, Speaker A: The first one is about devnets, of course. Developers start off these have been starting off these all core developer calls with an update on how the devnets are going. These are the developer focused testnets where all of the upgrades, all the different code changes that have been included into Pectra that developers have agreed. These are the code changes that are going into the Pectra upgrade. They're starting to test out these code changes on DevNets on these dedicated test networks. As we know, DevNet 2 has been in the process of some serious debugging efforts over the last couple weeks, and those debugging efforts are still ongoing. The developers shared a little bit of insight or a little bit of color on some of the new issues that they've been seeing on Pectra DevNet 2, and that is the issue of bad blocks.
00:02:15.705 - 00:03:46.221, Speaker A: The Geth client appears to be producing blocks that are invalid that have some sort of issues with them, and the Aragon client appears to be forking off into their own versions of the chain, unable to stay on the canonical chain with the rest of the Ethereum clients that are being tested on Petra DevNet 2. So those are some of the new issues that developers talked about on the latest call. They also flagged that more information about these issues are being actively, or I guess more investigation. Details about the investigation are being shared in real time on the Ethereum Research and Development Discord Channel I'll just note that the Ethereum Research and Development Discord channel is an active communication channel. So aside from these calls that developers have once a week to really convene on matters about the Ethereum protocol, they also have a discord where asynchronously developers are actively debugging, talking about testing efforts, research initiatives, and it's a pretty lively, I would say, area for discussion. So if you're listening and you're interested in being able to stay in touch with Ethereum development even more than just these calls and listening in on these weekly calls, the day to day development is really happening on the discord. The discord has been running for quite a while actually.
00:03:46.221 - 00:04:26.857, Speaker A: When I first started covering Ethereum, as a little side note, the developers used a Gitter channel. This was also asynchronous chat room where developers could debug issues in real time. It was on git and that was what all of the reporters of Ethereum I would say back in 2018 were using. And then they switched over to Discord for better organization of different sub channels and different groups. But I digress. The update there is that Petra DevNet 2 is still undergoing active debugging efforts. Petra DevNet 3 is supposedly still on track to be launched next week.
00:04:26.857 - 00:05:49.105, Speaker A: So by the time that you are hearing this episode, because we're recording this on Friday and you guys will be listening listening to it on Tuesday, the DevNet DevNet number three should be close to launching or have already launched. So developers just reconfirmed that while these debugging efforts are still ongoing, client teams are still ready and up to the task for releasing a new devnet with the latest specifications for EIP 7702. I believe this is the EIP where there's going to be a new transaction type for making user controlled accounts on Ethereum more flexible and behaves similarly to a smart contract account. And this is the EIP that developers did not actively test on prior devnets. So I'm sure there will be quite a bit of debugging that will happen on Devnet 3 related to that EIP. There was a couple other changes that developers discussed to the implementation of different EIPs in Petra. As they've been testing them on these Devnets, they've discovered a couple of edge cases, a couple of different ways to reformat how different parts of the Ethereum protocol work to make the communication between the execution layer client and the consensus layer client more efficient.
00:05:49.105 - 00:07:10.725, Speaker A: Anytime you are trying to make A change on Ethereum, it will impact many other parts of the Ethereum code base. And so in order to execute some of these code changes as elegantly as possible, there are quite a bit of cleanup work and quite a bit of reformatting work that developers are making their way through. One of them was related to EIP 7251, which is the increase to the maximum effective balance of Ethereum validators. Aside from increasing just the maximum effective balance, this will impact how penalties happen on the Ethereum protocol. These validators have have staked a certain amount of eth at a minimum 32 ETH on the protocol. And the protocol has the ability to slash or penalize that staked amount of ETH if the validator is detected to be breaking the rules of the network, proposing a block twice when they should only be proposing a block once. Before the change to the maximum effective balance, the increase to the maximum effective balance, the penalties were based on the number of validators, active validators that were being operated on the network.
00:07:10.725 - 00:08:27.673, Speaker A: But now a single validator is not a validator. With a minimum of 32 ETH, validators can have a range of effective balances from 32 ETHs to 2048 ETH. So it's quite a big range in terms of the effective balance that validators can have. Post post the activation of EIP 7251, this new code change, and that means the penalties, the slashings that can happen to a validator needs to adjust based on the effective balance of a validator. So that calculation, there's a few different edge cases that developers are discovering with being able to implement those calculations correctly. There's one related to the correlation penalty, which is the amount of penalty, the amount of ETH that gets slashed for a validator, it increases if there's a high correlation of other validators that are also slashed at the same time. So if the network detects that at the time of your, at the time of this validator's, you know, misbehavior, there was actually, you know, 500 or, you know, 700 other validators that were also slashed at the same time, the penalty would go up.
00:08:27.673 - 00:10:02.159, Speaker A: However, now it's not based because of this eip, that kind of correlation shouldn't be based on the number of validators. The weight of an attempted attack on the network should actually be weighted and based on the correlated amount of effective balance of the total amount of ETH staked that was also trying to attack the network. So you can imagine a validator that had only 32 eth and they were slashed. But at the same time, as a validator that had say 2048 ETH and they were also slashed at this same time, the amount of penalty that is laid on those validators would be a lot higher than if it was only two validators that had been slashed at the same time, with both32 ETH staked onto the network. So the implementation of MaxCB EIP 7251, there's a few implementation details around that calculation that need to be worked out that developers discussed on the latest call. There was also revisiting of some of the other discussions around how to restructure the beacon block body, the beacon blocks that consensus layer clients build because there is now certain information in the execution playload, the execution block that is contained within a beacon block that consensus layer clients build. Consensus layer clients used to be able to just throw away the execution payload and that's what they currently do now on Ethereum, because that execution layer block is already built by the execution layer client.
00:10:02.159 - 00:11:04.581, Speaker A: And there's no need to duplicate that kind of information on both the execution layer and the consensus layer. But post pctra there is an upgrade that will require consensus layer clients to utilize some of the information in that execution payload, which means there needs to be an easier way for consensus layer clients to access just the information they need. This is a topic that had been raised a couple of calls ago, I believe on all core developers, consensus call number 138. So developers rediscussed a different idea to be able to reformat the beacon block body in a way that's more efficient and requires less work than the envelope idea. That was the original idea shared by one of the Prism developers, potus. There's a couple other changes that developers also discussed related to the Engine API. But again, this is really the process in which developers are I want to implement this code change, we want to include it into the upgrade, but that means that these other parts of the Ethereum protocol need to be updated.
00:11:04.581 - 00:12:26.223, Speaker A: It's not things that developers knew necessarily could plan out, but they are discovering this as they do the implementation work, as they test out these code changes on Devnets and actively start to debug because of how many EIPs are included in Pectra. Let me repeat, this is going to be a long process. Developers right now are on Devnet 2 and for the past several weeks as I've been sharing on these calls, there's quite a few bugs that are being discovered and actively being resolved, and that will be the case as developers onboard new EIPs to these Devnets. So for Devnet 3 we're anticipating some debugging work for EIP 7702 Devnet after 3 4. If for Devnet 4 we could see active debugging work for EOS, perhaps peer DAS thereafter, perhaps a few other code changes as I'll discuss now thereafter. So I think we could even get to say, like Devnet20 and these Devnets, if you imagine are spaced out, say two weeks or two weeks or more apart, you're going to see the debugging efforts probably not end until sometime in mid-2025. It's probably too early to talk about the mainnet activation of Denkun.
00:12:26.223 - 00:13:25.561, Speaker A: It is definitely too early, but I just want to highlight how long this process will probably be because of how many EIPs there are to test. Quick update on the peer DAS efforts Again, Peer DAS is the code change to enhance Ethereum's scalability as a data availability layer. I'm actually going to talk about this a little bit more near the end of the show related to the Galaxy Research that recently went out. But as I talked about on prior Infinite Jungle episodes, the Peer DAS upgrade is being developed in parallel with the Pectra eips. The idea is to merge the two of them together, rebase peer das on top of petra. But for now, the development efforts for peer das is on a parallel track, on a separate track than the Pectra eips. And very practically this means that there are separate devnets for solely testing the peer DAS upgrade, rather than testing peer DAS alongside these pector EIPs on the same DevNet peerDAS.
00:13:25.561 - 00:14:19.121, Speaker A: DevNet 2 is apparently launching today on Friday when I'm recording this episode. The idea is that Petra DevNet 3 will also include all of the core Pectra EIPs. So developers are going to see how the Peer Desk upgrades interacts with all the Pectra EIPs, starting from the next DevNet, I believe. But at the very least, client teams have gotten new implementations. They're testing their latest peer DAS implementations on a new DevNet PeerDesk, DevNet 2. Then developers talked a little bit about EIP7742, which is an EIP that has not formally been accepted into the Petra upgrade, but it is an EIP that's very important to the Peer DAS efforts. Peerdas is primarily a networking change.
00:14:19.121 - 00:15:24.669, Speaker A: It changes how data is passed around and verified between Ethereum nodes. Those are computers connecting to the Ethereum protocol and verifying the rules of the Ethereum protocol. This EIP is an EIP that does require changes to the execution and the consensus layer clients of Ethereum. The networking change of Ethereum does not necessarily require a hard fork that is a backwards incompatible system wide upgrade to Ethereum. Networking changes do require coordination between the clients to all happen at the same time, but it's not a core protocol change. This EIP however would based on the networking changes, based on the enhancements and the improvements to how data is passed around between Ethereum clients between Ethereum nodes. I mean this co change would then utilize those improvements and say okay, now we can increase the hard coded limit on how many blobs, how much data space there is for roll up transactions.
00:15:24.669 - 00:17:46.223, Speaker A: We can increase that limit and in doing so developers are also considering ways to get rid of a hard coded limit on Blob on Blob transactions entirely and allow the blob limit to be dynamically set by the consensus layer rather than being hard coded on the execution layer and the consensus layer. So EFP 7742 is a way to update the blobcast target and maximum limit per block. And this is a code change that Alex Stokes, who's an Ethereum foundation researcher, as Alex has been moderating calls in on behalf of another Ethereum foundation researcher that has been on a bit of a hiatus, Danny Ryan. So Alex has been working on the CIP and he's the author of it and he was getting a temperature check from developers on the call asking if this is something that they would like to move forward with and potentially include into the picture upgrade. There was some positive sentiment of course shared around including that EIP and Alex basically said that he would revisit come back with some updates on the EIP's implementation because there was a few questions around how best to go about implementing this and some details to work out on how to change the Blob gas limit that need to be worked out and I just wanted to highlight because then developers moved on to a couple of other quick updates related to other code changes. One of those updates was on ongoing implementation work and progress for EIP7688 and EIP7688 is the SS related code change that we've talked about on this show a couple of times. It relates to ensuring that the new types of data that's introduced with the PETRA upgrade are forward compatible with a future change to data serialization that will happen on Ethereum Right now the data serialization method used on the consensus layer is different from the execution layer and there is a push to one day update Ethereum's execution layer serialization from our RLP to SSE and thereby unlock a lot more efficiencies between the two layers and that effort.
00:17:46.223 - 00:20:05.465, Speaker A: And in light of that effort and in light of the fact that this change is going to happen, there's some legwork that can happen in Petra more immediately. And so with the discussion around EIP7742 which is the change to the Blob Gas target and maximum, I think it's important that looking ahead in terms of process developers consider EIP 7688, this SSE related EIP and the peer DAS related EIP 7742 EIP together that EIP 7742 is not a co change that gets added to a Petra devnet without a formal discussion on whether or not it should be included in the Petra upgrade at all. Similar to how this has been the process for EIP7688 the SSE related EIP to move forward with the inclusion of any EIP at all into the Pectra upgrade, subjecting them to the same type of process and evaluation. I think optically that would be a very good way to go about doing things rather than pushing ahead with the inclusion of this peer to that's also authored by the same moderator of the call to avoid making it look as though Alex is just pushing this forward for inclusion in the upgrade into a devnet and allowing the SSE EIP to be included into the art, not potentially not included into the upgrade via a different process. So basically having the same process for inclusion on Both of those EIPs I think is the way to go. I'm not 100%, I wasn't 100% sure after the call if the soft confirmation of support for the peer DAS EIP meant that it was a shoe in for any of the devnets. But I think based on the rationale that Alex himself had shared on prior calls that he was very wary of including any EIPs into the pectra upgrade, the peer to ask EIP should be subjected to the same sort of wariness and scrutiny as the SSE related EIP and hopefully both of them are included into the upgrade.
00:20:05.465 - 00:21:24.461, Speaker A: But in terms of of process, I think it makes sense that the two are discussed in tandem and their inclusion is decided upon in tandem according to the same process. So that's a Little bit of one process. Note that I wanted to think about or encourage listeners to think about and also hopefully see happen on these calls in the future. One other very minor update I would say from the call is that the upgrade for the next Ethereum upgrade after Petra, the naming for that upgrade has been decided. The way that these upgrades are named, it's not a topic that I think developers care all that much about, but there is, what do you call it, a naming scheme for them. So for the execution layer upgrades, they're usually named after major cities, especially cities where Ethereum's annual developer conference devcon has been hosted before. So after Cancun, Osaka is the name for the execution layer upgrade, which developers had previously thought would be focused on Verkle, although developers are not as sure anymore.
00:21:24.461 - 00:22:07.563, Speaker A: Osaka is where DEVCON was hosted, I believe in 2019. I was actually there at the DEVCON Osaka conference. It was a great conference. And then for the consensus layer side, developers agreed on the name Fulu. This is named after a star in the constellation of Cassiopeia. All of the consensus layer code changes since the consensus layer, also called the beacon chain, since that network, that protocol was launched in December 2020, all of the upgrades that have been made to that protocol have been named after major stars. And it goes by this alphabetical order where the first upgrade was named after the star Altair and then the second upgrade was named after a star, starting with A, B, Bellatrix.
00:22:07.563 - 00:22:41.185, Speaker A: And so now we're onto A, B, C, D, E, F. Onto the sixth upgrade for the consensus layer side, and developers wanted a star name starting with the letter F. And so they went with Vulu, the portmanteau. The combined name for the next Ethereum upgrade is Fusaka, which developers thought kind of sounded like a Pokemon, which I agree with. It does kind of sound like a Pokemon. So there you have it. We'll start referring to the upgrade after Petra as Fusaka and Probe Labs, which I talked about a little bit on the call.
00:22:41.185 - 00:23:21.973, Speaker A: They did some excellent analysis on Node, the geography of Ethereum nodes and different attributes about Ethereum nodes. They did apparently new analysis on Ethereum's networking layer on the Gossip sub protocol that is used to handle and dictate the rules of Ethereum's networking layer. They did some analysis on it that can be found in, that is linked in the full call write up. So as per I will link in the show notes, the full call write up. Those were all the updates. And wow, I truly thought that these updates were going to go by quickly. I always do on these shows and then I go into tangents and I probably over explain some things.
00:23:21.973 - 00:24:01.941, Speaker A: But here we are already the whole episode almost gone. Let me quickly talk about a few programming notes for this week's episode. Please note that there will only be today's episode, only Tuesday's episode for this week. There will be no guest episode coming out on Wednesday. Also, this show will be going on a little bit of a hiatus just for one week. I'm going on vacation actually to the Nordic countries for about a week. So there will be no Infinite Jungle episodes for the week following.
00:24:01.941 - 00:24:53.705, Speaker A: We'll be back with new episodes starting I believe the second week of September. So I'll be back in September to record them. There will be no write up of the next ACDE call. This ACDC number 140 is the last write up I'll do. This is the last write up I'll do for this month and then I'll be back in September too to come back with a summary of the and some insights and some takeaways of ACDC number 141 the next ACDC call. So it's just that one ACDE call that I will not be doing my usual write ups for. But if you are interested in tuning into that call live, perhaps instead of an Infinite Jungle episode, you know, you listen to the full call and see what it's really like.
00:24:53.705 - 00:25:40.329, Speaker A: I'll link to the YouTube channel where the calls are streamed live. That's also where I listen to them every week. So that's a little bit of a programming update. I know how loyal my listeners are. So in the time that you've blocked off every single week for these Infinite Jungle episodes, I do thank you for always listening into these episodes. But for that time that you usually I guess listen to these shows, be sure to touch grass as that is what I will be doing in my spare time. Finally, aside from programming notes, I truly thought that I was not going to have enough time on this call to I wasn't going to be able to fill up the time on this call with just the updates from the call.
00:25:40.329 - 00:26:51.553, Speaker A: So I actually prepared a few different things that I wanted to highlight about a new Galaxy Research report that went out from data analyst Zach Picarney. He's also on the Galaxy Research team and he does a ton of great data analysis on what the heck is happening on Chain. He released a report very recently that analyzes the impact of Blob Transactions on Ethereum 150 days after the activation of the Denkun upgrade. So the main code change in Denkun as we know was EIP4844. And this introduced an entirely new transaction type onto Ethereum blob transactions that creates additional storage space on Ethereum blocks for arbitrary data for particularly rollups to be able to submit batched transaction data, batched user transaction data to Ethereum. Whereas before rollups include that data into a regular Ethereum transaction into the call data space of a transaction and the number of transactions that the Ethereum blockchain can process is not extremely high. There's a limit, which is why Ethereum is trying to scale through L2s and transactions on Ethereum can get extremely expensive.
00:26:51.553 - 00:28:10.933, Speaker A: So now there is this additional dedicated storage space that rollups and really anyone can access by submitting a blob transaction. This was the main code change in Denkun and and Zach did some incredible analysis analyzing how did blobs truly impact the economics of Ethereum the protocol in terms of protocol revenues from roll ups and how did this impact roll ups themselves? Did the cost of transactions on rollups decrease? If so, how much? One of the things that I wanted to highlight was just that transaction fees have been going down for these roll ups and these spenders are. And the biggest spenders are these top three rolls, Roll ups, Base, Arbitrum and Tyco. And as much as I say fees have been going down, there is some interesting analysis that shows for most days on Ethereum the cost of these transactions, the cost of blobs is not that high. It's say perhaps like $5 for these roll ups. But there are certain days where demand for blobs exceeds consistently exceeds what the block capacity is. So right now there's a maximum of six blobs that can be attached per block to Ethereum and these blobs must be purchased as a whole.
00:28:10.933 - 00:28:55.743, Speaker A: You know, it's 128 kilobytes of storage space and blobs are not. And roll ups are not able to only buy like half of that blob. They have to buy the whole blob. So there's analysis actually also in the report that shows I believe it was around 70% of blob space is actually utilized by rollups. But these blobs, there's a strict limit on how many blobs can be attached to an Ethereum block. And if the target of three blobs per block is consistently exceeded, if roll ups are demand by roll ups for blobs is consistently exceeding that target, maybe consistently hitting the Maximum. The cost for these blobs just increases exponentially.
00:28:55.743 - 00:29:22.965, Speaker A: It increases parabolically. So there are nine days on Ethereum where the demand for blobs were extremely high. One of them was because of an airdrop that was happening on Arbitrum that everybody wanted to get it on. Everybody wanted to scoop up that airdrop. There was another period of days where it wasn't roll ups, but there were these other kind of projects that were using the blob space for blobscriptions. They're a little bit light. NFTs.
00:29:22.965 - 00:30:39.745, Speaker A: It's kind of being able to utilize cheap data space on Ethereum to mint these absolutely ridiculous, these ridiculous JPEGs or these ridiculous other types of data, say like a voice Memo or an MP3. Because really any type of data is something that you can store in a blob. It's arbitrary data. And so there's people that had been minting these and storing these inscriptions, these other types of data onto that space and sharing them around, sending it around. This is similar to what we saw happen with Bitcoin when they did their, what would you call them, a taproot upgrade. I believe there was also an increase in the amount of arbitrary data that could be submitted on the Bitcoin blockchain and that gave rise to the inscriptions and the ordinals CR that happened on Bitcoin and now on Bitcoin that's become a full fledged movement in make Bitcoin more programmable, which has definitely irked the created some tension in the Bitcoin community. For people who want Bitcoin to stay as digital gold hard money, not be a programmable blockchain like Ethereum, a general purpose blockchain like Ethereum.
00:30:39.745 - 00:31:08.065, Speaker A: But lo and behold, I digress. Again, there were certain days where activity was extremely high. And I want to highlight that these these nine days account for 99.8% of total blob spend since Dancun went live. 3 million $3.5 million were spent on these nine days and the cost of these blobs were extremely high. Whereas for most of the other days the cost of blobs were virtually free.
00:31:08.065 - 00:33:08.221, Speaker A: So it just goes to show that while this Denkun upgrade did improve the cost of of data availability on Ethereum for roll ups for most days, these handful of days still account for this enormous amount of cost and spending, especially for rollups like Tyco that need to be purchasing a blob every single Ethereum block. So it just goes to show that the kind of increase in data Availability capacity is still not scalable enough for roll up demand. If we see more roll ups, especially more based rollups start to launch on Ethereum, you could see the consistent demand by these roll ups for blob space just exceed the target that is already set on Ethereum, the target of 3 and 6 and the cost from there just increase dramatically and be unaffordable for most roll ups to keep operating. And this comes to the reason for why Peer DAS is such an important code change in Petra. This is why Peer DAS is one of the main code changes going into Petra and why it's been expedited, I believe by developers to be implemented sooner rather than later because of the fact that while costs have gone down for rollups, the costs are still not low enough, especially during days where demand for blocks exceeds the target. So being able to increase the target number of blobs per block through peerdas is really an initiative that developers are trying to prioritize to ensure that Ethereum's roadmap for scaling and for Ethereum's roadmap to become a performant data availability layer for rollups stays alive. Because definitely before Dencun the costs were unsustainable for rollups and even after Dencun they've definitely improved as the report will show.
00:33:08.221 - 00:33:55.155, Speaker A: They've definitely and at the trade off of reducing protocol revenue for Ethereum, reducing the amount of eth burn on Ethereum at the expense of that. But there's still more work that needs to be done. These high blob fee rates account again for almost 100% of the amount paid by roll ups. These few days account for just the vast majority of money that roll ups spent just trying to purchase these blobs. So it just shows that the scalability is still a bit limited in terms of data availability and shows why Peer DAS is such an important upgrade that's going into Spectra. There you have it. I will speak with you all again in a few weeks from now.
00:33:55.155 - 00:34:25.915, Speaker A: Thank you very much for listening in to the Infinite Jungle Show. As always, I hope that you learned something new about Ethereum through listening to this episode. I hope that everyone listening has a wonderful start to their fall to their September month. And I'll talk to you guys all again. Yeah, in a few weeks. I am signing off from the concrete jungle that is New York City in your explorations of the infinite jungle that is Ethereum. Stay safe out there.
