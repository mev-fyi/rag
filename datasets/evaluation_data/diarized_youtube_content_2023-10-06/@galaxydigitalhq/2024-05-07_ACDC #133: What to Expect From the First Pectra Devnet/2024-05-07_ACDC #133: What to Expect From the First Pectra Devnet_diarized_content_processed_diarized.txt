00:00:10.440 - 00:00:40.745, Speaker A: Welcome to the Infinite Jungle, the podcast about the evolution of Ethereum. On today's show I'm going to be talking about what was discussed on ACDC133. We're going to be talking about the timeline for the very first Petra Devnet and some unexpected complexity around EIP 7549 move committee index outside of attestation. So we're going to talk about both of those things. But before we get started, here's a quick show disclaimer I need to remind.
00:00:40.785 - 00:00:55.305, Speaker B: You to please refer to the disclaimer linked in the podcast Show Notes and note that none of the information in this podcast constitutes investment advice, an offer recommendation or solicitation by Galaxy Digital or any of its affiliates to buy or.
00:00:55.345 - 00:02:30.511, Speaker A: Sell any securities on the latest Ethereum dev call. Developers talked about the timeline for the very first Pectra DevNet. The DevNet, as we've discussed on prior shows, is the first multi client test network where the EIPs for the prog and the Electra upgrade will be tested and developers and client teams will see how they operate with one another. The very cool thing about the way that Ethereum upgrades happen and how Ethereum protocol development happens is that this type of upgrade is executed through different independent client teams. So some of these client teams are operated within the Ethereum foundation, some are operated within other major Ethereum companies like Consensys, what's the other one? Arbitrum, and a few other independent ones that are funded just by grants. And the PETRA devnet is a chance for these client teams that have been building the eips, building the code changes for this upgrade to see how their implementation of the code changes for PETRA interacts and interoperates with all of the other clients. So the PCTRA devnet is an opportunity for different client teams to be able to see how their implementation of the code changes going into the Prog.
00:02:30.511 - 00:04:30.684, Speaker A: Electra upgrade interoperates interacts with each other in a test environment that is running all of the prior rules of the Ethereum blockchain implementing the protocol of Ethereum, but with all of those new features added and seeing how the different client implementations mesh with each other, it's very likely that since since this is the very first Pectra devnet, there are going to be bugs and there are going to be issues with the way that client teams have implemented the eip and a lot of standardization is likely going to have to happen for future Devnets. And given that some of the specifications for the EIPs that are in The Prague and the Electra upgrade have not been finalized yet. There will be quite a bit of changes still to come. But one of the cool one of the most important, I think takeaways from the latest Ethereum developer call was that the Petra devnet that developers feel fairly, I would say, keen on getting the first Petra devnet out in the next two weeks. Alex Stokes, who was chairing the call, he's a Ethereum foundation researcher, was talking about how all the client teams are under deadline, are feeling a lot of pressure for this tight turnaround to get the first devnet activated. He just highlighted to developers on the call that even if not all the client teams are ready, so long as one execution layer client team and one consensus layer client team is ready, the Devnet can start and then everyone else can pile on at a later date. But one of the main takeaways that developers are still trying to aim for and will definitely continue to keep following along with the development to see if to hear about and watch the activation of the first devnet over the next two weeks and we'll continue to follow up on that timeline.
00:04:30.684 - 00:05:56.369, Speaker A: The other kind of major update from the latest Ethereum developer call was complications around EIP 7549 move committee index outside of attestation now, this is a code change. EIP749 is a code change that was included in the next Ethereum upgrade and thought by developers as a code change that would be fairly simple to implement. One of the concerns that developers were Talking about on AC DC 1 through 3 was how unexpectedly complex this code change is to implement. The code change is primarily aimed at making validator the aggregation of validator attestations a lot more efficient. Through this change EIP 7549 the network will be able to pack more validator attestations into a single slot. A slot is where a block can be proposed by a validator and attestations are the votes that all the other validators who aren't proposing a block get to vote and say this block is valid. This version of the chain progressing the transaction history of Ethereum through this block is the right way to go.
00:05:56.369 - 00:07:29.159, Speaker A: Attestations are the way that Ethereum validators are verifying and continuing to extend the Ethereum blockchain through consensus. Ethereum's new proof of stake fairly new I guess Consensus protocol, Proof of stake protocol and EIP 7549 again allows the ability for more votes to be packed into a block, which is great in the case of Chain splits. If you have two different versions of what should be the canonical chain of Ethereum, the chain that has heavier weight has more attestations votes from validators saying that is the canonical chain is a good thing. It helps in those in fork choice ruling trying to figure out which fork is the correct one. So being able to pack in more more attestations in one block is good for that. And one of the other benefits of EIP 7549 that was mentioned in the EIP document itself as a quick note, every single code change on Ethereum is formatted according to a proposal outline that's dictated by this Ethereum improvement proposal format. And so if you want to learn more about what these EIPs look like, how they're submitted, and usually they've got like a number and a title as well as a motivation section, it talks the document lists out some of these very key details about what this code change would do.
00:07:29.159 - 00:08:56.067, Speaker A: But anyways, in the document of EIP 7549 one of the other motivations for this code change lists that from this change to validator attestations and moving a piece of the indexing the committee index the data outside of the attestation field. One of the benefits is that zero knowledge circuits that are trying to prove the Ethereum blockchain will take benefit from this. So Ethereum right now one of the long term goals of making Ethereum a blockchain that can be proved with the most efficient type of technology, one of those initiatives is ZKEVM zero knowledge. Being able to prove Ethereum with zero knowledge proofs, which is a fairly kind of ambitious technical feat. Because Ethereum as a blockchain, all of the rules and all of the the way the protocol progresses, it's not necessarily very friendly for proofs through zero knowledge. The technology of zero knowledge is more compatible with very specific and kind of singular deterministic mathematical problem sets. But for Ethereum that is very general purpose.
00:08:56.067 - 00:10:24.839, Speaker A: You can do so many different types of activities on it. Being able to prove all of those different types of activities and all of those different types of operations through a zero knowledge proof is quite difficult. But one of the benefits of EAP 7549 that's listed out in the document is that it'll make these circuits which are these machines that are specifically designed to run zero knowledge proofs, it'll make the proving process more easier. So that's kind of a cool kind of future looking impact of EIP 7549 and when developers had initially added EIP 7549 into the Pectra upgrade, as I said, this was thought to be a code change that was going to be quite simple. However, as developers were Talking about on ACDC133, the complexity of that code change has pretty much shifted in developer minds from low to practically high. Developers were talking yesterday about how much of the Ethereum code base this EIP actually impacts. And developers had discussed how there may be a way, there may be a little bit of a disconnect in the process between deciding on an EIP through the specifications, through the initial document that the EIP had and moving it and moving into implementation.
00:10:24.839 - 00:12:10.707, Speaker A: These unexpected kind of like, surprises of, you know, in theory you think that this EIP is going to be pretty simple, but in practice, once client teams start to implement it and see, oh, you know, actually this EIP has quite a bit of work that needs to be done on it. It touches a lot more pieces of the Ethereum code base than we thought. And so because of that, developers talked about, is there a way in the implementation process for Ethereum upgrades in general? Is there a way for this feedback loop to change perhaps the status of the inclusion of an eip and also to, yeah, to think more carefully about the implementation part and maybe there was a disconnect in really thinking about the complexity of the entire upgrade scope, not just based on the specifications for the EIP for the EIPs that were included in Prague, but also based on the implementation of the eips as well. And, and thinking of, is there a way to adjust the scope of the upgrade even as we go into implementation phase, which we are in now? We've got four EIPs, I think, on both the execution layer and the consensus layer that have been approved for Prog and Lectra for the PETRA upgrade. One of these EIPs is turning out to be a lot more complex to implement than developers had initially expected. And developers may or may not include even more upgrades into the even more code changes into the PETRA upgrade. The door is still open for additions, I think, and developers are still discussing what other code changes to include.
00:12:10.707 - 00:14:02.919, Speaker A: But I think because of the unexpected complexity of EIP 7549, I think at least on the consensus layer side, developers are going to be a lot more hesitant about including anything more into Prog Electra. And despite the complexity, developers are still very optimistic about trying to launch that DevNet in the next two weeks. So that's probably the biggest updates from the Petra and from the side of the upgrade progress and we are one of the two other things quick things that I want to mention about what was discussed more on the research side of the call. One of them that caught my attention was around research for confirmation rules. Roberto Saltini, he's a lead researcher in formal verification of distributed systems at Consensys. Consensys is this kind of major incubator for a lot of cool of a lot of well used Ethereum based products like Metamask, Infura, Truffle and Roberto Saltini is a researcher in Consensys and he presented new research on the call on ACDC 133 about a confirmation rule for Ethereum and a confirmation rule is a mechanism, an algorithm I should say that can be run and used to determine if a block is going to be part of the canonical chain of Ethereum before that block becomes finalized. So different types of blockchains have different types of protocols for determining when a block should be considered finalized AKA virtually set in stone, immutable.
00:14:02.919 - 00:15:44.679, Speaker A: The chain is not going to reorg it out and it's not going to replace that block with a different block. For a blockchain like Bitcoin, the way that blocks become finalized is really a matter of setting your time window blocks within blocks that have been produced on Ethereum added to the Bitcoin blockchain. If you say like I'll wait five blocks before I consider a block to be finalized, it's basically increasing amount of probability that the block won't be changed or the block won't be replaced with a different block because the more blocks get added to the Bitcoin blockchain to the bitcoin chain, the more different difficult it is to reverse. The more historical that block becomes, I guess is another way to put it, the harder that it becomes to change out that block on Ethereum since it moved to a proof of stake consensus protocol. One of the very different ways in which blocks are finalized on Ethereum that differs from Bitcoin is there are checkpoints on Ethereum finality checkpoints. So rather than simply waiting for a certain amount of time to pass and a certain level of assurance of probability that okay, it looks like you know, the block, the blockchain has progressed already 20 blocks. So you know, the block that I'm looking at that already is part of the long history of the blockchain probably won't be changed.
00:15:44.679 - 00:16:58.477, Speaker A: Rather than determining whether a block won't be won't be reorged out won't be changed out based on how old it is, how many more blocks have been added on top of that block. Rather than determining block finality in that way, the Ethereum blockchain has these checkpoints where validators attest, validators vote, and they say at this point, blocks past this point now cannot be changed unless. Unless we're willing to. Unless about one third of total E staked is willing to be slashed, was willing to be penalized. So validators are putting their money on the line to say, look, the blocks that we've voted on so far at this point are verified, are validated with the backing of our of at least two thirds of eth stake. And in order to reverse that decision, you do need quite a lot of stake in order to change the history past that finality checkpoint. So that's how finality on Ethereum is determined.
00:16:58.477 - 00:17:45.015, Speaker A: But it doesn't happen all that often. Or it does happen often, but it doesn't happen every few seconds. It actually happens every, I think, around 12 minutes. So there's a certain amount of time that needs to pass before that block can be finalized. And for applications like Exchanges and for maximal extractable value MEV operations, it's important to know when a block is going to be part of the canonical chain of Ethereum. And the faster you can actually figure that out, the better the user experience is. You know, when you send a transaction through an exchange like Coinbase, you don't want to have to wait, you know, say, 12 minutes before you can really confirm that the transaction was sent through.
00:17:45.015 - 00:18:56.551, Speaker A: Sometimes you want to have a lot more faster confirmations. So that, like the rule suggests, the confirmation rule is about helping nodes, creating an algorithm for which people can determine if a block is going to be part of the canonical chain of Ethereum before the blocks become finalized. The confirmation rule itself does rely on a set of assumptions about the network. It assumes that there are there is no one validator on Ethereum that is controlling more than one third of the stake. It assumes basically that the network is functioning in the most kind of normal like situations as possible. It's not able to catch edge cases if the network suddenly delays, isn't able to reach finality or misses a ton of blocks, or in these irregular network situations, the confirmation rule likely will not work. But assuming a certain set of assumptions about the normal conditions of the Ethereum network, this confirmation rule can confirm blocks.
00:18:56.551 - 00:20:31.291, Speaker A: So it's pretty cool and exciting research. Obviously, Roberto's research goes a lot into more detail about how and when and these assumptions. I'm going to link the research paper that he presented into the show notes, but basically he was asking for developer feedback on his research and he also mentioned that he has created a pull request on GitHub to formally be able to introduce this algorithm, introduce the confirmation rule into Ethereum nodes, into I wouldn't say probably the Ethereum protocol, but definitely for client teams to start to implement and to get feedback on. So it's pretty exciting kind of movement because I think it'll be helpful for usability and the user experience for different applications if they were able to use something like the confirmation rule. And I think it's another kind of additional feature of how proof of stake blockchains and the way that blocks are finalized is very much determined by attestations and it's a lot more deterministic rather than probabilistic than proof of work systems. So confirmation rule was kind of a cool topic. And last but not least, I will mention a quick note about the progress that developers appear to be making on peer DAs Peer data availability sampling.
00:20:31.291 - 00:22:36.695, Speaker A: This is a way to greatly enhance the number of blob transactions on Ethereum and as we know from the latest Ethereum upgrade that happened, the Denkun upgrade, Ethereum is starting to shift towards scaling through Layer two roll ups and in order to do that Ethereum does need to expand expand its ability to offer data availability to these rollups. Rollups are not primarily using Ethereum to execute transactions. Layer two rollups are really using Ethereum as a data availability layer to be able to confirm and finalize user transactions from the roll up to Ethereum. So these blobs are dedicated block space for L2s to use. And so far, you know, the Ethereum blockchain really only has block space for three. I think it was I'm blanking, but it might be three blobs. I think a target of three blobs per block and data availability sampling is a way to greatly increase that number to say 32 blobs or 64 blob transactions as you can see like multiples higher through this sampling technology where instead of having to verify all every single blob transaction, nodes can actually sample different pieces of blob transactions and then have mathematical, through some kind of mathematical process be able to confirm that 100% of that data was indeed put into the transaction into the Blob transaction and is indeed valid and good for the validator for Ethereum validators to include into a block and confirm on the Ethereum blockchain So data availability sampling is a research initiative, or was a research initiative from for quite some time designed to really enhance the scalability of Ethereum, its data availability scalability.
00:22:36.695 - 00:24:14.011, Speaker A: That's such a weird way to say things, data availability scalability. But I mentioned that because it's not that Ethereum is trying to scale its execution, right? It's not trying to make blocks larger or allow people to submit more transactions through Ethereum. The scaling part of data availability sampling is really trying to scale just the data availability of Ethereum and really Ethereum is trying to scale through L2. But anyways it has been a research initiative for quite some time, but in recent months and weeks I think developers have been making really good progress on it and developers now are thinking that they're going to be able to do a DevNet for Peer Das for implementing the first version of Peer Das and create a multi client test network for it, which is another exciting update. There wasn't clarity on exactly when this devnet will be up and running. It's clear the priority of course is for the PETRA devnet, but there is developers had shared a few updates around the continual progress they're making on peer DAs, different questions about its implementation and all this goes to say I do think that there is going to be a scaling increase, an increase to the blob count, the blob limit, some kind of scaling focused code change going into the Prog Electra upgrade. Even though developers really haven't specified any EIP that is going to impact Ethereum scaling through blobs.
00:24:14.011 - 00:25:48.215, Speaker A: But based on the focus and the progress that developers, at least right now, are making on peer DAs, I think there's a pretty good chance that developers maybe once they've gotten their bearings on the EIPs that have already been included in Prog Electra. Based on the progress that developers are making on and on the progress that developers are making on peer DAs, I think there is a very good chance that there will be another blob increase, another improvement to Ethereum scaling efforts, another improvement for data availability on the horizon for Ethereum in the next Ethereum upgrade. So lots to look forward to and a few, yeah, different interesting kind of ongoing research initiatives, the confirmation rule, some research initiatives like peerdes that are now being close to getting closer to implementation and then a few interesting unexpected challenges I think in the very implementation phase of Pectra that developers are working through. That's it for today's episode. I am signing off today from San Francisco, but I will be back in the concrete Jungle, New York City next week. If you're watching this on YouTube, you'll see me in our usual studio in the usual Infinite Jungle studio next week. I hope you enjoyed listening, listening to the show and the insight about ACDC number 13 3.
00:25:48.215 - 00:25:56.015, Speaker A: And more importantly, I do hope you learned something new about Ethereum through the show today. Until next time, stay safe out there.
