00:00:10.000 - 00:00:47.303, Speaker A: Welcome to the Infinite Jungle. On today's episode I'm going to be talking about the main takeaways of all core developers consensus call number 144. On this call, Ethereum developers agreed to include an additional EIP into the Petra upgrade, EIP 7742. We're going to talk about what that EIP does and how that EIP makes it a lot more likely that developers will include an increase to blob capacity in Petra as well. So before we get started with the show, here is a quick show disclaimer.
00:00:47.479 - 00:01:04.085, Speaker B: I need to remind you to please refer to the disclaimer linked in the podcast Show Notes and note that none of the information in this podcast constitutes investment advice, an offer recommendation or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities.
00:01:04.205 - 00:02:30.791, Speaker A: Developers have indeed included a new eip, a new code change into Petra, and I'm going to recount how this came about and then we can get into some of the implications of what this means. So during the call, one of the participants of the call, Francis Lee, he is a developer for the layer 2 rollup base. This is a rollup that was built and is operated by the cryptocurrency exchange Coinbase. Francis gave a presentation on the call to developers explaining the urgency for having a blob capacity increase in the next immediate Ethereum upgrade. As a refresher, when developers decided to split up the Petra upgrade because there were far too many code changes in Petra, they punted the major code change that would have increased Blob capacity for Ethereum called Peerdas to the next upgrade after Petro, which is called Fusaka. So developers punted Peerdas to Fusaka and in doing so created some concern clearly among roll up teams that there wouldn't be an increase to Blob capacity in Petra. So Francis has given his pitch before on prior all core developers calls on prior ACD calls.
00:02:30.791 - 00:03:39.719, Speaker A: He gave an updated presentation on the latest call illustrating that blob capacity is almost at its limit. He shared a couple graphs showing how the Blob usage has been increasing over the last couple months and is nearing the target rate of 3 blobs per block. I will include a link to the written form of his present presentation in the show notes and it goes and his presentation goes through in more detail why developers should include a blob increase in Petra. He recommended increasing the blob gas target from 3 to 5 in the max from 6 to 8 and this along with some additional upgrades and Improvements to the networking layer of Ethereum. One of them is the implementation of a new Engine API method, an optional engine API method that solo stakers can use. The method is called engine get blobs v1. Already a couple of consensus layer clients have implemented it.
00:03:39.719 - 00:04:29.535, Speaker A: Lighthouse, Prism and Teku have already implemented, I believe Reth as well. Possibly no, Reth is an execution layer client. But anyways, a couple of Ethereum clients have already implemented this new engine API and it's geared towards helping solo stakers get blobs. Blobs are a type of transaction where rollups can commit arbitrary data to Ethereum. And this data is usually very weighty. It's lots of data. And so for solo stakers, for users that are operating validators on resource constrained devices, oftentimes it's hard for them to be able to get these blobs and to be able to package it in with the block that they're proposing.
00:04:29.535 - 00:05:48.645, Speaker A: So to alleviate some of the resources required to get those blobs to download those blobs and the data in those blobs, developers have tried to implement and is implementing this new Engine API method. On the call, developers did talk about some of the data that they're seeing on mainnet and how this impacts node performance. Prism developer Terrence Zhao and TECU developer Enrico Dalfante, they both talked about how this does definitely help nodes to be able to get blobs a lot faster. The bandwidth consumption for data downloads reduces quite significantly when a node utilizes this new Engine API method. They said the download bandwidth is a lot smaller. These nodes are able, these computers are able to download the blob data a lot faster. However, because this node now has all of these blobs and has done so at a rate far quicker than other nodes on the network that are not using that method, the upload bandwidth actually increases.
00:05:48.645 - 00:07:26.815, Speaker A: So these solo stakers are starting to service other nodes in the peer to peer network with the blob data that they very quickly got. So developers are talking about various optimizations related to the implementation of engine get Blobs V1 on the call. But in this context, back to what Francis was saying, he was saying if the Engine Get Blobs v1 is implemented across clients, that'll help with the load on Solus stakers. And it should be this along with a few other improvements. This should give developers confidence to be able to increase the blob count and not have to worry about a reduction in the decentralization of Ethereum in the number of node operators participating in verifying transactions and validating the blockchain. So that was Francis presentation and developers discussed whether or not they would be able to commit to including a blob capacity increase in Petra on the call and at first I will say that the moderator of the call, the person who was chairing the call, Ethereum foundation researcher Alex Stokes, was hesitant about reaching a decision on the call. He had recommended a couple of times that developers should wait until next week's call, the ACDE call happening next Thursday, before coming to a firm decision about this.
00:07:26.815 - 00:09:46.915, Speaker A: However, one of the developers on the call, Ethereum foundation developer operations engineer Barnabas Busa, he highlighted that if developers are serious about making about including a blob capacity increase to Ethereum, they need to seriously start work on EIP 7742. EIP 7742 creates a mechanism for developers to dynamically adjust the Blob gas target and the max through the consensus layer of Ethereum through the Beacon chain. Right now the values for the blobgast target and the blobgast max is hard coded in both the execution layer and the consensus layer. And the way that various client teams have implemented these values and this hard coding I believe varies because Barnabas was emphasizing that without EIP7742, making a change to the Blob capacity of Ethereum is not as simple as updating one value in the protocol in the specifications it will require a significant amount of work and rather than doing the work to update these values in a more haphazard way across all the clients and updating those hard coded values, doing the work now to implement EIP 760 would have not only value in the Pectra upgrade because then developers can use that mechanism to adjust the Blob capacity. Developers can also use that mechanism in the forthcoming upgrade Fusaka, which as I explained has Peerdas in it. And Peerdas is a major networking change that will allow developers to adjust the Blob capacity of Ethereum by quite a sizable amount, more than what even developers are thinking now. What Francis has proposed, now the 5 to 8 numbers developers will be able to increase it substantially More so implementing EIP 7742 and that mechanism is something that will have great benefit for developers in future upgrades as well.
00:09:46.915 - 00:10:58.635, Speaker A: But Busa did note I keep saying the last name, but that's because when I write the summary, the call summaries of these, I always refer to the people by their last names. It seems more formal, more professional. But anyways it's something I inherited from during my days when I was a reporter at CoinDesk. But anyways, for the purposes of this podcast Barnabas he was talking about how implementing EIP 7742 it's a whole new mechanism and that will require quite a bit of work from client teams. As we've been discussing on these Infinite A Jungle Podcast episode, developers have really been more focused on debugging and testing out the code changes they've already implemented on devnets. Introducing a new EIP and agreeing that this mechanism will go into the upgrade means that developers will have to start work again from ground 0 implementing EIP7742 and then move forward with testing and debugging it and seeing how it works on DevNet. And this will impact the work that both execution layer and consensus layer client teams have to do for Petra.
00:10:58.635 - 00:12:15.599, Speaker A: So Barnabas estimated that the timeline for Petra's mainnet activation could be delayed. It could be extended by one to two months. And this was the main concern that developers were talking about on the call when considering whether or not to include EIP7742 in the upgrade. There were quite a few developers that were very apt though, that if developers do want to introduce an increase to BLOB capacity, they start that implementation work for EIP7742 now, like post haste, instead of waiting another couple of weeks before getting that work started. And I think the urgency that was felt by developers to not delay Pectra any more than necessary was the crux of why developers eventually agreed to make the decision and make the call on ACDC144 instead of waiting for the next ACD call. Because Barnabas highlighted and emphasized that work to implement EIP 7742 will take quite a bit of time, developers felt the pressure to kind of start that work. Now.
00:12:15.599 - 00:13:35.355, Speaker A: This does mean though, that developers have not yet decided really what the increase to BLOB capacity will look like. Developers had discussed in prior calls simply increasing the target blobs numbers from 3 to 4. Of course, Francis suggested an increase target to the target of five as well as an increase to the max. So there was no decision on the latest call about what that increase should be. There was only an agreement among developers to include the mechanism to include to Change blob capacity. EIP7742 now the inclusion of EIP7742 does mean obviously that an increase to BLOB capacity, whatever that increase may look like, is more likely in Pectra and will be forthcoming. Alex, who had kind of suggested that developers should wait on this when he kind of noticed that the sentiment of developers on the call was to get started with the work sooner rather than later, he did say that he would raise this decision again for discussion on the next ACD call to reconfirm that the inclusion of this EIP is okay with all developers.
00:13:35.355 - 00:14:48.465, Speaker A: So I'm going to talk now a little bit about the takeaways from this decision and the first one is why I don't think that it's going to be very likely that the decision gets reversed on the next call. To be clear, these calls are split up as ACDC and acde. One call more focused on the consensus layer of Ethereum, one call more focus on the execution layer. While during the days of leading up to the merge, when Ethereum did become a proof of stake blockchain and did formally become a blockchain with two different protocols, two different layers, the consensus layer and the execution layer. During those days in the lead up to the merge, these calls, the people who participated on these calls and the topics shared on these calls were quite differentiated. They were differentiated between the consensus layer and the execution layer. But since then, since the merge happened when those two protocols were fused together, increasingly the participation on these calls and the topics discussed have been cross chain have been execution layer related and consensus layer related.
00:14:48.465 - 00:16:01.985, Speaker A: So on ACDC144, this latest call, there was quite a bit of representation from execution layer client teams on ACDC 144. And again when Alex asked the call the Zoom Room, is there anybody opposed with the inclusion of VIP7742 there wasn't any objections. And further, I think that there were quite a few other topics that were more related to the execution layer that was discussed on ACDC144 and that Alex had also said that he would try and follow up with relevant parties to get further clarity on. I think that it kind of illustrates that the divide between the execution layer and the consensus layer is breaking down quite a bit these calls. Many a times for these calls, the discussions around what's happening with the Pectra upgrade would impact both execution layer teams and consensus layer teams. There's not quite a. There's not a lot of code changes in Pectra that only impact one layer.
00:16:01.985 - 00:17:52.125, Speaker A: So I think given how the representation and the content of the consensus layer call actually does impact the execution layer quite a bit, I think decisions made on the consensus layer call, I don't see a high likelihood that it would come as any surprise on the execution layer call that's going to be happening next week. And by the time this episode goes out, which goes out on Tuesday, the call that's happening on Thursday in a couple days. So that's the first note that I wanted to make related to when a decision is made on the consensus layer call, these decisions can have an impact on execution layer clients. And this also is one of the reasons why I think there's been increasing representation of execution layer clients on the consensus layer calls and vice versa versa consensus layer clients on the execution layer calls and doubly so, because when an upgrade is happening like Petra, this upgrade is not just an upgrade that's happening on the execution layer of Ethereum, it's an upgrade that's happening on both layers. So when it comes to planning the upgrade, when it comes to talking about debugging the upgrade on devnets and planning, these ACD calls are where that planning happens. And despite the initial kind of bifurcation of responsibilities and of work, I think a lot of that work is starting to merge together. And especially in the phase of the upgrade where testing is happening, a lot of the outcomes and the decisions and the debugging work has to happen on both sides on the execution layer and the consensus layer.
00:17:52.125 - 00:18:53.525, Speaker A: So that's why I think these ACD calls are the, I guess, division of what is considered a consensus layer change and an execution layer change or a consensus layer decision and what's an execution layer decision is starting to break down. And that's also why I actually listen in every single week on the ACD calls ways away. A long time ago, these ACD calls used to happen only once every two weeks. But ever since, ever since the merge, really, and ever since developers started to prepare for the merge and introduced this additional ACD call, yeah, the developer calls have been happening every single week. And in some ways I think it's helped speed up decision making because now developers don't have to wait two weeks before coming together to discuss a particular topic. Especially if it's urgent. Developers get together at least once a week to to talk about the state of the Ethereum protocol.
00:18:53.525 - 00:20:14.923, Speaker A: So there's that. The second one, of course, is to talk a little bit about the update for the Petra timeline. On the last two Infinite Jungle episodes where I've been talking about the takeaways of the ACD calls, I've shared what I think the Pectra timeline will be, and I did budget in that timeline at least a month for developers to adequately implement any new EIPs that they were thinking of including in Petra. And I did think it was likely that a block op capacity increase would be included in Petra. So if the implementation of EAP 7742 does only take developers, say an additional month, I don't think that the initial target of seeing Petra go live on mainnet sometime in February or March really changes. However, if the complexity of implementing EIP 7742 does lean more towards two months, if not three months, the implementation work and the testing work for EIP 7742, then I actually could see the timeline for Petra, the upgrade going live on Ethereum mainnet get pushed back between February and March, to March to April, possibly even May. I don't actually, now that I think about it, I'm going to say that it's not that likely that the Petra upgrade will go live in February.
00:20:14.923 - 00:21:31.539, Speaker A: That seems a little bit too fast on the cadence, given that DevNet4 and DevCon will happen in November and developers will be implementing EIP 7742, possibly talking about a blob capacity increase as well. And with the holidays coming up in December, I think that the devnets will still be very important for developers to work through in January. So the earliest that I think developers would start to upgrade the public Ethereum testnets would be in February. And developers will need at least a month to see how those upgrades behave on the public testnets before actually moving on to mainnet. So I don't think February is actually all that likely. But again, depending on how easily developers can implement EIP7742 and get through that work, I think that will be a major determining factor on whether developers can really hit the mark for a March mainnet activation, or if it gets delayed further out to April or even May. So that's kind of the update on the PETRA timeline.
00:21:31.539 - 00:22:22.689, Speaker A: And I will note that as developers, one of the things that I've been talking about is how these decisions impact the PETRA timeline. And of course the complexity of a code change really matters. I do want to highlight also that that one of the reasons why these upgrades on Ethereum take time and take months to really prepare is also because of the fact that Ethereum has so many client teams. Ethereum has about 10 client teams, five for the execution layer, five for the consensus layer, roughly. So that's a lot more code to test. If you're implementing one code change in one client, that's A certain amount of work, but multiply that by 10. If not, well, I guess for consensus layer change, you're multiplying that by 5.
00:22:22.689 - 00:24:01.415, Speaker A: The work to test and debug that code and also to see how these clients are interacting with one another, to make sure that every single implementation is as robust as possible. It's one of the reasons why the upgrades for Ethereum take so much time now, I think, is really because there's a lot more client teams on Ethereum, not all of these. I would say the majority of these client teams did not exist when ethereum launched in 2015. The more client teams there are, the slower Ethereum upgrades will be, because the resources to test all of these clients, to maintain these clients are spread out across all these groups. And it's a lot more work, a lot more code to be making sure is up to the specification standards and doesn't have any issues when these clients are being hooked up to and interacting with other clients that are live on the Ethereum network. So I wanted to highlight just how the number of client teams does make the upgrade timeline longer. But one of the benefits, of course, is that if you have different kinds of clients, if you have many different kinds of client types, then you ensure that if there's a bug in one client, then you have all these other clients that will still be able to operate validators that users can still use to validate the blockchain and keep the blockchain going.
00:24:01.415 - 00:25:34.975, Speaker A: So there is added resiliency to the network with all these different client implementations. But of course it's a lot of work to ensure that all these clients are tested properly and on the same page about specifications and standards. And when it comes to governance, deciding about a code change within the context of say, two to three client teams, a lot easier than, say, trying to get 10 different client teams all on the same page. So also one of the reasons why it's important that there's representation from all the client teams on every single one of these ACD calls, because sometimes there are decisions impacting all the client teams and so participation is very important. The last thing that I wanted to talk about when it comes to the inclusion of EIP7742 is how this changes the anticipated impact of PETRA on Ethereum stakeholders before the inclusion of EIP 7742, which does make an increase to the BLOB capacity a lot more likely in petra. The primary individuals, the primary stakeholders that would be impacted by the PETRA upgrade were those related to, were those related to Ethereum staking pools. Any really applications related to staking such as restaking, liquid staking, et cetera as as well as wallets.
00:25:34.975 - 00:26:57.059, Speaker A: Because EIP 7702 represents a change to the way that users make transactions on Ethereum through their EOA through their user controlled accounts. It creates a lot more flexibility in the kinds of requests and the kinds of transactions that users can authorize from their wallets. So to the extent that wallets can utilize EIP 7702 and improve the UX of end users, I think it will be pretty interesting to see the impact of EIP 7702. But that one is very geared towards improving the end user experience on Ethereum and it is up to wallets to integrate EIP 7702 in their operations. There's quite a few different code changes that will improve the permissionlessness of staking pools on Ethereum, those that interact with validators. Because now you have these smart contracts that are actually able to trigger important validator actions such as a validator withdrawal or a validator deposit or a consolidation. Things like this was required by these by a trusted entity, somebody that is controlling the necessary keys, cryptographic keys, to be able to trigger these operations on the consensus layer.
00:26:57.059 - 00:28:15.783, Speaker A: Now the smart contracts, the code running on the execution layer can handle that permissionlessly. So that's why I say that the Pectra upgrade before the inclusion of EIP 7742 was primarily an upgrade that would have some minor UX improvements, especially for the subset of users that are using wallets that are going to be integrating EIP 7702, the users of staking pools that are going to be able to know that there's less points of failure in that application that they're interacting with because that application no longer needs to rely on a trusted entity. There's also some security improvements. EIP 7251, the Max EB increase. This will ensure that the networking layer of Ethereum doesn't become overloaded. With far too many messages between active validators, the number of active validators will go down, ideally so that the protocol can be a lot healthier when it comes to being able to handle and support all of the validators that are attesting to blocks that are proposing blocks. These are all.
00:28:15.783 - 00:29:14.375, Speaker A: This is all a lot of load on the networking layer of Ethereum. So there's some security improvements for Ethereum happening and some minor UX improvements. That was kind of the scope of PETRA with the addition of EIP 7742. Clearly another major stakeholder group that will benefit from Pectra to some extent is roll ups is L2s. And this means that with the inclusion of more blobs with blob capacity increasing, the cost of blobs will go down and that is the intended impact. Roll ups are concerned that with the capacity for blobs almost reaching saturation, the price for blobs will also increase, meaning the operating costs for these roll ups will go higher. And that will mean that roll ups have to charge users on their roll ups more in terms of transaction fees.
00:29:14.375 - 00:30:25.848, Speaker A: So in order to keep costs down, roll ups are also a major beneficiary of petra. However, this does mean that in the short term there will be less fee revenue on E of this likely all else equal. And so for eth, for holders of eth, any improvements to data availability is not something that will necessarily impact them positively. Of course the idea is that over the long term roll ups will become the adoption of rollups will become a lot higher. So there will be a lot of users on roll ups that are making magnitudes more transactions than they could have of feasibly being able to do on Ethereum L1 and this will mean higher revenue from rollups to Ethereum. So over the long term the idea is that Ethereum will scale and demand will come to rollups and increase the fee revenue of Ethereum from rollups. Right now, however, the reduction in costs that are going to roll ups is going to mean less revenue for Ethereum L1.
00:30:25.848 - 00:31:48.235, Speaker A: And as users of the L1 migrate to the L2 of Ethereum, that means Ethereum is losing fees that they could have gained from that user because the user is now transacting on an L2 and those fees on the L2 are a lot cheaper than what they could have gotten on Ethereum. So again, over the short term the fee revenues for Ethereum is not looking good, which means it's not a positive upgrade. It's a negative kind of trend for ETH holders in the short term. So that's something to note about the impact of Pectra on eth holders on L2s, on wallets and staking pools. Couple of other kind of notes. Depending on what developers do with the Blob capacity increase, there is a possibility that again node operators on Ethereum could be negatively impacted from PETRA if the blob increase is substantial. And this means that solo stakers find it even more difficult to propose blocks to operate on the network and you see a reduction in the number of solo stakers then I think and the requirements for even operating a validator on Ethereum go higher through Petra then I think you could see a negative impact to node operators to the decentralization of Ethereum.
00:31:48.235 - 00:33:13.385, Speaker A: And there isn't really, there isn't code changes specifically targeted at improving the solo staking experience, no EIPs that are particularly targeted at this. However, there could be future code changes and other upgrades that do try and alleviate the resource, the computational requirements, the kind of hardware that you need, the kind of software, the kind of bandwidth that you need in future upgrades. Couple other stakeholders that I wanted to talk about, we talked a little bit about end users I will say EIP 7702 there is, it's almost like a stepping stone to see how introducing some kind of flexibility to user controlled accounts, how that impacts user behaviors. I think it will set developers up for being more confident about making greater changes to to activating more flexibility in user controlled accounts. This initiative and this kind of trend is called account abstraction. So to being able to do full account abstraction one day. But the kind of improvements to the end user experience for now with Pectra and the eips included in Pectra I don't imagine are going to be all that substantial.
00:33:13.385 - 00:35:12.423, Speaker A: If anything there'll be a nice kind of test, a nice kind of use case to refer back to for further UX focused enhancements down the road and for smart contract developers. The major upgrade that I think would have impacted smart contract developers in Petro was eof but like Peerdas it was punted over to Fusaka. So in this upgrade I think smart contract developers, it'll primarily be the smart contract developers of staking operations, of staking pools again that will be positively impacted for the rest of smart contract developers that are interested in say zero knowledge utilizing these new BLS precompiles that is going into Pector. But I think these are more minor improvements that are going to impact a subset of smart contract developers, not represent a huge improvement to the smart contract developing experience on Ethereum. So I don't think it's a major improvement which is why I don't include smart contract developers as a major stakeholder group that will be positively impacted by petra. Overall I think so far the way that PETRA is shaping up to be the primary stakeholder groups that will be positively impacted are the L2s and the roll ups, the staking pools and the wallet teams that implementing EIP 7702 and the staking pools that are implementing and utilizing some of these other code changes related to better communication between the execution layer and the consensus layer. I don't think that there will be really a lot of positive benefit from Petra to eth holders, node operators really to end users and just broadly smart contract developers.
00:35:12.423 - 00:35:54.463, Speaker A: The general scope of this I don't think there will be major changes to the experience that smart contract developers have on Ethereum. However, in future upgrades there are of course priorities. There are other code changes that developers could prioritize to target these groups. So for example, for eth holders, perhaps a change to the issuance policy of Ethereum. Very contentious, but I'm just putting it out there. This would definitely impact eth holders as a stakeholder group. Talking about node operators, there are definitely upgrades that may give node operators more power in the kinds of transactions that they can include in a block.
00:35:54.463 - 00:36:45.511, Speaker A: Inclusion lists come to mind when it comes to a code change targeting the decentralization of Ethereum or more I should say the censorship resistance of Ethereum. One of the initiatives that developers were talking about still in very early research stages. One of them is single slot. Finally being able to get finality on your transaction in the span of 12 seconds. That's a major UX improvement impacting all end users of the chain. But of course these are not code changes that are going into Petra. So when it comes to understanding how Petra will impact stakeholders and why Pectra is really even an important upgrade to look ahead to, I think the inclusion of EIP7742 really does illustrate that developers are prioritizing the interests of L2s and roll ups as quickly as possible immediately in the next immediate upgrade in Petra.
00:36:45.511 - 00:37:27.147, Speaker A: So those were a few takeaways that I wanted to share on this week's episode. Thank you guys for tuning in. I was just reviewing my notes for the Call this week to make sure I didn't forget anything to share on the episode. As always, you can get a full summary of the call. It's always linked in the show Notes thank you for joining another episode of the Infinite Jungle. I hope that you learned something new about Ethereum this week and I hope that you will tune in again for another episode. I am signing off from the concrete jungle that is New York City in your explorations of the infinite jungle that is Ethereum.
00:37:27.147 - 00:37:27.995, Speaker A: Stay safe out there.
