00:00:10.160 - 00:01:40.031, Speaker A: Welcome back to the Infinite Jungle. On today's show I am going to be talking about the main takeaways of all core developers execution call number 196 where developers seriously considered the idea of splitting the Pector upgrade into two forks, two different upgrades. This is not a new idea, but the idea was received with a lot more positivity and we are going to be talking about the implications of that potential decision and of the Petra fork becoming split into two. Before we start with the show, here is a quick show disclaimer I need to remind you to please refer to the disclaimer linked in the podcast Show Notes and note that none of the information in this podcast constitutes investment advice, an offer recommendation or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities. The main conversation was about Petra being split into two different upgrades. However, there were some Devnet updates that I think we should start the show off with because that's what the call started off with and they're pretty important too. Just for the general for listeners that are generally keeping up to date, which I hope you are listeners of the Infinite Jungle show on how the PETRA upgrade is progressing, one of the good developments that have happened since the last time we talked on this show about Petra is that Petra DevNet 3 has launched.
00:01:40.031 - 00:02:58.885, Speaker A: That's right, the third Petra DevNet is now live. The main differences between Petra DevNet 3 versus Petra DevNet 2 is that on Petra DevNet 3 developers are earnestly testing EIP 7702 transactions. These are the transactions that will give more flexibility to user controlled accounts. It'll allow users to for the duration of a transaction, batch transactions together basically authorize with one signature, you know, multiple transactions. You could do transaction sponsorship, you could pay the gas for somebody else's transaction and you can create more flexible conditions spending conditions around how the balance of whatever tokens or eth that you have in your account gets spent. You could say any transactions above this limit or below this number should happen or should be authorized or not. Maybe those aren't the best examples of what I'm talking about, but anyways you can implement different kinds of conditions, different kinds of flexible spending conditions on the balance of on the balance of your account and you can authorize different applications to spend under these conditions or not spend under these conditions.
00:02:58.885 - 00:04:43.445, Speaker A: Pretty cool. And Perry, who is the Ethereum foundation developer Operations engineer, he's basically one of the people that organizes all of the Devnets, said that on Devnet 3 so far the EIP7702 transactions appear to be working in the way intended, so that's good. The other major change from DevNet 3 to DevNet 2 is the fixes around validator consolidations. This is part of the EIP 7251 code change where the maximum effective balance of validators will be increasing from 32 eth to 2048. And in order to encourage the number of active validators to decrease as quickly as possible once the upgrade goes live, because there's a lot of networking overhead for Ethereum to support all of these active validators to encourage consolidation, developers are going to be enabling consolidations to happen from the Pectra upgrade activation and they'll also be enabling it so that smart contracts, smart contract based staking pools like lido, rocketpool, yeah, any smart contract based liquid staking pool or restaking pool so that they can initiate these consolidations trustlessly from the execution layer. There were some bugs related to that on Devnet 2, they have since been fixed and so far on Devnet 3 consolidations appear to be working as expected. There were a few bugs that Perry had mentioned that were noticed in the Nethermine and the Ethereum JS clients, but I believe it was either the nethermind or the Ethereum JS team that said the fixes were already since resolved.
00:04:43.445 - 00:05:46.223, Speaker A: Those fixes are being addressed. I believe that there will be further testing of course on DevNet 3 so we can expect more updates on how the Devnet is progressing. Probably more different types of stress tests happening on that Devnet before developers feel confident about moving on to Devnet 4. Now that EIP 7702 is being earnestly tested, there was a call out for any wallet developers developers that are going to be utilizing these more flexible. The more flexible spending conditions, the more that are going to be utilizing and surfacing the new features for people. For users that have accounts on Ethereum, these wallets that have these interfaces, they might create a dropdown option where users can say I want to authorize all these transactions in one go. These kinds of integrations for those people, for those projects and teams.
00:05:46.223 - 00:07:18.039, Speaker A: There was a shout out made on the call for wallet developers to start testing out EIP 7702 on DevNet 3. I will link to the DevNet 3 resource page where wallet developers and teams can request for some TestNet ETH to start earnestly testing out their integrations with EIP 7702. So that's a little update on Petra progress. There was also a bit of Conversation around Petra specifications updates we spent quite a bit of time on last week's episode about these specifications updates, about how this happens of when you have an idea for a code change that gets implemented or that developers agree to include into an upgrade. There are certain edge cases related to the CO chain's implementation, parts of the Engine API or different parts of the Ethereum stack that could be specified further or that could be tweaked in such a way that it makes the implementation of the overall code change a lot more efficient, a lot more secure. And so these are the kinds of discussions that developers of course had again related to Petra. They are trying to move the needle, of course, on many different EIPs, especially the ones that are on Devnets, and they're trying to make sure that for Devnet there's a list of additional fixes and additional optimizations for these EIPs that are on DevNet 3 that they can push through for DevNet 4.
00:07:18.039 - 00:08:42.061, Speaker A: So I'm not going to go into the specifications updates on this week's call because there's some weightier matters to discuss. But if you're interested in reading those, I, as always will also link to the full write up of the call in today's show notes so you can have a look at some of the interesting specifications updates that developers are discussing. One of them is a repricing to BLS precompiles, which developers had been talking about for a while, but kind of interesting how the pricing mechanisms I guess happen for new features that are added on chain. This all depends on the benchmarking analysis that happens on developers. How much computational load is being expended by the computer to the node to actually run these BLS precompiles and are the costs for users to pay for them on Ethereum, which is this global compute platform, is it comparable? Is it a accurate price? So kind of interesting discussion there, but anyways we're not going to go into it, but here I am already going into it. Let's talk about the main discussion point that happened, which is that the Ethereum foundation researcher Alex Stokes put forth the idea of splitting Petra into two smaller hard forks. Is this a new idea? Absolutely not.
00:08:42.061 - 00:09:41.983, Speaker A: The Ethereum Foundation Developer Operations team, the team that Perry's a part of, wrote a blog post back in May saying hey, this is probably a good idea because of how many EIPs are in Petra. There's 20 EIPs in Ampectra. This seems overkill to try and implement them all in one upgrade. The complexity and the risk of doing so is extremely high. Why don't we split it into 2? At the time this was not talked about very seriously. I would say on the call developers were not receptive to this idea. I would say primarily because at the time developers had already pre committed to executing the Virkal upgrade the Virql transition in the next fork after Petra Fusaka Obviously splitting Petra would mean that instead of Verkal the vertical transitioning happening in the upgrade after Petra Verkal would be happening in the subsequent upgrade after both forks.
00:09:41.983 - 00:11:51.305, Speaker A: So in other words, I think developers didn't want to delay the Verkal transition further. At the time I would say developers felt more confident about moving forward with the vertical transition. Whereas I feel like now the. I mean I should double check this but I would say that personally the sentiment around Verkle has shifted a little bit and there's more bandwidth or there's more agreeability to trying to explore other options for getting two stateless clients for Ethereum beyond just doing it through Verkle, doing it through this major overhaul of the database of Ethereum of because that's a very risky and it's a very difficult transition to do. This has been said over and over by developers to the point where I think developers realize that to do the Virkal transition it's not going to be possible to do really much else in that same upgrade because of how weighty and complex trying to overhaul the state of Ethereum, the record of all account balances of all smart contract code, intuitive different data structure from Merkle Patricia tries to Verkle trees that's not going to be an easy transition. It's going to be something that developers really need to test very thoroughly to ensure that the transition goes smoothly and then thereafter to start really utilizing this more efficient data structure that nodes could potentially build smaller proofs around the proof sizes for verifying certain parts of the state that all becomes more efficient under Verkal. And moving forward how the Verkle transition impacts Ethereum's roadmap to stateless clients, et cetera is something that developers I would say were very confident about in March, but I personally would say they're a little less so now.
00:11:51.305 - 00:12:42.342, Speaker A: But anyways, back to this idea of splitting Petra into two forks. Again it wasn't a new idea and as I explained there were reasons that I think developers were not very receptive to it way back when in May, fast forward, we are in September and developers have gotten into the weeds of trying to implement all 20 EIPs, to be quite frank, on Devnet 3, they have only tackled a minority of the 20 EIPs. I mean, 11 of the EIPs are EOs. And then there's the. I mean, Petra is one of. It's not Pectra. Peer Das is one EIP, but there's a couple other EIPs that are likely to be bundled in with Peer Das.
00:12:42.342 - 00:13:44.907, Speaker A: So really we're talking about maybe about eight or so EIPs that are really on DevNet 3 and that developers are earnestly testing. They're testing these EOF and Peer das in parallel. But I think they've had some time, they've had some time to realize how much work this is all going to take. And so when the idea was brought up again, and it was brought up in the context of a conversation that Tim, who is the chair of these calls, Alex was responding to Tim because Tim had brought up this discussion of, look, Petra is a huge upgrade, but we should consider possibly adding these other ones, these other EIPs. There was a list of EIPs that are, quote, unquote, considered for inclusion. It's a label that truly I don't think has very much meaning at all, which I believe I've talked about on this show before. But there was a list of EIPs that developers did not make a firm decision about whether to include Impactra.
00:13:44.907 - 00:15:10.191, Speaker A: So on this call, Tim had raised them up again. He said, look, there's these list of E P's that we really have to make a decision on now we're several months into the PETRA implementation progress. The one EIP that Tim had mentioned was eschew in or had the most support for including into Pectra was Alex's proposal EIP7742 to uncouple the Blob count between the execution layer and the consensus layer. This is one of those EIPs that would naturally be coupled with the Peer DAS implementation, the Peer DAS activation, because as you make this major overhaul to the networking layer of Ethereum, you want to be able to make some changes to the Blob Gas limit to be able to enable higher blob counts per block, increase the data availability of Ethereum, scale Ethereum for rollups. And to do that, if you're going to change the Blob gas limit, why not change the mechanism to make future changes to the Blob gas limit more easily? Because right now the Blob gas limit is fixed on both the execution layer and the consensus layer. But this code change would enable it such the Blob Gas limit would be dynamically set just by the consensus layer. And so in the future, when you're thinking about other DA improvements and enhancements, you can see that most of the code changes that would be necessary would be limited to the consensus layer.
00:15:10.191 - 00:15:58.930, Speaker A: You wouldn't need to update the Blob Gas limit for both the execution layer and the consensus layer. It could potentially be a consensus layer only upgrade. So that was the EIP that Tim had mentioned was something that it seemed developers were very, you know, positive about including into the Petra upgrade. Tim again mentioned that Petra is already big enough as it is. But you know, here's the CIP developers chimed in, you know, after that to say that, you know, they were generally agreeable to including more EIPs beyond that, you know, beyond EFE 7742. And then here comes Alex with the idea, oh, you know, why don't we split it into two hard forks? Because this seems to be the natural thing to do as Petra grows larger. And he mentioned, of course, the complexity and the technical risk that comes with implementing all these EIPs at once.
00:15:58.930 - 00:16:47.651, Speaker A: And he recommended that the first part of Petra be all of the EIPs that are on DevNet 1 currently. So basically the EIPs accept peer DAS and EOF and for Petra 2, the second hard fork for Petra, that is the one that will include EOF and peer DAS, likely probably a few other EIPs outside of just peerDAS and EOF for the second fork, but that's how he proposed splitting it. Developers were very agreeable. The developers on the call were very agreeable to this idea. They were very confident. There was quite a few messages in the Zoom chat of the meeting saying that this would mean that the first part of Petra would feasibly be shipped by February. February next year.
00:16:47.651 - 00:17:29.785, Speaker A: Woohoo. A little bit earlier. I maintain that developers are very ambitious with their timelines and sure February is perhaps a reasonable target, but based on historical estimations, I think it's safe to say you should tack on maybe a month for a little bit of buffer. So probably February or March for the activation of Petra. Hartford1 and what else did they say about this idea? They talked about it a little bit more. There was a little bit of argument about Virkal and really is Verkal ready for the next hard fork, etc. But not super important to get into.
00:17:29.785 - 00:18:07.433, Speaker A: There was concern expressed about if Petra is split into two hard forks, who's to say that the Second part of Petra doesn't become enormously large again as developers try and jam in more EIPs. That was one of the concerns that were raised. There was. There wasn't really a solution to that concern put forth on the call. But that's the last name of Tim. Tim. He said that this is a pretty major change that now developers are seriously considering and I would say about time to consider this seriously.
00:18:07.433 - 00:19:06.555, Speaker A: He said developers should take a week, take a week to think about this, to think about all the implications and let's try and come back as a group and make a final decision about this on the next all core developers call. So next week on the Infinite Jungle, I hopefully will have an update for you of whether or not this is going through. From my view of how the call went today, it seems pretty likely that Petra is going to be split out into two, and that seems to be the most sane option. It is very logical to do this because number one, Petra is already extremely large. It is by far the largest fork of Ethereum by number of EIPs. That's what Tim said on the call and he's been saying on many other calls. And despite that, developers continue to try and implement more EIPs into Petra.
00:19:06.555 - 00:20:17.875, Speaker A: It's quite clear that Petra is not going to stay this list of 20 EIPs. It's likely going to be 20, 22, 23 EIPs. And so already the complexity is unmanageable. But with the addition of these other ones, it makes sense that developers would try and split it out so that the network is safer, so that if there is a weird cause and effect between two EIPs and the collision of the code changes between these two EIPs goes wrong so that developers aren't finding that out on mainnet, it reduces the amount of. I think it'll help in terms of finding bugs just to be able to keep a smaller cohort of VIPs, see those interactions on Mainnet, test those in isolation, make sure that the network is running safely and smoothly for a couple months, and then activate the second part of the upgrade with a bunch of other EIPs and tack those on top. So I do think that this is logical. Even when it was proposed in may by the EF DevOps team, the Panda Ops team.
00:20:17.875 - 00:21:10.849, Speaker A: I do not, however, think that this is going to somehow make Petra a faster upgrade to ship. This was brought up quite a bit on the call that if we do this then Petra as an upgrade will be shipped faster on Ethereum. That I think is A little bit of a fallacy because the amount of complexity, there's certainly a lot of risk that comes with implementing it all at once. But I think that if developers had put in the time and the effort, you could see this kind of upgrade be implemented anywhere between mid-2025 to maybe the end of 2025. So a lot of code changes, a lot of testing, and I think that developers reasonably possibly could have implemented it altogether by the latest, at the end of 2025. Kind of speculation there. This is all speculation.
00:21:10.849 - 00:22:18.963, Speaker A: However, if you assume that the first part of Spectra is going to be implemented in February or March, the second part of the upgrade, eos and peerdes included, I think the chances of that Upgrade happening within 3 to 4 months of the first part of PECTRA is very slim. I think developers are going to need more time to test all the networking changes from Peer das, all of the EVM changes that are coming with EOF and whatever other EIPs they include into the mix for the second part of Pectra. I think, I think the second part of Pectra happens near the end of 2025, if not early 2026. So I think the timeline is very similar. To see all of the EIPs happen and get activated on mainnet, I think it's the same, very similar, but I do think that it's safer to split them out. And so for that reason, again, I'm very supportive of this timeline. And I think it was also clear from when the EIPs, when the list of PETRA EIPs were finalized or were starting to be finalized.
00:22:18.963 - 00:23:37.015, Speaker A: I think it was clear even then that though developers started planning out Petra to be this small upgrade that developers could really wrap up with a bow and implement by the end of this year, by the end of 2024, and then fully focus their attention on this massive database overhaul to Virkal in 2025. It was clear early on when developers agreed to include EOF, when developers agreed to include MaxV, peer Das and do all these things, that the VirQL upgrade would be delayed whether or not the PETRA EIP gets split out into two hard forks or stays 1. VIRQL by nature of how large PETRA is today, is definitely delayed. Virkal is not going to happen. I would realistically say earliest 2026, if not later, or if not, maybe never. If developers suddenly have a different research direction they want to take with the database of Ethereum and the path towards statelessness, which again is a little bit of a contentious topic because there are obviously there's a lot of real work that has already gone into Verkle. So not to say that anybody's work should be wasted.
00:23:37.015 - 00:25:03.385, Speaker A: So yeah, that's kind of my two cents on this discussion around Petra being split out into two. A few other insights about this that I should mention. The way that Pectra 1 and 2 is proposed, that developers are proposing to split it with the EIPS on Devnet 3 going live first and then everything else that wasn't included on a devnet like EOF and peerdesk coming in later. I get that it makes sense from a testing and implementation and DevNet process to do it that way because if you take out code changes from devnets you need to redo certain client implementations, you need to take back work that had been done to refine those implementations if you take out EIPs from the DevNet and you add other ones in. So I understand that probably the fastest way to ship what's on the DevNet currently is just to isolate those, not take anything out, not bring anything in new. The fastest way to kind of make sure that at least something goes live in the next six months, you know, the best way to move forward is to make sure what's on Devnet 3 right now is what becomes picture one. But from a narrative perspective of what is the point of these upgrades, you know, the merge was proof of stake.
00:25:03.385 - 00:26:14.297, Speaker A: Shanghai was activating staked ETH withdrawals. Duncan was improving the DA capabilities of Ethereum by introducing blob transactions. From a narrative perspective, if developers had thought about this a little bit earlier, which of course for Everybody, hindsight is 2020 and I'm sure, you know, as developers are going through this, you know, there's many different things they would have changed. But the way that ideally if it was a blank slate, I would think makes more sense to divide the Pectra EIPS into Pectra 1 and Pectra 2 is to bundle all of the UX improvements that are in PETRA and all the cleanup or fix ups that are happening in Petra into one upgrade and then isolate the DA changes to the second upgrade. So the first upgrade being EOF EIP 7702 enhancements to the staking pool so that validator withdrawals can happen from the execution layer. Some of the fix ups and the cleanups that are really easy. Well I shouldn't say easy because the attestation refactoring was a little bit harder than developers had initially ironed out.
00:26:14.297 - 00:27:47.871, Speaker A: But things like maxcb to correct the massive amount of networking load that's happening with the number of active validators being super high, bundle the UX improvements to say that this is the upgrade that enhances Ethereum's usability as a general purpose blockchain and to almost market the first part of PETRA as the upgrade for smart contract developers and for users to say that end users, we care about you, smart contract developers, we care about you. And these code changes are really going to enhance the smart contract layer of Ethereum, which of course developers want to migrate all the users to rollups and that's the rollup centric roadmap. But to be clear, all of those changes would be incorporated by rollups. Rollups that want to maintain compatibility with all of these would have a trickle up effect to roll ups as well. So from a narrative perspective it makes sense, I think, to bundle those code changes together and then for the second part of Petra, focus that as the peer DAS upgrade, as that being the upgrade that greatly enhances Ethereum's data availability. So not only is Ethereum making these improvements as a general purpose blockchain, it's also tackling its long term vision of being a performant DA layer. And I think that that really logically makes sense and I think it would definitely help improve just kind of this narrative confusion that's happening on Ethereum right now of what the heck is Ethereum's long term value and what is Ethereum's real roadmap.
00:27:47.871 - 00:28:56.265, Speaker A: I think if it was a blank slate and it wasn't, the devnets weren't structured in the way that it was, I think that would have been more logical way to split these out. And of course I think peer DAS in and of itself is a very complex change. It requires a lot of networking changes, it's going to require a lot of execution layer and consensus layer changes with changes to the block gas limit its calculations, you're going to see a major, probably a major enhancement to DA capabilities. But the way that PETRA is being proposed to be split out now, the way that developers talked about it on the latest call is that peer DAS is going to be bundled with EOF. And EOF in and of itself is 11 different code changes and it is going to be the first major upgrade to the evm. So that in and of itself is a huge change. And so again you have these like I would say two pretty major code changes being bundled together that both advance Ethereum's narrative in a little bit of a different way.
00:28:56.265 - 00:29:46.463, Speaker A: Ethereum as a DA Layer and Ethereum as a general purpose blockchain. So I don't love that dissonance, I don't love that combination. But here we are. So yes, that is one thing that I wanted to talk about. And then finally, as it relates to understanding the implications of what it means for Petra to be split out into two hard forks, let's double down on the fact that but the concern that the second part of Petra is going to become a very large upgrade is a real concern. I wouldn't put it past developers to keep themselves from keeping Petra hard fork number two very small. As I mentioned, EOF and Peer DAS is big enough as it is.
00:29:46.463 - 00:30:25.279, Speaker A: But that did not stop developers. I mean let's think about it. I mean Petra with 20 EIPs, it doesn't. That did not bothered developers to the point where they were like you know what, we're not going to include any more EIPs. They were considering to include more EIPs and they split it out into two. I wouldn't put it past developers to also look at the second part of Petra and once they've completed Petra one it goes well, woo hoo, pat on the back, let's start focusing on hard fork number two. I wouldn't put it past them to start also reconsidering EIPs that they had said no to in the Petra upgrade.
00:30:25.279 - 00:31:44.065, Speaker A: For example, they hadn't yet made a decision on the addition of the precompile SEC P1. You know what, I'm not even going to say it. There's this precompile that has been adopted by rollups and it's another UX improvement. It creates an easy way for signature verification to happen in a way that's interoperable or that's been widely used by phones by mobile devices, Apple phones, Android ph. So having the ability to use that kind of cryptography that's widely used among mobile phones to somehow kind of like connect that with the wallets that are being used on the wallets that users are using to interact with their accounts and to verify or sign off on signatures, sign off on transactions. This is the first kind of of standard RIP rollup improvement proposal or a standard code change that rollups all agreed. Most roll ups that are part of that voluntary I guess group, this group of rollups, they agreed that this would be the first kind of code change that they would implement altogether.
00:31:44.065 - 00:32:33.125, Speaker A: So this is the first rip for rollups built on top of Ethereum that they've adopted. And of course they'd love to have the Same compatibility with Ethereum. And so there's this, the precompile added to Ethereum Mainnet. And that is I think a code change that developers could be more agreeable to, including in the second part of Petra. I think of course there's the ones related to peer DAs that I had mentioned, but those are probably shoon. Another one inclusion list developers had said, no, this is not going into Petra, it's too complicated. But by the time, I don't know, October, September of next year rolls around, perhaps the censorship, the activity that's happening on change grow a lot worse, then I think developers might feel a lot more pressure to implement something like inclusion lists faster.
00:32:33.125 - 00:33:39.511, Speaker A: The Prism team were very vocal in the beginning of the Pectra scoping process. They said, you know what, if Pectra is going to go live within a year's time rather than six months time, our thoughts and opinions about what should be in the Pectra upgrade would be extremely different. And they had said we would probably fight more to have enshrined proposer builder separation included into the upgrade. If, if Petra is going to be an upgrade that developers have like a year to work on. Well, lo and behold, probably the second part of Petra is going to happen within a year. So I think you could start to see more arguments for something like in try and propose or build or separation though that is a very large change. And then finally, do we remember the issuance debate? Do we remember the proposals to very simply lower the issuance of Ethereum to reduce demand for liquid staking protocols? Who knows what the staking rate of Ethereum is going to be in mid-2025, possibly late 2025.
00:33:39.511 - 00:34:24.723, Speaker A: There's the possibility that you could see more conversation and more arguments for having a code change like that included into the second part of Pectra. So I think splitting it out makes sense. It does, it really does from a risk perspective. But it also opens up a whole new can of worms for discussions around what goes into Pectra. So we are in for a wild ride as we move forward. Please stay tuned for the next next episode of the Infinite Jungle. Well, technically the next one tomorrow is this wonderful conversation that I had with Steven Lee, who is from RISC 0.
00:34:24.723 - 00:34:53.991, Speaker A: He's the head of strategy there. Stay tuned for that conversation. It's a really fun one related to zero knowledge. But stay tuned for next week's Infinite Jungle that is going to be focused on the next call where developers are going to make a final decision on whether or not to split out Petra into two different hard forks. And, yeah, that will be a pretty major change to this upgrade, to the scope of the upgrade. I hope you enjoyed listening to today's episode. It was a little bit of a spicy one, but that's because it was a spicy call.
00:34:53.991 - 00:35:13.215, Speaker A: We don't always have spicy calls, but when we do, we make the most of it. I hope that you learned something new about Ethereum, as I do every week. Everybody tunes into this show. I hope you have a wonderful week. I am signing off from New York City in your explorations of the infinite jungle that is Ethereum. Stay safe out there.
