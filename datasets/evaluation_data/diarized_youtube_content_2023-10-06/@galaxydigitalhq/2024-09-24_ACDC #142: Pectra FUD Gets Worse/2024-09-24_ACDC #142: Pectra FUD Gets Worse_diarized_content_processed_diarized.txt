00:00:10.080 - 00:00:38.037, Speaker A: Welcome to the Infinite Jungle. On today's episode I'm going to be recapping and sharing insights about Ethereum All Core developers consensus call number 142acdc142 this was the call where they debated splitting the PETRA upgrade into two separate upgrades. There was quite a bit of contention and lots of disagreement shared on the call, so we are going to get into that entire conversation before we start with the show. Here is a quick show disclaimer I.
00:00:38.061 - 00:00:54.437, Speaker B: Need to remind you to please refer to the disclaimer linked in the podcast Show Notes and note that none of the information in this podcast constitutes investment advice, an offer recommendation or solicitation by Galaxy Digital or any of its affiliates to buy or sell any securities.
00:00:54.581 - 00:02:08.615, Speaker A: One of the things that I want to highlight before really getting into what was said during the call and sharing my insights on it is throughout the call it was pretty clear the decision to split the upgrade was already made on the call. It wasn't really up for debate whether or not Petris should be split. There was conversation that developers were having throughout the week since last week's All Core Developer call, developers that were sharing that this split was bound to happen eventually, that the upgrade was just far too big for developers to really feasibly put into one upgrade. So I want to make clear that when we're talking about this discussion and when I'm setting up the context for this call, splitting the upgrade was technically not up for debate. It was really more about the content of these two upgrades. So with that, let's talk a little bit about how developers wanted to see the upgrade get split. Alex Stokes, who was the chair of this call, created a document shortly after last week's call saying that the first part of Pectora should really be the eight EIPs that are on that are live on DevNet 3 right now.
00:02:08.615 - 00:03:15.145, Speaker A: And the second part of Petra should include all of the other EIPs that have already been approved for Petra, things like EOF peer, Das. He also suggested a few other ones, but noted that this would potentially be scope creep. That was his proposal. After that, there were a couple other client teams that shared their views on how they think Pectra should be split. The techoo team shared a post saying that they generally agreed with what Alex had shared, but with the addition of SSE related code changes, they said it could either be included in Pector one or Pector two, but that would be an addition they'd like to see into either pectra1 or pectra2 the aragon client team also shared how they thought Petra should be split. They basically said Pectra should stay largely the same, include EOF, include all of the EIPs that developers have already been working on. The only thing is they suggested the removal of PEERDAs from the PETRA upgrade.
00:03:15.145 - 00:04:40.398, Speaker A: They argued that well, peer DAS is primarily impacts the consensus layer. It can be an upgrade that is primarily consensus layer focused. So all of these more execution layer focused code changes like EOS7702 execution layer triggerable withdrawals, these code changes should all be bundled together and peerdesk can continue to be developed and worked on separately on its own. One of the things that the Aragon developer Andrew Aschikman I hope I'm saying as name right but one of the things that Andrew was talking about was that in his view one of the reasons Petra should stay the same and peer Dash should be should be broken out is that execution layer client teams should really focus their efforts on trying to ship Ferkl as the next upgrade after Petra. So the readiness of peer DAs is independent of the Petra upgrade. And after all of those execution layer code changes in Pectora gets shipped on mainnet, then execution layer client teams should really focus on getting this transition, this major overhaul to the way that the state on Ethereum is stored through the Verkle transition. Right now the Ethereum state is stored in these data structures called mpts.
00:04:40.398 - 00:05:55.053, Speaker A: Merkle Patricia Trees and Verkle would significantly reduce the size of proofs to verify aspects of Ethereum state. So this Verkal transition is something that the execution layer that Andrew was saying execution layer client teams should really work on and focus on after Petra. Whereas some of the more consensus layer focused upgrades like peer DAs can happen independently and that work should continue. But none of the execution layer client next execution layer code changes in Pectra should really be held back by peer das and they should continue on after Petra to focus on Verkl. As I talked about on the last Infinite Jungle episode, about the last ACD call is that Virkal was always one of the big reasons why developers were hesitant about splitting out Petra into two separate upgrades. Any delays to Virkal, I think has always been a contentious topic. And on this call more than ever, it was really apparent how much disagreement there is on the urgency of the VIRQL upgrade and its readiness for mainnet implementation.
00:05:55.053 - 00:07:09.777, Speaker A: So one of the things that I found quite shocking to hear on the call was disagreement about whether or not the Verkle upgrade is as ready to implement as EOS and as ready to implement as peer DAs. Developers were debating whether or not Verkal could potentially be activated on mainnet earlier than EOF and peer das. And so I think this and so I think there was a baseline kind of disagreement about the reality of where Virkal is. It wasn't clear really. Based on how developers were talking about the vertical upgrade, based on how developers were talking about peer DAS and eof, all of the developers for each of these initiatives were arguing that their initiative, their code change was ready and should be prioritized for the upgrade after Petra. Now as I talk about Petra, please note that I'm talking about Petra 1 as simply the code changes that are on Devnet 3 right now. It's still TBD what the next upgrade after Petra will be called.
00:07:09.777 - 00:08:12.069, Speaker A: Because technically the upgrade after Petra should be called Fusaka. But Fusaka had been, as you know, as my listeners I hope know by now it had been reserved for the Verkal upgrade. So that's definitely not something that was even discussed on the latest call, the naming for picture number two. But now but there was a lot of disagreement on the call shared about what should really be the headlining upgrade for Petra 2, and it wasn't. And all of the developers that were working on their own respective initiatives, be it Peerdas, be it Eos, be it Verkal, was very adamant that their code changes were ready to go and should be a shoe in for pectra2. I think it's very clear that the Virkal transition was going to be raised again as a concern. Any delays to Virkal was going to be raised again as a concern in relation to this conversation about the Pectra split.
00:08:12.069 - 00:09:37.295, Speaker A: But I think it was quite shocking to hear just the amount of disagreement and the lack of developers being able to see eye to eye and at least agree on the reality of the readiness of each of these initiatives, of peer Das, of eof, of Virkal. I think that each of the developers for each of these initiatives were very certain that their co change was ready to go. And so there wasn't a ton of usefulness in really diving into what should be prioritized for Pectra 2. Another big part of the conversation related to the Pectra split that I want to highlight outside of this conversation and this debate around what should go into picture two and the readiness of Virkal in comparison to peer DAs and EOs. Aside from that debate, there was another big debate which focused really on what should go into picture one. And one of the earliest kind of conversations in the call was about Whether or not Petra One should include this EIP7688 this EIP is an SSC related EIP. It introduces forward compatible consensus data structures that would be of benefit to decentralized application developers.
00:09:37.295 - 00:11:04.325, Speaker A: Nimbus One of the Nimbus developers that has been working on SSE related eips, Etan Kisling, who I've mentioned on prior episodes, he shared that one of the most immediate Benefits of including EIP7688 along with the other 8 or so EIPS on DevNet 3 to be able to bundle this together. One of the most immediate benefits is for decentralized application developers like the rocketpool team. So rocketpool is a decentralized staking pool on Ethereum. And with the addition of this eip then rocketpool developers would potentially not have to upgrade their immutable smart contracts as often as they had to do in the past. Because the data structures of the execution layer and the consensus layer are different Right now the data serialization format that's used on the consensus layer is SSE and the data serialization format on the execution layer is rlp. There are two different formats and the communication between these layers, there could be a lot of improvements, a lot of efficiencies introduced by making these two serialization formats compatible by upgrading and transitioning the RLP structure to sse. And while this transition is coming up, there's definitely a path forward to do this.
00:11:04.325 - 00:11:58.083, Speaker A: Kisling has shared a lot about this on prior calls and there's other EIPs related to this SSE transition. This EIP EIP 7688 is a bit of a stepping stone. It's something that developers can do sooner rather than later and it'll introduce some forward compatibility with forthcoming with further changes to the data serialization format of Ethereum. And it would allow, yeah, smart contracts like the Rocket Pool smart contracts, it would prevent them from having to be upgraded more times than is absolutely necessary. So that was something that Etan had shared on the call that he would like to see EIP7688 added into picture one. But already I think this made many developers on the call very concerned. There is definitely bandwidth.
00:11:58.083 - 00:13:09.581, Speaker A: I think given that developers up until very recently were thinking of implementing 20 EIPs all at once. I think developers definitely with just 8 EIPs in the first upgrade would have bandwidth to potentially safely move forward with the Pector fork with an additional EIP. For example, like the EIP that Etan had talked about. EIP, let me see here. EIP 7688. However, the bigger concern and fear and anxiety that was shared, that was really felt on the call was this understanding that if even a little bit of the Picture one scope is open for discussion, is open for further inclusion of other EIPs, well then that door could fling wide open and who knows what else developers may decide to include into Petra one. And there is this concern that if that happens, then the split would have been for nothing, that developers would start to pack in so much into the first part of the Picture upgrade that the Petra upgrade happens on a delayed timeline.
00:13:09.581 - 00:14:21.995, Speaker A: It doesn't happen in next February or March as developers had said it should, but it happens later, say like mid-2025 or even later. And so there was a lot of hesitation. And this wasn't the only code change that developers talked about on the call to include into Picture one. Later in the call, almost near the end, there was a base developer by the name of Francis who was sharing the idea to increase the Blob capacity of Ethereum. If peer DAS is not going into the first part of the upgrade, then there is this concern that DA data availability costs will just be too high roll ups and for roll ups to really scale, they need to have that cheap, they need to have cheaper data availability costs. So the proposal was to increase the Blob Gas target and the Blob Gas max, which right now is about the target, is three blobs per block with a maximum of six. And the idea was to increase it to say four as a target or maybe even five, possibly if not a little bit higher, depending on more analysis and data.
00:14:21.995 - 00:15:33.209, Speaker A: The other proposal was not to change the maximum cap on how many blobs can be included in a block, but just change the target, the target blob count. So instead of 4 and 6, say like 5 and 6 or something like that? No, the target is 3. So yeah, an increase to like 4 or maybe 5, but keeping the maximum number of blobs per block capped at 6. So anyways, there was another proposal, another idea to increase the scope of Picture one. And while developers I think were more agreeable to the change to the Blob capacity, the increase to the Blob capacity, they were more agreeable to this idea. They were still extremely hesitant about anything really adding anything to picture one beyond what is already ready to go on DevNet 3. I think it's clear that this is creating a lot of hesitation among developers of being paralyzed, of being in a position where they can't make a decision right now.
00:15:33.209 - 00:16:37.881, Speaker A: I think Alex and a couple of other developers on the call were very much in favor of seeing the only way to move forward in a way that minimizes the amount of contention and minimizes the amount of disagreement is simply to move Forward with what EIPs are on DevNet 3 now. And finally, so we were talking about kind of the discussion and the debate around what's going into picture two. Discussion and debate around what's going into picture one. One of the other conversation items that I want to kind of double down on is the discussion around whether or not developers should pre commit to what goes into picture two. And of course, you know, based on what I said earlier in this episode, that's not something that developers are really ready to do. But there was of course disagreement about if the PETRA upgrade is split and if the scope of both of these parts of this upgrade are not fixed. If developers don't decide on what goes into both upgrades now, then of course developers have.
00:16:37.881 - 00:18:11.255, Speaker A: There is the possibility that the second part of the PETRA upgrade could get out of hand. But even so, I think developers just lacked the conviction to really make a decision, even if they wanted to fix and to pre commit to what is going to go into Petra 2 and even decide on the name then and there. I think developers lacked the confidence to do this and lacked the trust in themselves to really commit to something based on how the scoping discussions of PETRA have gone from the very beginning. I think to some extent developers have lost faith almost in themselves to stick to their word and to be able to move forward with a longer term roadmap and a longer term development timeline than just what's ahead of them, than just the immediate fork ahead of them. So I think that developers had left that call and the decision that was made on the call based on the decisions that were made on the call, which really weren't a lot. I think many developers walked away from that call without really understanding what a split, a pectoral split, will look like. It was clear from the beginning and from the way that Alex was guiding the conversation that the decision to split the upgrade and to have the first part of the upgrade at the very least contain the eight EIPs on DevNet 3.
00:18:11.255 - 00:19:40.555, Speaker A: That is kind of the basis for what developers will move forward with, and that is not up for discussion anymore. That was, yes, definitely, the recommendation from the moderator and that was shared multiple times throughout the call. And that is really the only I think takeaway that developers can confidently say that they have now based on ACDC142. Beyond that, it's up in the air what picture one and picture two will look like. The timeline for these code changes are definitely up in the air, especially the timeline for picture two. But for picture one I think it'll be dependent on what developers may or may not include additionally into Picture one. And again as I mentioned on this episode, they are very nervous about really adding anything in because of the concern that adding one thing in will kind of paralyze further decisions about well if SSE gets in, if a change to the Blob capacity gets in, then why not these other things and not being able to discern then discern from there really what else to stop including? I think there's a couple of things that I want to share before we end this episode related to One of the things that Perry had mentioned is taking a step back, moving forward into devcon developers.
00:19:40.555 - 00:20:48.035, Speaker A: Devcon is this Ethereum developer conference that's going to be happening in November. And one of the things that Perry just very quickly mentioned on the call, I think in the Zoom chat really was that he'd like to make a proposal about how to change the way that Ethereum upgrades are scoped out. It's clear that Petra has been very contentious and a very drawn out fork scoping. It's been a very drawn out fork scoping process for Petra and he'd like to suggest some changes as developers come together to meet and person in defcon. And while I don't think that any off chain governance process can really be super formal and usually creating more arbitrary kind of rules and like becoming more strict with process is not always the most helpful thing. And I don't think that's actually what Perry was suggesting anyways. I do think that there are, there are learnings from the way that Pectra is shaping up.
00:20:48.035 - 00:21:48.645, Speaker A: There are learnings from this process that I think developers and the people watching, people listening I should say and following up with Ethereum development that we can take away. So these three kind of learnings that I want to share on this episode is number one, I think the biggest mistake related to petroscoping process was not shutting the door on new EIPs into Petra. Staging these upgrades onto Devnets was new. It was not something that developers have done for prior upgrades. Usually for prior upgrades a group of EIPs gets finalized. Developers agree this is the scope of the upgrade and then developers start testing them out on devnets first they have to implement the client teams have to implement these EIPs and then they start testing them out on Devnets. And actually I have an episode on the Infinite Jungle talking about the process for how testing goes on Ethereum.
00:21:48.645 - 00:22:47.541, Speaker A: Yeah, that if you're interested in, you should definitely listen to. But I think one of the mistakes that was made and that has caused the scoping of Pectra to be far more arduous than prior upgrades is that developers never shut the door on the scope of petra. They continued to add more and more and more with this idea that, okay, well we have these EIPs on Devnets, we can just layer on and add on more EIPs to the Petra defnets. We'll add on EOF, we'll add on peer DAs. And I think that just means that this upgrade, it becomes a never ending upgrade. So number one, I think like a very easy win is for future upgrades, you know, shutting the door on Pectra saying, look, this is the final set of VIPs and this is what we're going to move forward with. Is everyone okay with it and moving on from there? And this is very relevant to the way that I hope Pectra 1 will continue.
00:22:47.541 - 00:23:42.095, Speaker A: I do think that developers should seriously consider adding BLOB capacity increase and SSC to Pector one. I don't think that it would make Pector one overly complicated. It might delay, you know, the timeline for PTRA1 a couple months. But I don't think that's a big deal given that there really is no catastrophic or negative consequence to picture 1 not happening in the first quarter of next year. And there really is no, there's no, I don't think it makes sense for developers to push themselves to keep to a timeline for upgrades. Like an upgrade has to happen once every year or has to happen in this quarter, when in reality there's no reason why it has to happen by a certain timeline. Heck, the merge was delayed what, seven years? It was fine.
00:23:42.095 - 00:24:30.087, Speaker A: The merge was still a very successful upgrade that everybody was very happy about and that went very well. Yeah. So that I would say is the first takeaway. The second one is the, the readiness of an eip. I think that it's clear everybody agrees Verkal is an important upgrade, EOF is an important upgrade, Peer DAS is an important upgrade. But it seems as though developers aren't on the same page about what defines readiness for an aip. So having actually some more concrete understanding about what makes an EIP ready for implementation will really help developers place them into upgrades and time it out, letting that guide the discussion for what gets into peer Desktra 1.
00:24:30.087 - 00:25:05.357, Speaker A: What gets into picture 2. It's not about how important they are. Obviously developers are all very I want to get all of the EIPs in. I think all of the EIPs are very important. Every EIP has a champion. Wonderful. But if there can be some kind of more less opinionated way to go about assessing the readiness of these code changes, then I think that should be the way that a certain code change gets prioritized over others and hopefully make the decision making process a lot more simpler.
00:25:05.357 - 00:26:25.045, Speaker A: And then finally, last but not least, I think it's clear developers should shy away from planning future forks outside of the most immediate one. Maybe not pre committing to Virkal in Fusaka. Maybe not pre committing EOF or Peer DAS or all these other things into a fork after the most immediate one. Because it's true, I think it's difficult to plan what's going to happen in six months to plan the direction of research and development. A lot of unexpected things can happen, and a lot of unexpected things have happened in the process of planning Petra so I think another learning is that developers should shy away from planning forks farther out than the one that's most immediate and to allow research and development on all other initiatives that are not inside the most immediate fork to allow those initiatives to kind of grow more organically and to fit them into an upgrade as soon as they're ready for implementation. Assuming there is a robust framework for assessing of assessing that. Those were a jumble of many takeaways that I had from the call from ACDC142.
00:26:25.045 - 00:27:09.423, Speaker A: From the decisions, I would say the lack of decisions related to what a split for Pectora could really look like in future calls. I'm sure it'll get clearer and clearer, but there's also going to be a lot more debates coming up that I promise I'll be more organized about and sharing my thoughts. I hope. And yeah, and as always you can get the full call. Write up the full summary of the call. It's going to be linked in the show notes of today's episode AC DC142 but these were more of some of my more opinionated takeaways that I've shared on the podcast today. I hope that you will join me again next week for another episode of Infinite Jungle.
00:27:09.423 - 00:27:44.305, Speaker A: I hope that you learned something new about Ethereum. I will highlight that the next Infinite Jungle episode that comes out is all about this call and diving deeper into it with two participants in the call, Ethereum Foundation DevOps engineer Parry and guest developer Marius. We have a very long discussion about the vector split, so please be sure to check out that episode as well. I am signing off from the concrete jungle, New York City, in your explorations of the infinite jungle that is Ethereum. Stay safe out there.
