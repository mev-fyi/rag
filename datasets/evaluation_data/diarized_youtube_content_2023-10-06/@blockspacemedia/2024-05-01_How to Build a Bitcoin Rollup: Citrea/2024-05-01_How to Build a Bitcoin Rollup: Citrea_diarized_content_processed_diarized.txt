00:00:34.694 - 00:01:09.570, Speaker A: Welcome back to Bitcoin season two, a podcast from block Space media. Bitcoin season two showcases new ideas and conversations from new voices. On bitcoin, the oldest blockchain, we combine technical and cultural discussion, often into one conversation. It's a very exciting season for discussion and ideation on the oldest blockchain. Bitcoin season two again is produced by Block Space Media. Check out other Block Space media podcasts and newsletters, in particular the Gort show and the Mining Pod. Subscribe to our newsletter.
00:01:09.570 - 00:01:35.192, Speaker A: Go to Blockspace Media. That's our website. Sign up for the newsletter comes out on Mondays and Fridays. We cover everything from mining company acquisitions to ordinals to bitcoin technical discussion. Anyway, I'm joined today by Orkun, co founder of Chainway Labs, to talk about Citria, a bitcoin roll up. So welcome, Orku, and thanks for coming on bitcoin season two.
00:01:35.368 - 00:01:37.764, Speaker B: Hey. Hey, Charlie. Thank you for having me today.
00:01:38.624 - 00:02:18.492, Speaker A: Yeah. So I think I first met some of your colleagues in Miami about a year ago at the Bitcoin Miami 2023 event. And you guys were, and I remember talking to some of them. You guys, as a team, had been working on some other stuff preceding citrea, privacy tech on ETH, I think even a bit of some work in the ordinals ecosystem. Can you talk to me about some context of where you and the Satraya team came from before really finding your niche and working and launching on Satrea?
00:02:18.668 - 00:02:43.654, Speaker B: Yeah. So as a team, actually co founded the company two years ago. I'm one of four co founders and the CEO of the company. But two years ago, we actually started building privacy technology on EVM chains. We built one of the most innovative solutions called proof of innocence and privacy pools. And then later, early next year, just like everyone else, we discovered ordnance. And maybe we was a little bit earlier than others.
00:02:43.654 - 00:03:08.330, Speaker B: There was only like around hundreds of inscriptions at the main net. And we had bitcoin not in our office. So we embedded the index to our software, which was very fast back then. And then we tried to inscribe several things and realize the user experience is not that great. So, okay, we said we can easily build a wallet around it. It wasn't that easy, but we built a bullet in a month. So we released ordinal safe.
00:03:08.330 - 00:03:47.188, Speaker B: It was one of the first ordinal wallets, and I think it's still the only wallet that support trust subscriptions and vip signing stuff. And back that time, we know like ZK very well. We knew bitcoin script very well. We know ordinal space. So we said, okay, what if we can combine this idea, but come up with actual programmability on bitcoin? And the idea eventually evolved to building a Zk roll upon bitcoin. And since then, this is our only focus. We already completed the other privacy protocol on Ethereum, and then we also shut down the Ornaz vault around a couple of months ago because we were focusing on this.
00:03:47.188 - 00:04:01.304, Speaker B: And since then, we are just expanding. The team created the brand of Citria, which I think pretty respected in the ecosystem right now. And here we are building cutting edge technology on zero knowledge proofs, bitcoin script and bitwia.
00:04:02.324 - 00:04:43.684, Speaker A: Yeah, I think it makes a lot of sense, especially because I don't know if a lot of people have really kind of fully realized that they. There is a huge connection between being able to post proofs to bitcoin and really what Casey defined as the inscription envelope standard. And I think, well, I will come back to that, but I want to pull back and begin at the beginning, because if someone's listening to this and they don't understand what a roll up is, some of our audience ordinals people, or even just kind of mining folks who haven't really followed what's happening on other chains, for the uninitiated, what is a roll up? What are the types of roll ups? And then what is Citria's roll up? So what is a roll up first?
00:04:44.064 - 00:05:28.078, Speaker B: So roll up names coming from rolling up transactions together. So initial idea of building tools on bitcoin was like creating side chains, which are very similar to bitcoin, but they live next to bitcoin. And the issue is that you get zero to like less security with their constructions because they work next to bitcoin. They don't get any security from bitcoin in a meaningful sense. And they don't have proper two way back mechanism. And the roll up idea was born in a terrain ecosystem, mainly because. And they said, okay, what if we can actually combine these transactions together even with a ZK proof or a fraud proof, which I can explain them rolling all the transactions in a single succinct thing.
00:05:28.078 - 00:06:28.558, Speaker B: And then what if we can verify this thing in a terrain? So the ZK proofs are the mechanism for you to allow, have a huge computation, but you can run ZK circuit once locally and generate a mathematical proof. So everyone can actually verify that computation without even sawing the like, what, what are the computations? So in our case, we are just rolling up multiple transactions of chain and then we put into a ZK computation computer and eventually we get a single proof saying that I compressed all these transactions and processed and they're all valid. So from a bitcoin perspective, it is not that big or not that computation heavy, but once you verify it, which means you verify all the l two, which gets ultimate security of the l one. All the l one mathematically verifies all the l two, which is the ideal work that we want to see. Any roll ups? Like I said, there are two types. One is optimistic roll ups and the other is decay roll ups. And what we are building is kind of like something in between.
00:06:28.558 - 00:06:58.354, Speaker B: Because in bitcoin there is no proper optimistic roll up solution or no proper ZK roll up solution. But what we are building is it works just like a ZK roll up, but the verification part becomes optimistic thanks to bitvm. So we are settling optimistically on bitcoin and have this trust minimized two way back mechanism. But the rest of the roll up just proves every single transaction and inscribes the transaction data of the proof to bitcoin. So anyone can just take a look, verify the proof locally and mobile.
00:06:59.174 - 00:07:30.114, Speaker A: Yeah. And so you say at a high level, your citrea sits a little bit somewhere in between this optimistic and ZK roll up. Could you dive a little bit deeper? What does that actually mean? How does that actually work? What is. I know you say, I know, I read the documentation in the blog and you're still working on the like fully building out the implementation. But could you talk more about like really how it, how it differentiates from like the existing roll up proposals and architecture out there?
00:07:30.234 - 00:07:55.296, Speaker B: Yeah. So in bitcoin, I don't think there are other roll ups actually built on bitcoin. But the roll up has like single criteria that has to use the underlying chain's data availability. So it has to like inscribe enough data to underlying chain. It is either like full transactional data or proofs. What we do is proofs. And the difference is in ethereum, you have trim complete base layer, so you can easily build ZK roll up or optimistic roll up.
00:07:55.296 - 00:08:36.332, Speaker B: But in here, we are dealing with very limited scope of scripts. And previously it wasn't even possible to actually verify a ZK proof on bitcoin. But right now, thanks to BitVR, it allows you to verify ZK proofs optimistically, which means if everyone agrees that the ZK proof is correct, you don't have to do anything. But if someone disagrees that the ZK proof is incorrect, they can always go on chain and verify ZK proof in two different parts in an optimistic manner. So you can, bitcoin also know is the proof is valid or not. So using that mechanism, we are building a ZK roll up, but it has the settlement optimistic. So if everything is correct, bitcoin doesn't compute anything but stores.
00:08:36.332 - 00:08:42.664, Speaker B: If something is incorrect, bitcoin bot stores the data and also computes the computation.
00:08:43.884 - 00:09:39.414, Speaker A: So, yeah, so it's really interesting to think about how we're, you know, a year ago today, no one was even talking about how roll ups were really possible. Well, maybe a handful of researchers were, but it was still this big idea. Then Robin and the Zksync guys come in and they come out with this challenge response mechanism called BitVM. BitVM has been in development for a while. We'll come back to BitvM in a moment. But I want to focus right now. I think what I haven't heard you talk about, or really many people talk about in the roll upon bitcoin space is just how this relies, or is downstream of Casey Rodimore's idea of creating this enveloping mechanism to post data on bitcoin.
00:09:39.414 - 00:09:57.202, Speaker A: I know that, again, you guys are still working the actual implementation. But I guess my first question is, are you guys just going to use the exact same inscription envelope that Casey defines, or are you exploring other types of ways of, like, packaging and posting this data to bitcoin?
00:09:57.298 - 00:10:23.304, Speaker B: Yeah. So the roll up itself has a definition, like I said, has to use album blockchain as a data layer, so it has to store its data on l one. And previously done, like cases invention, it wasn't possible to, like, store data more than 80 bytes. Right. You could only store op return, which is limited by the 80 bytes. And no one could actually store anything meaningful, just like they just store hashes. But this doesn't give you the security.
00:10:23.304 - 00:10:57.902, Speaker B: But what Casey found is you can put more data up to four megabytes if you correlate with miners to the bitcoin. Blockchain and roll ups obviously require more than 80 bytes of data, but it still can fit under four megabytes, depending on the usage. So what we do is we get the ordinals idea, inscription idea, but change the tag so it push, like op push, or. But instead of doing that, we just op push citra. Then we serialize our byte proof and state the data on bitcoin. It looks like an inscription, but OrD indexer doesn't index it. So you don't.
00:10:57.902 - 00:11:17.474, Speaker B: We don't have to like burden the computation load to the software runners all around the world. Only like people who runs our own software indexed transactions, but it is still in the stored in bitcoin in the same way. It looks like an inscription, but it doesn't get indexed by the OrD software. So everyone's happy.
00:11:18.014 - 00:12:23.008, Speaker A: Yeah, I think this is really interesting because this was a topic that I and some others early on were talking about, which is, you know, a lot of people think now that the narrative is so conflated, people just call these jpegs ordinals, but it's really, really to differentiate between the ordinal itself, which is the SAT, and the inscription, which is just a defined scheme to package this data. So it sounds like you guys are taking, you're going to basically make a citraya dedicated inscription, index those, and build some kind of interpreter to read the chain and log those, rope that into the roll up implementation. And I know that there's probably some optimizations you can have beyond what Casey's particular implementation is. Have you? Are you guys exploring further optimizations? You can make them more byte efficient, I understand. I don't know if you guys have taken a look at that at all.
00:12:23.096 - 00:13:13.444, Speaker B: Yes, yes, we are doing it. So, in proofs and statives, we can apply generic compression inside the circuit. So we are posting the pack solutions and others, because we don't need to put the actual anchor on press data, because everyone is running a software, they can just get the data, uncompress, and then process, so we don't have to deal with all this unnecessary bytes that we can compress. Yeah, we are always doing it. And our not so far simply consists of a regular blockchain, not software, and also a specific indexer that indexes our own proofs. So it just connects to the network, gets all the data, process all the transactions, and once in a while it goes back to the bitcoin main chain, finds the relevant inscriptions, and verifies the proof inside them. So it just marks some states that are finalized on bitcoin and move on.
00:13:13.864 - 00:13:35.264, Speaker A: This might be a basic question, but I don't know how big the average size bite size of a fraud proof might be. Is there like an average fraud proof size for citria, or is there like a minimum, like an average or a median size? I'm kind of curious about this. I don't really know much about this.
00:13:36.204 - 00:14:14.160, Speaker B: Yeah, so we have like two things that we do. One is inscribing ZK proofs, and the other is settling that ZK proofs. So in terms of the inscribing ZK proofs, it really depends on the usage of the roll up. So if rollups use a lot, then grow sub linearly. It doesn't use a lot, then it is a bit huge for regular users, but it is very fluctuating. But if you scale, let's say bitcoin, ten times more TPS than its existing status, then we only take like quarter of the block, not more. So it is obviously huge improvement over like existing bitcoin processing and the fraud proof side.
00:14:14.160 - 00:14:46.224, Speaker B: It is not necessary to execute fraud proofs on chain because they are only executed if there's something wrong. As long as everything is correct. It is just like a regular bitcoin transaction, less than maybe even like 50 KB or such. So I think it's just a growth transaction. But if we need to put the fraud proof, it is actually quite big. It may take a whole block, but like I said, it won't ever get executed for most of the roll ups because there's no reason to like fraud because you will get slashed.
00:14:47.074 - 00:15:30.742, Speaker A: Yeah. So we may come back to this like the block space usage component. I think that's a very interesting topic in and of itself. But let's move on to this bridge design. I myself am still wrapping my head around the multitude of bridges and trying to follow the bridge discussion, but when my we, when will Foxley interviewed you on the mining pod, I believe you had not yet released Clementine, the actual like bridge for Satraia. And can you just talk to me just about how Clementine works, just at a high level?
00:15:30.918 - 00:16:14.536, Speaker B: Yeah, yeah, for sure. So initially, once like BiTVM paper came out around October, I think last year, we realized the main potential for it is just to build bridge because, okay, it's a very good like channel connection, but you cannot do much with channels as we see on like lightning and other channel implementations and. But what if we can build a bridge and Pjax, like fly to the bitcoin? Amsterdam met with Robin there, asked some questions and like get some ideas for how to build a bridge. And initially he sketched some bridge design and we took that design and started working on it. And the Clementine is a bit VM based bridge, but it is only alternative between base bridge. So BitVM itself is not a bridge. I think most people confuse that thing.
00:16:14.536 - 00:16:56.268, Speaker B: Bit VM just provides a base to build bridge. We have a bridge design called Clementine and Robin has a bridge design called BitVM based Bridge. And super testnet has another design called Uniswap and I think couple of folks also working on other designs. So in Clementine, what we do is BitVM allows you to get this one off assumption as long as your light client in it also has one of error like trustless assumptions. So what we do is we just aggregate these proofs from bitcoin that we previously inscribed and merge them together in a recursive ZK proof. So eventually you have a single proof that verifies whole citrus state. That's I think one of the key innovations that we did.
00:16:56.268 - 00:17:48.469, Speaker B: We aggregate these proofs together so that the verification becomes much more easy in between. And then in BitVM, we verify this proof alongside with multiple other stuff which are mainly withdrawal proofs. So in Clementine, most of the BitVM based bridge excluding Uniswap, for example, what happens is you simply deposit your bitcoin and it got signed with something called connector Utxo. It connects that Utxo with the logic of the PTVM program so that no one can unauthorize the spam Utxo. And while withdrawing, operator covers this cost of people who are withdrawing from the chain, from its packets. And then later it goes on chain, first off chain, then if necessary on chain and says, I aggregate all these proofs. This is the latest citria proof and I did all the withdrawals and these are the proofs for withdrawals.
00:17:48.469 - 00:18:20.868, Speaker B: And once all the verifiers are verified as proof, they simply sign a transaction and pay back the operator. But if they disagree, for example, the disagreement can cause from operator missed one withdrawal, it didn't cover a withdrawal specifically. And they can always go on chain and put a fraud proof saying that you didn't cover this withdrawal, you are not eligible for this amount. So I'm slashing you. That's very, very simply how clementine work. But we have code available on GitHub. We have a blog post dedicated how Clementine works.
00:18:20.868 - 00:18:33.124, Speaker B: It's obviously changed a lot over the time because there was, now there's a bit vm two, which we inherit some properties, but it is still mostly valid design that people can narrate and even contribute.
00:18:33.664 - 00:18:53.164, Speaker A: Yeah, one of the like, like, initially one of the criticisms of BitVm was like, it's a cool idea. The fraud proof like process is so impractical. But we've seen BitVM two come out which dramatically reduces the fraud proof size to, is it two blocks or two megabytes? I forget.
00:18:53.864 - 00:18:59.360, Speaker B: So in one transaction you can disprove something before that it was 40 transactions.
00:18:59.512 - 00:19:03.688, Speaker A: Yeah. And those have to be like there's a sequential transactions after one another.
00:19:03.816 - 00:19:21.014, Speaker B: Yes. In the worst case, in between one, you have to do 40 transactions on chain to actually find the pro. But right now what Robin does is very tricky stuff with signatures and intermediary steps. Right now between a one transaction, you can show that a computation done incorrectly.
00:19:21.554 - 00:20:03.394, Speaker A: And do you think, I mean, this is typically the case where new idea comes out. It's like we wonder, how does it implement the current implementation out the gate is kind of clunky, but we've seen in just six months, dramatic improvement on BitVM efficiency. Do you think we'll continue to see this? I would imagine that as you guys work on the implementation and as BitVM research progresses forwards, we'll see further improvements. What are your thoughts on the trajectory of BiTVM? Does this reach a, do we reach a point where BitVM actually becomes incredibly practical, like from a block space efficiency perspective?
00:20:03.694 - 00:20:33.440, Speaker B: Yeah. So like you said, it become like dramatically improved over the last six months. It was previous, like gates, non gates, like you do all the gate stuff and people couldn't understand what it means. Then they find a way to build instruction set, which becomes developing much more easy. And now they completely shifted towards a ZK verifier built natively. So yeah, it is improving a lot, to be honest. Our long term goal is to have a ZK verified base there without fraud proofs, obviously.
00:20:33.440 - 00:21:09.104, Speaker B: And if we can do it with a simple opcode, it is much more better than to take whole block space. So long term goal for our company is to somehow get ZK verification done on the l one natively. But if not, I think bit VM will continue to improve. Right now we have like one fraud proof transaction. And so in two transactions you can settle whole l two, but it can take too much block. And I believe there will be further improvisations on script size to reduce this, maybe even to one transaction. If not, it can still make the script size smaller for the two transactions.
00:21:10.244 - 00:21:25.218, Speaker A: So where would you say, I don't know if you're even able to, uh, evaluate this, but where do you say you are in the implementation process? Um, or. Yeah, this, this ZK proof and the, the bridge design.
00:21:25.346 - 00:21:51.636, Speaker B: Yeah, so like you said, we have two components. One is the Citria code base, which is sequencer full node improver, and the other is the Clementine. And it is dependent on the BitVM. So we are one of the largest contributor of BitVM right now. And Clementine is also doing great progress. So testnet is coming very, very soon, I should say that. And other than that, most of it is becoming much more production ready over the time.
00:21:51.636 - 00:22:27.554, Speaker B: And Clementine, we are exploring new ideas, adding some new features. It is growing a lot. But on the other side bit, we're also making very huge progress thanks to outside contributors. And we hope that in a couple of months it will become fully stable to deploy everywhere, not production ready. Most, probably some people maybe don't take risk or some like us will wait for audits or even maybe like do some audits internally. But yeah, I think we are improving drastically and it is all open source. Everyone can visit and they can just like see what's been built so far.
00:22:29.254 - 00:23:16.914, Speaker A: So one of the challenges, and this has been part of the BitVM discussion, really a lot of the discussion on any kind of off chain bridge is the complexity and challenge of liquidity requirements. Because I see in the clementine implementation you can only have set utxo sizes, use the example of one BTC. That to me seems like one of the mechan, like the limitations from a liquidity standpoint. What are your thoughts on this and just maybe the current discussion of liquidity requirements in BitVM? And is this something that can be improved? What are your thoughts here?
00:23:17.374 - 00:24:05.670, Speaker B: Yeah, I think the good management is obviously some limitation that bit vms right now brings. BitVM based breeds bring like Clementine, but it is still way, way better than like how lightning and arc version one works because it's like fully overculturalized getting payment channel down. But right now we are just depositing and you need to find the liquidity once it is needed. And as an operator you can find the liquidity and if not you just replaced by some other operator. If everyone wants to solve that, the possible solution is get the verification opcode and a recursive covenant or cat here. If we get that, we can get fully trusted roll ups which are obviously, I think everyone will want in the near future. But right now this is one of the main limitations that we have.
00:24:05.670 - 00:24:25.994, Speaker B: But as a team, we are working hard to mitigate the risk with providing, getting liquidity providers, getting old deals done to provide liquidity if necessary. But in practical practice, I don't see this will ever happen. But if it happens, we will always have some insurance ready.
00:24:26.814 - 00:25:02.946, Speaker A: Yeah, we could just skip right to. I mean, you mentioned getting new op codes in one being a ZK proof verifier and then one being something like opcat. I'm kind of curious on, I'll just jump right to the ZK proof verify because I, until recently, I hadn't done enough research. I thought, oh yeah, there's just one kind of ZK proof verifier. But no, this is a very, this is a conversation in development. Do you guys have a proposal, ZK proof verifier, or is this already kind of in the R and D stage? Where's your head on this?
00:25:02.970 - 00:25:47.694, Speaker B: Yes, it is internally R and D stage, but yeah, there are multiple prototypes in the world, maybe like even more than hundred. It can be, each is like very different than others. But I think for bitcoin with like working group that we can include more people, we will come up with a universal proof system that every proof can eventually be represented. Right now it looks like a gross 16 proof, which is like smallest proof I think ever done. It has some limitations, but eventually most proofs can be fit into a single gross 16 proof. It's some other off chain overheads, but it is something very early stage and we are still R and D. And contributors are also welcome.
00:25:47.694 - 00:25:58.644, Speaker B: If they can reach me with some ideas, we can always include them to do like team chat and research and some ideas to find the correct ZK verifier.
00:25:59.184 - 00:26:25.716, Speaker A: And then Opcat would, I understand, enable trustless bridging. Where's your head on Opcat? Opcat is an interesting one because I know the wizards put out have been some of the technical critics of the existing BitVM implementation. But on the other hand, they're also some of the biggest proponents of Opcat, which would really unlock a lot of the trustless bridging. Yeah, just thoughts on Opcat in general.
00:26:25.900 - 00:27:08.864, Speaker B: Yeah, Opcat. I think the main feature Opcat provides is to like Merkel inclusion proofs thanks to its concoction feature. And with that you can build almost all of the like blockchain systems, because everyone, everything depends on merkle trees, withdrawal trees, deposit trees, state trees, they all depend on a merkle tree. So if you get this verification, then once we verify the proof, then we can do all the proving of inclusion of withdrawals and other things other than the titan. Just with opicate we can also verify ZK proofs, but I don't know if it will fit under four megabyte block size limit or not. But it's also still, I think, in R and D of some people.
00:27:11.284 - 00:28:10.102, Speaker A: One thing which is plagued roll ups on other chains is this sequencer problem. Now, I don't pretend to be fully up to speed on like the landscape of sequencer discussion. But you know, we have multiple, multiple design challenges when building a roll up sequencing being, I think, one of the more challenging ones to solve because like on other chains, you've got a ton of capital working on this. You've got a lot of incentive to like improve the sequencer decentralization. Do you, is this some, I mean, I guess the first question is do you think that there are decentralized sequencers out there on other chains? And then do you, are there ways that Citria could implement sufficiently decentralized or fully decentralized sequencing? Where, where, how does, what's this conversation look like?
00:28:10.198 - 00:28:54.316, Speaker B: So I think the main thing right now, people focus on more like security of the ZK proving and like fraud proofing systems, not the sequencer, because sequencer eventually has to prove everything. So in practice and in theory, it cannot produce any invalid block. It can only reorg the chain for some time. That, that's a huge issue for sure. But initially, I think compared to like other things that we need to fix, it is something smaller. But yeah, we are still in R and D phase to how to decentralize sequencer. We have some internal proposals and experiments that we do with tendermint consensus, how we can build a peer to peer network between sequencers and they can simply rotate the block production and have a consensus on soft blocks before proving the blocks.
00:28:54.316 - 00:29:25.984, Speaker B: So it will give enough security for users. Even the transaction volume is fairly large. And this is still in R and D phase. I know there are a couple of ethereum projects right now spearheading this. Like the casync, I think is one of the like leading ones in here, but we are also looking to their R and D documentation and code to like how we can do and get this build on bitcoin. So this is, yes, something that we are still discussing and it's an important point to address.
00:29:28.584 - 00:30:40.236, Speaker A: Yeah. So I brought up roll ups on other chains and that it's interesting because it's coincided with a broader discussion, especially in Ethereum, land of like what should Ethereum look like? Is this a roll up centric roadmap? What does this look like? But we're on bitcoin now. Bitcoin provides more, I think, compelling decentralization arguments from a block production standpoint, although recently that's been an interesting sub conversation. We're going to pretend that we're going to roll the clock back in a couple of weeks. How do you think roll ups on bitcoin? Actually, I've got a, here's a better question on the Gork show one of our other podcasts, Gort was talking to Anatoly, the founder of Solana and Antoni says, quote, I don't worry about another chain with 100 roll ups. I worry about a chain with one roll up. What are your thoughts on this? Is the, is there, do we see a dominant roll up emerge on bitcoin? What are your thoughts?
00:30:40.340 - 00:31:22.282, Speaker B: So we are building the roll up first to actually like showcase what's been possible to build on roll ups beside chains. We saw the low demand for that like stacks rootstock for years they were like cost chain. They are mostly still cost chains. And right now we are building one of the most secure roll ups and the most trust minimizer too over there except like channels like lightning. And why we are building is simply provide some ground for developers to build decentralized applications. Bitcoin back stable coins, bitcoin back loans, amms for BRC 20 and like runes trading. And this will all become possible with bitcoin security and using bitcoin as a native token.
00:31:22.282 - 00:32:08.298, Speaker B: So I think once people see that they will become much more interested in getting some like roll ups natively done on bitcoin. I don't say it will become a roll up centric roadmap. Bitcoin is like nothing centric and I love it. But we will see some improvements that can also improve roll ups on bitcoin. That's the goal. And on bitcoin I also see before getting all this, enough flexibility on the l one to build actually fully, trustlessly cable apps. I expect there will be one or two dominating roll ups on bitcoin because for example bitfm based bridge, like you said, there's some liquidity problem that needs to be addressed and small roll ups with small teams, non experienced team, they cannot simply operate these kind of roll ups.
00:32:08.298 - 00:32:45.854, Speaker B: So our goal is eventually provide a base for other roll ups. So instead of building l two s roll ups on bitcoin, they can build l three s on Citria. They will still get like same security of trust minimized bitcoin, but they can use existing tooling around ethereum and cosmos simply deploy these roll ups so they don't have to deal with PTVM and other stuff. We are dealing with all of that. The long term goal is to like make Citria the base of bitcoin programmability and it will become like foundation for the world's finance. We will bring defi, we will bring liquidity and applications can simply build native on l two if they want to customize they can go all three. Zambia.
00:32:46.954 - 00:33:13.188, Speaker A: That's a really good line. In response to Ethereum's roll up centric roadmap is the, well, bitcoin is nothing centric. That's a pretty banger line. And I would almost say maybe anatoly thought he would be worried about if ETH had a single dominant roll up. But perhaps he should be watching out for bitcoin in a future where there's some very effective, very like very effective roll ups on bitcoin.
00:33:13.316 - 00:33:49.044, Speaker B: Yeah, like enough. With enough work, I think you can improve a single roll up a lot. Like if we can bring parallelized EVM here and we will bring multivm approach here and we will bring volition model here. So after that point it becomes like almost infinitely scalable for l two users. It doesn't matter, like how big is that user base, but they don't have to go with other roll ups once we have provided these features. And I think, yes, I believe that one single roll up providing full technical things that it can provide is much more better than having 100 roll ups right now, especially on bitcoin.
00:33:49.944 - 00:34:20.634, Speaker A: Yeah, so you say you, so you talk, you say that it's very, very scalable. I'll try to be skeptical on this. Like are there like limit, I mean, certainly there are current limitations to what we like current implementation, scalability. But like, do you think that a well designed roll up, given some of the right tools, perhaps the soft work could be infinitely scalable or near infinitely scalable?
00:34:21.014 - 00:34:52.334, Speaker B: Nothing is infinitely scalable. I will say that. I will say that line in this podcast, but I think with a correct technology, it can be scalable enough to accommodate all the l two users. Yet some users will continue to use bitcoin l one, and they should. But if you want to have more faster and cheaper environments, also you want to have bitcoin security, you will come to the roll up too. And at some point it will become scalable enough to accommodate all these users.
00:34:53.353 - 00:35:22.954, Speaker A: I feel like a lot of my questions are saying, here's what rollups look like on other chains, and then what does something on bitcoin look like? And I guess the other question is, and you hinted at this earlier, and I've heard you talk about this on the podcast, is it looks like you're choosing to use a bitcoin denominated base unit on Citraya, in contrast to the blockchains like arbitrum, and what all the other ones are, which have their own native token.
00:35:24.814 - 00:35:34.902, Speaker B: Talk to me about, I think, ethereum, Alt is also using ETh as their native token. Okay, they are, they also have other tokens who can facilitate the governance project.
00:35:35.078 - 00:35:45.432, Speaker A: Exactly. Yeah. They do inject some tokenization in there. And what I hear you saying is that Citria will likely not include any kind of tokenization.
00:35:45.568 - 00:35:50.604, Speaker B: Shay uses bitcoin as a native token, so every application can work with bitcoin.
00:35:50.984 - 00:36:03.724, Speaker A: And I hear you say that's because, and I agree with this, that any like introducing other tokens would compete with bitcoin, the base layer asset, which is a losing battle. Could you just talk to me about the thought process behind that?
00:36:04.264 - 00:36:30.994, Speaker B: Yeah, I agree with you. Like, so there are runes, BRC, Tivanius, which are like traded. They're mostly, right now don't have any utility. And to be honest, like 99% of the tokens probably has no utility. But there can be some tokens that can have utility, but as long as they don't compete with the base, they are talking like bitcoin. They should facilitate their trades on the l two s so that you can use alpha more efficiently. That's my goal.
00:36:30.994 - 00:37:26.504, Speaker B: And using bitcoin as a native token allows us to like do more things very easy. Onboarding from bitcoin alva getting this paired with all like BRC tvenis and runes to be trade on amms or like order book taxes. And the third thing I think most people omitting is onboarding new people to bitcoin. If you just like open an l one wallet who, if you want to like be fully safe, you will probably like download one of the desktop wallets which looks very, very ugly and you have to use that, you have to store your seed phrases, you have to do everything. But on citra there will be like account abstraction powered wallets which can abstract all the complexities to the behind. So you can simply onboard users in a one click with less than ten cent fees, maybe they will buy their first bitcoin here in a non custodial way. I think that's more important than what Coinbase did, but all the exchanges did and what bitcoin l one did.
00:37:26.504 - 00:37:42.154, Speaker B: Onboarding people altoos to onboard new people into bitcoin is new space that we are exploring and we are very excited to onboard people to bitcoin non custodially. That's one of the key things that we are right now focusing on.
00:37:44.974 - 00:38:10.212, Speaker A: That's really cool. I get very excited hearing bring more people to bitcoin non custodially in ways that they understand remove the friction points. I guess I'll start wrapping it up here. Where does Satraya go from here? You're working on the implementation. You are headed towards a testnet. You say, what do the next say three to six months look like?
00:38:10.388 - 00:38:39.794, Speaker B: Yeah. So we just like last week released our scheduled testnet. What we need to do before going to testnet, that's one of the things that we can link through. And the other thing is right now, okay, product wise we are making a huge progress. Testnet is coming soon and we are improving Clementine. We are contributing to bit fee and we are building the core citrus offer. But other than that, I also want to like touch on why this is needed from a user perspective or like everyday people perspective.
00:38:39.794 - 00:39:19.266, Speaker B: Because we think that bitcoin should be the full global money, right? Full unit money. So in order to have that, you actually build an economy around it. Just doing medium of exchange or store of value even, it doesn't provide you anything to onboard new people to here and replace USD and euro dominance around the world. In order to be helpful, people need to engage more with bitcoin using their other assets. They already have like USDT and USDC and real. They should come here, they should buy their first bitcoin. They should create an economy around bitcoin so that it can become an actual currency that can in the long term compete with USD.
00:39:19.266 - 00:39:52.898, Speaker B: In order to help that you can build bitcoin back stable coins which are pegged dollar dollar, but it doesn't have any like actual backlink in the bank. Or even maybe you can build stable coins that is not packed to anything. There's an interesting experiment on ethereum happening called reflexer, which acts like a token stable coin, but it doesn't peg to any token. So it's. It also performs very well against USD. And you can build it backed by bitcoin so it can, in the short term it can even compete with USD globally. Options are like unlimited that you can build on, etc.
00:39:52.898 - 00:39:58.218, Speaker B: That's why we are excited. Besides all the products, cutting edge technology.
00:39:58.306 - 00:40:16.230, Speaker A: And other things, it does seem like the bitcoin season two really does seem to demonstrate that Ethereum may actually have been the testnet. We just need to have, we need to continue iterating on these ideas because.
00:40:16.262 - 00:40:26.608, Speaker B: There'S a lot of progress is insane. You cannot imagine the progress is insane. I think no one has ever seen this kind of progress in any other ecosystem.
00:40:26.806 - 00:41:03.184, Speaker A: Yeah, I mean, your boots on the ground, like you are on the forefront of the research side. I think a lot of people in the bitcoin, the legacy bitcoin talking heads, not very technical, largely. And then the legacy web3 crypto people are not really bitcoin, but there's only a handful of people like you, I would say, who are familiar with the developer ecosystem. You sound very optimistic about it. Like what is our developers flocking to bitcoin? Is this actually happening? Is the narrative true that this is happening?
00:41:03.884 - 00:41:37.114, Speaker B: I think since last year I have seen many, many folks from Istanbul, Turkey where I based, shifting from other ecosystems to bitcoin. They built or not marketplaces, they built wallets, they are building infrastructure projects. Right now they are preparing to build on Sytria. So in Turkey, it's like emerging country dealing with high inflation, like bad management, turkish against bitcoin almost zero. So we have enough, I think exposure to the local ecosystem to see that the growth happening on bitcoin, not only from the user and volume side, but also the development side.
00:41:38.054 - 00:41:52.350, Speaker A: Well, that's really exciting. I love to hear that. Orkan, thank you so much for joining me. Great conversation. I'm excited to check in on Citrea down the road in a few months and over the course as you guys go to testnet and Mainnet.
00:41:52.382 - 00:42:08.834, Speaker B: So yeah, I really enjoyed the conversation, both technical and non technical stuff. And Citra XYZ is where you can follow all the socials and other stuff. And if you want to build on Citria, if you want to use Citria, just ping me and I would love to help you through all the process.
00:42:09.974 - 00:42:48.534, Speaker A: All right, thank you so much. We will circle back in a while. Thank you so much for joining bitcoin season two. Make sure to check out other block Space media podcasts, the Gort show, the Mining Pod, subscribe to the newsletter and follow our social media. You can listen to this podcast anywhere podcasts, our stream, Spotify, Apple and on video on YouTube. We also do a live stream typically Thursday evenings which is a more topical quick hits. What are people in the bitcoin and ordinals ecosystem talking about? Without further ado, thank you so much for joining me for bitcoin season two.
