00:00:00.090 - 00:00:32.534, Speaker A: This episode is brought to you by Das London blockworks, number one institutional crypto conference where all the top institutions and people in crypto are going to be this march in London, what's becoming maybe the crypto hub of the world. I have a link in the show notes where you can learn more and also discount code that will get you 20% off. So click the link, find out more and I'll see you. There's what's up, everybody. Welcome to another episode of Lightspeed. Today we're joined by Yannick from Elusive and Jorat from Light Protocol, which are two of the leading privacy protocols on Solana. Guys, welcome to the show.
00:00:32.732 - 00:00:34.226, Speaker B: Great to be here. Garrett.
00:00:34.338 - 00:00:59.680, Speaker A: Pumped to have you guys here. Mert, he got the ick from breakpoint. I think most people actually survived, at least from what I see on Twitter. There was no general sickness, but Mert doesn't have the immune system. So it's just going to be us through today. But I want to start with the idea that privacy is a prerequisite for crypto to have mass adoption. Why do you say that? What is the problem that you're solving with these privacy protocols? And then later we'll get into the details and, Yannick, maybe I'll let you start here.
00:01:00.130 - 00:02:17.330, Speaker C: Yeah, sure. So I think if we think about blockchains as this new way of having financial transactions on a distributed ledger, we need to look at the system that we sought out to replace with this new financial architecture. And that would be the traditional financial system. And if I send you money via bank transfer or PayPal, you will not be able to trace all of my past financial activity, what I spend my money on, what health bills I have to pay, or what kind of political donations I do. If we have the status quo public blockchains, that would, however, be the case. So I think starting from the most simple use case of blockchains, which would just be financial transactions peer to peer, there's a lack of privacy by default, and that's problematic for individuals because they require privacy for their autonomy to freely be able to spend their funds. But also on a larger scale, if we look at organizations that want to move their activities on chain, there's issues there as well.
00:02:17.330 - 00:02:57.346, Speaker C: If all of your financial actions are publicly visible to anyone, but also if we move away from the financial aspect, the data of your users, the data of your company also cannot be publicly exposed. So I think privacy is core to a lot of applications, is core to the individual's autonomy. So that's why we need some sort of solution that goes beyond pseudonymity provided by hashes and public keys that cannot be directly linked to your identity.
00:02:57.458 - 00:03:00.934, Speaker A: Yeah. Jor, what about for you? What was the inspiration for starting light?
00:03:01.132 - 00:04:34.900, Speaker B: The inspiration to starting light goes back, actually, that I tried to build an application which very much needs privacy at its core, voting on Ethereum, since your vote can be influenced by seeing the decision of other people. Right? Like this is the minimum requirement that you don't want there, which turned out to be quite difficult. So after building it, I thought, okay, I want to build an infrastructure which enables you to build applications like this, applications for the real world. Like Janik just said, you already need privacy for the simple payments use case, right? But even for other use case, even more so like voting or for any business to go, like to do business on the blockchain, right. You have supplier relationships which you don't want to expose as an example to the general public. It can be actually a competitive disadvantage for you to expose this data. So I think there's a really big issue here, and like you stated in the beginning, I think really strongly believe that privacy blockchains will not be able to reach mainstream adoption without privacy protocols like we are building.
00:04:35.590 - 00:04:58.474, Speaker A: Yeah, I completely agree. Maybe we can touch on the history, a little bit of privacy in crypto, because it is funny in some ways that the people that are initially attracted to crypto are in some ways people who want complete ownership of their data. They're maybe worried about where their data is going in servers and how it's being shared and not private yet. Blockchains in general are really all about transparency. You can read everything that's on the blockchain. We saw things like Zcash come out. That was actually at one point.
00:04:58.474 - 00:05:22.226, Speaker A: I think some people thought that might surpass bitcoin because it had privacy innate into the system, but that didn't work out. I mean, it's still around, but it obviously did not replace bitcoin. And you had think and also light and elusive. Just launched this last year. So I'm curious, why do you think this privacy bit has taken a while to maybe catch on or what was holding Monero or Zcash back? Kind of just like the history of.
00:05:22.408 - 00:06:34.730, Speaker C: I think what's also interesting, a few weeks ago I had some Twitter live space discussion about on chain privacy at Mario Naval's Twitter space. And we were as guests going in there expecting some privacy discussion like we're just having. But it was really a privacy discussion about the host saying, we don't need privacy, we want transparency, because we are some sort of bitcoin OGs that think transparency is key. So that was quite unusual, because I think the more mainstream opinion really is that you need privacy. So Ccash has been one of the first full blockchains that have privacy at their base layer. And full privacy, meaning both confidentiality, anonymity, and Monero, on the other hand, uses a bit of a different technology, but can be viewed as the same thing, I guess, from a high level. I think they haven't really taken off for multiple reasons.
00:06:34.730 - 00:08:23.114, Speaker C: One big reason, simply, is that we have bitcoin as the gold standard, as people like to call it, and the other applications like Solana or Ethereum, really offering smart contracts to be built on their platforms to offer those general purpose blockchains. And I think that's a big difference, to have those blockchains with the USP of saying we are a private blockchain versus other blockchains saying we are general purpose blockchains. And what we need to realize at the end of the day is that the end consumer doesn't care that much about privacy. If we have to tell the end consumer, hey, use our app instead of this app, use this blockchain instead of that blockchain, because we offer privacy, I think that's problematic simply because end consumers don't care that much about privacy, that they will go out of their way, choose verse ux, choose a completely new ecosystem. And so I think that's one of the main reasons. Another reason I think has been if you look at different legislators and different exchanges, not accepting Monero or ccash, simply this issue of compliance, that's simply the case. If you look at, I don't know, dark web marketplaces only accepting Monero as their currency.
00:08:23.114 - 00:08:55.000, Speaker C: So I think there is this connotation of illicit activity to some degree with those applications. And so I think if those apps or not as apps, this blockchains were to have this big mainstream adoption, we would see a lot of regulatory action to further prevent those blockchains to be used. So I think it comes down to user experience and compliance. At the end of the day, I think.
00:08:55.610 - 00:10:40.326, Speaker B: I think another reason that really has been holding back the adoption of privacy and blockchains is that the tech is actually really hard. Like Zcash is the first, to my knowledge, the first application which team that really took zero knowledge, general purpose, zero knowledge proofs into production. And the first implementation, the proofs were very slow. I think it took like a minute to generate a simple spending proof, something that we can now do in a second on consumer machine. So they have been pioneering the tech for years and the tooling has really been maturing a lot over the last years. That's why we can now get into building higher level privacy tooling on chains like Solana, which then can provide the UX so that users don't have to live with worse ux than they will have to with other chains. Right? And I think the other thing is really that we need programmability to drive large scale adoption, because the use case, to be honest, bitcoin doesn't have that much adoption apart from having a big market cap, right? So this is based alone on privacy.
00:10:40.326 - 00:11:48.042, Speaker B: It's difficult to compete. So you need these applications which are uniquely enabled by privacy, which really needed. And I think on the compliance side, you can build applications that are compliant, like in web two, let's say take an app like Robinhood, it does compliance for the user in the application, right? You can pay your taxes, you disclose your data to the authorities. I think crypto apps should act more in that way and improve your acts for the user. And then governments are also going to be at ease with this because this is something they know. And I believe that we can structure free applications in this way on the surface, so that we have the best of both worlds and we don't face a regulatory backlash.
00:11:48.106 - 00:12:25.114, Speaker C: I think what's also important at that point, something that you mentioned with the 1 minute proving time on zcash, just imagine when looking at messaging, right? Let's say end to end encrypted messaging would take you 1 minute to send an encrypted message to your friend, right? Nobody would be using end to end encrypted messaging. So yeah, we've seen this great improvement over time and now are finally at a point where we can offer those applications almost seamlessly, I guess.
00:12:25.152 - 00:12:37.770, Speaker B: And one important thing for encryption is actually hardware support, right? And we're not even there yet at this stage, zero knowledge group. So you can imagine that in the future it's going to be even more seamless.
00:12:37.850 - 00:12:43.680, Speaker A: George, I know you've probably explained this a thousand times, but at a high level, can you explain what a ZK proof is?
00:12:45.410 - 00:14:04.586, Speaker B: Sure, yeah. I mean, like at a high level you can prove that you know something, right, without actually revealing the input data. So in more technical terms, you will generate a witness which is your private input data, right? Then you will have some public inputs to actually tie your proof to something in the real world, like in most privacy protocols like Zcash or light protocol this is a mercury you have a commitment in, and then you can prove that to stick with the example with the mercury. You can prove that you have a leaf inside this mercury, right. Without revealing which leaf this is. I involuntarily went pretty deep into a technical example there. But yeah, and the gist is that you have this wonderful technology which lets you prove that something, that you know something without showing an example, I think.
00:14:04.608 - 00:14:53.846, Speaker A: Of which I don't know if this is the best representative, but is like if you wanted to get into a bar and prove that you're 21, you don't have to pull out your ID and they can see all your information, but they just know that you're older than 21, but they don't know what your age is. And zk proofs allow you to show that. And Yannick, I know you both talked about composability, and that's one thing that with zcash you don't have, because there's not like an ecosystem built on top. And I think you've mentioned it would be like if you had your friend or your mom go on a web browser, and there's HTTP and HTTPS, which is secure, which helps with encryption, keep your data safe. If you had to switch browsers to actually access HTTPs, people probably just wouldn't do it. But the sense that it's actually built into the browser, it makes it really easy and essentially composable. So I'd like to get into actually how light and elusive work and let's get into some of the technical details.
00:14:53.846 - 00:14:59.900, Speaker A: But I really want to know what it looks like from a user's point of view. Like from the user's perspective. And Yannick, maybe you can start.
00:15:00.450 - 00:15:54.410, Speaker C: Yeah, sure. So I think it makes sense to just explain some similarities that both of us share. So you talked about zero knowledge proofs. Both of us heavily use zero knowledge proofs. And what we use is a special kind of zero knowledge proof, so called CK snarks, which are just a gold standard, I guess, of zero knowledge proofs, at least from my perspective, with them being very compact, very fast to be verified. And so how we add privacy on chain is basically we have in the zero knowledge proof setup, we have basically always two parties involved. We have the party involved that holds the secrets, that wants to prove something about the secrets they're holding.
00:15:54.410 - 00:17:25.420, Speaker C: And we have the verifier, and the verifier is simply a smart contract on the blockchain or the blockchain itself. And what the user proves at the end of the day in their zero knowledge proof, and that's a similarity that we share, is some value in our Merkel tree that's on chain. And we can realize this Merkel tree structure for the user to basically prove, just as you described with I'm over the age of 21, what that at the end of the day is, is a proof that you're in the H subset of ages larger or equal to 21. In our case, that would be I'm part of the subset, or I know something out of the subset of all of the assets of all users, basically. And with that we can create what's called a multi asset shielded pool. So we have a smart contract that holds the assets of all users, and all users have some cryptographic data structures that are being stored on chain, and then the users generate zero knowledge proof, zero knowledge proof about this encrypted data that is stored on chain in order for those users then to be able to privately transfer those funds to other parties. So I think those are the similarities for us using CK snarks and multi asset shielded pools, mercury, all that kind of stuff.
00:17:25.420 - 00:19:34.370, Speaker C: And I think some fundamental differences. What we attempt with elusive, and that's something that I talked about a lot last week at breakpoint and also gave a keynote about, is what we call Soos zero knowledge encrypted user safeguarding, which is our new decentralized compliance approach to bag compliance into this multi asset shielded pool, basically at its core, and have a rule based compliance in contrast to, let's say, discretionary compliance that would rely on the user to become active. So this built in decentralized compliance is a big part of our vision and then also the way we go about moving or adding privacy to applications. So we started off with basically allowing for private access to public applications, basically, at the end of the day, adding an incognito mode to your wallet, adding an incognito mode to your on chain activities. And yeah, I guess what you guys mostly focus on is really private execution. So to have this private state by default versus allowing this private access to public applications, and I think why having this private access to public applications is so powerful is simply because we have this heap of public applications that need privacy, or rather the users need privacy when interacting with them. But we cannot just shift all of those applications at once to become fully private, to rethink their architectures in a private way, instead basically going in at the entry and exit points of those smart contracts.
00:19:34.370 - 00:21:03.230, Speaker C: And by that allowing a high level of privacy, we allow that with our elusive SDK and I think we can maybe talk about that on a later stage, but that might also be too much. But with our MPC architecture that we are designing, what we are also looking at is adding autonomy basically to private applications. So if you have a private state application that allows the user to execute that application using a zero knowledge proof, I think a significant missing piece is having autonomy in that system. Let's say we are thinking about some auctioning system where we don't want, if the auctioning process has ended, some party to manually have to claim something. We want to have some sort of autonomy. And I think having homomorphic encryption and multiparty computations that we utilize with our SUS network can add this additional component to privacy to boil it down. Built in decentralized compliance and also private access to applications.
00:21:03.650 - 00:21:42.314, Speaker A: Yeah, nice to get out of the weeds just for a second to make sure people that are normies like me understand all this, have just like a few quick follow up questions. So when you talk about compliance, for example, at a high level, would it be like, I'm going to a bank, I need to get a loan for my new business, whatever it is, they need to see, for whatever reason, some of my transactions, my balance, et cetera. But maybe everything's been done through a privacy protocol, like light or elusive, and I need to prove to them that I have some amount or I've made certain transactions. There is still a way for me to essentially, is it like take a receipt or whatever it might be from the privacy protocol and prove to the bank, like, hey, I actually made these transactions, this is my account balance. Is that what you mean?
00:21:42.352 - 00:22:12.502, Speaker C: Almost, yeah, sure. Yeah. I mean, that's what also has been possible with tornado cash, I guess this level of compliance. So that's what I would call, or you would normally call discretionary compliance measures. So it's up to the individual's discretion to share information about their private state. Right. So I guess that's basically also the core of what privacy is about.
00:22:12.502 - 00:22:58.818, Speaker C: It means you have ownership over the data and it means you can share your data with third parties. So you can share your data with a bank, generate as your knowledge proof about your data, and prove something to the bank. That's one part about compliance. But the bigger problem that we are trying to resolve really is the issue of illicit finance in those systems, I guess. So that's really the pressing issue. And that's also what regulators and legislators fear the most are illicit financial activities. And we've seen a big growth actually in illicit finance on chain.
00:22:58.818 - 00:24:04.570, Speaker C: And if we want to go mainstream as this technology and we want to mature as an ecosystem, I guess we need to find some way to combat that. And also if we think about some of the initial core principles of blockchain, right, this transparency where we said, okay, finally we are able to beat the corruption the traditional finance system has. Finally we can beat the opaqueness. That's great, but also comes with risks involved. So I think we need to be honest about potential risks and need to find a way to resolve that without having to rely on any centralized actors. Right. So I think that's actually a huge opportunity to build those systems and then educate regulators about the potential to have some sort of self regulation that is permissionless and decentralized.
00:24:04.570 - 00:24:09.130, Speaker C: So that's really what we are trying to do on a day to day basis.
00:24:09.870 - 00:24:45.910, Speaker A: Yeah. And George, I'd love to hear a little bit more just from your end with light protocol. And one thing maybe to touch on that'd be useful is thinking through like if I was a new user on Solana and I'm using phantom is know Yannick mentioned incognito mode where I either want to send a transfer to someone or maybe I think with Lite, I want to take out a loan with lend and borrow protocol. What does that look like even from my wallet? Like do I need to go to light's homepage and say I want to make this transaction? Or is the ideal end goal is just I'm in my phantom wallet, for example, and I hit like Incognito and the transaction happens privately.
00:24:49.850 - 00:25:19.666, Speaker B: The absolute end goal is that you have this built in your wallet. Your default transaction is private. And if you can just for you, it feels like interacting with any other Defi protocol on Solana. Right. You shouldn't have to hit incognito mode in the first place. I think this is like one step too many. If something is opt in, most people are not going to use it.
00:25:19.666 - 00:26:00.046, Speaker B: Right. So I think this is the approach we are going for with light protocol to really have this default privacy. Default private applications with zk execution. For some applications you will want to leave that. You will not want to build them in ZK. For example, like really high frequency order books. You will still have to delay additional overhead from the zk proofs, right.
00:26:00.046 - 00:26:37.900, Speaker B: You might still want to build that in normal Solana smart contracts. But for example, taking a loan, right. This is like process which is not being conducted a lot of times. It's okay if there's a bit more overhead involved. I think that's a pretty good example, which would actually be pretty straightforward to build with the tele technology that we have built now today. Let me get into that as well. Like what we have, actually.
00:26:37.900 - 00:28:06.840, Speaker B: So I think Janik already talked a lot about the similarities, right? It boils down to you have the smoker fee on chain, you have the verifying contract, which verifies your snark proof on chain. I believe both of us are using growth 16 proofs right now. And what we have, you have your multi asset shielded pool. So what we have added to this is the possibility that you built your PCP on top of this, which means adding your custom logic proof on top of your shielded pool transaction. Sounds more complicated than it actually is. It is really like if you look at it, you really just declare essentially the data that goes into the proof, right? And then you say, okay, for a loan, for example, I want certain conditions to be met and you define them there in your PSP. If you are an anchor developer, it will take a bit of time, you will chew glass, but it's possible for anyone to build this, for any Solana developer to build this.
00:28:07.550 - 00:28:12.970, Speaker A: And George, when you say PSP, you're talking about private Solana programs, right? Is that what that stands?
00:28:19.970 - 00:29:09.322, Speaker B: This is our execution environment, private Solana programs. You're building a Solana program which has its logic defined in a zero knowledge proof circuit. So what it does, essentially, is it takes the computation instead of usually being on chain. Right. The Solana consensus makes it trustless that your computation is deterministic and trust is executed on chain. The zero knowledge proof enables you to execute your computation off chain. This is also how you achieve privacy and then verify this computation and disguise your custom PSP private Solana program.
00:29:09.322 - 00:29:56.730, Speaker B: Logic on chain. This is a really powerful primitive, which is in particularly very well suited to work with account compression, because account compression actually stores your data in call data and not in a PDA, not in an account on Solana. So the data is not actually not accessible on chain. You just have committed to this data on chain, but with CK proofs, because your computation is happening off chain anyway. You don't have to send the data to the chain, you just have your data off chain as well. So it goes very well.
00:29:56.800 - 00:30:20.900, Speaker A: How realistic is it? Like, do you think in the future that the majority of transactions are going to be private by default? And if that is the world that we end up at, I'm curious, like, one, how long you think that would take? And then two, this is kind of random, but do explorers just fall apart, because right now our analysts are on explorers all day, like tracking transactions, tracking what's happening on with Uniswap, does that just implode or what's going to happen?
00:30:21.830 - 00:30:53.854, Speaker B: I mean, there will still be public state, right? There are still plenty of applications for which you will need private stakes. So explorers will still exist in a different form. But, yeah, it's an interesting thought, right? To actually see your own transaction history, you will need to go to your wallet, not the explorer, which makes things a bit different.
00:30:53.972 - 00:31:35.100, Speaker C: That's also so interesting about, I guess, both of our projects building on Solana, really, this thesis of having some sort of a hybrid. To what degree that might be between having super fast public transactions, having not as fast, but also, I guess, compared to other chains and proof verifiers, super fast proof verification. So to have this private and public general purpose chain, I think, is really the future we are heading to.
00:31:36.750 - 00:32:17.270, Speaker B: Definitely. And to go to your second question, like, how long will this take and will it be feasible? I very much think that it's feasible in the past. If you look at other emerging ecosystems for Solana itself, how long it takes to. It's probably in a number of years, right. Until you get really, a really big established ecosystem based on these. Yeah, we are in the early beginnings, but I'm very excited and optimistic.
00:32:17.610 - 00:32:39.966, Speaker A: Quick break. To tell you about an upcoming event, I promise you don't want to miss. It's blockwork's biggest and best institutional conference, called Das London. It's a two day event happening in London this March, where we're going to have over 700 institutions, 130 speakers, and a couple of thousand of us all under one roof. Crypto is in a position for the first time to actually onboard these institutions, and they're showing up. We have companies from Blackrock to visa launching real products in the space. We have the real world asset narrative taking off.
00:32:39.966 - 00:33:04.534, Speaker A: We have things like payments that have been exponentially growing, and then we have things like deepen happening in the Solana ecosystem. There's a ton of capital right now in this institutional space that's going to be coming on chain. It's going to completely change the industry. Whether you are an institution or you're a retail user, or you just want to learn more about what's going on in the space, this conference is for you. You're going to be able to meet some of the best and smartest people in the space. The speaker lineup is absolutely incredible, and you'll get to hang out with me. But the best part is you actually get 20% off your ticket if you use light speed 20 when checking out.
00:33:04.534 - 00:33:29.966, Speaker A: That's light speed 20. I put a link in the show notes. I recommend buying this today because, one, you'll forget about it. Two, these ticket prices go up every single month. So anyways, I hope to see you there. Now let's get back to the show. Is this where using standards, I would assume, help across protocols? Because like one thing with Ethereum, and you have roll ups and you have all these bridges, and you have validating bridges, and you have zk proofs coming into that, and one big question is, yeah, great, these bridges will be wonderful if they all work perfectly and there's no bugs in there.
00:33:29.966 - 00:33:56.390, Speaker A: But the more bridges you have, maybe the more bugs and vulnerabilities there could be. If I think of like 90% or 50%, whatever it is, of transactions on Salana are private, does that add like a big risk surface area? Or is it using these standards that are well tested over time? How do you see that playing into this? Because if I imagine myself at like bank capital, and I'm just like, oh, they're adding this complicated ZK solution on top of Solana. Is this actually going to affect some type of backdoor?
00:33:57.390 - 00:35:02.730, Speaker B: Actually, I think our tech is relatively simple in comparison to these bridges, for example, which if you bridge between blockchains, you have incompatible execution environments, you're doing complicated things to get around these constraints. And also a lot of these zk proofs in particular, they get really big, really complicated. It's a lot of code. Our circuits, like the logic defining our zk proofs, is in the hundreds of lines of code, and it's written in circum. Most of you will not know what circum is, but it's the most established and tested DSL to write these circuits. And the proving system we've built is from 2000, we are using is from 2016. It's the gold standard of zero knowledge proofs.
00:35:02.730 - 00:35:23.730, Speaker B: So of course, you're building in a different environment. You still need to learn. But the integral surface is not like remotely as big as four bridges.
00:35:24.970 - 00:37:16.194, Speaker C: Yeah, and I think that's a good point, actually, if we look at those circuits that we use, if we have those compact size circuits. But I think it would even be the case for larger size circuits if they are compartmentalized. What we can do is formal verification, for example. And at the end of the day, those arithmetic circuits are quite simple logic, consisting of additions and multiplications. And so I think having those, having some fixed static circuits that have been audited, tested, formally verified, I think doesn't really increase a tech surface for the blockchain simply like it doesn't increase a tech surface for the blockchain if some new system program were to be added, and that system program has a thorough process of, again, auditing, formal verification and public development, I think that shouldn't be the biggest fear. Of course, we need to be cautious because again, those circuits can also lead to new kinds of bugs that one might not have anticipated since it's a new environment. But yeah, I think at the end of the day, since this area is also being developed by, I guess, experts, cryptographers, it's not the day to day developers that touch this cryptography.
00:37:16.194 - 00:37:19.420, Speaker C: So I think if you're cautious, we should be fine.
00:37:20.830 - 00:37:41.920, Speaker A: That makes sense. One more, from a user standpoint like Marginfi, right now, I could take out a loan on Solana. Would marginfi essentially have to integrate with lite or elusive or protocol solution or more be. There needs to be a protocol built from the ground up within something like lite or elusive where that loan that I'm taking out can be.
00:37:44.610 - 00:39:25.886, Speaker C: So basically, there's multiple layers to that. If we want the most simple, easy integration, how it will like for us would just be you at the entry point using the elusive SDK. So that could be the marginfi user interface, that could be your wallet, any entry point from your assets, leaving the shielded pool, entering Marginfi, and then from Marginfi again entering through the SDK to shielded pool. That would be the most simple solution. That wouldn't require Marginfi to redevelop their whole protocol from the start and then taking it a step further, that would then require this protocol to become fully private. And the question is, is that reasonable? Do we want that from our users perspective, also from a protocol's perspective, I think charred mentioned that earlier with high frequency trading, for example. So if we look at something like Jupyter, Orca, those kinds of applications, what we would have to do is to build a completely new private order book, to have all of that private liquidity, then have some automation, most likely then using multiparty computations in place, which all at the end of the day will result in lower frequency trading.
00:39:25.886 - 00:40:37.960, Speaker C: And so the question again, at this point would become, is privacy important enough for users to sacrifice? This previously had user experience. So I think for such applications, it's very advantageous to simply have this entry and exit logic you can think of as a sandwiching at the end of the day, right? So you have a single solana transaction. First instruction would be you getting your zero knowledge proof verified in the elusive program, and then your funds leaving the elusive shielded pool, calling on instruction in margin Phi, and then the funds you get from that basically exiting margin Phi and in the last instruction being publicly inserted again into this asset pool into your private balance. So what would be publicly seen is that someone took out a loan of a specific size. That would be the details visible at that point, which I think would be reasonable to have.
00:40:42.030 - 00:41:48.350, Speaker B: The issue. I see. And the reason why we don't follow this approach by default is that what you do then is you offload the responsibility to be private pretty much to the user. Right. The more information is visible on chain by the user, the easier it is to put the pieces together and make match patterns and see who is doing what. And in theory, I think everything like this sandwiching could work great, but in practice, users will just enter a privacy protocol and then take out a loan immediately. Right.
00:41:48.350 - 00:41:55.886, Speaker B: In this case, you see the input traffic into the protocol then the exact same amount.
00:41:56.068 - 00:43:36.826, Speaker C: Yeah, but that would basically be the case if all you were to do is use that privacy protocol for that one application. But having the privacy protocols SDK, as I stated, for example, be at the user's fingertips, in the wallet or in all of the user interfaces, that wouldn't be an issue anymore, because then you would have instead of your wallet, the multi asset shielded pool that is then being used by all of those users. So I think you're right with this approach not offering the same level of privacy that basically having fully private state does. But I think what's important to realize is that especially if you look at things like Alio or Aztec, there has been this issue, I think, in this privacy space of building in a vacuum and basically building just to build and not considering that we actually need adoption and need to gain attraction, and so we need to align those things in some way. And I think it's not the right solution all the time to simply provide a completely new framework for developing things. Because then at the end of the day, you also outsource then basically the adoption to you. Margin file, please rebuild your application privately.
00:43:36.826 - 00:44:10.910, Speaker C: If we say margin file, please add this SDK which allows the users to access your protocol from the existing shielded pool that they already use. I think that can be a reasonable solution. In between and more long term, we can shift to fully private state, but I think it just takes time. As you outlined earlier, it will take time until you reach this point where everything is private. So we need to successively, step by step, move towards that stage.
00:44:12.370 - 00:45:09.022, Speaker B: But you just say yourself, like, it takes time to get this adoption. So this is also the time where it's very easy for the user to reveal themselves because of unsafe user patterns. Right? I mean, this is the same point I made before. The more public state you have, the easier it is to match patterns. So that's why we're going for the approach that by default, as much as possible, should be as private as possible on chain. This doesn't mean that the approach, for example, I don't know the margin five protocol very well, apart from it, that takes loans. So I don't know if it's the exact right application to build with private state.
00:45:09.022 - 00:46:02.834, Speaker B: Right? Some application makes sense, for others it makes less sense. And in the beginning, private applications are going to be built with private state, which are actually being uniquely enabled by private state. For example, an interesting example, there are certain games, right? For example, games which rely on fog of war that you don't know everything that's going on on the map, which is right now, you need a private state tool for something like this, right? And this is something where it's not possible right now to build fully on chain game with this.
00:46:02.872 - 00:47:41.946, Speaker C: That's actually a good point on chain games with private state. And that's also where with our NPC network, that's something that we've been looking at, right? So you have this, let's say fog or four kind of scenario where every player encrypts their location and you have this cool setup where now the user can prove to be at some location on the map. Now if you have multiplayer applications, that becomes more difficult because now you basically want to say, okay, under certain conditions, I want to autonomously reveal the location of one player to another player if they are in close proximity. So I think for things like that, then we need to look at fhe and MPC. So yeah, things get complex quite quickly, but those systems enable completely new kinds of applications at some point within the next few years. Whereas right now we need to trust, let's say, gaming companies to run their servers and not take down their servers. We can at some point maybe get fully autonomous worlds that use CK and MPC and homomorphic encryption at ownership, even in such scenarios.
00:47:41.946 - 00:47:45.786, Speaker C: Back to gamers, I guess, to jump.
00:47:45.818 - 00:48:06.178, Speaker A: In real quick, and I think I'll probably need your help on this, but I'm going to try to explain this to the listener. When you say homomorphic computation, there we go. I was able to say it encrypt at a high level, right? That's essentially, let's say you're able to do computation on encrypted data as if it wasn't encrypted, but it's never actually revealed.
00:48:06.354 - 00:48:59.398, Speaker C: Yeah, exactly. So if you compare MPC and homomorphic encryption. So I think homomorphic encryption basically means you have your data, you encrypt that, so it's in an encrypted representation, and then you perform arbitrary computations on that data, which again yields some data in this encrypted representation. Then the owner of the data could decrypt it, and it would be the same result as if the user just performed those computations on the unencrypted data. So that means this computation can now be outsourced, so the user doesn't have to perform those computations. Instead, a smart contract, for example, can run those computations without gaining knowledge about the data. So something like this can add confidentiality to execution.
00:48:59.398 - 00:49:51.226, Speaker C: Multiparty computations can, on a high level, be viewed as a sort of zero knowledge proof in themselves. But instead of just having a prover that wants to prove something to a verifier, we have multiple parties that want to prove something, basically. And proving something means, at the end of the day, perform a computation. And the caveat now is that those parties mutually distrust each other. So each of them holds a private key and they want to. Or I think that the simplest example would just be, we have ten employees who want to compute their average salary, but none of them want to share their actual salary with each other. So that will be a classical multiparty computation use case.
00:49:51.226 - 00:51:14.066, Speaker C: And so what they do at the end of the day is they use their own private values to generate a sort of proof, which then proves, okay, the average salary is xyz, and so all of them are happy and can verify that the output is correct. So that would be MPC. And yeah, I think the interesting puzzle piece here is that if we apply homomorphic encryption, or more specifically, fhe, so fully homomorphic encryption, we can perform any computations on data, but the data still needs to be decrypted, I guess, by the corresponding owner of that data. And with MPC, we can do things like threshold decryption, threshold encryption, and can distribute data ownership into, again, a large distributed network. And so combining both, we are able to run arbitrary computations and then under some algorithmic conditions, reveal something about the data, expose some of the information, which I think is interesting, as I just outlined with this gaming example, using it.
00:51:14.168 - 00:51:55.970, Speaker B: For something like this, maybe to expand a bit. It's super interesting. One thing to add there is that this technology is still in the very maybe where ZK in general was five years ago, I would say still like homomorphic poliomorphic encryption is still very much, very early and very difficult to use. So I see approaches like this are a bit further out in mainstream adoption than CK proofs like we are using in private Solana programs.
00:51:57.270 - 00:52:42.858, Speaker C: Yeah, totally, totally agree. If I dive into some of the technological stuff. So MPC basically has been around since forever, at least feels like that in the crypto space. And for our multiparty computations, we actually use homomorphic encryption in the multiparty computations, and there's a multitude of different kinds of homomorphic encryption. We have different phases in the MPC, so we have one single initial setup phase. For the MPC and debt we use fhe, which is inefficient. We also use your knowledge proofs for that.
00:52:42.858 - 00:53:25.254, Speaker C: But for the initial setup phase, for the key generation phase, that's not an issue. And then for the actual execution phase, what we are able to use is so called somewhat homomorphic encryption, which basically means it's not fully homomorphic encryption, it's only allowing additions to be executed homomorphically and multiplications not. And so there's this balancing act between technologies to make the execution as efficient as possible with, as George said, the tools that are available at this day and age in an efficient way.
00:53:25.312 - 00:54:11.626, Speaker A: Yeah, those explanations helped a lot. I know the average retail listener like me is probably going to need to listen to this three times, but the analogies and everything are very helpful. We're coming up on an hour, but I'd like to pivot onto one more topic before we go on and enjoy it. Maybe we can start with you. I'm just thinking, I know Salana just launched a new token program, or it's like coming out in phases, Token 22, token 2022. And they have confidential transfers, which adds some type of privacy, not into necessarily the base layer, but the Salana program library. But my bigger question is, really, as a developer working on privacy in Salana, or even any type of what people would call monolithic layer, do you ever feel like you're held back by the lack of features? Maybe at the base layer or some type of pre compile that would make cheaper transactions? And on Solana everything's so cheap anyways, right now that doesn't matter.
00:54:11.626 - 00:54:24.660, Speaker A: Is there a use case to say like, hey, we actually need like a roll up or a layer on top of Salana, because we can't do everything we want to because the base layer is not moving fast enough to support our privacy features that we need. Just curious how you think about that at a high level.
00:54:25.830 - 00:55:34.230, Speaker B: Great. I mean, you touched on several things there, right? So token 22 with the ZK token is super interesting, but different from light protocol and elusive, since it has confidential transfers. It's like some interesting mix of bulletproofs and homomorphic encryption, which is maybe enough for some use cases. But you can still, you work with encrypted values on chain and you see them change in. So you see essentially who interacts with whom. So, for example, for payments, like, imagine you pay at a gas station, right? And you could essentially track the user because you see at which gas stations the user has paid, right? So this wouldn't be enough for a payment use case like this for other use cases, maybe. I've heard that somebody's working on settlements with this, which might be fine, right? If only the transactions are private.
00:55:34.230 - 00:56:40.342, Speaker B: Different part about the roll up part, yes. I'm very excited about the pre compiles for the ALtBN 128 curve we have been building as a syscall into the Solana runtime. It got merged like pretty much a year ago, and it's going to make the verification of zero knowledge proofs a lot cheaper than they are now. Even though Solana is so fast and cheap, verification of zero knowledge proofs, this time on Mainnet, is still very expensive. It will take you tens of transactions to actually get zero knowledge proof verified. So the light V one right now, which is live, is not as fast as we would like it to be. So this is why we went at the very bottom level and built these pre compiles, which will allow you to verify a zero knowledge proof in less than 200,000 compute units.
00:56:40.342 - 00:57:05.762, Speaker B: So one atomic Solana transaction will enable you to verify a zero knowledge proof. So light V three, which will launch as soon as the pre compiles go live, hopefully in 117. So right now it's scheduled for beginning of February. If nothing changed in the past. It has changed a couple of times, so I really hope.
00:57:05.816 - 00:57:10.070, Speaker A: Jord, how would you describe a pre compiled to, like, a non techie?
00:57:11.450 - 00:58:19.386, Speaker B: So it's a piece of code that's directly built into the Solana runtime and has, like, in the Solana runtime is a virtual machine, right? So how expensive operations are? On a high level, it's arbitrary. I mean, of course, in reality, it's not completely arbitrary. Otherwise these operations still are executed on hardware, they will cost you something. So this is a special piece of code for which different rules apply. So there's a specific price set to execute this operation, and it's built directly into the runtime. And then the jump guys with higher ends are going to lengths to implement this on custom hardware, really optimizing the implementations there to make it more efficient. So it's just a different piece of code in the runtime for which different rules apply.
00:58:19.488 - 00:58:25.760, Speaker A: Got you. Because of that, like you said, you could get cheaper. Like these proofs could be much cheaper to prove, for example. Cool.
00:58:26.370 - 00:59:10.130, Speaker B: Exactly. Yeah. This is the verification pre compile is one which we have built, like we mentioned a couple of times before. We have a mercury, right? For a mercury, you need hash functions. Unfortunately, we cannot rely on the standard hash functions because they are very inefficient in zero knowledge proofs. So we've built an additional pre compile for the Poseidon hash function, which is the standard hash functions, which is used in conjunction with zero knowledge proofs on growth 16. So this one is also in 117.
00:59:10.130 - 01:00:41.530, Speaker B: So we hope that this one is also going to go live soon after. So with these two pre compiles, one basic light asset transfer is going to be in one transaction. So one is going to be one shielded transaction equals one Solana transaction. This really eliminates the need to build roll ups, fortunately, which we are very happy about, because it adds a lot of complexity and issues with composability, as probably many people are aware of. It's really not necessary to build roll ups. And if you will, like compressed accounts are actually pretty similar to roll ups on Ethereum, since you put the data on chain and for data availability, and with decay and compressed accounts, you essentially put the execution also of chain. So you could in some weird way say that PSPs are roll ups which just settle directly on Solana.
01:00:41.530 - 01:00:55.150, Speaker B: But yeah, it's where these technologies kind of intertwine, and it's just solving different problems, because we don't have to solve for scalability like people need to do on Ethereum.
01:00:57.250 - 01:01:41.610, Speaker C: And I think that really ties into why both of us are, at the end of the day, also building on Solana. It's this ecosystem that is fast moving, has this openness to new technologies, even at the base layer, simply by Solana wanting to be as composable as possible. So we don't want to have some external settlement, we want to have everything happen on the base layer. So I think that's a very powerful characteristic of the Solana ecosystem. I have to say, awesome.
01:01:41.680 - 01:02:12.294, Speaker A: Those are great answers. Jordan Yennicks like, obviously the stuff can sound really complicated, I think, to the average user, but I think it's also easy to realize how much we need privacy. I was just talking to somebody in the office and you're applying for a New York apartment and you have to give your financials and they have to make sure you make enough and so forth. And you're basically handing over your life to someone that you have no idea who they are. And if you could use some type of zk tech or proofs, it could really be game changing. And also just protect your data in ways that you don't know what it's being used for now. So I think everybody can relate to that at least.
01:02:12.294 - 01:02:18.680, Speaker A: So guys, thank you so much for joining. I'm going to put links to your projects in the show notes. Everybody should go check it out. But yeah, guys, it's a lot of fun.
01:02:19.530 - 01:02:22.280, Speaker C: Yeah, thanks for having us. It was a lot of fun.
01:02:22.730 - 01:02:24.614, Speaker B: Likewise. Thanks for having us.
01:02:24.732 - 01:02:25.186, Speaker C: Sweet.
01:02:25.218 - 01:02:38.014, Speaker A: We'll see you next time. All right, I've got a little ending note here. First, thank you so much for listening the full episode. If you really like liked it, hit subscribe. But secondly, make sure you sign up for Das. This is Blockwork's biggest institutional conference happening in London in March. I've included a link in the show notes and also discount code.
01:02:38.014 - 01:02:44.010, Speaker A: Get 20% off. Make sure to use Lightspeed 20 when you sign up. All right, I'll see you there and I'll see you next time on Lightspeed.
