00:00:00.250 - 00:00:38.566, Speaker A: Alright everyone, before we get into the episode today, I want to talk a bit about access protocol. They're built on Solana and solving the subscription problem in a crypto native way. We'll talk more about them later in the alright everyone, welcome back to another episode of Lightspeed. We are joined today by off chain Labs, the creators of Arbitrum. We are joined by Stephen, the co founder, and Rachel, the tech lead. And I'm sure the audience is super well versed with what a product like Arbitrum is. But just as a quick refresher, Arbitrum is building roll up technology based around Ethereum, and it's well known for its flagship l two arbitrage one.
00:00:38.566 - 00:01:15.860, Speaker A: It's an optimistic roll up that uses Ethereum for DA and settlement. But there's also a roll up framework called orbit chains that really let users kind of come in and create their own customizable l two or l three s within this arbitrum ecosystem. So, Steven, I think I want to start off asking you just to explain the arbitram origin story, because it has quite a long history, which is pretty rare in this industry. There's not that many older projects that have had these ideas kind of been churning and ideating for quite some time. So love to just get the background on kind of how you and your co founders came up with arbitrum and how it's sprouted into the product it is today.
00:01:16.230 - 00:01:42.966, Speaker B: Absolutely. And great to be here. So Arbitrum predates me, actually, in its initial phase. If you go on YouTube and look for the first mention of Arbitrum, and a few years ago I would just say, go on YouTube and look for the only video that mentions arbitrum. But thankfully, we're past that. And you'll find a 2014, fall 2014 Princeton Class seminar, an undergraduate seminar, and there was a project. It was like the last video where teams were presenting their projects.
00:01:42.966 - 00:02:14.882, Speaker B: One of them was Arbitrum, which was led by my co founder, Ed Felton. He was advising the students, and they built like a very early prototype of a bisection game and built this out. And the reason I like to mention that is because fall 2014 actually predates the launch of Ethereum. So in a very real way, Arbitrum and Ed really was thinking about the problem of scaling smart contracts before there was any real live smart contract system. It was really an academic theoretical problem. Ed went off to the White House. He was the deputy CTO of the White House and senior advisor to President Obama.
00:02:14.882 - 00:02:38.174, Speaker B: And arbitram kind of just sat on the shelf for a few years. Again, the undergraduates did what they did for a semester. Everyone moved on. It wasn't quite a graduate level project. And then when Ed came back in 2017, that's when Harry and I knocked on Ed's door and said, hey, that arbitram thing, we should pick that up. Because in 2017, it looked like scaling was a problem. And I say it looked like scaling was a problem, because now we laugh to see how much more usage and demand there is now.
00:02:38.174 - 00:03:14.010, Speaker B: But if you remember, like the crypto kitties era, that was around that time, and we started seeing some initial spikes of transaction volume, and it was clear that scaling was going to become an increasing problem. Right. One of two things would happen. Either people would just stop using the technology, or they'd increasingly come to use the technology. We believed in the latter, and therefore we needed to build the plumbing to scale this. And so we picked it up in an academic context. But building graduate work on this, and we published this in the summer of 2018 at Unic Security, which is a leading security conference.
00:03:14.010 - 00:03:37.118, Speaker B: That's also the month, August 2018 was when we formed off chain labs. And none of us really had commercial aspirations or startup aspirations at the time. I was sure that I was going to go in academia. I had known that for many, many years. I was sure I was going to stay there. But of course, as this got more exciting, we realized that we didn't just want to let others pick this up and build it. We thought it was really important.
00:03:37.118 - 00:03:56.150, Speaker B: It was difficult to get right. And time has proven that's indeed, definitely correct. And we wanted to do it ourselves. And that's why we did form the company initially as kind of like a part time thing. Yeah, we'll do our academic things and we'll put a few hours in the company. That got very real very quickly in 2018. We raised funding, and shortly after, we all joined full time.
00:03:56.150 - 00:04:06.650, Speaker B: And five and a half years later, here we are, and Arbitrum is live decentralized today, but off chain Labs obviously still is a core contributor to the technology stack.
00:04:07.630 - 00:04:41.590, Speaker C: Awesome. Yeah, I didn't know that. It actually predates you. That's pretty cool. So our audience is obviously maybe mostly, let's say, Salana, and they're not too familiar with all twos and especially arbitram. So when you say this idea predates you, what exactly is the idea? What was it that you saw that you're like, okay, we need to work a bit more on this? And obviously it was part time at first, but then you decide you need to make a company out of it. What exactly is the concept there? Is it the concept of a roll up? An optimistic roll up just for people who are unfamiliar?
00:04:42.010 - 00:05:05.046, Speaker B: Yeah. So one thing to note is, back then, the word roll up in this context didn't exist. The word optimistic roll up in this context didn't exist. What we were trying to do, basically, and if you look back in the arbitrage paper, you won't find these words because they literally popped up a few years later. We were trying to do was scale. Smart contract platform. There was an earlier paper, not written by us, which mentions something called the verifier dilemma.
00:05:05.046 - 00:05:34.822, Speaker B: I don't want to get too technical and academic here, but that was sort of the initial paper that I think opened up Ed's eyes initially and my eyes and said, hey, there's going to be a scaling problem. When everyone's verifying everything on layer one, there's going to be a problem here. And Ed's idea was this, what we now call an optimistic. An interactive optimistic roll up. Right. An optimistic roll up with interactive fraud proofs, but that you can minimize the work on chain, but still get a lot more done. And that was basically the core idea that Ed set out to build.
00:05:34.822 - 00:06:06.974, Speaker B: And we thought, hey, this is a really nice way to scale a blockchain like Ethereum, the way that the initial arbitrary paper was written. Actually, it didn't talk about Ethereum necessarily. It talked about some phantom layer. One, because in an academic context, you don't need to commit to anything. But from the first days of the company, when you ask me what we were building out, we were always building out something. On Ethereum, we were big believers in Ethereum, both from a technical perspective, but also from a community ecosystem perspective. Two different pillars that we really were excited about and still are excited about Ethereum.
00:06:06.974 - 00:06:44.906, Speaker B: We said, okay, we want to scale Ethereum. We want to be the ones to build it ourselves. And back then, just to give a little more context, I said roll ups didn't exist, but there were other terms that existed, the two dominant terms at the time when it came to scaling the two household names, if there was a household name, would be plasma and state channels. Those were the two solutions of the day. And I remember actually back when we raised funds for the company in 2018, investors saying, like, so is it plasma or is it state channels? And we'd be like, no, it's arbitram. It's this other thing. And fast forward, we'd be able to say, no, it's a roll up.
00:06:44.906 - 00:07:40.270, Speaker B: It's a different category, but we didn't have the vocabulary for that then, and it sort of got almost to the point of problematic because people couldn't believe that there was another category that completely different that we hadn't yet contemplated. And actually, at the Cornell, I did a postdoc at Cornell at the time, at the 2018, I think, or maybe 2019 Cornell, they had an event every year, a boot camp for a week, where Vitalik used to come. And I gave a talk there, and my talk was arbitram, advanced state channels, because I sort of like, you know what? I need to take arbitrum and put it in the terms of state channels because otherwise a lot of people won't pay attention and they're just convinced that it doesn't exist. So I was able to use some of the terminology and backfit. It wasn't a perfect fit, obviously. I think the term roll up is much better, but it's also just a good thing to zoom out. And whether it's optimistic roll ups, zk roll ups of today, or plasma and stage channels, then I feel like people always think that we know at least the frameworks of everything.
00:07:40.270 - 00:07:53.380, Speaker B: We're not going to be surprised then. I'm sure we're constantly going to be surprised, and we have to keep innovating and keep building as we increase our understanding, but not to sort of get boxed in by the limitations of what we understand today.
00:07:53.750 - 00:08:42.690, Speaker A: Super interesting hearing the struggles of the industry's vernacular. That problem certainly hasn't gone away, and if anything, it's only continuing to compound. So good to know that at least it's a historic problem as well. I kind of want to get a little philosophical here, maybe, and just talk about the end state for Ethereum's roll up centric roadmap. Right? And so if we think about Solana here for a second, the goal, or what Solana is really trying to accomplish, is to build a single, global, atomically composable world computer, basically, right? They want that global permissionless state, and that varies a little bit differently when you think about the Ethereum roadmap that really has this role centric future. And so can you just talk to us a bit about how you see the evolution of Ethereum and really how you think arbitrum fits into that afterwards?
00:08:43.110 - 00:09:15.280, Speaker B: Yes, the evolution of Ethereum. You referenced the roll up centric roadmap. This is a blog post by Vitalik, or a vision, I should say, laid out in a blog post by Vitalik a few years back, which basically says Ethereum will become roll up centric. So roll up is a system like arbitram. There are others as well, of course there are now many. And the idea is that Ethereum index, there's this thing called the blockchain trilemma, or the scaling trilemma. And the idea is Ethereum index really hard on security and decentralization, and it gives up scalability for that.
00:09:15.280 - 00:09:58.774, Speaker B: We can't be academic though, and say, okay, we believe security and decentralization are the most important and therefore we won't scale, because you have to also be pragmatic. If people can't use it, if it doesn't have the throughput to meet the demand or the price just goes way, way up, that it just doesn't make sense to use it for typical applications. We might sit on our ivory tower and say that's okay because it's secure and decentralized, but that doesn't actually work. So we understand as a community we need to scale as well. And the way that ethereum scales was via this roll up centric roadmap. And I love to point back to the roll up centric roadmap because it predates most of the L two s today. Arbitrage was already obviously building at the time, but it was a much sparser field and it really set in motion something that we've seen really come to fruition.
00:09:58.774 - 00:10:19.998, Speaker B: And there is a roll up centric roadmap today. And I have a lot of respect for what the folks at Salana are doing. It's a different approach. I can argue why Ethereum. I think Ethereum is better. I'm sure we'll get into that today. But that being said, I think at least to be true of some of the criticism that comes out and says, oh, Ethereum, these l two s are parasitic to Ethereum because they have their own tokens.
00:10:19.998 - 00:10:51.674, Speaker B: And I say, read the role of centric roadmap. Vitalik actually says in there that he thinks one of the benefits of this is you have these sub communities that have their own tokens and people can sort of pedal their own thing and it's actually really good. So you can disagree with this and anyone can disagree with this, but I think it's important to realize this is a fulfillment for the roadmap. There was a blueprint, there were plans. We follow those plans. We believe then as a community, and we still believe that this is the correct way to scale. Others will disagree, and that's fine, but for other people to come in and say, oh, look, these l two s showed up.
00:10:51.674 - 00:11:19.614, Speaker B: They have nothing to do with Ethereum. They're completely separate. They're parasitic. That, to me is just like dishonest, because if you look back and all those criticisms that people are lobbing out today were actually features that were set out, and I think we should at least acknowledge that and realize that. So I'm a big believer in the roll up centric roadmap. I think it's a great way to scale. But the idea is that this is architectured and this is the way that was intentionally and precisely followed the path that we followed.
00:11:19.742 - 00:11:59.998, Speaker A: All right, quick break from the episode here to talk to you about access protocol, the easiest and best way to stay updated on what's happening in crypto. By following your favorite publishers, you can gain access to over 60 publishers, including Coin, Gecko, crypto, Slate, and a whole list of independent creators. Most importantly, you can also do this without managing a bunch of different subscriptions. We all know how painful that can be. So how it works is you find your favorite publishers, you stake the ACs token, that's the access token. And once you stake, you gain access to all of that creator's content without the hassle of ads or subscriptions that you can't cancel or lose track of how many you have. Access protocol already has over 225,000 users that are finding new creators, reading content and even receiving NFTs from their favorite creators.
00:11:59.998 - 00:12:09.778, Speaker A: They're soon releasing V two. So check it out. The link in the description to go give the protocol a try. It's an awesome product. It's crypto native, and it's built on Salana. All right, back to the episode.
00:12:09.954 - 00:12:48.820, Speaker C: So before maybe we get into some of the discussions around trade offs, I do want to actually slow down and describe how these things work. Right. Because there's some confusion there, especially, let's say, on the Solana side. Obviously, there's different types of rollups and there's different trade offs that each roll up kind of makes. There's ZK, there's optimistic, there's even sovereign roll ups, et cetera. There's a few different types. So could you describe just the general idea of roll ups first, and then why arbitram picked the optimistic path and the nuances that come with that?
00:12:49.910 - 00:13:45.054, Speaker B: Sure. So the thing that I think before we talk about optimistic and zk roll ups, the one thing that unites them all is the word proving. What I mean by that is we work at off chain labs, and the core thing that we try to do is take a lot of the computation off chain. So it turns out that Ethereum has limited capacity. And our question is, can we better use the capacity of Ethereum and get more mileage out of the capacity of Ethereum and take more of that computation off chain? So you say, sure, yeah, just take it all off chain and do it in your own network. But no, the thing that we want though, is we want Ethereum to still give its stamp of approval and say, hey, all that stuff that happened off chain, I ethereum, with my secure and decentralized validation, I stamp that and say, that is correct. And the end state that's listed on Ethereum is actually the correct end state for all those transactions that happened off chain.
00:13:45.054 - 00:14:20.078, Speaker B: And so how do you do this? You need some sort of magical thing, and that magical thing is called a proof. And what you do is basically you have this other network and its validators. Transactions are submitted off chain. In this case, you'll say to the arbitram network, but this could be any roll up. I haven't said anything about that differs optimistic in ZK yet. You have this roll up l two network, you send transactions there, and then they prove back to Ethereum what happened. They say, hey, Ethereum, I know that you can't possibly validate this directly, but I'm going to give you a succinct proof of what happened, and you can verify this proof and therefore validate everything that happened in a roll up.
00:14:20.078 - 00:15:08.634, Speaker B: So even though you couldn't possibly validate it all yourself directly, you can verify this proof. That's true of all roll ups. There's also a question of where the transaction data is put. And that's sort of, we talked before about data availability, and the idea is that even if we completely agree of how this machine works, there's some set of transactions, and Ethereum can verify a proof and executed. If you can't get to basic consensus of what the inputs are, it's going to be hopeless to try to get what the outputs are. So everything that I said so far is we have some set of transactions, they're submitted off chain, we prove back to Ethereum, but if we don't agree on not what we're proving, but what are even the inputs, what are the transactions, we can't hope to get to consensus. And one thing that roll up did, and this was in some sense a step back, because plasma, these 2018 2017 scaling solution, tried to take all the data off chain.
00:15:08.634 - 00:15:37.640, Speaker B: Roll up said, hey, just put all the data on Ethereum and that's how you get consensus. Just throw all the raw transaction data in compressed form. On Ethereum, there's no question what the inputs are. All we need to do is this deterministic process. Take those transactions that are on Ethereum, there's full consensus of what those transactions are, execute them off chain, and then we just have to prove off chain. Hey, that set of transactions that we all agree upon, this is actually the result of when you execute those transactions. And that's basically where data availability comes in.
00:15:37.640 - 00:16:19.486, Speaker B: Data availability doesn't need to be put in ethereum, but that's what a full roll up does, and that's how it leverages Ethereum security. So data availability is on Ethereum, we know what the inputs are off chain. This process happens, that executes them, and it proves back to Ethereum what happens and the way that zk rollups and optimistic roll ups differ in this picture so far, everything I said is applicable to both of them. The way that they differ is how this proof works and what this proof looks like in a ZK roll up. It's conceptually simpler, but actually technically harder to implement. They give you something called the validity proof, which they say, hey, here is these transactions set that you know because they're on Ethereum. Here is the executed result, and here is this mathematical zero knowledge proof.
00:16:19.486 - 00:16:40.810, Speaker B: This will just take a black box proof that does some magic thing and it spits out a result and we can all trust it. So I give you a proof of validity proof. When I submit the result to you, I prove to you right away that it is valid. An optimistic roll up takes a different approach. As its name suggests, it's optimistic. So it actually comes and says, I'm not going to give you any proof at all. Here is the set of executed transactions.
00:16:40.810 - 00:17:08.814, Speaker B: Trust me. But it's not really trust me because there's a fraud proof process where if anyone disagrees, they can say, hey, ethereum. And Ethereum here is just a referee. I disagree with that, and I'm going to give you a succinct proof, or a succinct process in which you can prove that is actually correct. And that's how these two differ. Whether they prove that it's valid, or that they assume it's valid optimistically and give you the ability to challenge that and prove that it's invalid. And in either case, Ethereum is the referee.
00:17:08.814 - 00:17:33.638, Speaker B: It either validates the validity proof or referee the process of the fraud proof to get down to a state that everyone can say, okay, that is correct. And remember, this state is a representation of all those transactions that happened off chain. So we have all the data on Ethereum or whatever data availability there you're using. But for a roll up, you have all the data on Ethereum. These transactions get executed. It's a deterministic process. But even though it's deterministic, we still need the result, and we're doing way more than Ethereum can do.
00:17:33.638 - 00:17:48.766, Speaker B: So Ethereum can't compute that result directly. Now we prove back to Ethereum, it could be a zk proof, it could be an optimistic proof. Maybe there's some other proving technology we can use in the future. But this is the general overview of what roll ups do and how we scale.
00:17:48.878 - 00:18:23.482, Speaker C: So I do have a few follow ups there. One, I'm curious, because you mentioned there's two proving systems. You guys obviously picked the optimistic case. What made you guys go with optimistic? I know from my bird's eye view, people maybe think that ZK has more of a, let's say future once the technology actually gets there. But you guys are actually, I believe you're the farthest progress in terms of roll ups on L. Two, beat. Some of these other systems don't even really have proofs currently, which you do.
00:18:23.482 - 00:18:39.220, Speaker C: So one, I want to ask why you guys picked optimistic as opposed to DK. And then two, I'm curious what you think about some of these other optimistic rollups just not having proofs in production and what you think that maybe says about the ecosystem currently.
00:18:39.990 - 00:19:22.074, Speaker B: Yeah. So if you go back and look at my academic work at Princeton before arbitrum, and you didn't know anything other than I worked at a roll up company, you'd probably assume that I was building a ZK roll up. My PhD was in cryptography. I did a lot of work on NPC multiparty computation. I wrote papers on proof system and zero knowledge proof system and signature schemes based on zero knowledge proof system. So I definitely had no bias against zk proofs and probably was doing work in zk proof research before most of those people building zk roll ups today, with some exceptions. That being said, when we sat down and looked at this problem, we said, okay, we need to scale Ethereum today, and what is the best technology available to do that today? And it turned out for several reasons.
00:19:22.074 - 00:20:01.322, Speaker B: One is cost. The off chain costs, in particular, of zk proofs were much more expensive than optimistic roll ups. One is just flexibility and the ability to actually support the EVM directly and also expand past the EVM. Rachel here is the tech lead for Arbortrum stylus that enables other language supports, all of which, by the way, are in testnet today with full fraud proofs for WASM based languages as well. And that, to us, flexibility, cost, and also the ability to build and execute were important to us. And we said, okay, we believe today this happened in 2016. But it's also a renewed question today that optimistic roll ups are the best way to scale today.
00:20:01.322 - 00:20:17.686, Speaker B: But it wasn't. We're off chain labs. The technology is called arbitrum. Nowhere here do you see the name optimistic built in. Whereas if you look at all our competitors, you'll find the name optimistic in their name. You'll find maybe the word zk or snark or stark in their name. And the idea was our goal.
00:20:17.686 - 00:20:31.142, Speaker B: It was subtly different. We didn't come with a solution. We came with a problem, and we said, we want to solve this best. I didn't come and say, I've built this optimistic technology. Find me a problem. I didn't come and say, I built this cool proving system. Find me a problem.
00:20:31.142 - 00:21:09.510, Speaker B: I said, we have a problem, and we want to provide scaling solutions for Ethereum. And that leaves the door open, by the way, to future innovation. And in that 2018 paper that I referenced, the arbitram paper at Unix security, we had probably the innovation that got the paper published. The coolest thing in the paper probably was called the AVM, or the arbitram virtual machine. And actually, Rachel did a ton of work optimizing some of the AVM tooling initially when Rachel joined the company. But the thing is, in 2021, we launched Arbitrum with the AVM. In 2022, with the nitro upgrade, we sunseted the AVM, and we replaced it with WASn.
00:21:09.510 - 00:21:38.234, Speaker B: And again, if I came with a tool, my tool would have been the AVM, and I would have said, hey, I spent years of my life that and Harry building this really cool architecture. There's no way that we're sunsetting this. That would have been what I probably would have said, but that wasn't our approach. Our approach was, we're scanning Ethereum. The AVM was wonderful for its time, but it turned out we built a better approach, and I was happy to sunset that in favor of something else. And if I look forward five years, that's going to happen again. And that's why it's so important that the technology is upgradable and the community needs to upgrade now.
00:21:38.234 - 00:22:02.142, Speaker B: I haven't taken a bet, though, in what that will happen. Maybe we'll have a few breakthroughs of zero knowledge proofing technology. Breakthroughs which I believe are necessary in order to be competitive with arbor trim today. And maybe that's the direction the ecosystem will go. Maybe we'll have breakthroughs like stylist that make us more entrenched in the optimistic approach that enable us to do much, much cooler things there. I don't know exactly. I have some ideas, but we haven't taken that bet.
00:22:02.142 - 00:22:25.706, Speaker B: Right. If you hire a plumber to fix a leak in your house, you don't want them to come and say, all right, I brought my tool, I'm fixing it with this tool. You want them to come take a look first and see which friends they need and which tool that they need. And that's the approach that we take here. So I'm not anti ZK in any way, but I firmly believe that arbitram, from immaturity, flexibility, and decentralization standpoint. Right. It's mature and it's decentralized in ways that these other technologies aren't yet.
00:22:25.706 - 00:22:44.542, Speaker B: Today, I believe that arbitrum hits the sweet spot and provides scale to users. Not in two years from now. That's often a perpetual two years, by the way, because it never gets shorter. Not in two years from now, but today. And, hey, in two years, will we have better technology? Of course. We have so many people throughout the ecosystem building and researching and contributing. Of course we'll have better technology.
00:22:44.542 - 00:23:09.458, Speaker B: And just like we swapped out the AVM for WASM, when that made know it's not my control. It's not the Dow's control, but I'll be a proponent to use whatever the best technology that we have today and to update the arbitram technology stack to that. But I firmly believe, and this is not a decision that I made in 2018 I haven't thought about since we already made significant changes. I firmly believe that arbitram today, which has already evolved, is the best scaling solution for Ethereum.
00:23:09.554 - 00:23:42.450, Speaker C: I just want to bring up the second question again. You just mentioned something that I find interesting, which is the two years, by the way, you said, is kind of perpetual. So I want to double click on that. Right. And I've been vocal about this. I generally say, like, arbitram is the roll up that I actually respect most because they actually have a proof system in place, and there's things like stylus, et cetera, which give developers more flexibility. I am curious, and I would say some of my peers are curious.
00:23:44.150 - 00:23:44.418, Speaker B: There.
00:23:44.424 - 00:24:01.030, Speaker C: Are a bunch of roll ups currently that just don't have proofs at all. Right. So you kind of have an optimistic roll up, but then the proof system is missing. What do you think about that? Do you think that's acceptable? Is it a case by case basis? What are your general thoughts on that whole concept?
00:24:01.110 - 00:24:47.590, Speaker B: So I think that different roll ups will have different strategies of coming to market. So if you think that it makes sense for you to launch without proofs, I personally disagree. That was a red line for us, and this was like the core of the technology. We believe that it's important, but maybe someone reasonable can disagree and say we believe that it's okay to get to the system working without proofs. The thing I really take issue with is those that don't have proofs, but also then are spending hundreds of millions or more dollars to get people to adopt this technology right away. And one of the early arguments that I heard against, I used to be very vocal against the anti proof roll ups. And one of the arguments I heard is the proofs are going to come and we trust them.
00:24:47.590 - 00:25:21.422, Speaker B: But another development in the ecosystem is this idea that everyone should have their own roll up. And I think for many that makes sense. We have the arbitrage morbid technology, which gives people that ability. But now we're sort of giving other people saying, hey, everyone should launch a roll up without proofs. And this argument of like, trust them, they'll build it, it kind of goes away a little bit, because who are these people? I don't know. I haven't vetted every team. And so I think, again, I'm not here to say that it's invalid or you can't launch a roll up without proofs.
00:25:21.422 - 00:25:54.858, Speaker B: It's not my approach. I think it's problematic. But I do think if that's the case, then you should say, all right, let's launch this alpha. And before we start pouring fuel on the fire, let's really focus on the technical aspects, get the proof system in, and then we'll encourage people to start doing our incentive programs, or then we'll sort of encourage everyone to launch their own chain once these proofs are alive. I think the combination of those things is troubling for me. Again, reasonable people will disagree. I think that most people in this space have really good intentions.
00:25:54.858 - 00:26:24.534, Speaker B: I don't think that this is like anything personal against anyone. Just I think when you lose control of that and you sort of proliferate the technology too early, in an early form, it's hard to really know where it goes. And the other thing is, the analogy I like to give is also like a car or a car without an engine, right. In a lot of cases, places. That's what this looks like to me. And some people like to use the word modular to sort of tape over the fact that there is no engine. Now, modular is nice.
00:26:24.534 - 00:27:03.098, Speaker B: The idea that the arbitrary stack is very modular. There are many data availability solutions. For example, you can plug in, but you still need one, right? So if I can give you a car, and I say there's a gas engine and there's an electric engine, you can actually plug in whichever one you want. It's like a super cool car, that's great. But if I give you a car and I say it has a hole for the engine, you can plug in whichever one you want, and you say, okay, well, how much of the engine? Say, well, I actually haven't built any engine yet. That, to me, is more problematic. But I think it actually creates problems later on, potentially, because maybe it turns out, but for technical reasons, I didn't know today, the engine is going to have to be circular, and I left a square hole until, you really know in arbitrary.
00:27:03.098 - 00:27:33.398, Speaker B: And because the technology is built out, we know what the invariants are. The invariant is when we build stylus, the proof system cannot be broken. And we know that, and we know where our walls are. We can walk into the walls, and Rachel can talk about this a lot better than I can, we might walk into the wall and say, oh, that would have been a good idea. But it turns out that there's some subtle interaction that would make proving harder if we did that. If you don't know where the walls are, you're probably going to trample all over them. And I think adding proofs into a legacy system becomes potentially more difficult and might lead to more disruptions in the network.
00:27:33.398 - 00:27:46.962, Speaker B: Again, that's not necessarily the case. Maybe you had really good intuition of where the walls are. So I'm not trying to say that this will for sure happen to any team, but I do think it's harder to. As you innovate in other areas, it's harder to sort of keep track of what you can't break when it's not there.
00:27:47.016 - 00:29:04.698, Speaker D: I'd love to touch on that, too. We did take a very different approach in terms of just having everything be fully compatible and all the proving and decentralization factors that we have never taking a step back on those stylus could have shipped last year if we just didn't care about fraud proofs, right? Like, if we were just like, hey, we've got this really exciting virtual machine that lets you run smart contracts written in languages like Rust or C or C Plus plus on Arbitrum one, if you don't have to do proving, your time to delivery is just way lower. But we actually took the effort and the time and the energy and all that to build a system where on testnet today you have the same level of fraud proofing that we do on arbitram one. And that's really important because as Stephen was touching on there, and I think this often gets overlooked. So I just want to talk about it again. It's just the choices we were making at all of the steps in the stylus VM were directly informed by the fraud proving system that we have. Like, there were so many very subtle choices that we could have made that would then have created quite a bit of technical debt or headache later on if we were to say, okay, we've got this offset system, let's figure out how to prove it.
00:29:04.698 - 00:30:04.334, Speaker D: And it's extremely technical to understand why that's the case. But that's actually the crux, right? Because it's so technical, you can't predict this stuff way in advance, right? You can't say, like, oh, well, two quarters from now we're going to go and implement this thing, and hopefully it'll happen to cover all of the assumptions that we baked into our virtual machine. So, yeah, it's something we're always going to do. It's why the arbitrary Dow is self executing and why every time we have a big upgrade or change that, it's not changing the security assumptions. The only changes we make are to progressively move closer towards full decentralization and all of that stuff that we think is really important. And yeah, I think that's one of the reasons why arbitrum is the number one roll up today. If you just look at all the metrics, people have been choosing this over alternatives that don't have the same security assumptions, because it's just a lot of money at stake and a lot of people's assets and stuff.
00:30:04.334 - 00:30:12.510, Speaker D: So very important to get this stuff right and to be able to credibly deliver on that decentralized vision that LT scaling is all about.
00:30:12.580 - 00:31:04.610, Speaker C: So, talking about the, let's say, trust or trade offs that people make when it comes to decentralization security, I want to talk about Da very quickly. You mentioned a bit earlier in the podcast that, like a full roll up post data to Ethereum, right, uses as a DA layer. Obviously, 4844 is coming out, which will improve things quite a bit. There are open questions as to whether that'll be enough, assuming maybe there's some surge in demand and maybe the fees kind of go back up again, at which case maybe some folks will prefer to use something like a celestial. What are your overall thoughts on alt DAs with the context of roll ups? Would arbitram ever use something like this? And what are kind of the different trust assumptions that you're making as soon as you start posting data to another DA layer that's not Ethereum.
00:31:07.270 - 00:32:10.770, Speaker D: Yeah, so there's actually a few. Like we were talking about the arbitrage stack being modular against pseudo availability solutions for the full decentralized, or I shouldn't say really decentralized for the full security point along the trade off curve. Posted data to Ethereum is the absolute right. Like the idea is then that anyone who has an Ethereum node and who can participate in an arbitrary, fraud proof toned protocol, they are able with Ethereum alone to figure out what the inputs are to the system. And when doing a fraud proof, you have to actually know what those inputs are. So it's very important in whatever way you set up the arbitrum stack that it's possible for those who want to perform fraud proofs to be able to actually access the data necessary to construct them. So Ethereum is the obvious choice if security is number one, and that's why arbitrum one is using Ethereum directly and doesn't use another solution.
00:32:10.770 - 00:33:48.998, Speaker D: But it's not the only way that you can set things up. Previously, if we think of what technologies have existed in the past, the alternative to this, to save from posting all of that data to Ethereum, might be to maybe you post a commitment to it and you kind of run a side chain on the side, and you use some kind of majority consensus algorithm to say what the next update should be and all of that. But what's really cool is there actually exists a security point in between these two extremes. So on one end you have like a side chain where things are not really secured by Ethereum, and then you have on the other side, the actual full fraud proof, optimistic roll up construction where it's all Ethereum, right? So it turns out that it's possible, using what's called the arbitram, anytrust technology, to create a role where the data is stored somewhere else. And the idea being this, you can have something like a data availability service, it could be on celestial, it could just be the one that we've actually written that arbitrary nova uses just the point is to have a set of nodes, and so long as an honest minority of them is willing to provide the data, you're able to secure that roll up, or you're able to secure that chain. And this is actually very nuanced, but it's very important because it dramatically increases the security versus something like a side chain. While and therefore still maintains a lot of the security implications that we would want in these kinds of technologies and how it kind of works is this.
00:33:48.998 - 00:34:45.590, Speaker D: So the idea is this, if you have like in data availability nodes out there providing data as a service, so long as in the arbitrum Nova case, this is how we've configured the parameter. So long as two of them at least are honest, it will always be possible to perform fraud proofs. And that's important, right? We're saying two of n. So if there's n data availability nodes in this, in this service, so long as two of them are honest, which is a minority, right. For insufficiently large, you'll be able to actually construct the data. If it turns out that only one of them is honest or less than that, the security assumptions change a little bit in certain circumstances. You instead fall back to roll up mode, where you post the data to Ethereum directly, which means things get a little more expensive for users because the data is actually on Ethereum.
00:34:45.590 - 00:35:38.566, Speaker D: The only scenario where the reason why I talk about there being a security trade off is the following. If 100% of the nodes, or n minus one of the nodes. So if only one is honest, it's possible for them to collude together to just withhold the data and therefore not allow people to actually perform fraud proofs. And that is a security change, right. That is not the exact same as a roll up where anyone, right, one of, in, so long as there's one person out there that's honest, they're able to read the l one ethereum state and then perform their fraud proofing. It is a little different, right, because you have these nodes that are not Ethereum, right, that are also not just general validators, these are data availability committee service providers. But still, the point is that this is a much better trust assumption than just a side chain, right, where it's like.
00:35:38.566 - 00:36:16.622, Speaker D: So you were going to need like two thirds honesty or something like this. So it's very subtle. But the idea is that for ultra, ultra low fee use cases where primarily, by the way, before 4844, because that's going to change the picture a little bit. But for those use cases like gaming or whatever, where data is just too expensive to make that marginal increase in security worth it, we've made this construction. And what's cool is now it's not just a model that's on top of the custom data availability service that we've written. You can actually do it on top of your favorite one, right? Like celestial or what have. So those are the trade offs.
00:36:16.622 - 00:36:26.600, Speaker D: It's a nuanced technical decision. But the cool point is that using these technologies, we can have a much safer experience than like a side chain or what have you.
00:36:27.130 - 00:36:58.180, Speaker A: Yeah, I appreciate the thought that has clearly gone into how the arbitrum framework allows you to build with these different layers. I want to jam on the idea. So you mentioned 4844 there. This is an Ethereum upgrade coming that will create blobs for Ethereum blocks and is expected to reduce the cost of posting DA to Ethereum by roughly three to five times. Still TBD on how that looks in production, of course, but that's the best estimate as far as I'm concerned. And please jump in if that's an incorrect number there.
00:36:59.430 - 00:37:10.630, Speaker B: No, I just find it so funny that people are spending so much energy. I'm like, just wait a month. It's just like the topic de jour of like, let's estimate it. And I'm like, I don't know, I'm just going to see it come March.
00:37:10.970 - 00:37:17.702, Speaker A: Hey, the crypto's use case is speculation, and Ethereum upgrades don't get a pass on that one.
00:37:17.756 - 00:37:18.600, Speaker B: Fair enough.
00:37:19.370 - 00:38:03.638, Speaker A: But yeah, so basically where I'm going with this is 4844 will reduce fees. But if you look at something like Celestio, which is live and in production today and being used by a number of roll ups, somewhere on the order of about ten to 15 active in production. We have Eigen da or eigen layers, data availability offering coming in the very nearish future. Take that for what it's worth. Then you have things like near which are trying to kind of lean into this DA narrative as well. All of those options that I just mentioned are either significantly cheaper than Ethereum today or expected to be if they haven't launched yet. But on the order of about celestial is about a 99% reduction in Ethereum main net today, and it will still be an order of a magnitude cheaper than what's expected from 4844.
00:38:03.638 - 00:38:15.370, Speaker A: So how do you as the core contributors to arbitrum, think about the trade off of offering users lower fees because the cutting DA cost ultimately means cheaper transactions.
00:38:16.110 - 00:39:07.226, Speaker D: Yeah, it's actually a very important question. So like we previously discussed in technical detail, like there is a slight security trade off. You can make to get a huge reduction in fees. What this just means with 4844 is that going with roll up mode is actually going to be even more competitive, right, with these less secure solutions. So what that means then is with 4844 live, the trade off between arbitrum with full posting data to Ethereum versus other solutions, it's just going to be less valuable to make that trade off in terms of security. Now, some use cases are so price sensitive that that's still really worth it. It might be the case that you need fractions of, fractions of cents and stuff, and so it's vital to use some other data provider instead of Ethereum itself.
00:39:07.226 - 00:39:59.706, Speaker D: But the point is that this is the kind of decision making process that is up to the chain, and I think both are pretty reasonable. It's so much better, right, than some kind of side chain scenario. But in terms of. Like, to answer your question, too, in terms of how we think about these trade offs, the fact that we're so security minded here in terms of the choices we're making, kind of shows where our values are in it, right. To us, it is very, very important to cut fees. Right. It's why we research technologies like stylus, which are providing order of magnitude improvements for a lot of compute use cases and stuff, but never without actually trading off too much security or any if it's possible, right? So there's things that Ethereum could have done.
00:39:59.706 - 00:40:57.534, Speaker D: It could have made the amount of data that's allowed to be posted much, much larger. And I guess this actually would be worth talking on. Why is it the case that people can't predict what the reduction is going to be in terms of fees? It's because it's a market, right? Like Ethereum has only so much capacity for posting blobs, blobs being the units of operation for actually doing this data stuff, but there's only so much capacity for it. And that means then that, based on the demand and that capacity, which you can think of as kind of like a supply curve, the two of them together determine what the market price is for that data. Well, if Ethereum were to just like ten x or 100 x, the amount of data, right. Well, okay, now all of a sudden, fees are going to go way down because the supply will be higher, and if the demand is the same or similar, well, you should expect, right, like that the market price is going to fall. But ethereum chose a very conservative amount of data that they're letting through.
00:40:57.534 - 00:41:47.438, Speaker D: And I think this is very reasonable, right. It's important that nodes be cheap to operate, and that the accessibility of actually participating in these ecosystems is as low of a barrier of entry as possible. And so Ethereum chose a really low constant for it. I still think it's going to be extremely amazing to see the fee reduction that we get from it. But there is talk of increasing that amount as well. And what we'll just need to see is over the coming months, like how well does 4844 perform and lower fees? And as we, I mean, don't get me wrong, so much testing has already been done on testnets and all of this, so it's not like we're just figuring out in real time how well the system works. But the point is we'll see what the market looks like, and then the Ethereum community, in a decentralized manner, may choose to adjust how much data is allowed to go through.
00:41:47.438 - 00:42:28.620, Speaker D: So it's nuanced, right? It's economic, it's got all those factors in there. But if it turns out that Ethereum is just a little too, that it targets just a little too much security and decentralization, it may make sense for certain chains, certain orbit chains, perhaps, to choose any of the data availability solutions that you've discussed for their marginal improvements in terms of fees. So yeah, that's kind of how I see it. But I think both are very reasonable approaches for any chain that someone's making. The only thing that I wouldn't do is a side chain, which is why that's not how the arbitrum tech stack works.
00:42:30.990 - 00:43:14.026, Speaker B: Anecdotally, by the way, the way any trust came around was it turned out that for certain projects, primarily like social products, projects like Reddit, this came up in the context of Reddit, which was one of the initial users of arbitrary many trust as well as games. Even if you're 95% cheaper than Ethereum, it just was too expensive. And so people would ask me, why did you create any trust? It's like a lesser security model. And the answer was, because you have to be both principled and also pragmatic. And I said, when I would speak to people, I would speak to game developers, I would speak to social app developers. They weren't saying, okay, if Steven says, so, I guess I'm going to go on Ethereum, or I guess I'm going to go on arbitrage one. That's what Steven says.
00:43:14.026 - 00:43:42.938, Speaker B: They were saying, well, this doesn't work for me, and I'm going to spend a leave to some other ecosystem, like a side chain, like Rachel said. And they'll have much worse security. So our question was, can we take our technology stack, parameterize it in a way such that they'll still have a really good deal of security? It'll be a lot better than the alternative they're going to go to and still be able to leverage a lot of that security. Answer is yes. And that's where antitrust came in. So it wasn't like it was our decision. Like, oh, we're pushing people away from rollups.
00:43:42.938 - 00:44:13.340, Speaker B: No, we never suggested that DeFi moved away from roll ups, because the price point there for even moderate trades makes sense, and even moderate sized financial transactions makes sense, because if you're doing even, like a $10 transaction, your fee is a couple of cents, that's fine. That being said, if you're a game and a couple of cents fees doesn't work for you, you're not going to say, I'll go there because your business won't work. And our goal was, how can we cater to these people and give them a much better option than the alternative that they are otherwise going to choose?
00:44:14.350 - 00:44:48.002, Speaker D: That's actually really important, is like that philosophically, of meeting users where they're at. If there's an application that's only possible at a certain fee rate, we need to provide the most secure technologies that we can to make that stuff more viable and possible. It's the same reason why with Stylus, that we've introduced support for extra programming languages. Right? Like developers out there don't know solidity. Or actually, there's a funny stat on this. There's about 20,000 solidity devs out there. Meanwhile, there's like 12 million C and C plus plus devs.
00:44:48.002 - 00:45:49.466, Speaker D: And so when you think about it, there's quite a barrier to entry into web3 if somebody just wants to use solidity or what have you. And there are solutions to using other languages, like Ralph's non Salana or other networks or what have you. But if you want to actually tap into the liquidity of arbitram or be in the Ethereum space and have your adapt written in solidity, like talk to another written in rust, the thing we're building right here makes that most possible. But in terms of the value, the reason I brought it up is that if there's a use case and it requires a certain fee level, we want to provide the best technology that could plug in at that spot. If there's a really popular game that has components written in a cool language like C plus plus, we want to provide the tooling and infrastructure that they would be able to actually go and build on top of our technologies without these huge hurdles. And so that's kind of the way to see it. And at the same time, Ethereum is making improvements and 44 is coming on.
00:45:49.466 - 00:46:10.260, Speaker D: And it may be the case that sometimes it'll make sense to instead say, actually, look, it looks like the more security is worth the amount of cost increase, because the amount of cost increase went way down. Right. But it's just up to the application, it's up to user preferences and the security assumptions people are willing to make.
00:46:12.310 - 00:46:50.800, Speaker C: I want to maybe shift gears a bit and talk about sequencers. So I've recently been interested in the concept of base roll ups, where the L1 kind of does a sequencing as opposed to the sequencer on the roll up. I'm curious, I've seen some disagreements on CT about this. Do sequencers actually need to be decentralized? Right. Does that really matter? Some people say yes. Some people say actually, it's not necessarily or necessary. Where do you guys fall on the spectrum here? What do you think about decentralizing sequencers and just your general overall thoughts around maybe based roll ups as well?
00:46:51.170 - 00:47:09.206, Speaker B: Yeah. So another term that didn't exist in 2018. But if you look at the initial arbitrage paper, it was a based roll up. There was no sequencer. The sequencing was done by the L1 inbox. I don't know if that's the idea that sort of reemerged. But actually, again, you can look at the published paper, and this was what you call today a based roll up.
00:47:09.206 - 00:47:39.450, Speaker B: So the sequencer only came into the arbitram technology stack, post paper, post company when we were building. That's just one historical note of interest, which I think a lot of people don't realize. I'll say something general, and then maybe I'll move over to Rachel. She has more technical and specific comments, but I think that it really depends. People mean different things when they say centralized sequencer. Back to our fraud proof conversation. If you don't have fraud proofs live, then the sequencer becomes a dictator.
00:47:39.450 - 00:48:10.738, Speaker B: Right? Because a sequencer can do things like take money out of your wallet, because whatever it posts, those state roots are just fact accepted. There's no way to challenge the sequencer. It can post bad transactions, it can do all sorts of nefarious things. And that's a very big problem in arbitrage today. The sequencer is minimally trusted. It can't post bad state routes, because if it tries to, it doesn't make sense, not even the one that tries to, but the validators are the one that keep it honest and make sure that those would get challenged and the right thing would happen. So the sequencer can't touch user funds.
00:48:10.738 - 00:48:51.746, Speaker B: In fact, the arbitrage sequencer is so trust minimized in most ways that it's not even trusted to give you the L1 gas price, it has to get that from on chain. And the reason is because if it can, it can basically just say, hey, the price went way up and just sort of artificially changed things. So we've tried to, in its design, minimize trust in the sequencer. Now the one place where the sequencer is still centralized and trusted is exactly that sequencer sequencing, the ordering of transactions. And that's the place where sequencing still needs to be decentralized. But I'm not trying to minimize that problem, and we're actually working on that. We're working together with espresso on building out decentralized sequencing solutions.
00:48:51.746 - 00:49:26.610, Speaker B: We could talk a lot more about that. I'm not trying to say that's not an important problem, but what I am trying to say is people, I think, often assume the former because there are roll up stacks out there that are completely centralized. So they think if you have a centralized sequencer, it means you have this party that can do all sorts of bad things. They don't think that, oh, everything cannot be done by that party. The only thing they can do is reorder transactions or censor transactions now. So let's just get into that for a second. So what can a centralized sequencer in arbitrarium technology stack that has decentralized validation do? Well, they can choose the ordering of transaction and manipulate them.
00:49:26.610 - 00:50:08.798, Speaker B: But very importantly is you do have an on chain option. So if the sequencer is trying to censor you long term, not real time censorship, that it can do because it can delay you. But if it's trying to actually censor you long term, it can't do that because you can go ahead and post your transaction on chain and the sequencer needs to include that. That's one thing to notice. So what we're really talking about is causing delays and also reordering transactions or ordering them according to its will. So if you think about that, it's not too worse than any other ethereum, any other blockchain today, where the current block producer has the ability to choose transactions and to order transactions in its blocks as well. It's a little bit worse because that's typically for blocks at a time and it rotates, whereas here you have a party that has a long term control.
00:50:08.798 - 00:50:37.618, Speaker B: So I'm not saying it's exactly the same, but I think reframing that is important. We're doing a lot of work to decentralize that. But actually, I'll say there's not even consensus in the community what it means to decentralize the sequencing, because there's not consensus on exactly what the correct policy is. You can have first come, first served, centralized or decentralized. You could have, on the other hand, the full out auction, where you just sort of auction out the ordering. Whoever pays most gets ordered first. You can do that centralized or decentralized.
00:50:37.618 - 00:51:09.694, Speaker B: And there are very two different objectives here. On the first one, when you're talking about first come, first serve, when you say decentralized, you're thinking about some moral quality of, I believe that Shay should have some fairness property guaranteed. In the second one, you're saying, I don't really care about the fairness property, I just want it decentralized. And therefore, then the chain is getting more profit from this. So there's not even exact consensus on what it means to decentralize what the objective is. In our case, what we're pushing is something called time boost, which basically is as a policy, by the way. But again, time boost can be centralized or decentralized.
00:51:09.694 - 00:51:53.114, Speaker B: The policy that we like is called time boost, which has a sweet spot of one not allowing front running on the chains, but also allowing small priority gains auctions for back running. So the idea is you can get a little priority by paying for it if you want to get a transaction in sooner than others, but you can't see the mempool, you can't know what you're getting ahead of. And also, number three, the core tenant is not degrading the typical user experience. So a user just wants to get their transaction in and just wants to mint that NFT or execute that trade. They're not going to have too much delay, they're not going to have to wait perpetually. They'll have a bound, a very tight bound of delay that they'll get. But again, that's completely orthogonal to centralized or decentralized.
00:51:53.114 - 00:52:21.526, Speaker B: So, zooming out, I guess what I'm trying to say is, I think people often think of centralized validation when they say centralized sequencers. And to be fair, there's good reason why people think that, because if you look at our competitors, they have centralized validation and centralized sequencers, and there is no validation, so they just lump them together in the arbitrage stack. I think a lot of people's core concerns of, like, oh, this is terrible. No, that's not true. It's decentralized validation that takes care of that. The sequencer can't do any of those nefarious things. Yes, it can reorder transactions.
00:52:21.526 - 00:52:48.354, Speaker B: Yes. That's not the best thing in the world. And therefore, we are working together with espresso to build decentralized versions of validation. Decentralized time boost, for example, like, taking this policy and build a decentralized version. And that's, I think, very important to say, okay, you don't have to trust a centralized sequencer, not preorder, not to censor for short periods of time. You actually have a guarantee, a decentralized guarantee of that. But again, I think a lot of people don't realize that, okay, we're not talking about this.
00:52:48.354 - 00:52:49.540, Speaker B: We're talking about this.
00:52:50.790 - 00:52:52.900, Speaker D: Yeah. And to expand on that.
00:52:53.910 - 00:52:54.660, Speaker B: Yeah.
00:52:55.030 - 00:53:22.758, Speaker D: There's so much confusion because people don't understand the role of the sequencer. As Stephen pointed people, most of the time, when I've heard someone say, I think it'd be important to decentralize the sequencer, they think what we mean is, like, validation or something. Right. But I think a really important thing to just realize on a technical level is the sequencer. In the arbitram model, this is not true of other chains. Right. But in the arbitrary model, the sequencer orders inputs.
00:53:22.758 - 00:53:44.946, Speaker D: Right. It doesn't produce outputs. It doesn't say, like, the state route on arbitrum is now this. It doesn't have that kind of edict where it's able to just say, the balance in your account is that, or you signed this transaction. It can't do these kinds of things. And as Stephen pointed out, it can't even know what the L1 gas price. Or rather, it can't lie about the L1 gas price.
00:53:44.946 - 00:54:39.730, Speaker D: And that's a huge difference compared to other chains, where the secret server can kind of just make up whatever value it wants. And even if there's some bounds, the point there being we've really tried to make sure that the sequencer is as minimal of a layer in this process as it could be. And it's why, technically, like, thinking about the technical stuff on chain, there's actually two inboxes. In the arbitrage model, there's an inbox where the sequencer is posting its sequence of transactions, but then there's also the delayed inbox, and that's on Ethereum. And so if you're being temporarily censored, from posting, or the sequencer won't sequence your transactions or whatever. You can go straight to Ethereum and say, okay, here's my transaction, run this in arbitram. And what's cool is after a little bit of a delay, the sequencer will eventually be forced to pick that up.
00:54:39.730 - 00:55:15.300, Speaker D: And when I say be forced to pick that up, I mean, in terms of smart contracts, the point is that like nodes in the network that are reading the input, see that in the delayed inbox? In the order of transactions conferred by that user force, including that transaction, it is called, and sequencer does the inputs, validators produce the outputs. And that's the separation here. So there's a separation of concerns now in terms of how important it is for us, even though it is so minimal. We are decentralization, Maxis. Right? Like, our whole goal is that every component would be decentralized. It's why the arbitrum Dow is self executing, even. Right.
00:55:15.300 - 00:55:44.700, Speaker D: We actually have an on chain process for voting for upgrades that takes effect on a code level. It's not just we all promise that something that people vote on in snapshot becomes what the chain is running. Right. It actually is decentralized on a smart contract level. And we want that 100% of every component of arbitram would be like that. And so, yeah, we definitely need to decentralize the sequencer. We think it's really important.
00:55:44.700 - 00:56:04.750, Speaker D: It's more important for other people where the sequencer does more powerful things. Right. But nevertheless, if there's even one component that's a bit centralized or more centralized, 100% needs to be decentralized. So, yeah, that's why the emphasis on decentralized sequencing in our work with espresso.
00:56:06.610 - 00:56:40.780, Speaker C: Cool. Well, I just have one question left. I'm just personally curious. I know we're over time. There's a lot of talk about the future of kind of the modular roadmap, and maybe one realization of that vision is there's hundreds, maybe thousands of roll ups, and there's a lot of cross chain interoperability and aggregation and all this stuff and abstraction. And then there's kind of maybe a bit more traditional view, which is like, okay, maybe like two or three roll ups really dominate everything. Right.
00:56:40.780 - 00:56:48.106, Speaker C: What is your personal beliefs on this? Which do you think is more likely to happen, and which do you think would be better for Ethereum?
00:56:48.218 - 00:58:05.330, Speaker D: I really like the roll up centric roadmap. One reason is just you have independent teams innovating, right? So it's not like there's one core dev group that kind of makes all the decisions on what it means to scale the network, right? There's us working on all this waSM technology where we're trying to provide all these new programming languages and the scaling that arbitram and the decentralization entailed with it. We have our model for it, and it's an optimistic roll up in all of the stuff that we discussed in today's episode. But other people have different visions, right? Some people want to go the ZK route and like Steven said, not to preclude us from ever one know changing to whatever the best technology is, even though we maintain that right now, the best one is optimistic. Point is, people can disagree with us and they can actually go and scale Ethereum in their own way and the market can figure out over time what the best way is. And I think that's really important to the decentralization of a large ecosystem like Ethereum, that there would be the opportunity for anyone to spin up a roll up and say, here's how I think it should work. So it may be the case that in the long run there's like two or three really solid designs that tend to dominate.
00:58:05.330 - 00:58:31.680, Speaker D: It could be the case that there's a lot of small roll ups, right. Especially as app chains and use cases in that kind of world become more popular. But the point is that it's open, it's permissionless, people can build on top of ethereum and scale it. And yeah, we're really happy that arbitrum exists and is right now the number one. But we look forward to all the innovation that comes from this market.
00:58:33.890 - 00:58:59.094, Speaker B: Yeah, and I totally agree with all that. Just to add, I guess slightly as well, is an analogy I've used in the past here is like to TV channels. I know it's a dated analogy, but the idea is that I do think there's going to have to be some consolidation. Right? So would it make sense? On the one hand, you can't have one TV channel for everything. Obviously you need more than that. It doesn't make sense. On the other hand though, for every TV program to become its own channel, it doesn't make sense either.
00:58:59.094 - 00:59:24.478, Speaker B: You'll have most of the day no programming. Everyone will have to negotiate their own distribution deals, their own advertisement deals. It would be a nightmare. And I think one thing that we are seeing emerging, particularly the arbitra morbid stack, is themed chains. So not necessarily every game has their own chain, but game distribution platforms having their own chain. And there might be a few of them right there might be a few cable news channels, but they're all themed and you have a destination. It's great because your users are there.
00:59:24.478 - 00:59:50.950, Speaker B: There's discoverability, they're on the same network, there's ease of moving over, there's liquidity, there's just a community that builds there. But I do think that it will be sort of almost like a self sharded vision. So you'll have your gaming focused chains. You'll have your NFT focused chains. Not to say there will be no general purpose chains, but to this extent there'll be many. I think there will have to be consolidated around a vertical rather than every application on its own. And there will be some gray area.
00:59:50.950 - 01:00:13.102, Speaker B: Right. You can have a TV show that's a cartoon about nature that could go on National Geographic and it could go on the cartoon network, and it's sort of up to you. And you might have ones that you're surprising and you'd expect them to go elsewhere because it's all sort of self chosen. But the idea is that I do think there will be consolidation around particular verticals. And that makes a lot of sense because there will be good bridging. There is good bridging. Bridging will get better.
01:00:13.102 - 01:00:39.414, Speaker B: Users will be able to jump back and forth. But for a user that's like primarily a gamer, it's great for them to be in one or two or three gaming chains, and that's where they can tend their focus. Sure, they might want to eventually bridge over and do a D five transaction, that's fine. Um, but also when it comes to paying security, because that's the other aspect here, which is you sort of paid for shared security of the applications in your chain. If I'm a gaming user, I don't really care about the DeFi applications. I don't necessarily need to pay for them. And I'm never going to use that app.
01:00:39.414 - 01:01:23.640, Speaker B: And why am I competing with you for blockspace? I'm just going to get frustrated because there's a big NFT mint on this chain and I just want to do my trade. And why is everything more expensive now? So I think there's a lot of benefits of this, of this sort of specialization and consolidation, and that would be my guess. So I think it's probably, to be specific, many more than three. But I don't think there are going to be thousands of large roll ups. There might be these specialized, short lived things, but I think there will probably be tens or so of very specialized per application roll ups. And I think you'll have your general purpose, high liquidity chains like arbitrage one will lead you the way and dominated the market as well.
01:01:24.490 - 01:02:04.894, Speaker A: Yeah, that makes sense to me. And as a closing question here, just because you kind of alluded to it there, you mentioned bridging. So one way to think about this is like Amazon Stripe Shopify. All of these consumer checkout experts have put thousands and thousands of resources and hours of work into analyzing the checkout flow, if you will, of what a user does. One extra screen, one extra second of load time, one extra process flow, these all kill conversion. And there's a lot of great data supporting that. If you think about a user that needs to move between two different chains, there is that extra step of you have to bridge.
01:02:04.894 - 01:02:52.782, Speaker A: And it does take time to get that transaction completed. And the other piece here is the bridge transaction itself is not like the user's end goal, right? If they want to move from chain A to chain B, it's to perform some activity on chain B that doesn't exist on chain A. I'm just curious to get your perspective on the zk side of this, because there is some indication that ZK will enable this more of a richer bridging solution, where if you have the same proving circuits and you have the same shared bridge contract, you can move assets between two different chains that are leveraging both of those same pieces of technology. Is that something that you guys have thought deeply about at arbitram, or are you still kind of thinking that that's just the potential and evolution of this? And again, your previous comments are like, we'll use the best technology once it comes to maybe it could get a little more battle tested.
01:02:52.926 - 01:03:39.282, Speaker B: So that for sure, I'm going to say some things that maybe are a bit like negative on that, on some of the state of those things today now, but that's not negative fundamentally. And if there is a zk based bridging solution, or a bridging solution based on any other technology, that's clearly better than what we have today. I would like that. And I would say, hey, how can we build that? How can the arbitrary community adopt that? That would be at least my personal viewpoint. But I think one thing that a lot of these ZK solutions sort of talk around and wave their hands around is the timing for these things to come. And there are two things that I'll mention, timing. One of them is fundamental and one of them is not fundamental, but they're both there today.
01:03:39.282 - 01:04:23.114, Speaker B: The not fundamental one is a time to generate these zk proofs, right? So a lot of people like to talk about this idea, these designs that assume that every transaction comes with an attached zk proof. And look, you can just send this chain, that chain, and it knows instantly everything's instant because the chains are just in real time proving against each other in reality. And teams have come a long way on this and they'll probably continue. That's why I say this is not the fundamental problem, but it's the reality. Today, chains take minutes to hours to day if you look at the live ZK roll ups today, until they submit and confirm proofs. And that's the reality. And the other thing to say is, if you're like a user of these chain, it's really a binary thing, there's instant and there's not instant.
01:04:23.114 - 01:04:50.774, Speaker B: And what I mean by that is if I tell you can come back in an hour first, come back in seven days, or you can come back in a day or seven days, that's a lot better. But you don't want to wait an hour. So you're probably going to anyway need a liquidity bridging solution like hop, like connect, like a centralized exchange. You're probably going to bridge that gap, to use the pun anyway, and you're going to use something else and you need those solutions. So in the case where you're not instant, yes, a day is better than seven days. Yes, an hour is better than seven days. I'm not going to argue with you on that, but you're probably still going.
01:04:50.774 - 01:05:20.734, Speaker B: The real time users, the traders, the funds are in and out of their wallets well before the hour came. Well before the seven days came. And the second one though, which actually is fundamental, is the settlement time of Ethereum comes into play here. So even if you had your instant zk proofs, you need to sort of put these transactions on chain, you need to commit to what are the transactions on the chain in this chain? What are the transactions in that chain? Because the chain can reorg. Right, the chain can, I can tell you. Hey, chain B, look, these are the transactions of chain A. And oops, actually we reordered that transaction.
01:05:20.734 - 01:06:05.380, Speaker B: That transaction is gone. We have a different transaction that's bought or reordered. And the problem now is the fundamental one is it takes Ethereum twelve to 17 minutes or so to get to finality, and that's just a fact, and that's not going anywhere. So even if you have everything else that you can control, instant, while consensus is not instant and won't be instant, you have to wait that period of time. And that's something which I think doesn't get talked about enough. And people just assume that everything's going to zero and everything's instant. And again, this comes back to my initial point, which is the instant crowd is going to want a solution, and those solutions are going to look a lot like optimistic roll up bridging today.
01:06:08.390 - 01:06:19.382, Speaker A: Awesome. I love that perspective. I appreciate that. Well, Rachel, Stephen, this has been a fantastic conversation. Appreciate all you're doing to push forward the crypto ecosystem as a whole and doing great work at Arbitrum. But thanks again for joining us.
01:06:19.436 - 01:06:19.714, Speaker C: Cheers.
01:06:19.762 - 01:06:20.740, Speaker A: Have a great rest of your day, guys.
