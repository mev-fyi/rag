00:00:00.640 - 00:00:50.970, Speaker A: So today we're going to talk about Zeth, which is a type zero ZKE VM built by Risc Zero. So what is Zeth? Zeth is a fully open source Ethereum block proofer. And what this means is you can prove all the transactions inside of an Ethereum block, as well as the block construction itself. It supports all EVM opcodes, and it's built in 100% rust on top of the RisC zero Zkvmdev. So this allows you to ZK proof any sort of rust execution when it comes to performance and cost. Right now it's about twelve minutes for a proof and about $20 per proof, but we think there's a lot of good improvements by the end of the year. And all of this is enabled by the Rissero continuation system, which allows us to parallelize the proof generation across hundreds of GPU's.
00:00:50.970 - 00:01:39.146, Speaker A: So what does building a block in rust look like? Well, we can take advantage of a lot of the resources already in the Ethereum rust ecosystem. Our EVM allows us to easily emulate EVM and all transactions in rust. On top of our ZKVM, ethers gives us a good way to do JSON RPC interface, which allows us to take input data from alchemy. For example, alloy gives us existing implementations of Ethereum primitives and solutions validity types. And for our catch at caching, we just use the SHA three crate and we use that implementation. We don't need to build it ourselves. Something else that's pretty unique is instead of using the traditional NPT for Ethereum, which has over 250 million unique addresses, we build a partial Merkle Patricia tree.
00:01:39.146 - 00:02:41.978, Speaker A: To do this, we look at the block we're proving and we look at the transactions inside of that block, and we see what are the relevant addresses and accounts inside that block, and build a partial MBT of just that data. So this allows us to do significantly less Merkle inclusion proofs, really improving our performance. So if you put this all together, you take this partial MPT and then you feed it into the zest blockbuilder. So this verifies the partial MPT root, matches the parent blocks state root, verifies the hash chain of the predecessor blocks, applies all the EVM transactions and updates the partial MPT, and then uses the partial NPT as new root hash as a state root for the new block. So what's really key about Zeath, and what's really great about it, is how upgradable and extensible it is. Everything is built in rust traditionally ZK programs are a bunch of polynomials or really complicated dsls. But because it's native rust, you have support for native rust crates.
00:02:41.978 - 00:03:30.280, Speaker A: And what's really amazing here is Zeth was built in two months by a team of three amazing engineers. Traditionally, ZkevM has taken half a billion dollars of vc funding in three four years of developments. We did it in like 1000th the time. Also, as ReVM and alloy are updated, Zeath will easily support any of the new eips and EVM opcodes. And additionally, because it's built in rust, you can implement novel sequencing, larger blocks, advanced primitives, by going into the rust code base. It's about 6000 lines of code and change around parameters, implement new opcodes, et cetera. So when it comes to the future plans of Zeath, we think Zeth is a framework with limitless potential.
00:03:30.280 - 00:04:17.956, Speaker A: We really want developers to go play around with it, test it out, and build innovative projects on top of it. The easiest solution is you can build your own ZkevM rollup by inserting Zeath into a blockchain stack. Additionally, you can modify Zeth to support more novel consensus or block construction. And we're doing this right now for our op fraud proof system, where we're adding some l two to l one derivation, as well as taking some hints from op ref to basically zkify the op stack. There's also potential to add a completely different vm, such as Solana VM or MoVM. Take advantage of execution level parallelization and throw that on top of our ZK VM all in rust. This is also a great basis for ZK bridging historic state proofs.
00:04:17.956 - 00:05:04.790, Speaker A: And what I'm personally really interested in is the Verge. If you combine Zeth with proof of consensus, you can basically leapfrog the entire timeline that Vitalik introduced and finish the Verge. And what that means is next time, when you're trying to sync with Ethereum, instead of downloading 400gb of blocks, you download a single quantum secure, start proof, verify it, and then you're instantly synced. So we're a lot closer to this than we previously thought, and I find that really exciting. So now I just need to give a shout out to Tim Carsons, Rami Khalil, Wolfgang Wells, who are the core developers behind Zeff, the entire risk zero team, and the many contributors to the Ethereum rust ecosystem. Ill be here. Tim Carsons is here, so were happy to answer any questions in the future.
