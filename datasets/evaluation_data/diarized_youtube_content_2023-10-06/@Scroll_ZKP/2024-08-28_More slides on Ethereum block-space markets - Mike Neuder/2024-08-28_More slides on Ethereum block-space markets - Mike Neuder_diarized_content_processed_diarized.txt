00:00:05.320 - 00:00:31.665, Speaker A: All right, welcome everyone to our protocol symposium session. Today we have Mike Neuter from the Ethereum foundation talking to us about Ethereum Block Space Market. So Mike, the floor is yours. Thanks Dom. Yeah, and thanks Muhammad for the invitation as well. So, yeah, excited to share this work with you guys. This is a actually like really nice timing because I published this article yesterday called Meckinstein.
00:00:31.665 - 00:01:34.705, Speaker A: So I thought I'd use this platform to kind of explain some of the details of that article and also just try and pull things together in a way that, that's useful. So yeah, let's jump in. So kind of before getting into the technical details, I thought it would be worth quickly calling out some of the individuals involved in this research effort. I think especially the block space and like mev, Design space has seen a ton of collaboration and contribution from different folks, so just wanted to shout them out first. Barnaby, who's kind of led the charge really since you know, before the merge, talking about block space and PBS and kind of creating a lot of these frameworks that we use. Julian Thomas, Francesco and many other folks who've been pushing the IL front really hard. Inclusion lists have been another topic that's been discussed for a really long time and it's cool to see that there's like still modern tweaks and new things that we're learning about on that front.
00:01:34.705 - 00:02:23.293, Speaker A: Terence and Potas have been really grinding the PBS work from the core development side. So they're the ones who are actually writing the spec, thinking about how this could be implemented in the clients in Prism specifically, but also working with other core devs. So really appreciate the their work. And lastly wanted to call out Elijah, Max and Mesh, you know, as we were talking about just before the call started or before the reporting I guess, you know, they've been writing about concurrent proposals for a long time and it's cool that design space is getting more air time recently and we're seeing kind of how it pieces together with other proposals. But yeah, these guys have been talking about it for a long time so I'm really glad that it's joining the discourse. So I just moving this thing. Cool.
00:02:23.293 - 00:03:12.345, Speaker A: So yeah, I guess as a quick highlight, high level picture of what we're going to do first we'll go through some of the like design space and, and what we're actually looking for from one of these kind of block construction mechanisms or a set of block construction mechanisms and then we'll kind of compare a few of them and then see how we could potentially stitch them together which is what mein is. It's kind of like a combination of a bunch of different ideas. So, um, yeah, I like to start with these desiderata slides and I almost always refer first to Vitalik's endgame post. I'll just read the quote directly. Block production is centralized. Block validation is trustless and highly decentralized and censorship is still prevented. So yeah, I kind of tried to operationalize this, this sentence into three component parts.
00:03:12.345 - 00:04:06.685, Speaker A: The first is block production is centralized. And you might say like, well, that's not something we're designing for. No, it's definitely not. But it's kind of a reality of the fact that MEV exists and we expect it will continue to exist and will always be rather difficult to extract in like the best way. And kind of the fundamental reasons for this are, you know, you need sophisticated algorithms, you need inventory, potentially like collocation with different entities. And so that, that's kind of a reality of the world we live in and kind of the financial market we're designing. But we can make a design goal out of this by saying we should try and encourage builder competition, right? So rather than just saying like one builder, we're king making as the solo master node of Ethereum, we do want builder competition and we'll kind of go through how different proposals try and facilitate that competition and encourage healthy competition.
00:04:06.685 - 00:05:32.373, Speaker A: The second clause of that sentence says block validation is trustless and highly decentralized. So to operationalize that, I put forth design goal number two, which is limit the value of validator sophistication. And it is worth noting that I kind of asked Vitalik about this quote specifically and he said it's a bit of a misnomer because in block validation historically he was thinking more about just like being able to validate the state, maybe a ZK proof that, that the transactions are valid, these types of things, rather than using validation as kind of a synonym or an, you know, an example of someone participating in Ethereum consensus. But I'm going to, I'm going to kind of use the validator in the beacon chain context to mean someone participating in consensus and someone involved in the block construction pipeline. And we'll see how that kind of role evolves, especially kind of from the perspective of the solo staker from a few of the designs. But the, the point of limiting validator sophistication here is just to say, you know, there's always going to be some advantage and some economies of scale of staking with Coinbase or with Lido or someone who's Kind of like professional job it is to, to run Ethereum validators and to be the best at running Ethereum validators. Like we can't expect home stakers, even from just like a latency perspective from where they're located to compete kind of sent for CENT or GW for G with, with centralized staking providers.
00:05:32.373 - 00:06:09.489, Speaker A: But what we can do is kind of limit the marginal utility of sophisticating a validator so like just making it so that any return on investment for being a very sophisticated validator is low. That's kind of the goal that we're trying to put forward here. Censorship is prevented. To me this is actually the most straightforward one. It's just like if we don't have censorship resistance, if we don't have credibly neutral block space, then the whole kind of crypto experiment I think has, has failed largely. It's like more fintech than anything else. So right, the, the kind of term here is preserving the neutrality of block space.
00:06:09.489 - 00:06:50.354, Speaker A: There's a few different definitions of neutrality. I, I like to think of it mainly as just like transaction inclusion neutrality. So if a transaction in, in the Ethereum case, if a transaction like pays the base fee, has a non zero tip and there's space in the block for the transaction to be placed, then it's placed. Now of course there's kind of different levels of censorship. There's kind of immediate censorship. Like I could delay a transaction for a single block like almost very easily by just buying out the whole block. There's kind of this weaker notion of censorship which is just like some set of builders might ignore a set of transactions, but they'll get in after maybe like 10 slots.
00:06:50.354 - 00:07:34.307, Speaker A: If only 10% of builders are including them, then you're expected 1 in every 10 blocks to contain a set of transactions. And that's kind of like a weaker notion of censorship. And then the term Justin uses here for strong censorship is referring to this situation where blocks are actually actively being forked out. So let's say a transaction lands in a block and the subsequent proposer intentionally like reorgs that block, like builds on a different parent block in order to like make sure that that transaction does not become canonical. That's kind of like the strongest form of censorship. James Prestwich was actually bringing up this idea of another type of censorship, which is you can kind of arbitrarily make transactions revert. But I won't go into details there.
00:07:34.307 - 00:08:32.955, Speaker A: But yeah, I guess the point being censorship is kind of like a nuanced topic, but preserving the neutrality of block space hopefully is a pretty clear design goal. Cool. So with that all said, we can kind of jump into these three proposals. So with each of those design goals, I'm going to kind of highlight one proposal and show how it, how it tries to take action on that design goal. So I call these proposals the building blocks for Meckenstein because we kind of put them together and leverage the fact that each of them is focused on one specific thing to try and take advantage of the synthesis of all of them together. So the first kind of clump, and this is really two proposals that I put into one is Payload Timeliness Committee and Mel Burn. I just abbreviate both of these together as PTC Payload Timeliness Committee is kind of a historical instantiation of a much older idea, which is Proposer Builder separation.
00:08:32.955 - 00:09:13.407, Speaker A: And this very much fits into the model of how Ethereum blocks are built today, which is there's an auction that takes place currently through out of protocol software called MEV Boost. The auction sells the entire block building rights to a set of builders from the proposer. And so this is very much in line with that. We'll kind of go through the details. MEV Burn is a proposal actually from DOM which kind of takes this idea of a committee and uses the committee to enforce the size of the bid that ends up winning an auction. And we'll kind of go through the details there. Oh, and these footnotes here kind of link to the canonical posts for each of these topics.
00:09:13.407 - 00:09:53.475, Speaker A: So again, I'll go through each of them in some level of detail. But if you really want the nitty gritty like I refer you to those posts as the place to look. Execution auctions are a similar idea to the PBS auctions that we kind of see today. But instead of selling a block during the slot itself, the auction takes place kind of before beforehand. And this is a newer, a newer concept that people have been playing with. But the idea of selling a slot instead of a block, meaning you, you just buy the rights to produce a block rather than committing to the specific block contents, is the important distinction there. And we'll go through that.
00:09:53.475 - 00:10:35.535, Speaker A: And lastly, the third piece that, that we'll kind of use as, as part of our building blocks or part of our Alphabet soup, is fossil, which is an abbreviation for fork choice Enforced Inclusion lists. This is a relatively new proposal, but it pulls together a lot of existing ideas as far as allowing multiple people to participate in the block construction process and using a committee to enforce the inclusion list. So yeah, we'll Dive into each of those in some detail and then try and stitch them together. And that's kind of where we're going with this talk. Cool. So starting with the PTC and MEV burn and I, I kind of subtitled this slide. If it ain't broke, don't fix it.
00:10:35.535 - 00:11:17.921, Speaker A: Because again, this concept of proposal builder separation is a very old one from before the merge, and it's what we have today. So it's, it's very familiar to most people. The only difference here is PTC and MEV burn would be enshrined in the protocol versus happening outside the protocol, which it does today. So for each of these diagrams, we'll kind of have a cast of characters and then we'll walk through the flow of information and kind of the actions they each have to take during the process of creating the block. So here we have a proposer, we have a set of builders, and then we have a committee. The first step is the builder bidding in the auction. And the bids take the form of these tuples, which is a block header and a bid value.
00:11:17.921 - 00:12:11.049, Speaker A: And it's important to call out the block header portion here because it means that the builders are actually committing to the contents of a block with their bid. So they say, like, here's the header of my execution payload, which is a commitment, like a hash of all the transactions, and here's how much I'm willing to pay to produce this block. And these are sent, these bids are communicated over the network, and as a result, they propagate to the proposer themselves and also to the committee members who are going to be in charge of kind of ensuring that this auction takes place in a transparent and fair way. So the second step is the communication of the winning bid. So this, many of these designs use the same model, which is kind of this commit reveal scheme where the proposer first commits to a winning bid. So they kind of cryptographically sign over the winning bid. Obviously, if they sign multiple bids, that's the equivalent of signing multiple blocks today.
00:12:11.049 - 00:13:18.915, Speaker A: That's like an equivocation penalty and as a result is like slashable and, and all of the kind of crypto economic security applies there. Right? So they, they propagate the winning bid to the builder and to the committee. And one important role that the committee does here is that they enforce that the builder selects a sufficiently high bid according to their view. So how this kind of generally works is the committee says, okay, I'm going to look at my MEM pool and set a deadline and say, if if the bid that the proposer sent me is lower than some threshold, according to my view of the mempool, then I'm going to reject that bid and vote for an empty slot effectively. So this is an interesting mechanism for a few reasons which we'll go through, but I think in, in the context of this slide, it's most useful to talk about it as a mechanism to enforce proposers to actually use the protocol as where they're, you know, sourcing their bids from. So this kind of eliminates the bypass ability because the committee enforces the bid is used and the builders are kind of protected by this fact. You know, the builders say, hey, if I submit a bid and it's the highest bid, it should win and, and the committee helps enforce that.
00:13:18.915 - 00:13:50.683, Speaker A: Step four is the block getting published. So this kind of is the reveal part of the commit reveal. So the proposer commits, the builder reveals. And this is kind of the happy path. Obviously there's, there's some amount of detail here that, that we're glossing over, but the point is that this block gets public, get, gets published. And the kind of last step involved here is the committee enforcing the timeliness of the builder's block. So timeliness in this context matters because the next proposer needs to know which block to build on.
00:13:50.683 - 00:14:11.395, Speaker A: And so there's lots of these fork choice implications around, like if the block was released at this time and it has a certain amount of attestations, like how much weight to assign it in the fork choice rule. Again, we're kind of extracting most of that away and just saying in the happy path, the committee, the builder is going to show up on time and produce the block and the committee is going to be like, happy that they happy to vote for the block as it appeared.
00:14:12.175 - 00:14:13.715, Speaker B: Can I ask a question?
00:14:14.175 - 00:14:15.275, Speaker A: Yeah, sure.
00:14:15.615 - 00:14:17.115, Speaker B: Can you go to step three?
00:14:17.455 - 00:14:18.275, Speaker A: Yep.
00:14:19.855 - 00:14:40.565, Speaker B: Sorry, I didn't understand. Here, like, the committee maintains like a pool of other existing bids that are also like eligible and like that the proposer supposedly didn't select how, like, what prevents someone from griefing by just submitting a bid to the committee but not submitting it to the proposer.
00:14:41.825 - 00:15:07.131, Speaker A: Yeah. So a bid. There's a few things to say here. Firstly, the bid has to come in all these designs. The bid comes with like a promise of a payment and that payment is going to be publicly verifiable. So you can't kind of grief by sending fake high bids because those bids will be accepted and you'll have to pay in terms of sending just to the committee, but not to the proposer. The way this is protected against is the committee doesn't actually enforce that.
00:15:07.131 - 00:15:42.715, Speaker A: The last bid that they see is the one that the proposer selects. They set a deadline like in, in the original proposal that Dom wrote. I think it was like two seconds before the end of the slot. And they say like if the proposer doesn't take a bid that's bigger than the one that I saw two seconds before the slot ended, then I'll enforce the bid as not valid. So this, the idea here is kind of like, okay, the partial synchrony or I guess the synchrony assumption of the network is that like a message will be seen within two seconds. So the committee members, if they're publishing the bids as they see them, assume that if they published the bid and two seconds has elapsed, the proposer had time to see it and sign over it.
00:15:43.335 - 00:15:55.417, Speaker B: Gotcha. So yeah, committee is like sourcing these bids that come in from like yeah, sorry, like where is the, like where are these bids coming from? Like I, I get the time.
00:15:55.481 - 00:16:22.255, Speaker A: This is just part of, this is just part of the gossip. You know there's, there's a global gossip topic that, that the peer to peer network has. Perfect. Yeah, obviously like there is some timeliness considerations here because getting a last look on the bid is going to be important and we'll talk about some of those issues in the analysis section. But yeah, cool, thanks for the question and yeah, happy to take questions during. Also should have some time after if you want to hold on to the questions too. That works.
00:16:22.255 - 00:17:03.231, Speaker A: Right. So a quick analysis of PTC plus map burn. The main thing it does is it solves this in protocol fair exchange problem. So right now the proposer wants to sell to the builder. There's no protocolized way to do this so they have to go through this relay infrastructure and that's kind of trusted and has some centralization concerns. So what PTC does is just says, okay, we're going to expose a way to trust, restlessly enforce this fair exchange using the committee and the committee timeliness and threshold enforcements. So kind of taking a step back and looking at this from the angle of our design goals, we see that primarily it actually is designed around goal number one which is encouraging builder competition.
00:17:03.231 - 00:17:32.030, Speaker A: And there's a few reasons for that. One, it's this just in time auction. So this means that you know, during the slot itself all the builders can compete. And so this means that if one builder has some specific edge during one slot, but on Average is much worse than all the other builders. They can still win that auction because they have the highest bid. There's also this, this MEV burn for, from the bid threshold enforcement. And so this tries to like encourage everyone to actually use the protocol itself.
00:17:32.030 - 00:18:06.453, Speaker A: Right. So there's, there's kind of less ability for people to backchannel because if you backchannel but you don't get the bid to enough of the committee members then someone can just like go through the, the main pipe and, and get the bid enforced. And then the last thing is just permissionless and open bidding. Like as, as Anirud brought up. Like the way to per. To participate in this auction is just to send bids to the proposer and to the committee. Now there's like the exact latency of these bids matters a lot and you know, there's a lot of data on these last few milliseconds or last few hundred milliseconds of a slot being very important to the size of the bid.
00:18:06.453 - 00:18:49.325, Speaker A: And kind of, we will, we'll talk about that. But generally speaking, like any builder should be able to submit a bid as long as they have the capital to pay for it and win the block auction. Now for design goal number two, which is limiting the value of validator sophistication, I say PTC kind of marginally addresses this and I say marginally because there's a few things that contribute to this from the PTC design and there's a few things that kind of count against this. So on the kind of four side it definitely does democratize access to mev. So validators, any validators, including my like home staking setup over in the other room, like I can get access to basically the state of the art MEV searching through this marketplace. And that's. That's great.
00:18:49.325 - 00:19:22.789, Speaker A: Additionally, it smooths out the variance in me in MEV rewards. Meaning you know, just because I, my average MEV block is. Yeah. Basically I don't. Big staking pools don't get the benefit of having like high variance MEV rewards. So this, this tries to make again this kind of return on investment for sophistication of being a validator less. However, on the kind of against validator sophistication side of things, we have that this value in flight problem.
00:19:22.789 - 00:20:11.733, Speaker A: And this is something that, that bar a term that Barnaby coined that I really like which is basically the auction is taking place while the price of the object is changing. Right. So during the slot itself the price, the initial bid might be like 0.1 eth and if something crazy happens on Binance by the end of the slot like 12 seconds later, the block might be worth like 10 ETH. And this means it's very difficult to actually be a fair auctioneer here because you as an auctioneer are trying to maximize your own revenue and maximizing your revenue might involve like sophisticated low latency relationships or just co locating directly with, with the builders. So yeah, the main issue against PTC being like reducing the validator sophistication is just this value in flight problem as I see it. So yeah, and then design goal number three, I put in red.
00:20:11.733 - 00:20:58.931, Speaker A: This doesn't really do anything for the neutrality of Ethereum block space. And the reason for that is we're kind of conceding that the builders, most blocks are going to be built by a small set of builders and those builders have huge amount of autonomy over the transactions that actually end up in blocks, which is kind of how we're defining neutrality of Ethereum block space. Right. So in that regard, and in in particular I want to mention the builders have this property which is they have exclusion discretion, meaning they can look at the set of transactions and as long as a transaction that they remove from their block doesn't make the winning bid go below the second highest bid, they don't care. Right. Or I mean they, they still care. It might cut into their revenue, but if it doesn't meaningfully change how much money they make, they have total discretion to leave those transactions out and they have economic discretion to do so as well.
00:20:58.931 - 00:21:21.357, Speaker A: And this is kind of one of these themes we'll, we'll come back to a few times as we try and stitch all the pieces together. So yeah, this wraps up the PTC analysis. This is kind of the most complicated one. So with this template in place we can kind of hopefully move a little quicker through the next two. Right. So execution auctions are extremely similar. We have kind of a very similar set of actors here.
00:21:21.357 - 00:21:43.917, Speaker A: We have the proposer builders and the committee. The difference here is the auction takes place ahead of time. And this is directly in response to this value in flight problem that I was describing before, which is we want the proposer's job of being the auctioneer to be dumb. Simple. Like they shouldn't have to play timing games, they shouldn't have to co locate everything. They should just see a set of bids and choose the highest one. That should be their job.
00:21:43.917 - 00:22:32.033, Speaker A: And by doing the slot auction ahead of time, that's kind of the primarily the primary advantage of execution auctions over the previous block auctions we described. So let's play it out real quick. The builder bids in this auction here the bids are only a bid value. So instead of saying I will pay this much to build this specific block during this slot, which is kind of the bid structure of the previous auction, this auction bid structure is I'll pay this much to build a future block that I have no idea what the contents will be. And that's kind of it. That's all I'm saying. When I send a bid in this auction again, the proposer does this winning bid kind of commit process and the committee enforces the bid threshold in the exact same way that we described before.
00:22:32.033 - 00:23:31.035, Speaker A: So really to kind of double down on the differences first the talk the auction takes place ahead of time. This 32 number is just, just a power of two that is used in the protocol a lot. One sec, can I get some water? But this number is kind of arbitrary, right? So you could make it one slot before, or you could make it a thousand slots before. This 32 is just a placeholder. And the second bit here is that as a result the bids can't like the bids don't and they can't commit to the block contents because the builders have no idea what transactions are going to be signed in, you know, 32 times 12 seconds to the future, right? So to quickly run down a quick analysis of execution auctions, again they solve this fair exchange problem. The fair exchange is slightly different here in that the auction is selling an object that is just a future slot rather than a current slot. But apart from that, the exact same kind of analysis plays out.
00:23:31.035 - 00:24:33.509, Speaker A: And as I alluded to earlier, the primarily the primary design goal that these execution auctions are aimed at is limiting the value of validator sophistication. And this kind of exactly is downstream of this value and flight problem reduced essentially to zero by removing, by making the auction run a priori. And you know, this is kind of the fundamental thing is the slot doesn't like the slot n +32 value doesn't change dramatically over slot N because everyone, there's not much alpha that changes over the course of that slot. Of course there might be some, some leak of value that that kind of goes later into time. But generally speaking the, the object bid values should, should be like pretty static throughout the course of the auction right now looking at the other design goals, they don't address builder competition at all. And actually I put this in red because they kind of make builder competition worse. And this argument is kind of more formalized in this paper that I footnoted written by Maxim Ales.
00:24:33.509 - 00:25:44.981, Speaker A: But the argument here is that bidding in this auction is, is basically like a bid on how much MEV on average you're able to extract from an arbitrary slot because it's, it's somewhere in the future. And so instead of kind of the best builder at the given moment winning the auction, you have the best average builder winning. And this is potentially very bad, especially in a world where we believe that like maybe one builder could on average produce more valuable blocks than everyone else because then they just win every single time. And again this kind of goes into the details of the paper. But what, what Max and Malesh argue is that as a result these builders who like the, let's just say for, for the sake of example that one builder wins every slot auction now they can still choose to resell and it's, it's going to be in their best interest to resell the, the slot just in time, but they only do so at a premium. And this is kind of like the structure of the argument that, that makes this more concentrated as a builder market than the just in time auction that we have today. And for design goal number three, preserving the neutrality of Ethereum block space.
00:25:44.981 - 00:26:43.489, Speaker A: Again this is the exact same as previously, which is we have a small set of builders, they're going to have kind of total exclusion discretion and they're going to be responsible for the set of transactions that get included and we don't want to rely on them for the neutrality of the protocol. Like that's just kind of fundamentally broken in terms of censorship, resistance, incredible neutrality. Right, okay, last but not, certainly not least and very different flavor of proposal is called fossil. So I put teamwork here because this idea kind of extends and implements this idea of co creation of the block. So getting as many people to participate in the block construction process during each slot rather than having a single builder responsible for the entire contents of the slot. That's kind of the theme of this proposal. Right, so just running through again, this one's going to be pretty quick.
00:26:43.489 - 00:27:24.939, Speaker A: The IL committee publishes their inclusion list to the builder and the testers. Inclusion list, if you're not familiar, is basically a very weak. Well, there's many different forms of it. The, the form I use is basically the list of transactions that are valid at the beginning of a, like at the beginning of a slot. Basically based on the previous blocks post state, these transactions have to be valid and an inclusion list just has the commitment that says if a transaction is in the Inclusion list, then it will be included in a subsequent block. It doesn't say anything about the order at which it's included, it doesn't say anything about if the transaction reverts. It's just if the transaction is valid, you know, it has a nonce and a signature and can pay gas, it gets included kind of full stop.
00:27:24.939 - 00:28:00.315, Speaker A: So that's, that's the commitment that the IL makes. And now the builder constructs a block and effectively what's happening here is the builder takes a bunch of these ils, like maybe they get 90% of like 90 out of 100 IELTS get sent to them. They merge all of them together into one giant. They basically take the union of them to make a giant aggregate inclusion list and then they build a block that conforms to the constraints they're in. So you could think of the aggregate inclusion list almost as like a block template. Now as the builder I still have a lot of discretion. I can put all of the transactions in the inclusion list at the bottom of the block.
00:28:00.315 - 00:28:56.515, Speaker A: I can reorder them, I can front run all of them in transaction if I want, but I have to include them. I don't have this discretionary exclusion power which is the main thing that we're kind of targeting in this proposal. And yeah, as you may have kind of guessed, this enforcement needs to take place and in particular the block validity conditions change which now check that the builder included a sufficient threshold of observed inclusion lists. So very much like the threshold of the bid size from before. The attesters are also listening over the peer to peer network and they're seeing, okay, these inclusion lists are coming in. Now if the builder produces a block that doesn't have enough inclusion lists according to my view, then I'll vote for the block as being invalid. And this is kind of cool because you can put it into the state transition function directly and you know, instead of giving fork choice weight to the block you just say hey, this block is actually invalid.
00:28:56.515 - 00:29:34.585, Speaker A: And from my view I'm going to, I'm going to vote against it. So yeah, this is kind of the, the super high level summary of fossil and just to do a very brief analysis of it, this as you may have guessed, is very targeted at design goal number three, which is increasing the protocol's neutrality by allowing multiple validators to express their preferences in block co creation. So this is kind of a mouthful. But anyway, everyone works together to create a template and that template basically expresses someone's view or kind of an aggregate view of the mem. Pool at a given time. Yep. As I mentioned, this is primarily for preserving the block space neutrality.
00:29:34.585 - 00:30:17.241, Speaker A: And yeah, this, this kind of important thing is that last sentence which just says it constrains the builder's ability to exclude arbitrarily and functionally. I see that as like the most important property that, that it builds for and for. With regards to the other design goals, there's kind of not much that Fossil does in either direction. And this, this diagram kind of elides a little bit of complexity in the fact that it just uses the builder instead of putting the proposer there. Really what happens here is there is some block production process that's taking place kind of outside purview of Fossil. And all Fossil cares about is that the template is enforced. So this builder could actually be a proposer.
00:30:17.241 - 00:30:57.865, Speaker A: They could be running the MEV boost auction. They could be co located with the builder to get, you know, the best bids possible. So there's no real limit limitation of validator sophistication here for design goal number two, kind of working backwards to design goal number one in terms of builder competition, the exact same thing is true. Like this doesn't specifically say anything about, about MEV carrying, you know, the ordering of transactions or MEV carrying transactions, period. It's just saying you just have to include the sum threshold of these IL transactions in your block to to be considered valid. Cool. Okay, so I know that was like maybe slightly painful.
00:30:57.865 - 00:31:20.423, Speaker A: Yeah, sorry, there's kind of no way to get, get around it. But the key observation that we can take away from those three again, we had payload timeliness. That's the just in time block auction. We had execution auctions. That's a slot auction a priori. And then we had the Fossil committee inclusion list thing. And each of them addresses one of our cited design goals, but none addresses all three simultaneously.
00:31:20.423 - 00:32:26.367, Speaker A: Which kind of naturally begs the question, what if we just combine them, right? And that's kind of where this Frankenstein meme comes from. It's like taking a bunch of things and piecing them together. And that's kind of what the rest of the talk will be about how this construction actually works. Now we have one small caveat here, which is you can't directly combine all of these things because the execution auction and the PTC auction are actually selling the same item twice. So what would happen if, if you just put both of those auctions together is the person who wins the first auction effectively becomes a forced seller of the item they bought in the second auction, which kind of means the bids in the first auction don't have economic meaning because anything you bid there is just like, you know, you're going to be a forced seller no matter what later on down the line. So what we can actually do is have the just in time auction be a different item than the a priori auction. And the kind of the default thing or the most intuitive thing to do here is to split the block into two parts so you have a part that you sell just in time.
00:32:26.367 - 00:33:24.953, Speaker A: This is usually what we refer to as like the top of block. And this is kind of the most premium block space, if you will, and then the rest of the block, which is sold kind of in the a priori auction much ahead of time. So now we have auction one during slot N, which sells the block proposing rights for slot N plus 32 conducted by the proposer of slot N, and then auction two, which is taking place during slot N plus 32 and sells the top of block only to the highest bidder in the secondary auction. So again, this, this slide's a lot of words. Maybe it's easier to read than, than kind of grok initially, but the whole point is that now the bids in the second auction, or sorry, the bids in the first auction are effectively buying the right to produce the rest of the block at a slot in the future. And the bids at the just in time auction are for the top of the block of that slot. So yeah, there's a great meme from M, which is I, I'll just read it out.
00:33:24.953 - 00:33:47.325, Speaker A: It's next, kcd. This is your market microstructure, says the guy on the left. Yep. We pour bids into this big pile of auctions, then collect answers on the other side. The guy on the left asks, what if the outcomes are wrong? And the guy on the right says, just add more auctions until they start looking right. So this is like a meme from, I think more from the machine learning space. But it kind of makes sense in this design too, because you're just kind of layering a few auctions on top of each other.
00:33:47.325 - 00:34:28.265, Speaker A: But as we'll see in the subsequent slides, like, there's kind of a method to this madness and that's kind of trying to get at some of these, synthesis of, of these multiple designs and go for multiple design goals together. Right. So I'm just going to run through this super quickly again. This is very dense picture, so maybe it's easier to look at after, but hopefully it's useful in the moment, just in time too. So, right. Very, very briefly, the Slot N proposer auctions off the slot n +32 proposing rights. So now we have kind of this guy on the left selling it to the slot n +32 builder.
00:34:28.265 - 00:35:10.601, Speaker A: And this auction is enforced by the slot and the testers, right? So this is kind of the standard execution auctions model that we described. Second, right now, 32 slots later, before this guy builds their block, before the slot n +32 builder builds their block, the slot n +32IL committee constructs their ILS. So this is again the block co creation process. This is a part of Fossil. And now there's kind of one more step before the Slot N+32 builder can build the full block, which is they have to sell the top of the block to the other builders. So this is the just in time auction. Now like we're at the slot n +32 top of the block is getting auctioned off to potentially different set of builders.
00:35:10.601 - 00:36:02.013, Speaker A: Obviously slot N plus 32 builder could compete in this auction themselves. It's permissionless, it's totally open. Um, but the important thing is that there's a bid threshold enforcement that takes place from the payload timeliness committee from that slot, which is to say the slot n + 3rd32 builder, if they want to build the full block themselves, if they want to build the top of the block and the rest of the block, they have to have the highest bid in the top of the block and they by default own the rest of the block. So they can just build that part themselves. That's step five. Step six is the timeliness for the top of the block for slot n +32 builders. I'm glossing over some details here obviously, but the fact that the top of the block and the rest of the block have to be published and come to consensus over their publication is like one of the key limiting factors of these top of block, rest of block splits.
00:36:02.013 - 00:37:00.079, Speaker A: Vitalik has a really great post on this called how much can we constrain builders? And it talks about like block prefixes and suffixes and commitments and there's like lots of fancy, both cryptography and crypto economic stuff that you can do there. Again, glossing over most of that. And the last step here is the slot N +32 attesters which are now enforcing the threshold of ILS that were published by the slot N +32IL committee. So this is the kind of wrapping up of the block and it says, hey, given that this number of ILS were published, like we're going to do this IL Enforcement thing based on the aggregate IL you produced. So yeah, that's kind of the final piece of the puzzle. Yeah, it's again, it's a lot, but the analysis is actually pretty compelling. And you can agree with me or not, but how I see it is it actually addresses all three design goals.
00:37:00.079 - 00:37:24.103, Speaker A: So design goal number one, let's just go through them. Encourage builder competition. Right. How does it do that? Well, it has a permissionless, just in time top of block auction. And the main issue that we're trying to help mitigate against is this risk of multi slot mev. Right. So the main complaint about selling the blocks ahead of time, doing this a priori auction is that if I buy a bunch of blocks in a row, I don't have to compete.
00:37:24.103 - 00:38:00.575, Speaker A: By the time those blocks arrive, I don't have to compete in any auction anymore. I own all of them. So I can just censor all the transactions for the first like five blocks and totally screw someone over in the sixth. But in this version you can't do that because the most valuable block space of each of the blocks that you bought, like let's say using that example again, let's say you bought six slots in a row in the execution auction. Now each of those six slots has a just in time top of block. So the premier blocks, based on each of those six blocks you have to auction off or you have to pay some amount to consume it yourself. So this kind of really forces the builder competition.
00:38:00.575 - 00:38:40.589, Speaker A: And again you have all of these bid threshold enforcement activities which make sure that the, any bid that actually gets broadcast will be enforced. Right. Design goal number two, limit the value of validator sophistication. Right. So how does it do this? The, the main thing here is that the actual proposer, the validator, your at home staker of today only becomes the auctioneer of the far ahead time slot and an aisle committee member. And both of these things don't carry much economic weight or don't benefit much from sophistication. The kind of far ahead auction is the reasons we discussed before.
00:38:40.589 - 00:39:25.641, Speaker A: Before you don't have kind of these, the price of the object you're trying to sell changing underneath you. The IL committee member. When you're constructing an il, the IL commitments are intentionally weak so that there's not much value in constructing an il. Right? All you give to a transaction that lands in the IL is some commitment that they're going to get included. But you don't have any commitment to ordering or, or any state, you know, commitment for, for what they'll execute against so in, in a lot of ways like sure you could potentially sell your IL and people talked a lot about like IL boost like a way to outsource your IL construction but it doesn't actually do anything if the IL isn't valuable. So those are the two things that try and address the validator sophisticated. And lastly preserving the neutrality of Ethereum block space.
00:39:25.641 - 00:40:14.299, Speaker A: This is exactly the same. This is like exactly downstream of fossil which is many participants co create set of constraints enforced on the builder. So again circling back like hammering home that point of arbitrary exclusion is no longer an option for builders. So yeah this is kind of the analysis, this is the synthesis of all the things and this is why like we go through the kind of eating glass of designing all of these things is so that you can get all three of them and potentially like they all work together and kind of serve as a set of checks and balances on, on the actors in the system. Cool. This is kind of the last few slides I published this yesterday there was kind of immediate set of of critiques and I think I'm just going to focus on one of them. There's many critiques I think and totally fair.
00:40:14.299 - 00:41:01.655, Speaker A: Like this is the point of open research. The main critique that we hear is complexity and you know I'll, I'll just read this tweet Solana Overtaking Ethereum is 10 times bigger threat than centralization issues eth is trying to solve and all the World War III doomsday the Ethan infra is prepping for. Just make the block times 4x faster on mainnet and implement batch transactions. This ragdoll is insanely bearish venture anthropologist who's one of our kind of our favorite anons the more complicated the system the more likely it is there are hard to predict side effects. Also if this thing becomes the mascot for Ethereum we are headed for triple digits or worse I guess. Or worse implies potentially double figured double digit Eth price which would be pretty, which would be pretty bad. Max retweeted and said look at what they need to mimic even a fraction of Brad's power.
00:41:01.655 - 00:41:37.035, Speaker A: I don't really know what the what the enemy reference is from, but it's kind of funny. And then this is a telegram message from an anonymous friend. They said maybe it's because you combined like five complicated things into one even more complicated thing and then in parentheses. I didn't read the post so I love this sentiment because I think it's a very common one which is you know, you see A giant post. You assume it's like super messy and you don't even bother reading in the details. And I, I think it's totally worth addressing that complexity is a concern here. I listed it multiple times in the post, which this, this friend of mine would have seen if they read it.
00:41:37.035 - 00:42:52.945, Speaker A: But kind of to counterpoint this complexity thing, it's, I think it's fair to also say that like we're trying to accomplish a lot of things with the system and a decentralized, permissionless, credibly neutral blockchain under the MEV constraints is like going to be hard to build. And in fact like a lot of these system architecture things are like super complicated and explicitly defining the roles of each player in the game and defining the rules of the game so that everyone can see them might actually be like the best way for everyone to play in the most fair way. Like even if there's no rules for a system, there's still power that could be expressed in that, in that system. So the kind of theme here is that Rome wasn't built in today. Obviously like we want to make the design like simplicity is and elegant as possible. But I think it's also worth just making the point that like these systems are complicated and there's going to be a lot that goes into building them correctly. And the last point I'll say here is just because other proposals and I'm going to call upgrade specifically because ma because Max subtweeted me, but they don't explicitly give power, doesn't make that power go away and it probably just expresses itself implicitly.
00:42:52.945 - 00:44:00.561, Speaker A: And Phil had a really nice kind of line of argument along this direction which is he was talking about like statistical versus probabilistic or deterministic versus probabilistic arbitrage and like part of the reason why the original flashbots medboost auction was, was like a real time auction was so that this deterministic stuff could happen in the open and it wasn't just someone who could kind of stat arb in a way that is like very, you know, positive EV in the long term. But it's very complicated was like intentional because that deterministic stuff kind of enforces that competition. And so yeah, I, I still am not convinced that any proposal including Braid like is a magic silver bullet that solves all of these design criterion that we laid out at the beginning. So I think a hybrid mechanism could be the right approach. And it's also worth saying that like some portions of Meckenstein can be removed to Actually increase the simplicity. Like you could remove the. The ahead of time auction and just do PTC plus Fossil for example and you kind of, you kind of like sacrifice some on the validator sophistication front but you save some on the complexity front.
00:44:00.561 - 00:44:45.845, Speaker A: So there's like there's a trade off space here obviously and there's a complexity space as well, but I don't believe that. At least I'm not convinced yet that there's kind of like one proposal that just simply like cleanly cuts through all of the things that we're trying to do at once with Ethereum's block construction. So yeah, with that I'll leave it here again. There's this ETH research post I published yesterday called Meckenstein and there's lots of references to all the people who help kind of come up with these ideas. So I'll give them one more shout out here. But thank you very much for your time and yeah, happy to take questions and yeah, I guess we're 10 minutes before 12:30 so. 13 minutes before 12:30.
00:44:48.185 - 00:44:54.165, Speaker C: Thanks for the talk. I really liked both the overview and the synthesis that I hadn't seen yet.
00:44:55.465 - 00:44:56.441, Speaker A: Two questions.
00:44:56.473 - 00:45:09.005, Speaker C: One that is just something I think I missed. Top of block auction. In this proposal that revenue still goes to the validator, right? Or I guess the proposer.
00:45:09.555 - 00:45:31.295, Speaker A: No. So yeah, maybe I didn't do a great job of actually separating the two. Um, let me go back to. Right. I think this is probably the right place to look at it. So the person who conducts the top of block auction is actually the person who bought the slot from the slot and proposer. So the guy on the far left here, this is your home staker, right? Like this is someone who sold the slot ahead of time.
00:45:31.295 - 00:45:53.351, Speaker A: The, the revenue for these b for the bids in this auction are actually just the expected value of building the rest of the block at slot N plus 32. Because that's the thing that this guy functionally bought because he's a forced seller of the top of the block. So the top of block revenue. Yeah, I guess in. But then bidding, even if you have.
00:45:53.383 - 00:46:00.275, Speaker C: A bid threshold, if the revenue is coming right back to you, I guess I don't really understand what the bid threshold does.
00:46:02.705 - 00:46:17.005, Speaker A: Right. So I guess the, the revenue from the top of the block auction actually goes well. Okay, there's, there's a few designs here. The thresholding could either burn the. Burn the bids. Right? That's historically what the threshold has been done to. To do.
00:46:17.005 - 00:46:57.395, Speaker A: Or it could just be like it Enforces that the. The bid is a certain size, but the bid payment still goes to the person who conducted the auction. So in, in the former case, this slot N plus 32 builder is conducting the top of block auction. The revenue from the bids in that auction are just burnt. No one gets it. In the latter case, they're conducting the auction, the slot n +32 builder, they get all the revenue from the top of the block auction. And what effectively they're getting in that point is, you know, that could potentially be extremely valuable, but they're taking on the risk of buying that, that just buying that slot from the proposer.
00:46:57.395 - 00:47:19.591, Speaker A: And we expect this person to be like a relatively sophisticated entity because they're the ones participating in the auction. So in, in all of these proposals, the top of block, like the most premium block space, the re. The value from that never goes back to the proposer. It either gets burned or it goes to the person who bought the proposer's block in the. In the slot auction.
00:47:19.743 - 00:47:28.823, Speaker C: But if it doesn't get burned, you would assume that kind of like the average top of block value gets kind of bundled in with the slot value, right?
00:47:28.919 - 00:47:44.327, Speaker A: Yeah, yeah, that's true. Okay. But it's. It would smooth out a lot of the spikiness there too, because it would just be the average, not the. Or. Yeah, yeah. Hopefully then you wouldn't have the situation where there's like a thousand eth block that some solo staker gets versus my like 0.1
00:47:44.327 - 00:47:56.105, Speaker A: eth block that I keep getting. Yeah. But thanks. Great question. I mean, it. Yeah, it's kind of. It take me a while to wrap my head around all the, the layers here.
00:48:01.885 - 00:48:22.909, Speaker C: If no one's jumping in with another one. I want to ask maybe a less technical question and more about like telling the story of this. Right. Because the response has largely been like, it seems complicated and it is complicated, but like, how much of that do you think is initial proposal? Like, when I think about like an elegant design, it usually doesn't start as the elegant design.
00:48:22.957 - 00:48:23.117, Speaker A: Right.
00:48:23.141 - 00:48:43.285, Speaker C: It starts as something quite complex and you find both ways to like express it, but also to tell the story of it. Do you feel like this is. I know from the positive responses that you've gotten. Do you feel like it's. It's resonating in a way that the work needed to get it to that kind of elegant state? Like there's energy for that?
00:48:44.185 - 00:49:24.671, Speaker A: Yeah, it's a good question. I think so. One thing that's probably worth pointing out here is that these Proposals are at relatively different stages. So Fossil for example is kind of a culmination of many years of work about inclusion lists and is pretty high conviction for most people. I think that it like is doable and feasible kind of as its own standalone thing. Like it doesn't need to be bundled with the rest of these things versus execution Auctions is like an idea from maybe a few weeks ago and it only really makes sense if you, if you have like this multi slot MEV thing resolved which you kind of need to. You know what I mean? Like there's more dependencies.
00:49:24.671 - 00:50:13.773, Speaker A: I guess that's, that's the point. The maybe more succinct way of saying it but yeah I think especially around Fossil and like doing some sort of block co creation there's like a lot of conviction that this is kind of the right direction and actually it's very much in line with what Braid is proposing too. Right. Just like multiple proposers is very similar to multiple IL con committee members. It's just whether or not those transactions that are like synthesized have some ordering or, or the builder can kind of reorder arbitrarily. So yeah I would say the elegance is probably going to come from more of like the thematic analysis of what things everyone agrees should be part of the final solution. Like block co creation is one potentially like the real time nature of an auction for, for builder competition.
00:50:13.773 - 00:51:35.283, Speaker A: Um, so yeah, I, I don't think it's not clear to me that there's again like one like super elegant thing that falls out of like of this but maybe even just doing like I talked, I talked to Phil a bit at SBC about it and he was just like what if you just do Fossil with, with MEV Boost like scrap all the rest of this just like Fossil and the just in time nature of MEV Boost is like close enough and maybe that's good enough on the trade off curve to like to be worth doing and, and maybe there's kind of like a path here where you do Fossil and then based on the how it plays out in, in the protocol like in the wild that gives you higher conviction or lower conviction about the next step in the process. But yeah all of these things are, are I would say very much still up for, up for debate. But Vitalik had a tweet and I linked it in the Meckenstein post which is like he's high confidence that the, the design space is getting explored enough and like and that we are actually making progress. So it's, it's not for Forlorn. And I don't think we're digging ourselves into any corners here. It's just like worth exploring the, the relationship between all these things. And it's also worth saying that like up until I would say like a few weeks ago, all of the inclusion list proposals were completely divorced from all of the EPBS proposals, the proposer builder separation proposals.
00:51:35.283 - 00:52:08.025, Speaker A: Right. And so we haven't even been thinking about censorship, resistance and MEV really as, as part of the same problem yet. And I think Max and Moles are trying to do that and they view any, they view censorship more from an economic lens like how much are you willing to pay to leave a transaction out? Rather than like is a transaction part of some SDN list or whatever. But yeah, even just like framing it as like censorship is an economic thing is like a very useful thing in thinking through these designs. Nice.
00:52:08.965 - 00:53:06.365, Speaker B: I have a question which may be dumb, but I think I've heard that like another criticism of smoothing and like the a priori auctions is that like they don't actually like the. Like if the value of blocks is extremely spiky then like the, like the bid doesn't converge to like the average value converges to something like less than that. And like that's just because like, like only the most capitalized bidders or like the most strategic or I guess the most well capitalized bidders can actually consistently bid the average. So if that is true, doesn't that mean that like the slot n +32 builders that bid that buy the the whole slot like wholesale before they have to bid off the, the top of the block. Like doesn't that mean like there will be centralization there? And what are the implications of so there.
00:53:06.785 - 00:54:10.507, Speaker A: Yeah, a hundred percent. And, and this is actually where maximal paper man, I linked it somewhere in here. But they have a paper called Decentralizing. It's something like the centralizing effects of aps which is exactly their argument which is if there's only one bidder who can bid the average every time, like their average is just higher than everyone else's, then they just, they just become rent seeking because they have a monopoly on all block space futures and then they can only sell at a premium if someone bids just in time like value higher value than they actually have. So I find that argument very compelling. So yeah, again this is kind of one of the reasons why you really have to choose between this validator sophistication and between this like multi slot MEV thing. It feels like almost a fundamental trade off it's like if you sell it during the slot then there's always going to be timing games there's always going to be co location if you sell it ahead of time there's always this risk of like one guy being too powerful and like extracting rent.
00:54:10.507 - 00:55:14.281, Speaker A: So yeah I'm. I don't know exactly where I personally land on that trade off space. I, I kind of tend to think that if we don't have a good reason to do the head of time auctions like actually I think my favorite I, I did mein because I thought it was useful to do all three together as just like a thought experiment. I think my preferred version of this is actually just fossil plus the PTC and not doing the ahead of time thing at all and just the PTC would actually do the full block auction instead of the top of block. This solves the issues around like building two blocks in parallel and you have to dedupe and all that stuff. So maybe that's, maybe that's the right framework and if, and if conviction around this argument that you that you voiced on rude which is that one person is going to be able to have much higher average than everyone else and they that either results in them bidding down like below their true value or it results in them kind of extracting rent 32 slots later. Either of those is like I think bad enough to maybe totally condemn the ahead of time auctions altogether.
00:55:14.281 - 00:55:56.115, Speaker A: Now Justin brought up a really good point here which is if you do the slot auction one slot ahead then you don't. You might not actually have this multi slot MEV problem. I think it's still worth thinking about the implications of like maybe maybe the alpha that the best builder has over the second best builder kind of decays as you approach the slot itself. I don't know. This is, I'm. I'm really spitballing here but if that's the case then like the, the shorter the look ahead window the better potentially. But again yeah I think all of this stuff should continue to be and it's all like really new so it will get further, further ironed out.
00:55:58.815 - 00:56:11.155, Speaker D: We have a question from Sarah in the chat I'm going to read it out loud. It says I'm a bit confused how the inclusion list committee comes up with the inclusion list. Do they run their own consensus protocol?
00:56:12.215 - 00:56:34.347, Speaker A: Right. So each of them bid puts out their own inclusion list. So I'll just go back to the, I'll go back to the fossil slide. Right. So these ils there's no consensus on what goes in each person's il. Like in this case, the IL committee is three guys. They each publish their own IL and they just use local rules about the mempool to decide what transactions go in.
00:56:34.347 - 00:57:15.445, Speaker A: The simplest rule is if a transaction was in the mempool and if it pays the base fee. Right. Like two rules and then you just put it in the. You put it in your inclusion list and you ship it. So it's very much like as if each person kind of builds their own local block and then those local blocks aggregate together to make everyone's view of, or the entire I committee's view of the mempool more public and then using that list of transactions as the template for the block. So, yeah, the kind of TLDR here is everyone just sends their own local message. There's no communication between the IL committee members.
00:57:15.445 - 00:57:47.431, Speaker A: The only communication happens when the attesters look at the builder's block and decide, did the builder include enough of the ielts to be considered valid according to this threshold? So they could still locally do some censorship rights. Yeah, if they wanted to. Okay, so you rely on the fact that there are many of them, basically. Yeah, yeah. This is like an honest, honest majority assumption, basically. And there's even. Yeah, I mean, as a, as an aisle committee member, I could just broadcast an empty list, right? There's no, there's no like enforcement that they put something in there.
00:57:47.431 - 00:58:30.987, Speaker A: They could just leave it empty if they, if they chose to. So, and there is some. I mean, again, we're getting a little into the nitty gritty here, but there is some discretion that the builder has, which is the IL threshold is below 100%. Right. So if, let's say it's 90% and there's a hundred people in the committee and all 100 people broadcast their il, now the builder gets to decide, okay, I only have to include 90, so I get to choose the 10 least favorable and leave those out because I have some discretionary power. And that's actually the biggest difference between fossil and between braid, which is this multiple concurrent proposer thing, which is there's kind of someone who, who gets to be an aggregator. The other term that's used is called a canonicalizer.
00:58:30.987 - 00:59:06.689, Speaker A: Sometimes people say that in terms of these multiple concurrent things, but yeah, so there, this isn't perfect. And what this results in is basically for a transaction to have certain guarantees, just landing in one IL isn't sufficient. Like, let's say the threshold is that they need to get into like 11 out of the A hundred to ensure that at least one of them is included. You know, you can kind of run through the numbers here, but it changes a bit the guarantee you're giving to an I transaction. But it, it also reduces the value of being an I transaction, which is potentially good for, for other reasons. But. Yeah, thanks.
00:59:06.689 - 00:59:08.445, Speaker A: Great question. Thanks.
00:59:09.985 - 00:59:43.805, Speaker D: I have a couple of questions. The first one is like in the discussion we just had about the average bidder has a centralizing force and one thing, but if you have bidder that's always has a better average or something like that, I'm wondering, can we just solve this by adding noise to the bit and then do the action, whatever is the advantage. There is a proportional amount of noise that could like make that advantage go away and like then we have competition again.
00:59:45.145 - 01:00:24.199, Speaker A: Hmm, interesting. Yeah, I'm not. Yeah, I'm sure just a random idea. Yeah. I think my initial reaction to this, and I'm kind of again borrowing Phil's language here, but is that you kind of turn this deterministic game into a statistical game and the moment you do weird stuff like that, the game becomes harder to play and then maybe the better you are at playing it, you know, evenly higher, higher returns. So. Yeah, but I'd have to, I'd have to think through, I don't know if there's any like auction theory literature on like, you know, randomization of, of winning bid.
01:00:24.199 - 01:00:45.865, Speaker A: I mean, I guess so there's, there's like a winner take all version of these auctions and you could have a different auction like allocation rule which doesn't allocate all the ways to the winner. You allocate like with some probability to some lower bid according to some like deterministic function and actually like. Yeah, maybe that's worth poking at. But yeah, that's kind of my only response there.
01:00:48.965 - 01:01:12.685, Speaker D: Yeah, I mean my, my thought is like if we, if we choose a noise somehow that it's symmetric, like it shouldn't change the bit. Like if you had some update bit, it shouldn't change. But like I might be wrong. Just around the video, another question I had is like, could you remind me how we fix 3da in fasio? Like is it already solved or not?
01:01:13.385 - 01:01:53.875, Speaker A: Yeah. Right. Okay, so the free DA problem for those. Yeah, not familiar. It's, it's kind of a subtle thing that happens which is if a transaction that lands in an inclusion list is not able to actually like, is valid in the pre state but depending on how it gets sequenced in the final block is no longer able to pay gas, how do you deal with that transaction? So the, the kind of. The usual example I use here is imagine you're a roll up and you're trying to get a free blob on chain, right? Or a free transaction that consumes a lot of call data. Let's just say that.
01:01:53.875 - 01:02:46.629, Speaker A: So now I send two transactions. One that has a bunch of call data and uses like nonce 10 and another one that uses a bunch of call data but uses nonce10is. Or, sorry, uses no call data, uses nonce10 as well. Now, if one inclusion list contains transaction A, one transact, one inclusion list includes transaction B, and both inclusion lists make it into the block and, you know, there could be a situation where basically, you know, those nonces collide. So one of those transactions is kind of invalid from the historical definition of invalid from the EVM perspective. And it might not even be able to pay gas, but now it could potentially have a lot of call data that landed on chain for free. The way inclusion list proposals have we proposed dealing with this is instead of committing to a specific transaction, the IL kind of data structure itself just commits to an address and a nonce.
01:02:46.629 - 01:03:17.055, Speaker A: So it just says this trend, a transaction from address 0xa with nonce 10 landed on chain. And if that's the case, then that you kind of consider that constraint satisfied. There's more details here, but I'll probably defer those to the account abstraction. People who are really deep in the weeds on that. Great, thank you. Yeah, thanks for the questions. All right, thank you.
01:03:17.055 - 01:03:25.335, Speaker A: We're about six minutes over time. Thank you, Mike, for your presentation. It's really appreciated. Yeah, thanks for having me. It was fun.
