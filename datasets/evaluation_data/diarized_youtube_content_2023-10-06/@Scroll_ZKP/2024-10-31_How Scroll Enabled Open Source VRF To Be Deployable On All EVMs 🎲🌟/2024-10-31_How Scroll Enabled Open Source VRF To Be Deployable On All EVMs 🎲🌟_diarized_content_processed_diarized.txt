00:00:03.320 - 00:00:03.584, Speaker A: Okay.
00:00:03.584 - 00:00:22.977, Speaker B: Hello. Hello everybody. GM GN G A for afternoon. I'm Emily. I'm your host for today. I lead the Dev Rel team here at Scroll. But what we really care about, and I always start with this exact same introduction, is Randevu and any Rand D ran.
00:00:22.977 - 00:00:39.735, Speaker B: What a amazing project. I'm not going to introduce it anymore, but I'll let our guests kind of come here and talk about it instead. But I guess we'll start with Kevin, if you can introduce yourself, and then Patrick and then we'll dive right into generating randomness on Chain.
00:00:40.155 - 00:01:00.993, Speaker C: Cool. Thanks, Emily. Happy to be here. Yeah. So I am a software engineer. Well, the guy who writes code at your end. And we as a team have been working on another open source project called Lotto PGF that requires an element of verifiable randomness.
00:01:00.993 - 00:01:33.095, Speaker C: And which is why, you know, the whole reason we needed like all this Anurand and BRF and Dran to be on Chain in the first place. So yeah, that's what I've been working on. I used to be an embedded software engineer, now I'm interested in smart contracts. Been doing that for a few years now. Really been getting into cryptography. Diving into DRAM required a lot of cryptography and it was very interesting. It was really fun working with the Random team, integrating the EVM on drand.
00:01:33.095 - 00:01:36.495, Speaker C: But yeah, I think that covers me.
00:01:38.235 - 00:02:04.337, Speaker A: Awesome. Cheers, Kevin. I'm Patrick. I'm the CTO at randomoo and we're the company who are stewarding the DRAM project. We've been working on that for a few years. We manage everything related to the League of Entropy, which is a consortium of organization organizations that operate the DRAM network in production. We've been working on as an open source project now for I think six years.
00:02:04.337 - 00:02:52.187, Speaker A: Dran started in EPFL in Lausanne in Switzerland in 2016 or 2017 as a PhD thesis and has kind of got taken under the wing of Cloudflare at some point and then was productionized by Protocol Labs for use in the Filecoin network which launched in 2019. 2019. It's been five years. Woo, huzzah. I personally have been working on it for coming up to three years now I think. And yeah, I now work for randomoo which was spun out of Protocol Labs to do everything threshold cryptography, cryptography related, which is the stuff that underpins DRAM technology itself. And yeah, I've been working alongside Kevin here and there for the last year or two.
00:02:52.187 - 00:02:58.123, Speaker A: Been super appreciative of his help as life in Open source can get challenging sometimes. Getting everybody on board.
00:02:58.299 - 00:03:25.397, Speaker B: Yeah. Yeah. Cool. So I think I want. There's two things I think we can branch off. I'm going to start off with maybe just like the basics of why, you know, this project is so important and then kind of expand into how you guys are contributing there and then just, you know, expand it even further into just like open source tooling paradigms. This enables kind of take it in a more casual sense.
00:03:25.397 - 00:03:52.845, Speaker B: Right. So just to get everybody on the same page. Like randomness on chain, you know, for builders out there kind of watching this stream or listening to it online, however they're consuming, who aren't familiar with actually never adding randomness on chain. Like what makes it important? Why is it hard? Why is this project necessary?
00:03:54.185 - 00:03:57.385, Speaker C: Right. Yeah, maybe. Should I take this or.
00:03:57.545 - 00:03:58.721, Speaker A: Yeah, crack on, Kevin.
00:03:58.793 - 00:04:40.269, Speaker C: Yeah, yeah. So I think probably the biggest hurdle in blockchain development when you want some sort of like unpredictable unpredictability or chance based stuff, is that the blockchain is very sterile and deterministic. Right. Like there's no real like high quality source of entropy and so you need to get that from somewhere else. So that's, that's why you need projects like, you know, providing VRFs. So verifiable randomness, leveraging cryptography. So I think the most famous example would be like, you know, the, what everybody knows is chainlink vrf.
00:04:40.269 - 00:05:06.979, Speaker C: Right. Which is basically harnessing entropy from. We do not say that name here, but yeah, so what it is is basically it's harnessing entropy from a signature. Right. Which is. Well, it's supposed to be unpredictable. That's what gives signatures, their security is that not anyone without the private key can just generate a signature.
00:05:06.979 - 00:05:39.533, Speaker C: So because of its unpredictability, it can be used as a source of entropy. You can feed it into a hash function and then kind of get this randomness on chain and you can verify it because it's a signature. And signatures are designed to be verifiable as long as you have a public key to verify against. And this is basically how most VRFs work right now. Yeah, and that's why it's important. Maybe Patrick would like to go into details about.
00:05:39.589 - 00:06:50.155, Speaker A: Yeah, sure thing. I mean, I think even to take a step back, fundamentally, computers do you tell them, despite what it might feel like sometimes when they won't do you tell them. So even in just a setting on your own computer, it's quite hard to get randomness because if you feed known data into it, you're going to get known data out. So we have all kinds of funny tips and tricks to get around that, such as sampling noise or sampling temperature fluctuations in our computer that are kind of like good enough random for most of our use cases. But obviously in distributed systems world, it's not running on our computer, it's running on somebody else's computer. And we open ourselves up to risks if we just trust that the people running our software are doing so honestly and are truly choosing random numbers. And we've seen with the likes of mev, Minor Extractable value and other such things that people operating other blockchains out there are willing to do things outside the scope of their job in order to gain potential edges in things such as lotteries, defi protocols and such.
00:06:50.155 - 00:07:32.277, Speaker A: So, yeah, as Kevin said, the great thing about DRAND is you can verify that a number has been chosen randomly, which I think seems kind of mind blowing to people who are not super adjusted to the cryptography of it. It seems counterintuitive that something could both be unpredictable but also verifiable. But yeah, it's possible with drand. I think why that's important. A lot of things in life are sort of random, like if you're to get selected for jury duty, for example, or if your company gets audited. We can't audit all the companies. We have to decide who gets audited.
00:07:32.277 - 00:07:54.385, Speaker A: And, you know, we like to think that all these processes are random. Obviously, the lottery, casinos, all kinds of things in computer games are derived from some random value. And to do that in a distributed setting in a way that everyone can rely on actually being random is kind of where DRAM shines.
00:07:55.885 - 00:08:12.825, Speaker B: Right, right. So kind of like in summary. Right. So randomness is very difficult to. Like this is where have you guys heard of. I forget which project it is not. Not in blockchain, but they actually generate randomness via like taking pictures of lava lamps in different stages.
00:08:13.845 - 00:09:06.024, Speaker A: Actually, that was actually used to seed the DRAN network. So Cloudflare is the founding members alongside University of Chile. I mean, there's a whole bunch of founding members, but as you alluded to, they have a big set of lava lamps in the hallway of their office somewhere in the US and they have a camera that tracks how the bits of lava move throughout them. And they actually then use that to generate random material which was used to seed the DRAM network. University of Chile used seismic data from some underground earthquakes in Chile, and there was some other team that used some, I want to say tidal data or something else to choose their private Key which ultimately determines what the randomness will be in the future.
00:09:06.804 - 00:09:34.573, Speaker B: Yeah. So then I guess talking a little bit about, you know, I guess the project here. Right. So I guess that data seeds into. Okay, maybe we should take a step back because some. I say the wrong word all the time and I think for I guess maybe listeners out there who aren't familiar with Yalls projects, we should, I take, I would say take it step by step. Right.
00:09:34.573 - 00:09:52.905, Speaker B: Like, okay, we have Lotto pgf, which is like kind of like a consumer of everything. We have D Rand, we have any Rand, we have Randamu and like a lot of variations on randomness. And how do they all fit together? Where do they like sit in the pipeline and interact with each other?
00:09:53.805 - 00:10:05.145, Speaker C: Yeah, I guess. I mean, I think Patrick explained already that randomly is the steward of the DRAM project and the DRM project is actually the.
00:10:05.765 - 00:10:06.101, Speaker A: It's.
00:10:06.133 - 00:10:49.759, Speaker C: I guess it's the open source software that's run by. I'm going to drop another name here, the League of Entropy. But the League of Entropy is the actual network of the consortium of nodes that actually hold different private key shares that can together, at a certain threshold, they can produce signatures, which is basically, you know, what we call the DRAM network. And these signatures are what we use to create the randomness. That's basically the flow of how to get random numbers. Right. And when I say like threshold of nodes, there's a.
00:10:49.759 - 00:10:52.151, Speaker C: I forget exactly the number, Patrick.
00:10:52.183 - 00:10:56.538, Speaker A: But it's like maybe 12 at the moment. 12. 12.
00:10:56.586 - 00:11:36.565, Speaker C: Yeah. So you need at least 12 nodes from the, from the network to actually agree to produce a randomness for a round. So no single one of those nodes can actually just like produce the signatures, you know, by themselves. And if they want to collude with, you know, other nodes, you know, it's not possible unless like 12 of them at least collude. So and these, this network is. It consists of, you know, highly reputable organizations such as Cloudflare Protocol Labs, you know, Ethereum foundation and stuff like that. So yeah, that's where a bit of the trust element comes in.
00:11:36.565 - 00:11:43.837, Speaker C: But it's, you know, it's trust minimized, as we like to say. I think even the scroll people like to say as well.
00:11:43.941 - 00:12:14.535, Speaker B: Yeah, yeah, okay. Okay, cool. That clarifies things. Thank you. What was I going to say? Yeah, I think like, you guys are very. Building a very technically complex, like, ambitious project and we said the name that shall not be named, I think earlier in this chat or in this project or sorry, call but I guess like what is Yalls motivation here? Right? Like why join a space that has such big incumbents?
00:12:16.035 - 00:12:45.361, Speaker C: It's a very good question and there are multiple reasons for it. The first one is that, you know, as a consumer of randomness, we found that it was very restrictive to rely on something like, you know, the one who shall not be named because, well, it's not available on all the chains. And you know, there's a lot of chains to choose from nowadays, a lot of L2s. And we can't just be waiting for it to be available.
00:12:45.433 - 00:12:45.761, Speaker A: Right.
00:12:45.833 - 00:13:42.749, Speaker C: So we needed something that would be available for, you know, because we're creating a permissionless protocol where we want people to be able to deploy contracts wherever, on whatever L2s. So we needed something that we could easily spin up or make available as an open source project that people can just supply their own randomness instead of waiting for it to be available on a chain. So that's a major reason. But there's also other reasons, such as with the existing VRFs, they are, well, not all of them, but the big one is quite centralized. You rely on a single node, you trust that that node will not censor you. I mean they probably won't, but you never know. They still can't manipulate the numbers.
00:13:42.749 - 00:14:02.965, Speaker C: But there is that risk, you know, and Dran actually addresses that risk by having more than one node. So it's actually decentralized. You don't have to rely on a single party to, you know, not censor you. So it's better in that aspect.
00:14:03.985 - 00:14:49.145, Speaker B: Yeah, yeah. So I mean, you guys just very recently launched. I kind of want to talk about what that experience. Experience has been like probably like from Inception, like pre launch, coming up with this idea or I guess identifying this need building and then how do you gather the resources to actually, I think do something that is this ambitious, Especially from like the perspective of this is an open source project. I think, you know, working on open source is always a labor of love, I think, to an extent. Right. Because like where does the resource and support come in? Especially for something that should be a, like, I don't want to say like basic, right, but kind of a basic, right, you know.
00:14:49.725 - 00:14:52.541, Speaker C: Yeah, it's like, I guess it's a public good.
00:14:52.653 - 00:14:53.781, Speaker B: Yeah, yeah.
00:14:53.813 - 00:14:55.185, Speaker C: Something that needs to exist.
00:14:55.605 - 00:15:20.269, Speaker A: I mean, I think on our side we're obviously very grateful for all our partners that have been helping run the software. Like I think the key part is everybody has some role to play. Some people are obviously deep amongst it, like you know, writing code and making fixes, etc. On the daily basis. And some people just run a bit of hardware somewhere in the cloud. I say just. But like ultimately without all these bits together it wouldn't work as a system.
00:15:20.269 - 00:16:11.821, Speaker A: You know, there's only so, so many people in their, in their man cave writing code that are really, they can't do it alone basically. So it's, it's a little bit of everything. Obviously we're supposed to super thankful to Protocol Labs who sort of funded the productionization of dram, Cloudflare who funded its initial iteration and there are a few other companies, League of Entropy and institutions like universities who, yeah, get online and run the necessary commands and debug stuff with this on a thankfully not daily basis but a quite frequent basis. So we're super thankful to them. In terms of the launch for any random EVM chains, I think most of work really was done by Kevin and his team. Luckily we just had to run a ceremony to create a new network. So on the DRAM side and randomly side, life was pretty easy.
00:16:11.821 - 00:16:15.141, Speaker A: So I'm very thankful to Kevin that.
00:16:15.173 - 00:16:22.505, Speaker C: Was, it was very fun. Yeah, I think. When did we start talking about this? I think it was Istanbul last year.
00:16:24.655 - 00:17:15.695, Speaker A: Possibly. I know that you at a hackathon built Oranges, which was the first attempt at verifying DRAM beacons on Ethereum chains because maybe to give some context, specific algorithms that are available on EVM based blockchains didn't support what DRAM was doing out of the box. So that would mean that you could implement it in solidity, but it was going to be very, very expensive to run on kind of most L1s and L2s. So as a result, Kevin worked to implement rather an algorithm that was supported on EVM blockchains. It was a lot cheaper, that has slightly different security profile, but kind of works out of the box on EVM chains and it's like a fraction of the price to operate.
00:17:18.875 - 00:17:26.545, Speaker B: So you guys met in Istanbul and then got all the way to scroll within less than a year then. Right?
00:17:28.445 - 00:18:06.215, Speaker A: Did we meet before that? Oh no, Kevin's gone now. I think certainly Kevin presented. We held a randomness summit in Istanbul alongside East something I can't remember. There's been so many conferences at this stage, I can't remember which one's which. But there's some kind of ETH conference in Istanbul and Kevin presented there. He at the time had implemented a Faisal shuffle scheme based on DM randomness, was very cool and presented it to us and he's Back.
00:18:06.955 - 00:18:12.975, Speaker B: Hello, Kevin. Okay. Wow. I did not know that existed. There is a randomness summit.
00:18:14.565 - 00:18:32.505, Speaker A: There have been a few randomness summits this year in Thailand, in Bangkok, there'll be a threshold summit. So we're graduating from just threshold randomness to threshold everything. Who knows what kind of threshold protocols are coming soon, but if you turn up the threshold some, you'll find out.
00:18:33.205 - 00:19:02.053, Speaker B: Yeah, yeah. That's insane. I feel like this is such, I guess like a. I don't want to call it a subculture, but like a, just like a part that I've never known. But it's exciting that, you know, there's such a. I mean, maybe this is where we get into like talking about open source, right? Like all of this cross collaboration, like with different projects. What has that experience been? Like, I'm, I'm very curious.
00:19:02.053 - 00:19:18.315, Speaker B: Just like from the perspective of how do you, you know, there's one piece of starting the conversation, but then actually executing is a pretty gargantuan task. Like what, what do you think made this come together?
00:19:19.855 - 00:20:23.685, Speaker C: Oh, I mean, I, I think it was that conversation we had and kind of like, you know, getting the go ahead from, you know, the random team, the stewards of the project itself. I think it was just like, yeah, let's do it. And so. And then after that, you know, I took a few months to actually like read up on this stuff and it's a very deep topic, you know, cryptography, elliptic curves, BN254, BLS signatures. It's a lot of stuff to learn if you haven't really been exposed too deeply into that stuff. Took me a couple of months, but yeah, I just kind of just dove into it, you know, and kind of made a rough pull request when something was kind of working and you know, people from the, from the random team, you know, gave me some feedback, criticism and then it was kind of a long road to like getting it actually production ready. Yeah.
00:20:25.175 - 00:20:39.315, Speaker B: Yeah. Okay, so Lotto PGF is what you're working on now. Can you tell us a little bit about, you know, that project and kind of the traction you've had thus far?
00:20:40.335 - 00:21:13.677, Speaker C: Yeah, so that was, yeah, I guess the project that kind of started it all that needed the randomness because, you know, as you can tell from the name, it's two. It's a contract that lets people permissionlessly launch their own lotteries to fund their public goods. Right. So for example, it's been used in a lot in pop up cities to fund things that the pop up cities need. Kind of just like a Real state. Right. Except you have network states or whatever you want to call them now.
00:21:13.781 - 00:21:17.263, Speaker B: Oh, yes. You guys are very close with Zuzalu, right?
00:21:17.309 - 00:21:30.779, Speaker C: Right, Exactly. Yes. They utilize our project a lot, so we're happy about that. And it's been funding a lot of cool stuff. Cool public goods.
00:21:30.947 - 00:21:43.155, Speaker B: Yeah. So I mean, to that effect. Right. What are the next steps for people who want to use, I guess, Lotto, PGF or D Random.
00:21:44.205 - 00:21:47.105, Speaker C: Okay, so those are like two very different things.
00:21:47.805 - 00:21:48.469, Speaker B: Yeah.
00:21:48.597 - 00:22:21.995, Speaker C: A lot of pgf, the contracts, we just got them audited. So, you know, we're getting ready to kind of like launch that and, you know, letting people use it, you know, permissionlessly for anyone to use to fund the public goods causes they want to fund. We'll be also, everything's going to be open source. The contract will be open source. The front end will be open source. People can run it themselves and go nuts, go crazy. We want to see what you guys fund in terms of D Rand.
00:22:21.995 - 00:23:01.265, Speaker C: There's also two parts to that. And I think we are also releasing a blog post on Level up about this. You can use DRAND by itself. DRAN itself is not tied to any network besides your network itself, but it's not tied to any like blockchain. It just produces rounds, you know, with signatures. And you can, as long as you can verify a BN254 pairing on your blockchain, you can. You can probably use it.
00:23:01.265 - 00:23:38.275, Speaker C: And we supply all the code you need to do that. There's a BLS library contract that you can use to that. However, if you don't want to go through all that trouble, all that hassle, you can just use the Anirand service that we released, which is also open source. Basically it just creates this nice interface that's very familiar. It's very familiar, the existing familiar VRF interfaces. So you request a random number from your contract and you get one back. It's just a nice interface on top of D Rent.
00:23:38.655 - 00:23:59.827, Speaker B: Right. I think what I was trying to get here right now this is enabled on scroll. But I think part of the cool thing about this is now randomness, what we're saying is verifiable across all chains, but it's not actually deployed yet. Are available across all chains, right?
00:23:59.891 - 00:24:00.815, Speaker C: It is available.
00:24:01.115 - 00:24:02.059, Speaker B: Oh, it is?
00:24:02.187 - 00:24:23.233, Speaker C: Yeah. It's instantly available. Just because the important point really to drive home here is DRAN is not tied to any blockchain. Right. So as long as the DRAN network is up and running, you can use that randomness on any EVM chain that supports the BN254EC pairing precompiled.
00:24:23.359 - 00:24:28.145, Speaker B: But does every chain support the pre compile?
00:24:28.645 - 00:24:51.195, Speaker C: So that's the whole. Like all the work we did is to. Because most chains support the BN254 precompile rather than the BLS12381 precompile which is supposed to be coming, but it's been coming for a few years, so we don't know when it's actually coming. Yeah.
00:24:53.015 - 00:26:02.461, Speaker A: So I think any EVM chain should support the BN254 stuff for sure. And a lot of the newer chains support BLS 12. Some of the non EVM chains, most of them support it, although obviously you may need to create your own bindings and such on that front in DRAM land, something we'd love to see, which we haven't seen much of so far, is people running their own DRAM networks. So to rewind back to the start, Emily, you asked some of the differences between the different organizations involved in the stack here and at the bottom was the DRAM software, which is operated by the League of Entropy. So League of Entropy is just one network, just one consortium of 20 something organizations. But in principle, anybody, any group of people or entities or aliens could spin up their own DRAN network of the nodes that they trust, at least in aggregate. And it's our thesis that at some point in the future these sort of ad hoc networks may spin up for all kinds of different reasons, be it randomness, be it verification of real world data, be it other kinds of stuff that you could par using threshold cryptography.
00:26:02.461 - 00:26:19.035, Speaker A: So it'd be cool to see other people building networks out of this. Maybe in the future governments or network states will make decrees via, you know, shared threshold cryptography. That would be quite cool. Although we're not there yet.
00:26:20.495 - 00:26:31.675, Speaker B: I guess kind of. Maybe this is just asking random questions, random questions at this point. But like what are the next steps to get there? Right, like how can we help you?
00:26:36.415 - 00:27:33.229, Speaker A: It's a good question. I think a generalized threshold network is probably the next step. So Drand great for randomness as well. It supports a thing called time lock encryption, which is encrypting some piece of data now that can't be decrypted until some future time has passed. So Kevin mentioned earlier that DRAN ticks with randomness every three seconds and we can exploit this fact to basically act like a cryptographic clock. That's another use case on top of the randomness. But it might be that threshold cryptography in the form of a Network could be used for a variety of other things like super powered key pairs for example or just new off chain protocols potentially that could limit amount of stuff that's required to be done on chain.
00:27:33.229 - 00:27:44.825, Speaker A: So it could be new toolkits, new bindings and stuff like scrolls. Such as any new network that spins up any new L2 or LN already has these capabilities built into it.
00:27:49.325 - 00:28:07.365, Speaker B: Very cool. What about from the perspective of like, I guess like projects or you know like chains like scroll. Right. Like from the community standpoint say you're not like a builder, right. But like other ways to contribute.
00:28:11.985 - 00:28:37.281, Speaker A: I guess. Well, you said not a builder but I think building applications on top of this stuff. I mean Kevin alludes the fact that some of this cryptography stuff's, you know, mind blowing and you need to have a really big brain and a PhD and stuff to fully understand it, which I myself, I'm not one of those people with a massive brain, but I think there are a lot of cool applications on top of it that don't require quite as big a brain. No disrespect to the, you know, the app developers of the world or front.
00:28:37.313 - 00:28:52.041, Speaker B: End, but speaking to an app developer, I don't know if you can tell a lot of this is like, it's like very cool but I'm like oh, how do I consume this? Like for your try out the libraries.
00:28:52.113 - 00:29:16.725, Speaker A: Give people feedback, try things like anyrand in your dapps and see I'm sure reality is that everybody has a variety of use cases and a variety of ways they like to consume software, consume applications and one size doesn't fit all. So there's always feedback that can shape the way people are building libraries and using them in the future.
00:29:18.895 - 00:29:21.675, Speaker B: So I mean to that point. Oh, sorry, go ahead.
00:29:22.175 - 00:29:54.833, Speaker C: I was gonna say I guess it's very builder focused, you know this, this service that's available now, it's, it's for other builders to make, you know, things such as maybe games or to supercharge, you know, governance maybe you know, using some sort of like sortition, not just know token voting but maybe raffling delegates, you know, like picking random delegates, you know, like the OG democracy, you know. Yeah, yeah.
00:29:54.849 - 00:31:01.585, Speaker A: I think embedding some more of those processes in daily life is one like of course I think governments are still pretty hesitant, many governments are still hesitant to adopt these kind of bleeding edge technologies. But there's a million amazing use cases in government for verifiable randomness. Be that the DRAM network or some purpose built a citizen run Network for these things. Like Kevin just said, sortition for a whole variety of things just makes sense. In fact, one project that the DRAM team works with is called Social Income that provides universal basic income to the poorest people in Sierra Leone. In essence, people in the most developed parts of the world donate 1% of their income to Social Income Project. And because they don't have enough to pay everybody in Sierra Leone, ubi, they use DRAND to select from the poorest people in Sierra Leone and just give them cash handouts for two years and measure the impact that it has on their lives and their communities.
00:31:01.585 - 00:31:09.475, Speaker A: So, again, another great use case for verifiable randomness that's hopefully changing the world for the better.
00:31:11.255 - 00:31:42.895, Speaker B: Okay, pardon me, this is probably an ignorant question, but. So I think we've been talking about, you know, verifiable randomness and D Rand a lot in the context of blockchains. This is consumable for anyone, regardless of your Web3 developer. Right. Like, if you just want randomness in general, like, forget we're on some, like a podcast with the, you know, an L2. This is. Yeah, it's not exclusive.
00:31:43.795 - 00:31:57.933, Speaker A: Yeah, indeed. Like, it's a public good. So just like water. Anybody has access to D Rand. It's available over HTTP. It's available over Gossip Sub, which is Lib P2P. Now you can get on blockchain.
00:31:57.933 - 00:32:01.345, Speaker A: Yeah. On EVM chains. Hopefully on some other chains soon.
00:32:03.405 - 00:32:13.265, Speaker B: Okay, okay, so D Ran has already been in use outside of, like, I guess that's like, why Cloudflare is already involved in one of.
00:32:13.685 - 00:32:40.767, Speaker A: Exactly, exactly. I mean, I think for a lot of these use cases, again, where transparency is key, it makes sense. It makes sense to use a blockchain. And there's a lot of hate for people using blockchains where they're not necessary, but for drawing from a public list, like, it's, It's. It's a perfect use case. But not everybody's taking the blockchain pill just yet. So, you know, hopefully smooth the transition into going down the blockchain rabbit hole.
00:32:40.767 - 00:32:44.595, Speaker A: It's still available over traditional Web2 infrastructure.
00:32:45.055 - 00:32:58.435, Speaker B: I see. Okay, cool. Now this helps clarify things a lot, I think. I was a very. I think in very siloed kind of mindset. So. Okay, now.
00:32:58.435 - 00:33:24.733, Speaker B: Okay, okay. This makes a lot more sense to that point. Right? Like, oh, man, this is cool. Okay, where are the resources people can start, like, accessing? As you mentioned, we have a blog post coming up on. I merged it this morning, so it should be up already. On LevelUp XYZ. So if you just.
00:33:24.733 - 00:34:02.795, Speaker B: What was the title again? You head over to LevelUp XYZ, head into contact how to build contracts with Tamper proof unpredictability. Right. There's a whole section on like explaining VRF D Random any Rand and then actually writing the code. Is there any additional materials that I think people should be exploring? Maybe also for devs out there who don't want to write contracts. Right. But consume and leverage tamper proof and predictability in different ways.
00:34:03.215 - 00:34:41.913, Speaker A: So we have the Dram Love website has very comprehensive documentation on how to use the client libraries, how to use the HTTP endpoints. We've got some blog posts on how to create a notion widget with D Rand. There's also some links to things there such as Time Vault, which is for Time Vault encrypting vulnerability disclosures. If you're for instance, a journalist who might get whacked by the NSA or such. All kinds of articles there. Documentation how to use drand. You should of course check out the anyrand documentation where they give you.
00:34:41.913 - 00:34:46.525, Speaker A: It's like the blog post information.
00:34:47.745 - 00:35:16.395, Speaker C: Yeah, it's. It's actually pretty sure we put that in the. In the Level up blog post as well. So all the links are there to Dran Love docs, Dran Love or you know, whatever the Docs link is. I'm pretty sure we have that in there as well. Any Rand docs is in there. You know, I think it has all the resources that you need to build something, but maybe we should also look more into providing some more material about doing stuff off chain as well.
00:35:16.395 - 00:35:22.515, Speaker C: But I think Dran's docs also cover that pretty well, as Patrick just said.
00:35:23.415 - 00:35:43.453, Speaker B: Yeah. Okay, cool. So I mean, for people who don't want to go to LevelUp XYZ but just head directly to Dran. So we have Dran love and then docs.anyran.com Exactly. Yeah. I mean, I don't have too much more I want to talk about.
00:35:43.453 - 00:36:31.885, Speaker B: I think the most important thing is just like getting word out again. I think like just it's. I don't want to say it's niche, but I think people don't think about like the. For app developers like me, we don't think about the underlying structures that are in place to like enable different use cases. But is there anything you guys wanted to cover or make sure that we're touching upon to that point? I do think we have a workshop actually up in the next week where we're actually going to dive into Code and work and see, like, what it looks like to build. But just from like, I guess this kind of introductory standpoint conversation we're having right now. Any additional thoughts?
00:36:34.705 - 00:36:44.405, Speaker C: I mean, I think I could talk about randomness and entropy and stuff for, like, days, but yeah, that's really nerdy stuff.
00:36:46.745 - 00:36:54.345, Speaker A: Yep, same. Just go use dram. Use randomness in your daily life. If you're not sure which restaurant to go to, check out D ran.
00:36:54.425 - 00:36:55.865, Speaker C: Yeah, yeah.
00:36:55.945 - 00:36:56.665, Speaker A: Use it to select.
00:36:56.705 - 00:36:58.005, Speaker C: You should totally do that.
00:36:59.705 - 00:37:01.881, Speaker B: Are you guys using it like that?
00:37:02.033 - 00:37:02.553, Speaker A: Absolutely.
00:37:02.609 - 00:37:03.713, Speaker B: Every day. Okay.
00:37:03.769 - 00:37:18.121, Speaker A: Absolutely. Science supports it. They say if you make it, if you have multiple choices, you always regret your choice after. After a period of time. But if you had no choice and used randomness, you feel on average better than if you had made your own choice.
00:37:18.313 - 00:37:24.525, Speaker C: So we're getting. Getting philosophical here or something.
00:37:25.065 - 00:37:44.209, Speaker B: Okay. Okay. I think that's actually a really interesting, I feel like, app that would come out. I mean, I think there's a lot of happiness, like mental health applications in the market right now. I've never heard that angle. So if anyone wants to go out there and build it.
00:37:44.337 - 00:37:47.713, Speaker C: Yeah, 10 tokens to Patrick. He came up with the idea.
00:37:47.809 - 00:37:49.465, Speaker B: Yeah, yeah, yeah.
00:37:49.625 - 00:37:50.685, Speaker A: Pgf.
00:37:52.345 - 00:38:17.605, Speaker B: Okay. Okay, cool. Yeah, I think that's everything I have. So, again, guys, like, congrats. I'm really excited that, you know, we were able to do this together with scroll, but in general, uncovering the wide world of everything, I guess, like deeper than, you know, just like my typical, like, oh, let me just go to seed number and then it'll work kind of thing.
00:38:19.935 - 00:38:39.591, Speaker C: But yeah, we're super thankful to scroll for supporting us on our long journey. As you know, we started with kind of nothing. As you said before, we kind of did it as like, you know, out of the love of it. Nobody was paying us to do it. But yeah, we're really grateful for all the support.
00:38:39.743 - 00:38:58.995, Speaker B: Yeah, yeah, absolutely. So super important. Available on all EVM chains. People go consume it. Dran love docs.anyrun.com. but yeah, okay, cool. I think we'll call it here.
00:38:58.995 - 00:39:00.975, Speaker B: Thanks again so much for joining.
00:39:01.515 - 00:39:02.067, Speaker A: Thank you.
00:39:02.131 - 00:39:31.445, Speaker B: I guess look forward to next week when we're actually going to dive into the meat of it. I think probably talking around things is a lot harder than actually looking and getting your fingers dirty. So, yeah, awesome. Thank you so much, Kevin. Thank you so much, Patrick, for joining. I don't know if I'll see you guys in defcon, but if I will hope to meet, but otherwise, yes, definitely. Okay, cool.
00:39:31.825 - 00:39:32.601, Speaker A: Lovely.
00:39:32.753 - 00:39:34.665, Speaker B: For sure. Okay, cool.
00:39:34.705 - 00:39:35.721, Speaker C: Thanks, Emily. Thanks, Patrick.
00:39:35.753 - 00:39:35.865, Speaker B: Bye.
