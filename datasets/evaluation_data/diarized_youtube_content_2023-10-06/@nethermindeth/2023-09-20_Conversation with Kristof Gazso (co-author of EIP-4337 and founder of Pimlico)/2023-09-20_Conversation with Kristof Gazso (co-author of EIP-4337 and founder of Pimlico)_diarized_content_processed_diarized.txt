00:00:05.100 - 00:00:32.740, Speaker A: Hello everyone, and welcome to a Nettermind internship. Q a episode and in this episode we will have a former Nettermind intern interviewing another former Nettermind intern. We will discuss, among other things, the role that the Nettermind internship program has played in our professional development and how it has served as a catalyst for our current paths. So I want to start with an introduction of the first nettermind intern. That would be myself. My name is Jorge Arse. I am a blockchain researcher at Nettermind.
00:00:32.740 - 00:01:13.680, Speaker A: I have a background in applied mathematics and I'm currently a PhD candidate in applied mathematics. As for my work at Nethermind, I am particularly interested in liquid staking protocols and I have collaborated extensively with Lido Finance and I recently had the honor of leading a research project for Lido in which we explored the design of a mechanism for decentralized curation of Lido's validators. And it all started with an internship at Nevermind. And in fact, this is where I met Christophe. So I would like to introduce Christophe Gaggo. He also started as an intern at Nethermind. He then became a full timer.
00:01:13.680 - 00:01:51.730, Speaker A: He worked extensively on account abstraction and co authored EIP 4337, of which we will get the opportunity to talk a little bit more about later. After a while, he left to fund Pimlico, which is an infrastructure platform for building the next generation of smart wallets. Building upon EIP 4337, I met Christoph when he was a full timer and I was an intern, and we collaborated on building an account abstraction plugin for the narmine client. And, well, I really had the best of times collaborating with Christoph, so it is quite an honor to have you here.
00:01:52.900 - 00:01:55.060, Speaker B: Same here. Thank you for the introduction.
00:01:56.680 - 00:03:01.380, Speaker A: Awesome. So before we get into the nitty gritty of the Q A, let's see, can we start with an introduction to the Nethermind internship program? Actually? Well, and what is nettermind? Of course, for those of you who haven't heard of us, we are a blockchain research and software engineering company, and the most likely thing is you have seen about us, if you have, through our work on the Nevermind Ethereum execution client. That's how everything started. But from there we have branched out to we're trying to sort of encompass all other aspects of blockchain research and development as well. So this includes like Layer one, L2, engineering. Namely, we have also extensive collaborations with Starknet and have built a lot of tooling for them. We do blockchain and cryptography research, of course, security audits, formal verification and many, many more.
00:03:01.380 - 00:03:45.044, Speaker A: So we're nevermind ETH on Twitter. Also, if you're interested in what we're doing, you can give us a follow. And we also have Nethermind Stark for the starkit efforts. Now, as for the internship program, this is a program that offers students and graduates worldwide an opportunity to explore the inner workings of Ethereum and to contribute to the evolution of Ethereum through exciting and challenging projects. This is a technical, hands on, three month long program that gives you the freedom to select and move between different engineering projects. And so we'll get to talk a little bit about that in the context of what we did. Hopefully that will give it a little bit more, make it a little bit easier to relate to.
00:03:45.044 - 00:04:47.530, Speaker A: You'll also have the flexibility to hone your skills, expand your knowledge in blockchain, core engineering DevOps and infra crypto research security L2 tooling and DeFi research and development. Finally, I would like to highlight that we have a sponsorship by the Ethereum foundation, which is also helping us find new interns for the program and fund our efforts as well. And this has been a very fruitful collaboration as well. If you want to learn more about this about the internship program itself, please go to Nethermind IO slash internshipprogram. Okay, so now that we got the basics out of the context we're talking about out of the way, let us start our conversation with think. Well, now that you're leading the efforts at Pimlico and the future is definitely looking bright for you, but it's kind of nice to look back and think. I think mostly everything started with the internship program.
00:04:47.530 - 00:05:03.650, Speaker A: So for people who are maybe in the position that we both were a few years ago, you're sort of like trying to bridge into the blockchain industry and so on. First question would be, how did you find out about the internship program?
00:05:05.700 - 00:06:06.790, Speaker B: I believe it was a long time ago, but if I remember correctly, I was on crypto Twitter. I was just trying to really catch up in the latest things that were happening in the Ethereum space, right. And I saw, I believe, a post by the net of the mind's Twitter account advertising that they have internship programs, which for me was quite unusual for the most part, because every single place I saw, which was hiring at the time, wanted people who had either direct crypto experience or had a computer science degree. I had neither. And so this is really special opportunity, which I definitely was excited by. And I read up on afterwards a lot. And then I went through all the things that, never mind, was doing? And was like, yeah, I want this.
00:06:07.640 - 00:06:24.520, Speaker A: So now you're into the internship program, and so what do you see? You get into this jungle of super talented people, and what are your impressions? What do you see? What projects catch your attention?
00:06:25.900 - 00:07:30.430, Speaker B: Well, I don't recall exactly which projects were the most active at the time at that line, but I remember asking to jump on a bunch of calls with different people from different teams, figuring out what they are actually doing. So back in the day, a lot of things to do with compilers and starknet at the time, a lot of things to do with none of my clients in a C sharp auditing and all these different things. And so after having a bunch of calls during my first week, I was like, yeah, I think talking to Wukash from the Ethereum core team building the execution client sounded the most interesting, right? The problem sounded the most difficult and the most core to the whole Ethereum layer, really. And so that's why I was like, yeah, I want to contribute to this specific part of the mind.
00:07:31.780 - 00:07:48.550, Speaker A: Nice. That makes sense. And how's your experience? Like, what stands out about how you felt through the program, the kind of support you were given, and really any impressions that you can give us about the experience?
00:07:55.700 - 00:09:12.120, Speaker B: Initially, because of the type of project that I wanted to contribute to my clients, I had to start from basically ground zero Ethereum understanding to building up all that knowledge about how Ethereum works under the hood. So that was a really intense first couple of weeks in a good way, because I was just learning so much. Every line of code I read, I could go look at different blog posts about how the EVM works, how Ethereum works, and associated with that. Right? It was really fantastic. Wukash gave a ton of help at the time when it comes to figuring out how to not write spaghetti code in C sharp, helping figure out architecture for the different problems that we were solving. And I guess the biggest, more major project I worked on together with Wukash was the MeV plugin. At the time, before the merge, we had the MeV relay.
00:09:12.120 - 00:10:06.940, Speaker B: And so the MeV relay was handled by flashbots. On most chains. However, on, for instance, back then it was called XDI. Now it's called gnosis chain. Only Nethermind and open Ethereum were running as validators, right? So there's no geth on which to run the MeV relay and MeV Geth. So that was a really big thing to try and understand the entirety of how flashbots worked and try and port it and make it a part of neandemite client. And so that taught me a bunch about MEV, about how MEV works, what different strategies exist for MeV as well, and how all this is handled by these big players like Flashbots and well, afterwards, like, never mind under the hood.
00:10:08.800 - 00:10:42.256, Speaker A: That's amazing. Yeah. It's also a very different time for Ethereum, probably like 2021 or so before the merge and everything. Yeah, that's great. So we have mentioned, well, you had to sort of start from scratch understanding well the Nethermind client and even how to not write spaghetti code on C sharp, of which I was guilty of a couple of times during my internship as well. There was this getting to understand MeV. So those are all pretty useful technical skills.
00:10:42.256 - 00:10:51.960, Speaker A: I'm sure you have continued to use them throughout the years. Now, are there any others that you would highlight, any other technical skills that you acquired during the internship?
00:10:52.620 - 00:11:12.400, Speaker B: Yeah, I feel like after the internship I had a really intuitive understanding of how Ethereum worked. Like any extra knowledge I gained after I was able to fit it in very nicely into that foundation I built during the internship.
00:11:12.980 - 00:11:19.212, Speaker A: So it's like a bird type view of Ethereum that you could get from working on all these different pieces.
00:11:19.276 - 00:12:17.460, Speaker B: Exactly, yes, exactly. Once you have that intuitive understanding, it's like everything becomes so much easier, because now it's not just like a new piece of information coming and being lost in the sea of confusion. It's now like, okay, now I understand how merkel trees work, but I already understood what that entails. The merkle tree allows you to sort of prove that a leaf node is part of the Merkel tree in a way, what that means for Ethereum, that you can build blocks on top of each other and all these different ideas. But you can understand that without understanding how exactly a merkel tree is written in code, right. But once you do, it gives you even more understanding. So examples like these where you're able to fit new knowledge very easily.
00:12:17.460 - 00:12:50.610, Speaker B: And so I guess afterwards, after the internship, I did some work on the merge as well. And so it was significantly more easy to get started with that because I was able to build on the foundation I had about how proof of work ethereum worked and just modify that model slightly to figure out how proof of stake Ethereum can change the architecture that we already have.
00:12:51.140 - 00:13:36.268, Speaker A: Absolutely. This is a really good insight. I think looking back, this is also something I got from the internship program. We can, I guess, talk all day about specific technical skills that you could get from that. But I think a really useful part is like there's this huge, gigantic, and it gets bigger and bigger by every month puzzle. And that is Ethereum, right? And so starting out, it's like you're just looking at a bunch of pieces, just ripping them out of the bag, and you need to put everything together, and it can be a really daunting and overwhelming prospect. And so in the nethermine industry program, it does a really good job of sort of finding the edges of that puzzle and putting them together for you.
00:13:36.268 - 00:13:55.830, Speaker A: I would put it like that. And you may not know everything, but now you have a notion of where you can start to fit the pieces, where you need to go deeper in the technical knowledge that you want to acquire. It's very hard to know everything there is to know about Ethereum, but it really gives you sort of like that framework for you to start building on and sort of specialize on something.
00:13:58.360 - 00:13:58.676, Speaker B: Which.
00:13:58.698 - 00:14:02.984, Speaker A: Is actually what you ended up doing next with the EIP 4337 and account.
00:14:03.022 - 00:14:37.920, Speaker B: Abstraction, I would say, exactly. If you read Paul Graham's how to do great work article, I ended up doing something kind of close to that in the way of like, okay, you get into a field and you try and understand how the field is made up, and then you start digging and digging and digging until you get to the frontier of the field in some way. You get to the. The place where, like, no one has figured it out.
00:14:38.070 - 00:14:39.570, Speaker A: It's an unsolved problem.
00:14:40.420 - 00:15:54.872, Speaker B: And then you're able to, like, innovate at the frontier of the space, because now you have this understanding and now you dug into all the new developments that are being made and see where you as a person can have the most impact. I guess that's how I got started in account abstraction. For me, Ethereum user experience, I felt, was the biggest unsolved problem in Ethereum. I felt like there's a lot of amazing, really important problems to do with zika roll ups, any roll ups, really different scaling mechanisms, different staking issues that exist on Ethereum. But for me, I felt like the biggest bottleneck was by far the lack of user experience improvements that were missing from Ethereum. Right? And so, like, account abstraction was the medium through which I, as a core developer, core researcher at the time, could contribute the most.
00:15:54.926 - 00:17:07.810, Speaker A: I felt, right, I think this is good to zero in a little bit more, because I remember the first time I was assigned to or I learned about account abstraction, and I saw it as a very interesting way to get involved with core engineering, but I wasn't really grasping the implications of account abstraction at the time. So you motivated very nicely by coming back to the problem, which is like user experience. And I think we are a little bit used to, especially, we've been in Ethereum for a while, we're a little bit used to some of the nuisances of dealing with Ethereum, right? And we don't even think about it. But if you're thinking about really making Ethereum something as welcoming, that it really spearheads like a financial revolution or it leads to mass adoption, we have a long way to go. So what is it about user experience that you would say is so bad that maybe we are like fish in the water and we don't notice what is all around us, right. What is about user experience that ethereum needs to improve at the moment?
00:17:09.060 - 00:17:33.672, Speaker B: Oh, so many things. I'm just going to scratch the surface, barely scratch the surface. Web three is jittery, right? And if you want to get started on web3, the vast majority of the applications, how do they start? Connector world. Okay, click connect world. Okay, choose one. Okay. You don't know any of them.
00:17:33.672 - 00:18:03.344, Speaker B: You don't know what's different between metamask, what the hell wallet connect even is. Okay, I guess you click metamask, great. You install it, you spend those ten minutes trying to get it up and running. You have to save a seed phrase. You might take a screenshot, don't do that. But you might also write it down if you do it correctly. Okay, now you get started.
00:18:03.344 - 00:18:41.100, Speaker B: Okay, what do you do now? Okay, well, now you have to go away and you have to find a place to on ramp some funds. Great. How do you do that? You can use Coinbase, you can use binance, you can use more specialized things like Moonpay or transact or these sets of services probably takes you, if you're lucky, half an hour. And now finally, okay, now you can hopefully get started if you also manage to transfer some ETH to your account. So you have to pay for gas fees, whatever they are. No one knows. Users don't know what that is.
00:18:41.100 - 00:19:32.130, Speaker B: And then finally you can actually start using what you want to. So there's so many problems with this flow. I'm not sure if it's a hot take or not, but it is a kind of strongly held take I have, which is for web3 applications to compete. They have to compete by being just simply better to use than webtoon applications, not because they are more decentralized or more permissionless. That is a fantastic thing to have, but that's not going to draw in your normal user. They don't care about that. They care about it being smoother, more powerful, being better to use, having better features, fixing their problems better.
00:19:32.130 - 00:20:32.870, Speaker B: And we are so far away from that. So what are some ways in which we can tackle this? Okay, well, imagine, and again, I'm actually just giving examples. I'm not saying this is how we should do it, but there's just examples of how we can solve it. Imagine if instead of having to go away, connect a wallet, find a third party wall that you're going to plug in and start using the application with. What if it was created for you under the hood? As you start using the application, first it starts off just being held by the online application that you're using. But then as you start using it more, as you start accumulating money, it prompts you to hey, you actually have some money on this here. You should set some guardians so you can recover it if anything happens.
00:20:32.870 - 00:21:49.156, Speaker B: Okay, so now you've done a bit of more self sovereignty. You now sort of own a lot more of your world as you start using it even more. Okay, you have a lot of money on the account. Now you should set up your own multi SIG choose, get several keys to secure your account to make sure it's not lost, right? So you can keep this progressive evolution to having more and more self sovereignty. Which means, one, it's really easy to get started, but it also means that as you actually have more and more at stake, you still get all the benefits of self custody, right? And so this is not really possible with normal ethereum accounts, private cube based accounts. This is only really possible with smart accounts, smart contract wallets. A big part of why smart contract wallets are important is because they allow you to customize with EVM bytecode, custom code, how your account works, what makes valid transaction.
00:21:49.156 - 00:23:10.484, Speaker B: So it allows you, for instance, to do what I just said, where it's like you have a guardians, you have like a multi six scheme. Or you could also do different really interesting things, right? Like setting up session keys. Imagine a system where, say, you don't have a world where the application itself owns your account, but you have a world where you yourself own the account, but you still don't want this jittery experience. So hey, okay, you set up an account and you have an admin key that you store in a bank or like in a safe somewhere, or you buried in the ground, and you don't want a laggy and difficult experience. Still, you want to be able to click and do actions without having to go through a million steps. Okay, what if you generated different session keys which allow you to, which can have very limited access to your account? Imagine, for instance, you all want to play an onchain game. You have your main account, you generate a session key which is only allowed to interact with the contracts of that game, and it's only allowed to spend, say, $100 of gas every single day.
00:23:10.484 - 00:24:24.696, Speaker B: Now, after you generate this, you can give that key to this on chain game, and you can feel safe knowing that even if something happens to that game, if they lose your private key, the impact is extremely limited. Right. Maximum $100 drained can only interact with the contract, can't siphon any funds from your account. So this rivals, if not exceeds web two experiences, in my opinion. And this is what we're striving for, really revolutionizing Ethereum's user experience by transitioning Ethereum's account system to being fully smart, account based. Moving away from this old paradigm, which if you listen to Vitalik's talks, he's also of the notion that the private key system we have is like a legacy system. It's just like something that we had to throw in during the genesis of Ethereum, so that it can launch with the intention that everyone's going to be using multisigs or smart accounts.
00:24:24.696 - 00:24:57.560, Speaker B: Moving on. I'm extremely excited to sort of move the needle with Ethereum. Actually, without the internship program, it would not really have been possible. I wouldn't have gotten the connections that I got start working on the kind of abstraction, all the technical skills that go into what we're building right now. So I'm forever grateful for all the things you guys have done. Fantastic.
00:24:58.860 - 00:25:50.810, Speaker A: And the things you have done for the space and that you did for us working for Nethermind as well. We're grateful for them. Now, the people listening to the episode may have noticed we sort of had this little intermetso on more of a technical subject. It was really necessary so that we can explain why this journey that we're describing is important in particular, like the problem that's being tried that Khrushav is trying to solve, and then, only then, we can make sense out of the tools that he's using to solve the problem. Right, so you had all of this, you learned all these things from the internship, then you transitioned into full time. And I think this is where you started thinking about the UX problem and where you started thinking about account abstraction as well. Is that correct?
00:25:52.300 - 00:26:24.310, Speaker B: I would say not yet. I did some work still on the MeV plugin, but then I started working on the merge, and it was during the merge, during my work on the merge, which was in a couple of months from during middle to late 2021, when I really started taking a step back and it was like, okay, what is the most important problem that we are facing right now? So that's really when.
00:26:25.960 - 00:26:40.120, Speaker A: Nice. So, like, after addressing the merge, which was sort of like the most important thing to tackle at the moment, and then you realize, like, okay, after this, Ux is top priority.
00:26:41.020 - 00:26:54.060, Speaker B: Yeah. And to be clear, this was like a year before the merge actually happened, right. So I was trying to think ahead, like, okay, after we are done with this, what's going to be next? What was going to be missing from the ecosystem?
00:26:54.560 - 00:27:30.840, Speaker A: Cool. So now we can address a question that maybe has been in a lot of people's minds as we have been going through this conversation. Account obstruction. We have talked a lot about account obstruction, and it's a tool you can use to address the UX problem, I would say. But how does this work exactly? What is it about account abstraction that makes it useful to build these smart wallets that you have described as a way to make the user experience in Ethereum much, much healthier for users?
00:27:31.980 - 00:28:23.304, Speaker B: Awesome. So there's a lot of terms floating around account abstraction. I like to think of this a very technical engineering focus term. Account abstraction is a concept in Ethereum. It's a movement, if you want to call it that, which means going away from an architecture where the protocol itself defines how accounts work and moving towards a system where you define yourself, how your account works. To be specific, the Ethereum protocol for private key accounts defines how gas payments work. Right? You pay all the gas upfront and then you get refunded some back.
00:28:23.304 - 00:29:07.704, Speaker B: And this all happens in ETH. It defines how nonsense work. It defines that a transaction is either valid or invalid. There's no valid, but only can only do this, which is something that we really come to expect from the tools from the accounts in web two that we have. Account abstraction is like, okay, you define what makes a valid transaction with custom code. And so you're able to reiterate extremely fast because you're not held back by the protocol layer and develop completely new account systems. You want to add session keys to your account? Add it.
00:29:07.704 - 00:29:48.228, Speaker B: You want to add a multisig, add it. You want to add a sign up to Multisig, you can do that. You want to pay with EOS 20 tokens, you can do that. You want to delegate the payments of gas fees so that someone else has to pay it. Someone who has a vested interest in you making that transaction, you can do that. And all this means that we can completely eliminate a bunch of steps that come along with doing an action on Ethereum. And so this again is how smart accounts and account traction ties in.
00:29:48.228 - 00:30:12.270, Speaker B: Smart accounts, I like to use them more these days because they refer to user facing concepts. Right. Smart accounts is this new type of account where you have all these extra, extremely useful capabilities that you do not have with the old type of account, the private key account.
00:30:14.560 - 00:30:45.316, Speaker A: Great. So let us do a quick recap of the journey so far. We have the internship. You were working mostly on MeV stuff, getting to really know the underpinnings of Ethereum. You transition to full time, you work on the merge for a bit, you identify well. Probably the greatest problem that Ethereum is going to face in the next few years is going to be the user experience. And then account abstraction comes in and EIP 4337.
00:30:45.316 - 00:31:04.670, Speaker A: Right? So what's the Eureka moment where you have the problem of UX and then you go like, oh, the solution is maybe to go about things this way. EIP 4337 and so on. And as a follow up question, what role did Nettermind play in sort of like helping you make this connection and work on this problem.
00:31:05.520 - 00:32:11.792, Speaker B: Totally. So I spent a lot of time thinking, if there's a way to achieve all the benefits of a counter fraction without having to go through a hard fork. Right, hard forks notoriously take a very long time, because you have to get consensus amongst all the core devs, you have to get all the clients to implement it. If you find a way to do it without that, you can ship things extremely fast, which is what we want to do. We try and find ways of making changes to Ethereum without having to change the protocol itself. So thinking about this and then talking to Tomas, Tomas was like, oh, that's really interesting. And he sent me over a post, a hack and d post that was made by Vitalik, I believe, where he, in a couple of paragraphs, just like, wrote down a potential way of how user operations might work.
00:32:11.792 - 00:33:19.530, Speaker B: Right? A way where you have this singleton contract, which is now called the entry point, which can sort of route and validate user operations. And so it was a very sort of bare bones document. But because of that, I sort of reached out and there became a group chat where I believe it was me, Vitalik, Joav and drawer, who were ideating a bunch on how we can actually make this happen. And obviously, when it comes to Nethermind, it was really because of Tamash that I got connected to all these amazing people who were also thinking about the exact same problem. And it was a lot of the reputation of Nethermind that gave me enough legitimacy so I can be like, yeah, I kind of hopefully know what I'm doing and I can contribute a bit to this.
00:33:20.460 - 00:34:04.810, Speaker A: Cool. Yes, these are some of the least, I guess, the benefits from the internship program and sort of like being part of this experience that maybe they're not as just bullet points of technical skills that you acquired. Well, first of all, getting the big picture of how Ethereum works in a way that allows you to assimilate knowledge much faster from that experience. And second, well, all of these connections that you got and being connected to interesting sources of knowledge and interesting people to make something like EIP 4337 happen. Right. So I think that also played a very influential role in how your career direction ended up going.
00:34:05.420 - 00:34:06.970, Speaker B: Oh, yeah, absolutely.
00:34:09.340 - 00:34:37.090, Speaker A: Cool. Now we describing the whole path that you have taken so far. You have the internship full timer, you stumble upon the UX problem, you stumble upon account, obstruction as a way to address this problem. After a while, you realize that it is time to part ways with Nethermind and go your own way to go all in on this vision. Right. And this is how Pimlico is born, correct?
00:34:38.420 - 00:34:39.810, Speaker B: That's right. Exactly.
00:34:41.060 - 00:35:03.930, Speaker A: So, yeah, tell us a little bit more about this sort of like new phase post nettermind of Timlico. In particular, we're curious about. I think we have the full vision of what's the problem? What's the sort of tools that you're using? And I guess now we are left wondering what are the challenges that you're facing nowadays trying to make this happen?
00:35:10.480 - 00:35:18.156, Speaker B: Well, first of all, never mind was like, me and Tamash, extremely good terms. We've had ways in extremely good terms. Right.
00:35:18.178 - 00:35:24.736, Speaker A: He was. That's good. We point that out. Yeah. And this is one of the reasons why we have you here. Right, because we. Exactly.
00:35:24.838 - 00:35:36.404, Speaker B: Otherwise we would not be talking to each other. Yeah, exactly. But, yeah, it was a completely different ballgame from that point on.
00:35:36.442 - 00:35:36.740, Speaker A: Right.
00:35:36.810 - 00:36:50.270, Speaker B: At that point before, I was leading a team for a bit, but actually having a bunch of support from all the other operational teams, never mind. Took a lot of burden off. Right. But when you actually have a company, you actually do everything yourself. So that involves figuring out and laying it in concrete. The actual vision of the company, that involves fundraising, that involves hiring, that involves figuring out taxes, figuring out random admin stuff, that involves managing potential interpersonal issues, when it comes to people who work at Pemlico, that involves sales, talking to a bunch of potential customers, that involves marketing, making things attractive, making sure that the product looks nice, works, actually doing engineering. So still writing a bunch of code and making sure you listen to user feedback and iterate very fast.
00:36:50.270 - 00:37:09.730, Speaker B: So it's really just like a completely new environment where you now are responsible for dealing with everything. I personally love that, but it was very new at the time.
00:37:11.860 - 00:37:27.450, Speaker A: Cool. Yeah, I can see how that's like an entirely different world, going from being a contributor to just sort of like being responsible for everything. And I guess you have much more freedom to execute the vision that you had, but it also comes with much, much more responsibility, which makes sense.
00:37:28.300 - 00:38:01.090, Speaker B: Yeah, I really love that. If something goes wrong, it's completely my fault that it goes wrong. Right. It sounds weird, but I actually really like this because that means that for the next time I know that there's something I can do, it's completely within my capabilities and abilities to make sure it never happens again. Right. It's very interesting.
00:38:01.700 - 00:38:42.930, Speaker A: Yeah, I think it's a pretty good lip way of assessment of whether the founder life is for you or not. If you're excited about this prospect of, like, everything is my responsibility, hence I have control over every single tiny little detail. If you're excited about this, then I think the direction you took makes the most sense. That's amazing. So I guess we're going to have to wrap it up very soon. As a very quick question, where do you see Pimlico a few years from now? What's your vision and ambition as to where you want Pimlico to go?
00:38:45.940 - 00:40:02.840, Speaker B: So North Star is completely revolutionizing Ethereum user experience, but like, where specifically I see pinnacle going? I think a very good medium term path for us is leading Ethereum's transition to smart accounts, meaning that it'd be fantastic if the vast majority of new users that come on start by using smart accounts, they don't get started by using EOA accounts. They get all the benefits that this new generation of account gives them, making their experience legit. And so on the metric side, this would mean the vast majority of user activity coming from ERC 457 user operations instead of vanilla Ethereum transactions from normal private key accounts. Right. I think that's an interesting metric that I look forward to tracking over the next couple of years because I think that's a really good signal to see whether we're succeeding.
00:40:04.540 - 00:40:26.770, Speaker A: That's beautiful, and I think it can do a lot of good for the Ethereum ecosystem to have this more comprehensive vision of how people interact with the blockchain in ways what are a lot more comfortable, secure, and also, like, welcoming so that we can get the adoption that we are striving for.
00:40:29.300 - 00:40:31.170, Speaker B: Absolutely. By myself.
00:40:31.860 - 00:40:53.690, Speaker A: Awesome. Well, thank you. Would you like to say any words about, for the audience, whether you're hiring or you would like people to either know more about Pimlico or even join you in making this wonderful vision happen? Do you have any words to say about that?
00:40:54.460 - 00:41:28.480, Speaker B: Oh, absolutely. So we are hiring right now. We're really focused on that, on assembling a world class team to execute on the mission, trying to keep things lean, trying to keep it under eight to ten people. Yeah, I think we have a lot of Runway. We're not going to die anytime soon. And we're extremely dedicated to this mission. So specifically, we're hiring founding engineers and founding DevOps engineers.
00:41:28.480 - 00:41:39.050, Speaker B: So if any of those two stand out as something you might be interested in, then you can visit jobs Pimlico IO to learn more.
00:41:40.540 - 00:42:42.510, Speaker A: Fantastic. So, ladies and gentlemen, this was Christophe Gasho. Really an example of how far a journey with the Nethermind internship program can take you. And, like, a testament to the fact that the sky's the limit when you have the right tools, the right guidance, and sort of like, the right infrastructure to get you started in this wonderful space that is Ethereum. And we at Nettermind are doing our best to provide this with the Nettermind internship program. So if you're on the starting point, like both of us were a couple of years ago, we would highly encourage you to have a look at our internship program. Just go to, as we had said before, go to Nethermind IO internship program, I think, or navigate around Nethermind IO and you'll see what we're doing, what we're currently interested in, and also jobs that we have open at the moment.
00:42:42.510 - 00:42:49.340, Speaker A: Thank you very much once again, Christophe, it was an honor. Best of luck at leading pimlico.
00:42:50.400 - 00:42:51.052, Speaker B: Amazing.
00:42:51.186 - 00:42:51.690, Speaker A: See you later.
