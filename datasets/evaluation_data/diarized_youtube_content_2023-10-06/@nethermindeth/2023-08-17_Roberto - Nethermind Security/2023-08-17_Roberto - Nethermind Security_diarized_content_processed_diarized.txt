00:00:00.730 - 00:00:48.678, Speaker A: Hi, my name is Roberto and I am the lead for the real time monitoring team, which is part of Netamide Security Group. This group consists of three teams, smart contract audits, real time monitoring and formal verification. The first team is all about security auditing for smart contracts. If you're looking to join this team, keen attention to detail is crucial as you'll be spotting problems that even the developers may have overlooked. Have having a proven track record of uncovering bugs and code, and experience with web three CTFs or writing security related blog posts would be great. As part of the team, you'll have the opportunity to enhance your security skills by working on cutting edge protocols in both the Ethereum and Starknet ecosystems. This includes protocols related to lending NFTs, staking, auctions, and vesting.
00:00:48.678 - 00:01:36.610, Speaker A: The second team focuses on real time monitoring solutions for blockchain activity. We work closely with the Fortune network, which is where we build detection bots. If you want to be a part of the development of these bots, you'll need to research the exploitative techniques attackers use and get familiar with protocols, code bases and documentation. By joining this team, you'll strengthen your skills with typescript and dive into tools like ethersJs. You'll also have the opportunity to deepen and broaden your knowledge of the different types of exploits that occur in the web. Three space the third team focuses on the use and development of formal methods and techniques for formally verifying smart contracts. We primarily focus on using the lean proof assistant to verify EVM based and starknet smart contracts and zero knowledge circuits.
00:01:36.610 - 00:02:00.860, Speaker A: We also developed the Horus automated formal verification tool, which allows developers to annotate their starpad smart contracts with simple specifications that the tool can then attempt to formally verify. Hold. If you join this team, you'll strengthen your functional programming skills. We mostly use Haskell and lean, as well as your knowledge of formal methods, programming language, semantics, and smart contract security.
