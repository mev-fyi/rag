00:00:00.410 - 00:01:09.490, Speaker A: Welcome back everyone, to the DeFi course. I'm Andrew and in this lecture we are going to be talking about decentralized identities and their role in DeFi. Decentralized identity is a fairly broad and expansive topic, and in this lecture we're going to focus on three main aspects of decentralized identity. To start with, we're going to talk about a fairly role that decentralized identity will play in DeFi applications, which is the need to link in external accounts like Twitter accounts or email addresses, and incorporate them into the function of some smart contract or DeFi application. We're going to talk about the attestation model, which is a high level framework for understanding the roles and processes that are involved. We'll talk a bit about decentralized identifiers and what it means to pick a good string name to identify a person or an account. And we'll talk about a technical method that's based on zero knowledge proofs or zksnarks, and that's really important for providing security guarantees like privacy.
00:01:09.490 - 00:02:27.398, Speaker A: In this context, those are called anonymous credentials. The second facet is we'll talk about real names and authoritative identities like state government ids, what you think of as ordinary real name identities that you use in the normal traditional world. We'll talk a bit about the regulations that DeFi companies or service providers might need to use authoritative identities to comply with. And we'll talk about a research project called Candid, which is a technique based on technology like cryptography and zero knowledge proofs that provides a way to bootstrap an anonymous credential from one of these legacy systems that provides authoritative identities. Finally, we'll talk about some alternatives that I think are important for the future of DeFi, which are alternative forms of identity that don't rely as much on authorities like centralized issuers or state governments to issue ids, but instead provide some alternative ways to carry out some of the desired functionality that ids play. And we'll look at two ideas in particular. One is called webs of trust, and another is called proofs of personhood.
00:02:27.398 - 00:03:15.642, Speaker A: We'll talk about those alternatives later on. To start with, we're going to talk about the problem of linking external accounts into a DeFi or smart contract application. The simplest example that I can think of where this would occur, and I'm sure you've seen examples of this before in the cryptocurrency world, is the idea of making an airdrop of some newly created tokens. And the goal is that anyone with a Twitter account is able to go and claim some allocation of this new token that's been created. So here we have Alice. Her Twitter account is Alice to go. And what she wants to be able to do is to say to this smart contract or decentralized application, I have the Twitter account, my Twitter account's Alice to go.
00:03:15.642 - 00:03:57.734, Speaker A: So go ahead and give me my airdropped portion of tokens. Now the question is, how will we go about implementing this? And maybe you can think of some ways that you might do it. There's a couple fairly straightforward ones that come to mind. I bet that you can guess or come up with what a solution would be. I think the simplest one is to have Alice generate a secret key, an Ethereum account in this case, if she doesn't already have one. And what she would do is log into Twitter and change her profile so that her profile says what her Ethereum address is. So she's logged into the Twitter account.
00:03:57.734 - 00:05:04.880, Speaker A: She set her profile to indicate that her address is what she's logged into and set it to. She has the private key to that account. And then when she asks this service to go and to send her her allocation of the airdrop token, well, the backer, the developers of the token, if they're going to assign the tokens this way, they could be the relying party. They would access Alice's Twitter account, see Alice's profile, see the address that she's indicating there, and that tells them what address they should allocate the portion of the new tokens to. You might spot the potential also to use an oracle here instead. If we didn't want to have the developers, a centralized party in the middle, go and access Alice's Twitter account to see which address she's claiming an oracle could be used. Instead, an oracle would sit in between the smart contract that's issuing the token and the oracle would fetch Twitter profiles to see which ethereum addresses are in there, and if so, allocate a portion to that address.
00:05:04.880 - 00:05:43.450, Speaker A: Besides this airdrop example. There's several others besides Airdrop. Something fairly closely related is the idea of tipping. This is where you want to send a cryptocurrency payment to the owner of a Twitter account or an Instagram account, any website, and there the challenge is that they have this account, that's who you want to send it to. But they don't already have cryptocurrency address linked to their account. If you could, you would just use that. But the idea of tipping is that you should be able to send them and make available this portion of money.
00:05:43.450 - 00:06:47.898, Speaker A: That as soon as they can prove that they've created an address and associated it with that account, they'll be able to claim that money that was set aside to them. This requires linking the external account into the smart contract context in some way. Another fundamental reason why you would want to link an external account is in order to make use of reputation as a source of extra collateral. So we have seen so far that defi derivatives instruments typically require over collateralization, and that can be expensive. You have to often put in a security deposit that's larger than whatever token trade you want to deal with. If you're able to link in some other account that already has a reputation, then maybe you could use that reputation as a kind of collateral. The idea is that if you promise to do something and you don't do it, then that can follow you back and your followers on Instagram would be angry with you that you didn't do what you promised to do in a smart contract setting.
00:06:47.898 - 00:08:10.310, Speaker A: So that's using reputation as an extra source of collateral. Another reason might be to provide a simpler single sign on service. You could sign on to a defi system or a smart contract just using your blockchain address directly, but maybe more convenient for users to be able to use their existing accounts. And for some features like a dashboard or a read only service, something where you're not supposed to be accessing your hot wallet private keys at the time might be reasonable to log in with an external account instead. Another reason is if you simply want to avoid farmers or botnets or spammers from signing up with thousands of accounts and basically using up all of your airdrop by signing up with so many different accounts, lots of social media systems like Twitter and Instagram already do their best to make sure that spammers can't sign up with an infinite number of accounts. And so by using some existing external account, you have the potential to make use of whatever anti spam measures that external account provides. And a final rationale for linking external accounts into the smart contract setting is to provide some alternate way of recovering lost keys.
00:08:10.310 - 00:09:01.930, Speaker A: Key management is difficult. Users lose keys all the time. Most issuers of accounts provide some kind of backup method, whether it is calling you on the phone, whether there's an office that you can show up to in person, or whether you just have a recovery account and they'll send the recovery account. You might have to call up their tech support line and really convince them that you're the rightful owner of the account. But if they provide alternate ways of getting into your account, even if you've lost all of your keys, lost your devices. Well, having some way that you can access a smart contract resource based on your control of an external account, that could provide some useful alternate way to recover that account. The final reason why you would want to link in external accounts that I'll mention here is the idea of one person, one vote as a kind of fairness principle.
00:09:01.930 - 00:09:53.898, Speaker A: In Defi, we're often interested in decision making in groups and decision making to determine what a DAO or some mechanism is going to do based on collecting votes of the users who are using the system or the stakeholders who have put down deposits into that system. The natural way to do that is to say $1.01 vote. The more tokens you've put into the system, the more influence you have. But it's typically considered more fair to have one person, one vote. This gives equal contribution or equal influence in the decision making, even to users who haven't put in as many tokens. And if you wanted to achieve this, then it's not enough just to count the number of Ethereum accounts, because anyone can create as many Ethereum accounts as they want.
00:09:53.898 - 00:11:06.420, Speaker A: But on the other hand, if you can use an account on some other system that does make an effort to ensure that people can only sign up one account per person, then by linking in those accounts, that can be a way that you can ensure this one person, one vote. So we'll go over these application ideas in more detail throughout the rest of the lecture. So before getting too much further into the interesting technical and security questions here, I want to introduce just some common terminology that we'll use throughout this lecture. So these are the roles that are involved in an attestation model. The idea of the attestation model is that there's a subject that's typically a user, there's an issuer who is the identity provider or the account provider. There's some kind of authority for the sake of this use case, and by an attestation, what it means is they are going to say something about the subject, the issuer is going to say something about the subject. The relying party is someone who is going to listen to the issuer, receive this attestation and learn something about the subject before interacting with them.
00:11:06.420 - 00:12:24.438, Speaker A: So to go back to the simple example of an airdrop, but just to assign it these terms, in this example, Alice is the subject, and the relying party is going to be the new token application, the smart contract, or the developers behind it, depending on how that would work. And the issuer in this case is going to be Twitter. They're the ones who provide the Twitter account and the relying party, the DAP issuer, the DAP smart contract, this new token that's conducting the airdrop. They're going to rely on the claim of the issuer that says, this is the account Alice to go. This is Alice's real name, is what's written in this case, and this is the Ethereum address that's pasted in the profile. Now, the way that this setting worked, I'll draw your attention to one aspect and then ask the question, are there any problems that you can think of with this or ways to do better? And what I'll draw your attention to as a hint for answering this question is notice that there are two places of communication with the creators of this token or the smart contract itself. They interact with Alice.
00:12:24.438 - 00:13:01.126, Speaker A: Alice says, please sign me up. This is my Twitter account. I'm ready to receive my airdrop. But they also receive communication directly from the issuer, Twitter in this case. So with that as the preface, can you think of any problems with this? Well, the main problem that I can think of is one of privacy. Putting your Ethereum address in your Twitter profile. To sign up for an airdrop of this kind is great, but this would reveal your intent to participate in this airdrop to Twitter, and it would reveal your Ethereum address associated with your Twitter account.
00:13:01.126 - 00:13:50.706, Speaker A: It would reveal this publicly because everyone can see your public Twitter profile. So this would be really bad for privacy. So let's look at another example that you're probably familiar with. This is using an ordinary state government issued id card with your age on it as a way of entering a bar. So a bar in the US anyway, is required not to allow anyone to enter who's not of a certain age. And the way that this works in practice, of course, is that you get an identity card that is produced by the issuer, some authority in your area. They issue you a document called a credential that has your identifying information on it, like your photo, your year of birth, and it has a bunch of tamper proof features.
00:13:50.706 - 00:14:36.210, Speaker A: It's supposed to be difficult to make a fake id card that passes inspection. And what you can do is show your id card to this bar. Upon entering it, all they do is check that you're of an adequate age and then let you leave. Now, what's nice about this is that unlike in the Twitter airdrop scenario, there's no communication between the issuer and the bar. The issuer never learns the Department of Motor Vehicles never learns which bars you go to because they're not involved in the transaction of you presenting your credential, your identity document to the bar. Similarly, they can't even prevent you from going to the bar if they wanted to. They can't shut off their service and prevent you from showing your id to the bar.
00:14:36.210 - 00:15:11.754, Speaker A: So in some ways, this is a lot better in terms of privacy. The act of showing it to the bar reveals your identity to the bar. We'll look at how to do better than that later on, but it doesn't reveal which locations you went to to the issuer. So this model is even better for privacy in some regards than the Twitter airdrop. And we're going to look at a couple of more high tech alternatives in a moment. But first, let's recap and just discuss some questions that we can ask about any attestation model protocol. So first of all, we would look at privacy.
00:15:11.754 - 00:16:06.850, Speaker A: What does the issuer learn about the interactions between the subject and the relying party? We also care about availability. Is the issuer needed to sign off on this interaction between the subject and the relying party? We'll also be interested in looking at issues like revocation. Does the issuer have the ability to cancel the id card? Does the subject even have the ability to cancel it if they want to? And finally, we'll look at the meaning of the attestation. Does it carry more information like the subject's address, their real name, their prior names, their transaction history? In principle, it could be anything. And is the issuer guaranteeing anything about this? Like that? It's an accurate description of your address. These are all issues by which some of the schemes we'll look at will differ. So next we'll look at a couple of mechanisms that provide some better security guarantees.
00:16:06.850 - 00:16:59.940, Speaker A: We'll start with OAuth. This is a fairly common system used in web services for single sign on. This is what it looks like when I go to log into a discourse forum and I'm presented with a bunch of options of ways that I can sign up or log into this forum. If I click the login button, I have all of these options and I'll use my GitHub account to log into it. Now, the screen that you see immediately after saying you want to log in using GitHub is it actually redirects you now to the GitHub URL. And it gives you a prompt to allow this relying party, the discourse forum, to access some of the information in my account. It basically is saying it's only going to access my email address, no other data, and I'm not giving it privileges to delete all of my GitHub repositories, for example.
00:16:59.940 - 00:17:46.740, Speaker A: So I would authorize this to log in. Now what's happening behind the scenes using a protocol called Oauth at a very high level is the following. We have GitHub as the issuer discourse. The forum is the relying party. What I do is go to discourse and request this login session. Discourse contacts GitHub and indicates that I've asked to allow discourse to see my email address. And then when I go interact with GitHub, following that redirect, GitHub prompts me to approve whether or not I should share the email with discourse, and if so, then GitHub goes and returns to them this attestation which says this is my GitHub user id and this is the email address associated with that account.
00:17:46.740 - 00:18:35.620, Speaker A: Now let's talk about an alternative that solves one of the problems that's remaining here. So first of all, this is better than the Twitter version because at least this interaction between the discourse forum and GitHub is just between those two. It isn't broadcasting my email address on some public channel. However, a problem is that GitHub is still in the middle of this interaction. I have to rely on GitHub to be available, and it shows to GitHub that I'm going to try to interact with this forum. So let's look at an alternative that's based on digital signatures and we're now going to switch examples. Now this is in the context of using the fact that I'm enrolled in the DeFi course in order to access some discounts on some website.
00:18:35.620 - 00:19:47.314, Speaker A: Well, a DeFi course would definitely want to make use of technology like digital signatures. So what they might do is issue me a signed enrollment certificate that says that I'm enrolled at a certain time and it would come with a digital signature that can only be made from the Defi university administrators. Once I have this signed document, this credential, I can pass that credential on to the website relying party. They're able to check it and effectively get the attestation that says this could only come from the Defi university administrators and it shows when I'm enrolled in the course. This is a lot better now because even though the attestation is from the university to this relying party, I don't have to show the DeFi university that this is the site that I'm visiting and trying to log into now next we're going to look at a variation of this that provides a privacy benefit. So this attestation reveals more information than I need for the student discount. In particular, this is revealing my email address when all I care about for the student discount is showing my date of enrollment.
00:19:47.314 - 00:20:43.260, Speaker A: I might want to keep my email address secret from this website. So one way that we could do this is by instead of issuing a single document with a single signature that contains all of the records that the issuer is willing to attest to about me, I could instead break them up into individually signed chunks. I have one for my email, another for my birthday, and another for the dates that I'm enrolled in this course. Now when I go and present my signed credential, I can basically break off the pieces of it and omit them, the ones that I don't want to reveal. I only need to show the signed chunks to the relying party that I care about. So I could show my enrollment attestation to the student discount website and I could reveal my birth date to the age discount website. And in this example, in both cases I'm showing them my email address.
00:20:43.260 - 00:21:39.130, Speaker A: And what prevents users from mixing and matching these credentials is that there's a signature on each one and there's some common identifier, the account name in this case that connects them all to each other, so that you're only presenting a subset of a single signed document to the relying parties. So this is an improvement. But there's still two remaining privacy problems. So the first one is that if I disclose my age, in this case to qualify for an age based discount, I'm revealing my entire birth date by doing so. And really all I needed to do for this purpose is to show that my age is in a certain range. I don't need to reveal my exact birth date. The other problem is that because I am revealing my account identifier, this means that if I go visit this website again at some later stage, I want to collect a different discount a month from now.
00:21:39.130 - 00:22:44.186, Speaker A: Well, this age discount service would be able to correlate the two uses of it. It would be able to tell that I'm using the same credential with the same identifier each time, and that's revealing more information than I need. All I should be revealing is that I'm someone who has a birth date of this age or is enrolled at this time and no more information than that. So to achieve this we're going to use a technology called anonymous credentials and it's actually going to build on the zero knowledge snarks or zero knowledge proofs that we talked about in the previous lecture. So here the idea is that I have my signed credential just like before, which has all of the pertinent information I might want to use in the credential, and it's digitally signed by the issuer Defi University in this case. And now instead of presenting the credential directly, I'm going to construct a zero knowledge proof about this credential that I have. What this means is that I'm going to produce a zero knowledge proof that makes the following statement.
00:22:44.186 - 00:23:42.050, Speaker A: It says I have a valid document, it is digitally signed by the university, and it shows in this case the attestations that I'm enrolled during the year in which I'm trying to claim this service. Now what you should remember, or you could review from the lecture previously that covered zero knowledge proofs. Zero knowledge proof we specify the statement in this case. It's maybe the session key that I'm trying to associated with the session that I'm trying to say qualifies for being I'm enrolled as a student. So this session should be able to use the enrolled student privileges, resources, whatever those are. And the statement includes what I'm revealing to this party, which is that I am enrolled in DFIU during this year 2022. The witness is all of the secret information that the zero knowledge proof or the ZK snark doesn't reveal, and it's marked in red.
00:23:42.050 - 00:24:42.280, Speaker A: So basically, my signed credential, which includes my email and my account identifier, all of that, and the signature from the DFI university, those are all kept hidden. They're part of the witness. And in a zero knowledge proof, the zero knowledge means that it's not revealing any more information about the witness. Now there's one more way that I'll discuss improving this kind of scheme, which is to add in the ability for the DeFi university to revoke the credential so that I can't use it anymore. This would make sense if I unenroll myself as a student. I'm no longer a student at DefIU, then I shouldn't get to access the free DeFI student resources. So the way that we could achieve this is that DeFiu would, in addition to signing these credentials like before and giving them to the user, they also will keep a public list of all of the active documents, all of the ones that are currently not revoked, and maybe they would update this every week.
00:24:42.280 - 00:25:28.410, Speaker A: Now what you would do is the same kind of proof as before. It would still be a ZK snark, but we would add a little bit more data to it. In particular, the statement now includes the current list published by defiu of all of the active documents that aren't revoked. And in the witness we would be using some additional information that we, the subject have, which is where in that list of non revoked ids ours shows up. So the list of document ids is public. We know which document id is ours. And so this ZK snark is proving that our document is one of the ones that's not currently revoked.
00:25:28.410 - 00:26:13.602, Speaker A: But again, the key thing is that it keeps secret which document it is. And in particular, if you go and establish a session with the server, and then at some later date a week from now, you go and establish another session. In both cases you're showing that you have a credential, but you're not revealing even that it's the same one. So your session shouldn't be correlatable. Let's go through one more example before I summarize the takeaway messages from this. So does this string bitcoin PDF, does that identify a unique document? Well, you probably have in mind with bitcoin PDF that I'm thinking of, the Satoshi white paper. This was the bitcoin founding document from 2009.
00:26:13.602 - 00:26:49.930, Speaker A: It's a PDf file. It was published on a mailing list. This is the most famous bitcoin pdf. So this is probably the one that I mean. But suppose I were concerned about making sure that I'm getting the authentic version of this white paper. Sometimes in bitcoin development, the wording of Satoshi's wisdom in the white paper is used as arguments in support of one developer decision or another. Well, another identifier that might correspond to this document is one with a URL that says, where I can go to fetch this, there's a bitcoin pdf hosted@bitcoin.org
00:26:49.930 - 00:28:23.098, Speaker A: there's also one hosted at bitcode in and even if again, bitcoin pdF is quite famous, I have an idea of which document I'm expecting to get. These are two different identifiers, and you might get a different version of the document depending on the choice of whatever operator of those respective websites has decided to put. There could be that one of them has tampered with the Satoshi white paper document, either to add in propaganda or add in their own watermark, or what have you. Now, you may have seen a name that looks like this from ipfs, and what you'll notice here is that there's a hash in between the protocol portion of this URL and the bitcoin PDF, and this is, as you might guess, a hash of the actual document. What's nice about this is that regardless of which peer in ipfs you go and fetch this document from, by using the name of the document you're fetching as something that includes the hash of that document, you can check when you get this PDF that it is actually, when hashed matches the hash that's right there in the string identifier for that document. If you go and make a different version of this identifier where you're fetching it from a web gateway, you can still do the same thing. Maybe your browser won't, by default check the hash when fetching it from an HTTPs service the way that it does if you fetch it directly from ipfs.
00:28:23.098 - 00:29:14.542, Speaker A: But regardless, the point is that the identifier in this case, because it has the hash of the document right in the identifier, you can always check that the data that you get by retrieving a document that purportedly matches this, you can always check that it matches what you expect right from the name. So let me try to tie this together with some insights. There's a famous quote in computer science. It's a fun quote because you can get some value out of it early on and come back to it many different times when you're learning about computer science and get something new from it each time. Anyway, the quote is there's only two hard problems in computer science, cache invalidation and naming things. There's a quote from Phil Carlton. He was an engineer at Netscape, and there's an explanation of this quote that I really like.
00:29:14.542 - 00:30:16.482, Speaker A: That comes from one of his advisees when he was at Netscape, Simon Hui, and says, well, the challenge here is that a name is good if it survives even into the future context, even after the name was chosen. The challenge is that later on in the future context, you don't know what other kinds of things are going to coexist in the same space and who you want to disambiguate. The thing that you're naming with those. What's happening is that in the DeFi world, we already have a fairly flexible and expressive starting point. So we have a leg up on considering decentralized identifiers in the world of defi. If you're already familiar with smart contracts at this point in the course, we're used to writing smart contract code where an address is a long public key, and that's the main unit of identity that we work with in smart contracts directly. Now, what does this mean? Is it a public key? Well, it might be.
00:30:16.482 - 00:31:08.942, Speaker A: That's one kind of address. But the address in the smart contract could also be the address of a smart contract. And that smart contract could define some access control policy that's not just a single user owns this key, but rather it's multiple users, and you need two out of three, like a multisig wallet. And of course the address could be of a smart contract that does something completely different than just be an access control policy. It could be an auction or some other mechanism. And what's nice about it is that what actually is happening behind this address doesn't really matter to us when writing the smart contract. It's all message sender like when we want to use this identifier to describe an access control, all we need to do is say, if I'm writing this function and it needs to be accessed only by Alice, I'll just check that message sender.
00:31:08.942 - 00:32:09.318, Speaker A: Is this Alice? So my code here looks the same, whether this is going to be a public key. Alice has the secret key and has to sign a message to cause this to happen. It also works if this address is the address of a smart contract, and that smart contract has to have some rules to invoke this function. And then that's the case that I would pass this required check because the other smart contract called this one, we get a kind of transparency where it doesn't matter to us what the meaning of this address is. Our smart contract framework lets us refer to it satisfying its access control policy, whatever that is. It lets us refer to that in a uniform way. Here's an example of some features that I think would be fun if we had in smart contract language, we know that this address can either be the hash of a smart contract or a public key.
00:32:09.318 - 00:33:23.038, Speaker A: Well, if we wanted to support linking external accounts, we could consider also supporting other protocols, such as the names of other blockchains other than the one we're writing a smart contract for, or even external accounts that have nothing directly to do with DeFi, like Twitter in this case. And I don't think that this syntax exists in any smart contract language as such. There are some libraries that facilitate these kind of processes of making use of linking from external accounts. But the point is that this is an example of some value that you might have by adding additional support for different kinds of identifiers into the smart contract language framework. So I'll wrap up this discussion on identifiers in this way. So as DeFi developers, you could expect to have to manage between the evolving context in which your accounts tokens and smart contracts run. You might expect to have to switch between implicit context when you want short names, and explicit context when there is contention there's other projects with potentially overlapping names that you need to separate yourself from.
00:33:23.038 - 00:34:26.820, Speaker A: And a general way of doing that is by adding some extra explicit context information into the identifiers that you're using when needed. Now, in DeFi, we have an expectation of making use of cryptography, and that's great. It gives us a leg up compared to people only doing web development or just document identifiers, where we could expect to basically make use of identifiers that have cryptographic components in them. Adding cryptography into an identifier makes it longer, which is bad for users being able to remember it or say it to each other. But doing this adds a bunch of support for built in access control. So if you include the hash of a document in an identifier, then you can check when you fetch the corresponding document that you got the right one. And by including either a public key or a program in identifier, you can, in a self describing way, indicate the access control policy corresponding to the account that's identified by that name.
00:34:26.820 - 00:35:35.362, Speaker A: And then the final note is to suggest that what you might try to do is to design names that are likely to succeed into the future. And really what this means is that you either have to anticipate what kinds of colliding names are likely to occur because of other projects competing with you in the DFI ecosystem, or if you can anticipate some standards that other projects will follow that can give you some guidance in how you can define names that will still be useful even when it's coexisting with other projects in the future. Now we are going to talk about authorities identity and real names. So, so far we've talked about two kinds of examples of identities. Accounts in a cryptocurrency system like Ethereum, and also accounts on websites like Twitter and social media accounts. And I think that everyone can tell that these really don't behave the same way as real names or the kinds of identity that you would get issued by a government. And where it comes to DFI, there's a really specific way in which these behave differently.
00:35:35.362 - 00:36:25.634, Speaker A: So when you borrow in DFI, you always have this kind of over collateralization. If you wanted to do the borrowing of $90 worth of tokens, you would typically have to deposit more than that $100 worth of Ethereum in order to initiate the deposit. The previous lectures, we talked about how defi synthetic instruments could work along these lines. The significance of that over collateralization is that if the price moves such that you are now insolvent, your position will automatically be liquidated at some point. But that's the maximum that can happen. If Alice is insolvent, she can just run away with whatever tokens she has borrowed. The mechanism is going to liquidate all of that ethereum.
00:36:25.634 - 00:37:21.420, Speaker A: It's going to try to counteract the effect of the loss in price as much as it can. But all of Alice's other positions and other mechanisms, or her other addresses on the same chain, all of those are going to be completely unaffected. She can abandon her position, and the only thing that the smart contract mechanism can do about it is whatever it can do with the initial security deposit she made, and that's it. And we know that this isn't how things work in the real world. In the real world of ordinary banks and government identities, the tradfi world, when you go to borrow, you don't over collateralize, you don't deposit $110 in order to borrow 100. You just go and borrow the $100. And the reason why is that in the system of identities and credit card credit scores, you can't just run away.
00:37:21.420 - 00:38:14.874, Speaker A: It's like a brick wall. If you try to escape your credit score, eventually they'll send a repo man, or collections would go after you. And the record that you don't pay back the $100 that you borrowed, that goes on your permanent credit score, and it doesn't go away that easily. So, just to briefly summarize these very intuitive differences between real name identities and accounts online, you can't abandon your legal real name identity the way that you can a social media account. You can't successfully escape debts just by changing your name. For example, if there's a warrant out for your arrest, then abandoning your name doesn't help either. You can't just create multiple different identities and use whichever one suits you at the time.
00:38:14.874 - 00:39:20.240, Speaker A: You have one identity, and that repo guy can go take some other assets that you have because of a debt that you occurred in one system, and you're also not allowed to sell your identity. You can't just transfer ownership of yourself to some other entity. Way that real names work in ordinary society and in the legal system, that's not something that you're allowed to do now, real names and authoritative ids, these are required in a lot of places that you encounter in the DeFi world, such as signing up for a centralized exchange, you have to pass their know your customer checks and present your id. Even using an automated cryptocurrency ATM, depending on how much you are trying to deposit or withdraw, you'll have to present a government issued id there as well. There are many specific regulations that create some specific requirements to use identity of a certain kind. So one is the OFAC sanctions list. So this is an agency in the US government that publishes a sanctions list.
00:39:20.240 - 00:40:30.578, Speaker A: And if you are a financial institution that is processing a transaction, then in order to comply with the sanctions list, you're required to check that the person or entity that you are sending the transaction to does not appear on this list. You have to check this public list and make sure that who you're sending the money to isn't on that list. A second place where this shows up is the travel rule, which is part of the Bank Secrecy act in the US. It's something that any money services business must comply with. Exchanges are considered money services business, and roughly what it says is that you have to collect and store information about the real name identity of your client. And if your client is using your money service business to transmit money to someone else, you have to also collect and store the real name identity of who is the recipient of this transaction. All right? And cryptocurrencies and many service providers in the cryptocurrency ecosystem are considered money services businesses.
00:40:30.578 - 00:41:42.718, Speaker A: So these rules would apply to them. There's an inherent tension between privacy and accountability here, which is that these regulations say that you have to collect and retain certain kinds of identifying information, and that would seem to go at ods with the privacy goals. So let's discuss a couple of features of the identity system as a whole associated with real names and legal ids that are a little bit less obvious. So one is that you always have the ability to show up in person and reissue your credentials and identity documents if you've lost them or they get stolen. It may be time consuming or difficult to do, like if you lose your passport and have to show up to a government office to get it reissued. But it can be done, and it's a feature of the system surrounding identity overall. Another protection that is associated with your real name and your persistent identity is that there are a bunch of protections and liabilities associated with the use of your personally identifying information.
00:41:42.718 - 00:43:03.560, Speaker A: So a service provider that has a data breach that involves losing the identifying information of their customers, they can end up having some obligation to report this to security agency of the government and to notify their users about it. What this means is that the personally identifying information, it's actually a liability for a company to have to interact with and store all elseql. They would prefer to store as little of this as possible to avoid that liability. Another interesting example is the right to be forgotten. This generally refers to European Union laws like GDPR, although similar facets of this exist in the US as well. What the right to be forgotten roughly says, among other things, is that if you are a service provider that stores some personally identifying information, even because you received consent from the subject to store that information about them, if they change their mind and want to ask you to remove all of that information that you were storing, well then in the typical case, you're required to respect their request and go ahead and get rid of that information, allowing them to be forgotten. So there's some limits associated with storing personally identifying information.
00:43:03.560 - 00:43:49.958, Speaker A: The final example that I'll give here is the potential for bankruptcy protections. So I gave the example of how your credit score is permanent and you can't just walk away from a debt by pretending that you changed your name. Well, there are limits to how much a debt can follow you, and in particular you can declare bankruptcy. And that has the effect of canceling all of the debts associated with you. It harms your credit score, starts it over again from scratch. It's also difficult, and there are a lot of processes that go along with it, and it only works for some kinds of debts. It doesn't apply, for example, to student loans, among some other things.
00:43:49.958 - 00:44:57.370, Speaker A: But in general, it is possible to go bankrupt. And that's one thing that can have the effect of starting your credit score again over. I give all of these examples mainly because any attempt to make an alternative to the existing real name legal identity system should probably try to satisfy some of these desirable properties. It would be easy, for example, to make an alternative identity system that ends up not having any form of bankruptcy relief whatsoever, and that could end up being less humane than the current id system that we're used to. Now, we're going to talk about a research project called Candid, which aims to provide a way to bootstrap fancy anonymous credentials like we've talked about from legacy providers of identities like government agencies. This is a research project with a bunch of co authors from my group and Ari Jules's group as well. And the lead student authors of this were Deepak Mehram and Jaslene Malvai, and we'll have the link to this to the paper in the course notes.
00:44:57.370 - 00:45:56.314, Speaker A: So let's talk about the bootstrapping problem that candid aims to solve. So we talked about the virtues of the anonymous credentials protocol, but we didn't say very much about what the issuers are supposed to do or how they're going to show up. And there seems to be a chicken and egg problem where we need to have issuers that are willing to create these credentials that can be used in the anonymous credential system. But we also won't have issuers unless there's already users that are interested in using the system, and users won't show up unless there's issuers. So there's a getting this thing started problem to start with. Another is that you want to be able to have some flexibility where you can use your credential for potentially new services that aren't envisioned at the time that the anonymous credential system is created. And so you can imagine that the first issuers will probably have limited APIs that you can use with their systems.
00:45:56.314 - 00:47:00.158, Speaker A: There seems to be an inherent incentive against the kind of flexibility where the issuers would become a potential bottleneck or choke point for trust. They'd have an incentive to keep control over your data rather than allow you to use it very freely. Is that data something that might be of value to them? There also seems to be a concern about the privacy involved in getting your credentials issued in the first place. Depending on how the anonymous credentials work, the issuers might learn what kind of credentials or what kinds of uses of the credentials you had in mind. So the approach that candid takes is that it is going to be providing a bootstrapping mechanism where you can generate an anonymous credential in a flexible way, even by making use of a legacy identity provider that doesn't even know that they're providing support for anonymous credentials. Candid also provides a mechanism for key management. And really what we mean by this is that there's a way that you can reissue your anonymous credential.
00:47:00.158 - 00:48:16.890, Speaker A: Even if you've lost your secret keys, lost your device, lost everything else, you can still have a way that you can reissue your anonymous credentials. It'll also provide this one person, one id quality where a single individual isn't able to issue multiple ids in the candid system, candid Alt, and finally will also include some features that make it able to comply with those regulations, like travel world. So let's start by going into even more detail about how bootstrapping can work, and this is something that happens even if you want to try to get a driver's license, which is maybe the most familiar form of government issued id. And the way that you get an ordinary driver's license is in fact by going through a bootstrapping process. What that means is that to get this state issued driver's license, you have to show up with some form of proof of your citizenship status. Social Security card could do that. You also need to show what your age is, and a birth certificate is one document that you could show the DMV to show that they might also need to collect some information about your address or your full name.
00:48:16.890 - 00:49:36.280, Speaker A: Those are things that you could get from bills or bank statements. And if you need to show proof of your address, then you can show some postmarked mail that you've received. And basically, if you show all of these different portions of identifying information to the DMV, they'll accept that as sufficient documents and they'll go and issue you the credential that you can use any place that accepts a state issued id. Now let's talk about how to do this for decentralized ids like anonymous credentials. The basic idea is that we'll make use of the oracles just like we talked about in the previous lecture on Oracles. The idea is that each of these websites or each of these systems, like the Social Security Administration and hospital that issues health certificates and a bank that issues statements and post service, most of these have some form of website that allows you to log in and once logged in, access some of this identifying information. The basic approach is that we're going to use the fact that they offer a web interface, even though it's not a digitally signed anonymous credential interface, it's just an HTTPs website.
00:49:36.280 - 00:50:28.840, Speaker A: We're going to use the fact that it's a website in order to generate an anonymous credential. And so we'll do this by making use of oracles like we talked about in the previous lecture. What will happen is that Alice, the subject here, will form connections to each one of these websites. And what she'll do is then interact with the committee of nodes forming the Oracle committee. This is an oracle system that has multiple nodes forming a committee. And what Alice will do is she will show the transcript of her TLS session with each of these verifying nodes. In fact, like we talked about with Deco, she may actually have to interact with those nodes so that they're like a third party to the TLS connection between Alice and each one of these services.
00:50:28.840 - 00:51:40.426, Speaker A: Anyway, through this process, she'll be able to prove to each of these nodes that she was able to log in over TLS, form an authenticated connection, log in with whatever login mechanism these websites use, and that she's able to access her account information and present these nodes with evidence of what that account information is. These nodes are then going to work together to jointly create a signed credential, and that credential will be something that Alice can then use in an anonymous credentials system. So to summarize, let's go over the security properties that candid offers. So first of all, the main privacy goal is that the committee involved in preparing this credential only ever gets to see the final output of the credential. The committee doesn't get to learn the contents of the individual records that Alice retrieves by interacting with these different websites that provide some identifying information. The main value of candid is that it works with legacy existing web services. They don't have to do any modification at all.
00:51:40.426 - 00:52:38.078, Speaker A: They don't have to support a new anonymous credential library. They can work exactly as they are and candid can still make use of these legacy systems. And the final value is that candid has some flexibility because in principle, any website at all can feed attestation data of any kind and any such data can be used as the basis for creating an anonymous credential this way. Now, we talked about the goal of recovery through the use of candid, so let's talk a bit about how that will work. So first of all, this is going to make use of secret sharing, and this is a new concept we haven't used in this course yet. So I'll talk a little bit about it now. And what this is going to do is it's going to make use of a committee of nodes where we can assume that some fraction of them are going to be honest, they're not going to all collude to try to steal secret data.
00:52:38.078 - 00:53:13.130, Speaker A: We had suggested that these nodes might be the oracle service in the use of oracle. So just think of it as the committee of oracle nodes and we're going to use them for secret sharing our backup data. So the idea of secret sharing is that each node in a committee holds a share of a secret. No individual one of these reveals any information about the secret. What you need to do is reach some threshold like t out of n of them. It could be three out of five, for example, and three out of five working together would be able to reconstruct the secret. But any fewer than that threshold t.
00:53:13.130 - 00:54:00.470, Speaker A: Even if it's a number smaller than t. If all those servers work together, even colluding, they still won't recover any information about the secret. An example encoding for three out of three secret sharing can be done by using XoR encoding. The way that this would work is, for example, we want to store this random number 100:11. What we would do is pick for the share of the first out of the three servers, we could pick a random string, this case one. The second share would also be picked at random 1010. And finally, for the third out of three shares, we solve it such that when you xor all of the shares together, you get the original secret 100:11.
00:54:00.470 - 00:54:34.814, Speaker A: So would be the share three. What this guarantees is that it's a three out of three secret sharing. If you pick any two of the servers and allow them to work together, they don't learn any information about the secret. Only by combining all three of the shares can you reconstruct the original secret. And this example is three out of three secret sharing. In general, this XoR encoding works for n out of n, all of the servers working together. Secret sharing.
00:54:34.814 - 00:55:33.190, Speaker A: There's other variations of secret sharing I won't go into here, but that allow you to hit arbitrary thresholds, for example, three out of five. So to summarize, the idea is that Alice will store her secrets, her backup keys, in a secret shared fashion, among this committee of nodes. And what will these nodes do to give the key back to Alice when she asks for it? Well, she can't show her key as evidence that she's Alice. She's authorized to ask for this backup instead. The idea is Alice would use her ability to log on to some combination of her existing accounts. Like if she can log on to her Google account, Facebook account, and her Twitter account, then she would be able to use this to convince the committee of nodes to help her reconstruct her key from the secret shared backup that they have. So this is an oracle method for key recovery built into candid.
00:55:33.190 - 00:56:37.580, Speaker A: So to sum up, we've talked about a technique called candid that can be used for bootstrapping anonymous credentials by starting from legacy web based identity authorities. And this can work even if the legacy providers don't make any updates to support this, even if they don't do anything in particular to try to support it, it can work with them as they are. And the key technique that this makes use of is oracles, which in turn can be based on a combination of zero knowledge proofs, secret sharing computation, or trusted hardware. Now I'll talk about one last idea for identity alternatives in Defi. And this is an idea that comes from Brian Ford and his research group. It's called proofs of personhood. And the idea is to say that if in many situations, what we care about is that property of real names, which is that there's one person, one account, you don't have civil attacks where one person can create dozens of fake identities and take over the system that way.
00:56:37.580 - 00:57:45.410, Speaker A: And the insight here is that if all you need is to have this one person, one account property, you don't need a whole lot of other identifying information like real names and addresses. If this is all that you need, maybe there's a way to do it in a more privacy preserving, in an even more authority minimized way that doesn't rely on issuers at all. Before showing how this works, I want to go through the example of quadratic funding, which is one example application, where this kind of one person, one account is an important idea without going into too much detail about how quadratic funding works, but we'll leave a link to some more info about it in the course notes. It's a kind of method for funding public goods. The idea is that you have crowdsourcing, crowdfunding for donors that are going to contribute to projects that they want to see funded. And there's also some large grant matching organization that wants to help amplify the decisions of this crowd by matching their donations. Now, the tension is that they want to encourage lots of individual donors to contribute.
00:57:45.410 - 00:58:22.190, Speaker A: They want whales large contributors to be able to participate as well. But what they really want is to encourage a large number of people to participate. And the idea is for the grant matching organization to scale the amount of matching that they do by the square root of each contribution. And I'll explain, and I'll give some indication of why this is the case in a moment. I'm using here an illustration from block science. We'll give a link to this blog post. It describes the quadratic funding technique fairly well, and it in turn is based on an illustration from Vitalik.
00:58:22.190 - 00:59:07.962, Speaker A: The idea here is that we're depicting in this little squares and lines chart the amount of contributions by each contributor and the total amount contributed by the matching organization. In this example, there's four squares. Those are four contributions, and the area of each square is the amount of the contribution. So the top left small contribution, the next square, that's the biggest one. A third person contributes that medium sized square and another medium sized square. It's the area of the squares, that's the size of each user contribution. Now, the idea was that the grant matching organization would contribute proportional to the square root of the amount.
00:59:07.962 - 00:59:39.090, Speaker A: So think of the diagonal line going through each square as the square root. It's like 1.4 times the square root. It's effectively the square root of the contribution amount. So the idea is that if you add up all of the lines going through these different squares, remember the area of the square is the amount each user contributes. The line going through the square is those sum of square roots. And the idea is that the matching organization is going to match the total amount of funds.
00:59:39.090 - 01:00:46.262, Speaker A: In the yellow area. The entire square is determined by lining up all the contributions on this diagonal and all of the shaded region of this square, except for the portion of the individual contributions. That's what's being provided by the grant matching organization. So this is not meant to go into quadratic funding. But I wanted to illustrate this example because want to explain what goes wrong if we fail to insure one person, one account? What would go wrong if a large contributor could break up their bid into, rather than just being a big contribution from one account, instead, it would be a lot of small contributions. Well, if you imagine breaking this square up into lots and lots of small squares that stretch along this, that have the same total area, but they would stretch further. Basically by splitting up your contribution into tiny contributions by lots of different accounts, you would make the grant matching organization have to pay a lot more for the same amount of contribution that you would input.
01:00:46.262 - 01:01:39.386, Speaker A: And that would go against the goals of this quadratic funding mechanism. All of this is to say quadratic funding is an example of a mechanism that relies for its incentive properties. It relies on each individual having at most one account in the mechanism. So we're back to that problem of how can you enforce that property without using real names and government issued authoritative ids? So that's our question. So how does proof of personhood solve this? Well, so proof of personhood, or a pseudonym party is an idea that works like the following. There's a lot of variations, but I'll describe one of them. The basic idea is that we carry out an event that's going to take place at a particular time, and it'll take place in a location that is a room that is like a public event space.
01:01:39.386 - 01:02:34.654, Speaker A: You could imagine this is something that could be carried out, like at the registration booth for a DeFi conference, something like that. The idea is that anyone is allowed to enter, they enter and they're participating in this event, they're physically showing up in this event space. And what happens is there's an event coordinator who is organizing the proof of personhood process here. And the idea is that when it's time to go through the registration process, he stands at the one entry and exit to this room. What I am meaning to indicate here by there being one entrance and exit and being the video cameras up here is that this is a space where the only way in and out of the room is through this one door. It would work just as well if there were several doors for fire safety, but just a small number of them. And that there's some video record that's documenting everything that happens here.
01:02:34.654 - 01:03:19.706, Speaker A: So that if people flew through the ceiling tiles and tried to sneak into the room, that it would be hard to have video evidence that showed that nothing like that happened. Anyway, in this example, there's only one exit from this room. The organizer is standing there. And what will happen is that as each individual goes to leave, they form a queue and go to leave. They'll run some proof of personhood software on their mobile device. They'll generate a private key that stays on the device, they'll generate a public key that they can display to the organizer as they leave. The organizer is going to scan the public key presented by each individual on their way out of the room, and the organizer is going to store all of those public keys in a public bulletin board.
01:03:19.706 - 01:04:19.102, Speaker A: The rule is that once you leave the room, the conference organizer has already scanned your key and you're not allowed to go back in the room. Like once the organizer starts scanning keys, this acts like a one way valve. This door, people can leave as they leave. Each person gets to register one public key with the conference organizer, and then they have to leave and they can't go do it again. So what all does this guarantee? Well, this guarantees that you have one person, one account, because the organizer will not scan multiple public keys presented by the same person standing right in front of them. And once they exit this room, there's no way for them to come back in without being caught by the security cameras there. Now what's nice about this is that, as you can tell by the little question marks on all the people here, this organizer doesn't have to carry out any identifying task other than seeing the person show up in front of them, scan their key, and let them leave.
01:04:19.102 - 01:05:07.306, Speaker A: He doesn't have to check their passport, he doesn't have to collect their Twitter account or their ethereum address. No other identities or other account information is collected, they can, in fact, all be wearing masks. He doesn't even have to physically see any distinctive information about their appearance. Again, the purpose of this is just to get into this situation where we have one person, one public key on this bulletin board. What do you do once you have this public key and you've left the room and you have your private key? Well, I have nothing further to show on this on the slide, but, well, you could use that as the basis for an anonymous login or an anonymous credential. The credential doesn't say anything more than this is an identifier and it's one person. When you go and use the credential, you might do the same trick.
01:05:07.306 - 01:06:09.460, Speaker A: We've mentioned a couple of times now where you say, I am one of the people that shows up on this bulletin board, but without revealing which one of them you are. That way, even if the organizer saw your public key and saw your face when you were leaving, well, if you used it as an anonymous credential, then even that wouldn't be linkable to whatever you do with this afterwards. Now, what's an alternative to this? I think that the most closely related project that you might have seen in the DeFi space is proofs of attendance protocol or pope tokens. This is a kind of popular thing to do. They'll give these out at cryptocurrency related events. The idea is that these would get handed out by a conference organizer to one per each attendee. And the idea is that each attendee is supposed to keep the one that they received, and at some later time, they can go online and use the little key code that's there as a way of claiming their on chain token that commemorates the fact that they were there at the event.
01:06:09.460 - 01:07:01.106, Speaker A: Now, I think it's interesting to compare and contrast the proof of personhood pseudonym party with the pope tokens process. Are there any differences that you can think of regarding privacy or one person, one vote? I'll let you think for a moment, but I'll go ahead and answer. What I think of are some of the differences here. If the users scan a public key on an app as they're leaving, it seems a little bit less likely that they would simply hand their phone to another person. In contrast with the pope tokens, it's not uncommon at a DeFi conference to see a little pile of discarded pope tokens after the event. Even if they're fairly popular and people hold on to them, some people will end up forgetting about it. Or leaving it, because the token itself has all of the information on it.
01:07:01.106 - 01:08:32.190, Speaker A: It's pretty easy for someone to stand outside the conference and ask you if they could have your pope token. So there's a little bit of a difference between the process of scanning upon registration using a phone that you're likely to hold onto as an individual from having just a token that is entirely self contained, where it's perhaps easier to share with others. In any case, both of these are tackling the same kind of problem, which is how can you build some identifier that isn't personally identifying and associated to an individual, but still can make use of the idea of gatherings in public spaces as a way of distributing tokens such that they end up roughly with one person holding one token? Okay, so let's wrap up and summarize what we've talked about in this decentralized identity lecture. So I think that DeFi developers are in a really great position to innovate in some very interesting ways on how we approach identity. One main reason is that DeFi developers are likely to make use of the wide range of cryptographic tools that we have for dealing with identity. These include things like digital signatures, snark proofs, and oracles. And altogether these technologies are great because they can minimize the amount of reliance that our protocols have on authorities or on issuers for the privacy and availability and other security goals of our schemes.
01:08:32.190 - 01:09:52.420, Speaker A: A lesson about decentralized identity is that we can expect to have to be flexible with identities and naming schemes, in part due to the fact that in DeFi projects and cryptocurrencies, there's lots of competing projects, lots of composition and interoperability between different projects, a rapidly evolving nature. All the technology evolves very fast in this space, and it's fairly common to have project forks where a name that uniquely identified an account one day perhaps no longer is sufficient to identify that account the next day, due to a project fork that appears so, DeFi developers can expect to be pretty flexible. And finally, we talked about a couple of alternatives to identity that are maybe different than what you think of in terms of real names and legal identities. I think that the future of decentralized identity that DeFi developers explore will likely involve some creative approaches to identity, and you could imagine that they're likely to make use of low authority identifiers that don't rely on trusted authorities to issue them like traditional mechanisms do, but instead rely on something else, whether it's promoting pseudonyms or making use of physical in person events or something else. We can't imagine now, but we talked about a couple of ideas of what those could look like.
