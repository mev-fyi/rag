00:00:00.490 - 00:00:26.358, Speaker A: Hi everyone, and welcome to another lecture in this MOOC on decentralized finance. My name is Tim Roughgarden. I'm a professor at Columbia University. I'm also the head of research at a 16 Z crypto. And in this lecture I wanted to talk about three interrelated topics crypto economics, token design and then incentives. More broadly, in decentralized finance, the talk is going to have two parts. Each one will be sort of roughly 30 minutes.
00:00:26.358 - 00:01:12.622, Speaker A: In the first half, we're going to really drill down on problems in crypto economics. And through examples, I aim to demonstrate to you the sort of unique features of the problems that come up in this domain. In particular, we will compare and contrast problems in cryptoeconomics with those in the more traditional field of mechanism design. And we'll be emphasizing the unique interplay between the micro and macroeconomic decisions that come up when you solve problems in that domain. Second half of this lecture we're going to focus squarely on DeFi. And thanks upfront to Anthony Lee Zhang, who's a professor at the University of Chicago, for kindly letting me to steal some of his slides for the second half of that lecture. So we'll go over the tricks of the trade for managing incentives in DeFi.
00:01:12.622 - 00:02:08.014, Speaker A: We'll talk about airdrops, we'll talk about yield, farming and then we'll wrap up the lecture just with a sort of broad, wide ranging discussion around tokenomics and token design. So in other words, the many, many questions you have to ask yourself when you're contemplating adding a native currency, adding a token to your own project. So let's get started. I thought it would be useful to start by comparing and contrasting the types of problems that come up in crypto economics with the types of problems that have traditionally come up in mechanism design, which is a subfield of microeconomics. Now, mechanism design, one of the descriptions I like is as inverse game theory. So what do I mean by game theory? When game theory, usually some game falls from the sky and you're just tasked with studying it, right? Maybe it's Prisoner's Dilemma, maybe it's Tragedy of the Commons, rock, paper, scissors, whatever. And then in game theory, you kind of investigate it from a strategic perspective.
00:02:08.014 - 00:02:57.682, Speaker A: You say any of the players have, for example, dominant strategies. What are the Nash equilibria of the game that you're looking at? In other words, given a game, you try to identify what are the most plausible outcomes of that game. Meanwhile, in mechanism design, you start not with the game but with the outcome and of it's an outcome you want to see happen. Like all of your protocol participants, sort of following the protocol as you intended them to. And then starting from the outcome, you reverse engineer a game for which that desired outcome is in fact an equilibrium. Maybe ideally an equilibrium of dominant strategies, but if nothing else, a Nash equilibrium. So mechanism design has a strong engineering flavor that's probably one of the reasons why it's been one of the strongest points of contact between computer science and economics.
00:02:57.682 - 00:03:49.938, Speaker A: There's even kind of a meme originating in a paper of Al Roth about mechanism design as economist, as engineer. We've already mentioned one example of a sort of desired outcome all protocol participants following the protocol as intended. Another very basic one, also relevant for us will be imagine you just have some scarce resource that you want to allocate in the most efficient possible way. You want to allocate it to those who value it the most. If you've ever heard of like a second Price or Vic re Auction or the Generalization to the Vicary Clark Groves or VCG mechanism, those are all really just games in the sense that they're ways of setting up payments. They're games in which the desired outcome, welfare maximizing allocation of the scarce resources arises as the dominant strategy equilibrium. So these are all sort of games that incentivize participants to report their true value for what's being allocated.
00:03:49.938 - 00:04:51.980, Speaker A: And then with that accurate information, the mechanism is in a position to have an efficient allocation of the scarce resources. Now, in many, not all, but in many applications of mechanism design, including these Vic re auction and VCG mechanism examples, there are payments involved. There will be a sort of transfer of money between the participants of the mechanism and the person running the mechanism. And generally in mechanism design, you don't really worry much about what this money is. It's something like US dollars and you don't think much more about it. Now, many of the key problems in cryptoeconomics concern the following question, which is what if when we are designing our mechanism, we have access to a cryptocurrency, to a currency native, to a blockchain protocol on which that mechanism is executing? So this is just a really fascinating question. I don't really know of an analog of this in the traditional economics literature from the pre blockchain days.
00:04:51.980 - 00:05:56.582, Speaker A: And this question is really interesting for two reasons. The first reason is it just enlarges the design space, right? So I'm just letting you do more things with mechanisms than you could before you could access sort of native cryptocurrency. You might ask what could you do with that power? Well, for example, you might be able to print new money, meaning new coins in the native cryptocurrency, or conversely, take those coins permanently out of circulation, right? Imagine traditional application of like a vikri auction where the mechanism description includes oh, by the way, just print some new US dollars to sort of complete the description. It would look nuts. But this is actually supernatural in the context of blockchain protocols that host cryptocurrencies. The second reason this question is so interesting is because with that power, for example, to mint new coins or burn old coins, with that power comes responsibility in the sense that there are then macroeconomic consequences of your mechanism. It actually affects the supply of the native currency that it's working with.
00:05:56.582 - 00:06:47.226, Speaker A: Think about running like a second price auction in the real world, right? You are not thinking about the US money supply, right? It has nothing to do with you. It's totally outside of your mechanism. Whereas in these types of problems in cryptoeconomics the microeconomic design aspects of the mechanism are just intrinsically coupled to the macroeconomic consequences of the mechanism which again is something I've really just never seen it before. So let's proceed to two, I think really good examples of these types of problems in cryptoeconomics and in particular this interplay between the micro and the macroeconomics in mechanism design. So let's go back to the beginning. Let's go back to Nakamoto and the Bitcoin protocol and let's examine it through a mechanism design lens. So let's start with the desired outcome.
00:06:47.226 - 00:07:46.986, Speaker A: So here we'd just like everybody to follow the protocol as intended, which means every Bitcoin miner, we would like to see them dutifully trying to solve their proof of work crypto puzzles and in doing so, trying to add a block extending the end of the longest chain. The question then is how do we reverse engineer a game like, for example, payoffs to the participants that incentivizes them to act in this way so the behaving in this way constitutes an equilibrium of that game. Nakamoto and Bitcoin approach this in what is probably the most natural possible way, which is, you know, whenever a miner gets a block on the longest chain, let's give them a reward. We're not interested in blocks that are off of the longest chain. So blocks off the longest chain will get no reward. And the intuition behind that is then sort of pretty clear, right? So as a miner, your rewards come purely from blocks that get added to the longest chain. So any block that you create, you want to maximize the likelihood that it's going to wind up on the longest chain.
00:07:46.986 - 00:09:19.562, Speaker A: And intuitively like what could you do that would be better than just appending it to the end of the longest chain such as it is right now? There's one quick digression which is that in a famous paper almost a decade ago by AOL and Surrey, they showed that actually this intuition isn't 100% correct. It does incentivize miners to coordinate on the longest chain in certain regimes. There are other regimes where actually, while it is true nodes are incentivized to some extent to add blocks to the longest chain in an orderly fashion, in some regimes they're incentivized even more to behave in unintended ways deviating from the longest chain protocol. And this you can interpret as sort of a cautionary tale of just how hard it is to get the game theory right in the design of blockchain protocols. Now, for this idea of rewarding blocks in the longest chain, for that to be meaningful, it must be that those rewards have real economic value and so the question is, like, where is that money? Where is that value going to be coming from? Who's going to pay for those rewards that are going to bitcoin miners? So this question would be difficult, if not impossible, to answer without access to some native currency, to some cryptocurrency. But of course, the bitcoin protocol does have access to its own native currency. And in particular, the protocol is in a position, whenever a block is added to the longest chain, to simply mint new bitcoins, currently six and a quarter bitcoins.
00:09:19.562 - 00:10:09.146, Speaker A: And then that is the reward that gets directed to the creator of that block. This is, in fact, the only way that bitcoins have ever been brought into circulation. And here already you can start seeing that there are, in fact, macroeconomic consequences of these mechanism design decisions. Right? So printing new money, that's a form of inflation. So when we ask the question if meaningful value is going to sort of creators of these blocks, where is that value coming from? It's basically coming from the holders of that cryptocurrency, so from bitcoin holders in the form of a type of dilution. So from my description so far, it probably just sounds like money is going to be printed in perpetuity, right? Blocks are going to keep getting created. I said with every block, new coins get minted.
00:10:09.146 - 00:11:09.458, Speaker A: So it would seem that the supply of bitcoins is always going to be increasing, but famously, that is not the case. You could imagine a version of Bitcoin like that. But Nakamoto famously was very intentional about setting a hard cap on the number of bitcoins that could ever possibly be in circulation, that number being 21 million. And I want to emphasize this design decision in bitcoin is really orthogonal to all of the other stuff you might have heard about, right? Longest chain consensus, proof of work, civil resistance, UT, HEXOS, the bitcoin scripting language. You could have all of that stuff with a different macroeconomic policy. But in this independent dimension, nakamoto required that there would be this hard cap on the number of bitcoins, perhaps as a reaction to the bank bailouts that were happening at that time during the great recession. So, again, Nakamoto was not like, logically forced into this macroeconomic policy, but then after deciding upon this macroeconomic policy, it logically forced other aspects of the design.
00:11:09.458 - 00:12:04.814, Speaker A: Right, given that the bitcoin protocol never burns bitcoins, so bitcoins never get deliberately removed from circulation. So the money supply is only increasing. So if you're going to have a hard cap of 21 million, that means at some point, the block rewards have to be going to zero. And that's currently expected to happen in the year something like 21 40. All right, so at this point, you'd be totally right to circle back to our original question, which is like, okay, well, then what's actually our plan to sort of motivate nodes to carry out the bitcoin protocol if we're not going to use black rewards. The vision has always been since the Bitcoin white paper, that, look, if Bitcoin protocol is still being used over 100 years from now, presumably it's pretty valuable, and presumably people are going to be paying nontrivial transaction fees for the privilege of their transactions being included. So the hope was always that decreasing block rewards would be supplanted with increasing transaction fees.
00:12:04.814 - 00:12:44.522, Speaker A: It's always been obvious that if that didn't happen, if the block rewards went to zero and the transaction fees stayed small, it's always been clear that the bitcoin protocol would cease to be useful, at least for sort of valuable transactions. It would have poor economic security. There's also a much sort of more subtle issue which was investigated in detail in a paper six or seven years ago by Carlston At All, which is that another difference between block rewards and transaction fees is that block rewards, they're always the same, every single block. So currently it's six and a quarter bitcoins for every block. Doesn't matter if it's today's block or tomorrow's block or whatever. Yes, every four years it changes. But sort of locally, all blocks have exactly the same block reward.
00:12:44.522 - 00:13:20.300, Speaker A: Transaction fees, meanwhile, can vary by an order of magnitude or more from block to block. So you have high variance in transaction fees you did not have with block rewards. And that actually creates some additional game theoretic issues. For example, imagine you're a bitcoin miner, and the last miner that sort of produced a block cleared out the mempool. There's nothing left, and all of the transactions that it included had like tons of transaction fees. So the last Bitcoin miner just made a killing and there's literally no transactions for you remaining at all. Well, then you got to start wondering, especially if the block reward is pretty small.
00:13:20.300 - 00:14:02.466, Speaker A: Maybe instead of trying to extend that last lucky miner their block, like I'm supposed to do, maybe I'll actually try to fork their block. So basically replay a version of almost the same block, maybe with a few less transactions, but basically stealing most of their transaction fees. And more generally, when you have very small block rewards and high variance in transaction fees, miners are incentivized to keep undercutting each other as opposed to extending each other's blocks. And that would be a real issue. Now, with transaction fees, you can imagine pretty simple tweaks to Bitcoin that would fix this. It would be a hard fork, but it wouldn't be a dramatic hard fork. For example, you can imagine smoothing transaction fees over many blocks.
00:14:02.466 - 00:14:45.942, Speaker A: So maybe when you mine a block, you would get 1% of the transaction fees of that block, plus you'd get 1% cut of the transaction fees of each of the next 99 blocks as well. Then it wouldn't be a perfectly constant reward from block to block, but it would presumably be close enough. So when this Carlston At All paper came out, ethereum had really sort of just started. There certainly wasn't any DeFi or decentralized finance. So pretty much the only things there were to worry about were block rewards and transaction fees. There was not really any other source of minor revenue back then. Now, and this is what so often happens with good research, which is that if you nail the essence of some issue, you just find that it just sort of reoccurs in disguise in a way you never could have intended many years later.
00:14:45.942 - 00:15:41.340, Speaker A: And that's exactly what's happened with that Carlson Atl study, because their identification of these undercutting issues that miners are incentivized to carry out if there's high variance revenue coming from blocks, that's now become more relevant than ever with the advent of decentralized finance on Ethereum and other smart contract platforms. There's something known as mev. I'm not going to even try to define it, but roughly think of it as like miners or block producers kind of siphoning revenue off of the application layer, thereby giving them a third sort of stream of rewards. And even more so than with transaction fees, mev opportunities can vary tremendously, block to block by orders of magnitude. So again, you sort of want to try to think about sort of smoothing them out. Now that's going to be harder with mev than with transaction fees, because transaction fees are directly visible to the layer one. So for example, to Ethereum mainnet, and it's in a position to just smooth it out itself.
00:15:41.340 - 00:16:32.262, Speaker A: Mev lives at the application layer, so it's not directly observable by the underlying consensus protocol by layer one. So to carry out this smoothing idea, you need to have some other ingredient, like maybe a sort of competitive market for block building, so that the mev value at the application layer winds up getting expressed down at the consensus layer, so that it's in a position to smooth out those payoffs. If you want to see the latest along that, I would just do a search for mev smoothing, and in particular the Ethereum community's latest work on that topic. So let's move on to our second example. We'll be segwaying from bitcoin to Ethereum and from block rewards to transaction fees. And let's look at the market for Ethereum block space through the lens of mechanism design. So Ethereum block space is typically a scarce resource.
00:16:32.262 - 00:17:14.246, Speaker A: So one desired outcome we might be interested in is allocating that scarce resource in the most efficient way possible. That is to the transactions that gain the most value from being executed in the Ethereum virtual machine. One way to suss out the most valuable transactions would be to charge as a transaction fee the market clearing price. Here, by market clearing price, I mean the price at which supply equals demand. So if the supply of Ethereum block space is like 15 million units of gas per block, then I'm talking about the price at which there's precisely 15 million units of gas worth of transactions that are willing to pay that price. That's what I mean by the market clearing price. If the market clearing price just fell from the sky, we'd be good to go.
00:17:14.246 - 00:17:54.926, Speaker A: The block space would be fully utilized and by precisely the transactions willing to pay that price. So precisely the most valuable transactions. Of course, market clearing price does not fall from the sky. So we have to address where it might come from in the transaction fee mechanism that's always been used in Bitcoin and also was used in Ethereum until a little over a year ago, something known as a first price auction. There, users basically just have to figure it out for themselves. So every user just attaches a bid to its transaction, which it has to pay if that transaction winds up getting included in some block. And with this mechanism, you're kind of hoping that at equilibrium in some sense of the word, users have basically figured out how to bid.
00:17:54.926 - 00:18:43.822, Speaker A: Meaning they basically figured out the market clearing price. That, however, is not so easy to do first price auctions. It actually can be pretty tricky to figure out what to bid, especially if you have sort of wildly changing demand as you often do in a blockchain context. So those concerns were the primary motivation behind the design of the mechanism known as EIP 1559. So this is the transaction fee mechanism that Ethereum is using now and has been since August of 2021. And here the idea is rather than foist any work onto the users, the protocol itself, the transaction fee mechanism itself is going to try to keep track of what the current market clearing price is, something known as a base fee, which again is an estimate, the mechanism's current estimate of what the market clearing price is. So some additional details.
00:18:43.822 - 00:19:20.842, Speaker A: So first of all, the mechanism is continually adjusting the base fee after all demand. And therefore the market clearing price might be changing over time. So it's continually updating the base fee using a form of local search. So if recent blocks kind of look too small, smaller than you'd like, that suggests the current base fee is set too aggressively and that you should decrease it. If recent blocks are sort of bigger than you'd like, that suggests that the base fee is too low and that you should increase it. So this mechanism turns out to have some really nice properties from a UX sort of game theoretic perspective. So for example, most of the time it's as easy for users as shopping on Amazon.
00:19:20.842 - 00:20:15.130, Speaker A: So it acts as something known as a posted price mechanism. So basically from a user perspective, it just kind of says there's a price posted, hey, $10 to have your transaction included. You can either pay it or not, just as if you were shopping at Amazon. There is sort of an edge case where if the base fee is like way too low, then you kind of gracefully revert back to a first price auction but you don't have those nice sort of UX properties. The mechanism is also unusually resistant to collusion of various forms. So, for example, between a block producer and a bunch of users who'd like to have their transactions included in that block and a twist to this whole analysis is that those collusion resistance properties actually hold only if you do something counterintuitive with the revenue generated by the base fee. The obvious thing to do with the base fee revenue is to pass it on to the producer of the block, right? That's what's always sort of historically been done with transaction fees and bids in these transaction fee mechanisms.
00:20:15.130 - 00:21:10.706, Speaker A: But if you do that, then in fact the game theory breaks down. Then in fact a cartel of a block producer and users can collude off chain to circumvent any kind of base fee you might be trying to enforce on chain. However, if you redirect the revenues generated by the base fee literally anywhere else, it doesn't matter as long as it's not to the producer of that block. If you direct them anywhere else, then actually you do get all of these unusual and very attractive collision resistance properties. So you could imagine different versions of EIP 1559 that answer the question where to route to the base fee revenues in different ways. Just like you could imagine different versions of Bitcoin with different macroeconomic policies concerning the circulating supply. And again here a specific choice was made in the version of EIP 1559 deployed in Ethereum, which is do maybe the sort of simplest possible thing with the base fee revenues which is simply to burn them.
00:21:10.706 - 00:21:56.482, Speaker A: By which I mean that the currency used to pay transaction to pay the base fee, those coins are just removed permanently from circulation. And it is in this design decision then within EIP 1559 where it's now crucial that the mechanism has access to a native currency. That's why it's able to burn permanently the coins used to pay those transaction fees. I should say up till this point, like everything on the last slide, all of that, everything could have been denominated in USDC and it all would have made sort of perfect sense. This step would not make sense if everything was denominated. In Know. The Ethereum blockchain of course is in a position to burn some digital representation of a US dollar that sits somewhere else.
00:21:56.482 - 00:22:53.470, Speaker A: It is not in a position to actually burn that US dollar, whereas it is in a position to burn the native currency to burn ETH. So the only reason this works, the only reason you can get away with this burning the base fee revenue solution is because you have access to that native cryptocurrency. But as usual, with this power to manipulate the underlying cryptocurrency comes responsibility, meaning macroeconomic implications, right? So the design decisions that have been taken in EIP 1559, all motivated primarily by simplicity. Either simplicity for the user and figuring out how to bid, or simplicity just in the protocol and its implementation by doing the simplest possible thing to dispose of base fee revenues. That combination, it just has macroeconomic consequences, right. It's sort of the opposite of the block rewards that we had in Bitcoin. Rather than a form of inflation, this is a form of deflation, right? So this is pushing toward decreasing the circulating supply of ETH.
00:22:53.470 - 00:24:09.980, Speaker A: There are still sort of inflationary aspects of ethereum, so you get this tug of war between the inflationary parts and the deflationary parts. But long term, I think most of us expect ETH to be a deflationary currency. So we have this nontrivial macroeconomic consequence of design decisions that were really made more for microeconomic reasons. And a question you could ask is like, is this byproduct should we be happy about this or is this just sort of a cost we have to pay? How should we feel about this? Now, if you ask anyone who holds a nontrivial amount of ETH of ethereum's cryptocurrency, they're generally going to be you'll find they'll be really big fans of these design decisions and of the deflationary pressure on the currency that's caused by EIP 1559. The reason being is if you sort of posit that the overall value of the ethereum cryptocurrency should be independent of the circulating supply, right? Like if you double the number of coins, well, then each coin should just be worth half as much, sort of and vice versa. Well, then whenever coins are being taken out of circulation and the overall number of coins is decreasing, that means the per coin price should be going up. So holders of the currency are sort of hoping that this deflationary pressure makes their coins worth more going forward.
00:24:09.980 - 00:25:01.210, Speaker A: If, on the other hand, you ask any traditionally trained macroeconomist about this, they're going to tell you, oh, my God, what a bad idea. They're going to just have a knee jerk reaction that deflationary currencies are doomed to fail. They'll probably tell you stories about sort of stagnation in Japan back in the 1990s. Now, I got to tell you, I'm not super convinced by this analogy. It's not obvious to me that, I don't know, sort of the currency of a sovereign nation is such a great analogy for sort of a cryptocurrency like ETH. But I have to concede that the gauntlet has been thrown. I mean, I do think it is up to researchers in the blockchain space to explain why it might be that deflation is not a disaster for a cryptocurrency in the way that it's believed to be for currencies of sovereign nations.
00:25:01.210 - 00:25:47.770, Speaker A: All right. So the two examples we've covered so far, I think kind of despite the fact that so many people define cryptoeconomics in so many different ways, I think pretty much everybody would agree that the two problems we just saw are indeed crypto economics. And in particular, both of those illustrate this very sort of unique interplay between the micro and macroeconomics sort of the mechanism design problem, which, again, really does not have analogs in traditional mechanism design. For this third example, I think some people would call this crypto economics and some people wouldn't. I wanted to talk about it anyways, number one, because I wanted to say at least something at the application layer. We've been talking much more about the consensus layer thus far. Plus I just wanted to tell you about some of the work I've been doing most recently in sort of DeFi in decentralized finance.
00:25:47.770 - 00:26:39.222, Speaker A: So specifically I want to talk a bit about automated market makers or AMMS through the lens of mechanism design. Now my guess is if you're watching this video, there's a good chance, you know, at least kind of superficially what AMMS are know, but just sort of a quick review to the point of any exchange. And in particular an AMM is to allow two different assets to be exchanged for each know maybe ETH for USDC and vice versa. We've of course had exchanges sort of in the traditional markets forever and there's largely a convergence on a particular design, namely a limit order book. But in blockchains thus far the dominant paradigm, at least for purely on chain solutions, has been different. And that's because limit order books, they're just sort of a poor match for blockchain protocols, at least the ones that we have right now. They're primarily just because they're too expensive, they require too much storage and too much computation.
00:26:39.222 - 00:27:50.718, Speaker A: For a purely on chain exchange you really want to do something simpler than a limit order book. Automated market makers or AMMS are then that simpler format. So an AMM is not keeping track of some perhaps long list of sort of outstanding limit orders. It's really just keeping track of generally sort of two numbers, which is how many coins, X and Y, it has of the two different assets that's enabling the exchange of and as a function of those two supplies of X and Y programmatically, there's going to be some spot price which is then quoted at which traders are free to buy or sell. So in an AMM, a little bit of computation is required to determine how much you get back of one asset in exchange for a given amount of the other asset. But it's generally a very lightweight computation, certainly much lighter than trying to do matching of orders in a limit order book. Interestingly, AMMS, they've risen to prominence kind of in web3 in the blockchain world, not so much for economic reasons but really just for computational considerations, right? Just for their simplicity.
00:27:50.718 - 00:28:45.278, Speaker A: So they're really kind of the product of doing mechanism design under very severe computational constraints just because the amount of computation available on a blockchain like ethereum is really quite limited. This echoes sort. Of the theme in a well known branch of algorithmic game theory called algorithmic mechanism design, which focuses on mechanisms guaranteed to run in polynomial time. But polynomial time is definitely not good enough for something you're going to implement purely on chain. On a blockchain like ethereum, you really need much tighter control over the computation required. And it's under those severe constraints that AMMS really shine. Unlike the last two examples, AMMS don't really fundamentally rely on the existence or access to cryptocurrencies, right? Back when we talked about Bitcoin, the mechanism needed to sort of print new bitcoins in order to reward producers of new blocks.
00:28:45.278 - 00:29:43.414, Speaker A: That obviously is impossible unless you actually can directly control and manipulate the currency. Similarly, in EIP 1559, all of those base fee revenues got burned so that you'd have good game theoretic properties. Again, not clear how you'd pull that off if you couldn't sort of directly work with a native currency. AMMS, they're typically used to trade cryptocurrencies, granted, but there's nothing fundamental about that. You could use an AMM to trade any two assets, right? X and y on the slide could be units of anything. Meanwhile, the actual sort of operation of what an AMM does, I mean, it's basically just some arithmetic, right? It really doesn't need some kind of native token or native currency in order to carry out the operations of an AMM. Again, unlike Bitcoin block rewards, unlike EIP 1559, and indeed, when uniswap, right, the most famous AMM out there, when they launched originally, they did not have any kind of token because they didn't need one.
00:29:43.414 - 00:30:21.138, Speaker A: There were other tokens that you could trade in their AMMS, and again, the operation of the AMMS didn't really need that token. So there is a uni token now, but that was added only later. It's really not fundamental to how those uniswaps AMMS operate. All right, so I promised to say just 1 minute about the research I've been doing lately concerning automated market makers, which is about a measure known as lever. So that's LVR, which stands for loss versus rebalancing. Now, we've already talked about benefits of AMMS. So principally they're just computationally very simple, so suitable for on chain implementation in today's blockchain protocols.
00:30:21.138 - 00:30:56.350, Speaker A: They also guarantee liquidity, even for sort of long tail assets where there's a thin market. So that's another nice property of them. But they do have drawbacks too, inevitably. And so one of the main ones is what's known as adverse selection for the liquidity providers. Remember LPs, they're the ones that actually deposit the coins in the first place. The traders are then trading back and forth. So by virtue of always being open for business, always being willing to take either side of a trade at the current quoted spot price, basically, liquidity providers can be forced to carry out trades at worse than market prices.
00:30:56.350 - 00:31:48.766, Speaker A: So, for example, if the spot price of an AMM ever becomes stale, if it ever sort of drifts away from the price of the asset on the open market, then you can expect some sort of opportunistic arbitrageure to make a trade that corrects. The spot price of the AMM brings it in line with the rest of the market. Those arbitrage trades, they will yield profit for the arbitrageur and that profit will come at the expense of the liquidity providers. So that's what I mean by the LP's adverse selection costs being forced to take possibly the wrong side of every single trade. So the work I've been doing with a number of co authors recently strives to isolate and characterize these adverse selection costs to really just give sort of a formula for exactly what's the cost to an LP for providing liquidity to one of these pools. Now remember, it's not all bad news for the LPs. They're also getting a share of the fee revenue.
00:31:48.766 - 00:32:38.926, Speaker A: So if that's high enough, that will outweigh the losses from lever. But lever is sort of isolating the cost part of the cost benefit analysis that liquidity providers should be doing so before our work. So over the last couple of years, adverse selection costs were typically measured by something known as impermanent loss. And I won't define that for you here, but let me just say our critique of that is that it conflates two really fundamentally different things. It conflates the adverse selection costs that we're trying to isolate with sort of price movements of the underlying assets. So in particular, large adverse selection costs can be occluded by favorable changes in market conditions. So one way to think about our concept lever is as basically taking impermanent loss and modding out by all the parts of it that depend on market movements.
00:32:38.926 - 00:33:38.390, Speaker A: So another way to think about is if you hedge out the hedgeable parts of impermanent loss you're left with this sort of unhedgible residue which just stems from sort of trades being executed at unfavorable prices. And this unhedgible residue that you're left with is exactly what we're calling lever or loss versus rebalancing. I'm not going to go into technical detail here. Let me just say that if you want to compute historical lever so using past data, that's quite straightforward to do using the typical data you'd have for an AMM's performance if you want to make predictions about the lever going forward. Like if you're a potential liquidity provider assessing whether to deposit your coins in an AMM or not, and you want to know what kind of lever you should expect, it actually turns out for most of the popular AMMS to be surprisingly easy to work with, analytically, in, kind of a standard black scholes setup. So one example of that would be the sigma squared over eight that's on the bottom of the slide that I'm not going to explain here. But if you want to know more about lever you can check out YouTube videos by any of the co authors of this paper.
00:33:38.390 - 00:34:19.970, Speaker A: So myself Jason Milionis, who's a PhD student at Columbia CMC. Molemi, who's a professor in the Business School of Columbia and Anthony Lee Zhang, who's a professor in the business school at University of Chicago. So we all have longer form talks on lever, which you can find on YouTube. All right, so let's now move on to the second part of the talk. The first part of the talk was meant to give you a fairly global view of sort of economic issues and the role of cryptocurrencies in the overall blockchain stack. We said a little bit about automated market makers at the application layer there. But in the second part of the talk, I want to zoom in and squarely focus on the incentive issues that come up in DFI and specifically the role of tokens.
00:34:19.970 - 00:35:06.002, Speaker A: So tokenomics and token design, it's a very complex and multifaceted problem, as you can imagine. In my role as head of research at a 16 Z crypto, a lot of the work I do there is advising various projects about different aspects of the token design. So in my brief time here, there's no way I can be at all comprehensive. You could do really a whole course on this topic, frankly. So I'm just going to spend a little bit of time making sure that you're sort of literate on the basics. Apologies to those of you that are sort of already familiar with all this stuff, but it's really for the people who are not, because this is just sort of good stuff to know when you're thinking about DeFi and trying to understand the dynamics that are going on. Let me start by picking up a thread that we mentioned in the first half of this talk.
00:35:06.002 - 00:35:55.218, Speaker A: So when we were talking about automated market makers, we pointed out how they're not really fundamentally about cryptocurrencies, the way that Bitcoin Block Rewards and EIP 1559 were. So first of all, while they're usually used to trade cryptocurrencies, at least in a blockchain context, that AMM format could be used to trade anything. Secondly, we talked about how the operation of those AMMS, it basically boils down to some simple arithmetic. It's not like you need access to some native currency in order to carry out those operations. And as we mentioned, Uniswap originally for these reasons, launched without a token, without a native currency because there was just no pressing need for one. But now fast forward to the middle of the wild days of DFI summer. So in summer 2020.
00:35:55.218 - 00:36:46.526, Speaker A: So in late August, a new project, Sushi Swap launched, which was basically a clone of Uniswap. It was Uniswap V Two at the time, a clone of Uniswap with a token added. So Sushi swap's innovation was to say, look, okay, maybe we don't need a native currency per se in the sense that we did in Bitcoin or in EIP 1559, but we could still a very convenient thing to have our project's own currency, the Sushi currency, which we can then use as a growth hack. And sort of in the spirit of Bitcoin, sushi coins in this currency get minted for participants in the protocol. Now, when we're talking about Bitcoin, right, that was a layer one that was at the consensus layer. So participants were like people running actual physical nodes and trying to solve crypto puzzles and so on. Here we're talking at the application layer.
00:36:46.526 - 00:37:32.738, Speaker A: We're talking about an AMM. And the key thing you need participation from, really, is liquidity providers, right? You need your AMMS to actually have quantities of the two tokens. So those are the natural entities to reward with inflationary rewards. So just like we had block rewards going to Bitcoin miners in SushiSwap, you have sushi rewards going to liquidity providers. SushiSwap also made it basically trivial for uniswap LPs to defect over to SushiSwap and just immediately sort of transfer their deposits into the comparable pool on SushiSwap. And as you might expect, liquidity providers, a lot of them just followed the money. It wasn't clear, like, what the value of these sushi tokens would be, but it seemed better than nothing.
00:37:32.738 - 00:38:33.490, Speaker A: And indeed, a lot of uniswap's liquidity, at least in the short term, did migrate over to SushiSwap in response to these token rewards. Now, Uniswap understandably, was not so happy about this so called vampire attack by SushiSwap, and within weeks responded with its own token, the uni token. So while uniswap did not launch with a native currency, as of September, since September of 2020, it has has its own native currency. The uniswap team did make different design decisions around what their token was going to be used for compared to the sushi swap team. So, for example, sushi tokens, part of the vision there is that you would be rewarded with some share of the trading fees if you're a holder of that token and you're willing to stake it. Whereas over on uniswap, the uni token is meant purely as a governance token. So you are able to vote on issues of interest to the uniswap ecosystem if you hold these uni tokens.
00:38:33.490 - 00:39:29.670, Speaker A: The uniswap team also made different design decisions about how uni tokens would be distributed. So with Sushi, it had a token from day one, just like, for example, bitcoin had a token from day one, and somehow that has to get out into the hands of community members. And so, like, following the bitcoin playbook, that was done through inflation, through printing new money in exchange for participation. Now, with uniswap, actually, when it introduced the token, it had been around for some time, so it had a lot of data on who its users were, both sort of traders and people who provided liquidity. And so what uniswap decided to do is just what we'd now call a retroactive AirDrop, meaning that tokens were just given away for free to various wallets, corresponding to usage of the uniswap protocol. So that was a significant AirDrop. If you qualified, you were getting at least $1,000 worth of Uni in that AirDrop.
00:39:29.670 - 00:40:01.918, Speaker A: And it's kind of crazy how quickly the market responded to all these developments. So if you look like at a graph of the TVL, so total value locked, meaning sort of the total amount of coins that had been deposited into the AMMS hosted by Uniswap or SushiSwap. So obviously, sort of before SushiSwap launched, it was all uniswap. So very high. TVL for uniswap. Zero for SushiSwap. Then when the Sushi token was announced, all of a sudden Uniswap dropped way down and SushiSwap, having basically stolen or transferred a lot of that liquidity, went way up.
00:40:01.918 - 00:41:05.198, Speaker A: And then after the Uni token was announced, you saw it flip back, right. So SushiSwap, it's still around to this day, but the TVL has been below Uniswap since Uniswap introduced its native token. All right, so why did I start the second part of the lecture with this story? One was just to complement something we were emphasizing in the first part, which was talking about how native currency sort of enlarges the space of mechanism design, maybe lets you do things that you couldn't do otherwise. And I just want to emphasize here that at the application layer and in DeFi especially, tokens are often used in a way where it's not essential to the operation of the mechanisms that are being used. So it's more kind of for almost like business development purposes, almost as a growth hack to boost usage in the protocol when it first gets going. The second reason is that the two different projects illustrate different ways of distributing a project's token, right. We had the sort of emission or inflationary rewards in SushiSwap, which in a DeFi context you also sometimes hear referred to as yield farming.
00:41:05.198 - 00:41:40.814, Speaker A: And then we had the AirDrop in Uniswap. And so I want to talk about both of those topics in somewhat more detail. Now, some people like to interpret this story as basically saying you should never launch a project without a token. It's totally hopeless because at least if your project's open source, say, anyone can just sort of fork it, add a token and basically steal all of your participants. I'm not saying there's like, no merit to that argument. I mean, we do see these dynamics play out in Uniswap versus SushiSwap. But I mean, it is important to remember there's other ways you can develop a moat for your project that make it impossible to just sort of easily copy, right.
00:41:40.814 - 00:42:30.682, Speaker A: Network effects being one obvious example. So if you're starting out a project, I mean, definitely you want to go through the thought experiment of should your project have a token? But just don't immediately jump to the conclusion that the answer is yes. Just be very sort of intentional on why you're introducing it and what purpose you intend it to serve. We'll get back to that again later in the lecture. All right, so let's talk a bit more about Airdrops and challenges of executing them. Then we'll talk a little bit more about yield farming, and then we'll wrap up with some just sort of general comments about the richness of the token design space. Now, remember, retroactive AirDrop basically means you're going to take what you know about the past and sort of the usage of your protocol, and you're going to use that to decide who's going to get some of the initial distribution of your token.
00:42:30.682 - 00:43:17.710, Speaker A: And Uniswap was in kind of a very lucky position the same way Bitcoin was in a lucky position in a way, which is that no one had really been doing these retroactive Airdrops prior to Uniswap so much. So none of the users of Uniswap were sort of using it with an eye toward, in the future, collecting some AirDrop. They were presumably all using it for relatively organic reasons, which means the data that Uniswap had to work with to decide who should get Airdrops tokens was pretty good data. They really could in some ways. It wasn't perfect, obviously, but they had decent signals of who were the people that really kind of cared about and used the protocol. But naturally, there's lots of copy paste in Web Three. So after Uniswap did a retroactive AirDrop, other projects began to follow suit.
00:43:17.710 - 00:44:18.958, Speaker A: And once you start having sort of potential users of a protocol, anticipating they may be rewarded with some future AirDrop, then you sort of incentivize them to use your protocol just because, just to qualify for an AirDrop, rather than actually caring about your product or using it for anything valuable. So these days, pulling off a good AirDrop is actually not so easy. So let's sort of think through some of the challenges that inevitably come up. So first the question is just what should the amount of the AirDrop be? And your first thought might be like, well, maybe it should be proportional to usage, right? So, like proportional to the amount of liquidity that you provide, proportional to the amount of volume that you've traded. It's not crazy, but it's definitely an issue with that is it tends to have an undemocratic flavor, right? You tend to have these quote unquote whales. So just really sort of power users of the protocol winding up with a huge share of the native currency. And in many cases, that's not kind of the ideal outcome.
00:44:18.958 - 00:45:08.878, Speaker A: To the other extreme, you can just give out a fixed amount. And that's what Uniswap did with the 400 uni tokens to every sort of qualifying wallet. But if you're giving sort of a fixed amount to each wallet that's been using the protocol, well, then you face something known as a civil attack. Civil named off of a 1970s book of the same name, which was about what back at that time was called multiple personality disorder. So civil attacks in computer science in general that's about masquerading a single entity masquerading under multiple identities in order to manipulate some protocol. And it's funny because you hear about civil attacks all the time, sort of in the blockchain world. I mean, all the way back to Bitcoin, the whole reason for proof of work, the whole reason that bitcoin miners have to crank through all these hashes and try to solve hard crypto puzzles.
00:45:08.878 - 00:46:19.786, Speaker A: It's to deter civil attacks, because you don't want someone to have a lot of control over the bitcoin protocol just by virtue of sort of fabricating a whole bunch of public, private key pairs. But here we're seeing exactly the same thing come up, all the way up at the application layer of the stack. So again, if you're giving out just sort of a fixed amount, like 400 uni per wallet that uses it to a certain amount, obviously I'm incentivized to just create as many wallets as I can and use the protocol like a minimum qualifying amount for each and just collect a really big AirDrop. So modern airdrops worry a lot about sort of civil attacks and just generally trying to avoid rewarding kind of inorganic activity of their protocol. And it's hard, it's not easy, but you can imagine it's basically a data science problem. So you look at all the data that you have on chain and off chain and you basically take wallets and you kind of want to grade them according to how likely you think they are to be kind of organic users that actually care about the health of your protocol. And best practices here is usually to kind of score each wallet along multiple different dimensions, multiple different types of activities, both sort of on chain activities, maybe activity on discord, all kinds of different stuff.
00:46:19.786 - 00:47:01.190, Speaker A: And then wallets that sort of score highly on a number of different criteria. Maybe those are the ones you want to focus on for your AirDrop. So that's what I wanted to say about airdrops. Let's talk a little bit about the other method of token distribution, namely emission rewards. And again, this sort of echoes what you see in layer one consensus protocols all the way back to Bitcoin. You want to incentivize participants to sort of behave, use your protocol, run the protocol, behave correctly, and so you print new money to incentivize them to do that. And we see that, for example, in SushiSwap and many other projects, also on the application layer where basically tokens in the native currency.
00:47:01.190 - 00:47:59.910, Speaker A: So the project's native currency, they are printed in order to reward ongoing participation. So other buzwords you might want to be aware of is sometimes this is referred to as yield farming, or rather the participants are yield farming. By using these protocols specifically in the context of AMMS, you often hear about liquidity mining. You're providing liquidity and kind of in the spirit of getting mining rewards from Bitcoin, you're getting emission rewards from the AMM itself. So sushi swap the AMM was not the first D Five projects to make use of emission rewards. So all the way back in February of 2020, Compound, which is a lending protocol, so that's where different users can sort of borrow and lend cryptocurrencies like say, ETH. So Compound started doling out rewards in its native token and Compound's native token to lenders to people who were willing to deposit their, for example, ETH into the compound protocol.
00:47:59.910 - 00:48:47.110, Speaker A: And that was really quite a big deal at the time. I don't know if this is 100% true, but I regularly hear the start of DFI summer attributed to Compound's yield farming program. So let's wrap up with just sort of a general discussion of challenges that come up in tokenomics and token design broadly because it's actually a quite tricky problem. I think our best practices are kind of starting to crystallize through a bunch of trial and error, but it's still very kind of cutting edge to just understand exactly how you should a bunch of design decisions around adding a token to a project. So if you're thinking about launching a project with a token, there are a bunch of questions that you need to ask yourself and you need to think through really carefully. And a bunch of those questions are here on the slide. As you can imagine.
00:48:47.110 - 00:50:15.214, Speaker A: In my role as head of research at a 16 C crypto, I have a lot of conversations with various projects which are on some subset of these questions. So first of all, you just need to think about what is the currency size going to be and how does it increase or decrease? Right? So like Bitcoin famously had to make this decision and the decision was there will never be more than 21 million Bitcoins and all of the Bitcoins will come into existence by being printed on the occasion of a new block being added to the longest chain. So more generally, whatever the project, again, not just at the consensus layer but application layer, you also have to make these decisions, right? So how many coins are there in your native currency and how does that supply potentially go up or go down? Now, the pure mathematician in me kind of wants to believe that actually it doesn't really matter how you choose the circulating supply. Like who cares if you have twice as many tokens that then have half the market price versus sort of half as many tokens that have then twice the market price. Like what's the big deal? But there are these psychological aspects around this. So a common heuristic that projects use is they sort of think about maybe some target market cap for their project using other sort of projects as comparison points and then they sort of think about kind of what token price they're sort of envisioning for their project at a given level of success at a given market cap. And then from those two numbers you can back out kind of how many coins you think should be in circulation.
00:50:15.214 - 00:51:05.538, Speaker A: So like a billion is a very common number, but you also see lots of projects be one or two orders of magnitude away from that in either direction. So you also really want to think carefully through what's going to cause the supply of currency to increase or decrease. So increases. So inflation, that's generally coming from rewarding participants. We've seen several examples in bitcoin, the Bitcoins used to reward miners, they get blocks in the longest chain in an AMM like SushiSwap, rewarding participants who provide liquidity in a lending protocol, like compound rewarding lenders who deposit their coins into the protocol. So those are all sort of reasons why you tend to have inflationary pressure. You have growth in the money supply in lots of projects, especially earlier on in their lifetime, possibly decreasing over the lifetime of the project.
00:51:05.538 - 00:51:51.170, Speaker A: There's also the potential to actually have the money supply decrease. So we saw an example earlier in this lecture when we talked about EIP 1559, if you remember the idea, there was to burn revenues that arise from the base fee, taking them permanently out of circulation. So currently in Ethereum, there's kind of a tug of war between inflationary and deflationary forces going forward. As I said, I think most of us expect ETH to in the long run be a deflationary currency. And again, burning does not just exist at layer one. You also see that at the application layer and MakerDAO being maybe the most famous example of that. Another very tricky question is to figure out your initial distribution of your project's native currency.
00:51:51.170 - 00:52:42.206, Speaker A: If you go back to bitcoin, bitcoin's very unusual in that all the Bitcoins in existence really can be traced directly to some block that got added to the longest chain. There was no initial distribution of Bitcoins. Sure, presumably it was Nakamoto who like mined the first 100 bitcoin blocks. And so Nakamoto sort of had presumably 5000 Bitcoins sort of straight out of the gate. But still, strictly speaking, there was no sort of initial distribution of Bitcoins. Every single Bitcoin belongs to some block that was somehow a consequence of some kind of participation in the protocol. It's much more common now both for layer ones and at the application layer that a project launches with some initial nontrivial initial supply that may get inflated further through emission rewards, through yield farming over time, but generally projects launched with sort of a nonzero number of coins in existence of their native currency.
00:52:42.206 - 00:53:39.282, Speaker A: The question then obviously being like, who are the initial owners of all of those coins on day zero? And presumably it's going to be some mix of insiders and outsiders. So insiders here, that would include the team itself, like the people that actually kind of wrote and launched the protocol. If the team took sort of outside investment, that would also probably qualify as insiders, and then ideally, especially just the Web three. Ethos being what it is, being very community focused, it's generally important to make sure a healthy fraction of the token supply is reserved for the community in some broad sense of the word. And that could be, for example, through emission rewards, rewarding community members who participate in various ways in the protocol. Once you figured out who owns the coins initially, you then have to figure out what they can do with it. And in particular, it's usually a quite bad idea to allow people to do whatever they want on day one when the project first launches.
00:53:39.282 - 00:55:13.470, Speaker A: Generally, you want to lock them in for some period of time, right? These are supposed to be people that have a genuine interest in the health and the trajectory of the project. So for the kinds of people you want to attract having a lockup, whether it be whatever, six months, two years, four years, whatever you'd like to think a lockup would be aligned with the incentives of the types of people that you want to be giving your coins to initially. All right, so I'm not saying the questions we've covered so far on this slide are easy, but I do think a lot of projects find them easier than the last set of questions, which concerns, okay, why are you introducing a native currency into your project? Like, why do you need a token? And moreover, why would that token not just have value equal to zero? Well, we've seen some pretty good answers to the why question and the examples that we've discussed thus far. So we saw a lot of examples where you just want to basically have kind of a growth hack and reward participation, especially early in the protocol. So we talked about Bitcoin printing Bitcoins to incentivize miners, we talked about SushiSwap printing Sushi in order to incentivize liquidity providers and compound printing its native token to incentivize lenders. And this is frankly just outright necessary if it's a project that launches without some treasury of kind of external assets, right? Because if you want to dole out rewards and you don't actually own anything, you don't have any assets, well, you can just make up your own assets. You can just sort of print money in your native currency to dole out rewards.
00:55:13.470 - 00:56:24.986, Speaker A: There's still the question, which we'll talk about in a second, about why would those rewards have economically meaningful value as opposed to just having value equal to zero? Uniswap. It's a somewhat similar example, but also somewhat different. On the one hand, you could say that the uni token is meant to increase participation in the protocol, although unlike SushiSwap, not participation in the sense of providing liquidity, but rather in being sort of engaged in governance, so actually helping make decisions that are of importance to the uniswap community. So, for example, whether or not uniswap should deploy on sort of some. New layer, one that's come out. As far as the question, what actually gives these tokens value, like why is the value bigger than zero? That's a complex question, in part because answering it includes you need to have a discussion of psychology and emotions and so on. I mean, even like bitcoin is a pretty interesting case study, right? So why do bitcoins trade for at the time of this recording, something like $20,000 a bitcoin? And so you could say, well, one story would be, well, look, this is kind of a blockchain with tremendously high economic security.
00:56:24.986 - 00:57:01.026, Speaker A: It has really high hash rate and you can permissionlessly trade these cryptocurrencies across any kind of global borders if you have the right setup, relatively low friction. So that's a story you can tell about it. On some level, I'm kind of a revealed preference kind of person. So if people are willing to pay for it, then it sort of has value, in my opinion, just sort of by definition. And so there are some people who kind of say bitcoin basically memed itself into existence. And I don't think that's 100% true. I mean, I do think there's definitely intrinsic value, whatever that means to bitcoin.
00:57:01.026 - 00:57:45.074, Speaker A: Maybe there's also kind of a grade of truth in that. And the fact that that may be true is what makes it so hard to reason about a token's value. That said, there are various stories you can tell that suggest why there might be value accruing to a token. So like if we go back to SushiSwap, as we mentioned, if you stake it, that gives you a claim on sort of a share of the trading fees. So in other words, that's a token that there's a mechanism for it to generate yield so that you would think would give it some kind of basic value. Maybe there are people who are willing to pay some amount in order to participate in sort of governance decisions for Uniswap, for example. So maybe that gives a governance token like Uni some kind of value.
00:57:45.074 - 00:58:44.222, Speaker A: You can also imagine tokens that just kind of give you other kinds of rights in the protocol, right? So like maybe if you hold a certain amount of some token, you get a discount on what you have to pay for some of the services that are offered by the protocol. Or maybe if you have enough of the native token, you get access to some special discord server, that kind of stuff. I should also caution those of you that are thinking through whether or not to add a token to a project and what the role of that token is going to play and how value might accrue to it. That is sort of among all of this, the part of the slide that starts interacting the most with regulatory issues. Obviously nothing I'm saying here is sort of investment, regulatory or financial advice and things are changing very quickly. So I don't have some silver bullet answer for how you could think about this, but I do just want you to be aware that changing regulatory landscape could affect how much of this design space at the bottom winds up being available to us. So that wraps up our whirlwind tour of sort of incentive issues in DeFi.
00:58:44.222 - 00:59:09.800, Speaker A: So we both talked some about the historical context innovations and sort of consensus protocols that sort of then sort of fed into the application layer and DeFi in particular. And as you can see on this slide, there's many, many questions, many more questions than answers. Best practices are definitely still evolving and evolving quickly in this space, but that is one of the things that makes it so much fun. So I hope you enjoyed the lecture and enjoy the rest of the course. Thanks very much.
