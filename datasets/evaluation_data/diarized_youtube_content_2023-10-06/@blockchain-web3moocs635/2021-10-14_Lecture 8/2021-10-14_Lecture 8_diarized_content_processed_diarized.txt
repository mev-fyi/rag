00:00:01.370 - 00:00:47.190, Speaker A: We've just explored how it's possible to design and use privacy preserving oracles. Now, we're going to wind up this lecture by talking about some more sophisticated applications of such oracles. I want to reiterate that privacy preserving oracles aren't yet a part of the DeFi infrastructure in any meaningful way. So what I'm going to discuss here is also not about the present, but about a possible and maybe probable near future. I'll discuss three applications. The first is the use of oracles to tokenize digital assets, specifically those that aren't present on chain. The second is private DeFi.
00:00:47.190 - 00:01:47.658, Speaker A: I'll talk about how to construct a very basic DeFi contract in a privacy preserving way. And then finally, the third application I'll discuss is decentralized identity, and I'll give an example of how it can be used. We've just talked about how privacy preserving oracles can be used to prove that ownership of a game has changed hands. We can carry this concept further in some interesting ways. For instance, it's possible in principle to associate Alice's game license with a token represented in a smart contract. To do this, we can have Tee essentially simulate a user and take custody of the game license, or take custody even of Alice's account, a contract which I'll just call game token. Here then issues a token representing the game license.
00:01:47.658 - 00:02:29.690, Speaker A: Instance, the token can now be exchanged as a means of trading the game license in a trustworthy way. And this token would take the form of an NFT. Now, we've already mentioned NFTs, but let me remind you of what they are and say a little bit more about them. Recall that NFT stands for non fungible token. This is in contrast to fungible tokens, the kind that are analogous to cryptocurrency. All fungible tokens of a given type are identical. They're essentially like currency.
00:02:29.690 - 00:03:21.520, Speaker A: For example, Stablecoins take the form of fungible tokens for a given Stablecoin like USDT or USDC. Each token has identical value, essentially a dollar in the case of a dollar coin. To put it another way, you don't care which token or tokens you have, only how many. Tokens are also subdividable into fractional tokens which function like smaller versions of a full token. And some examples of fungible tokens beyond Stablecoins include tokens for maker, uniswap tokens, and there are a whole bunch of others. Now, NFTs, as we've discussed, are unique on a per token basis. In principle, no one token looks like, or at least need look like any other.
00:03:21.520 - 00:04:26.050, Speaker A: Another feature of NFTs is that they can't be straightforwardly fractionalized. What would it mean to hold one 10th of a token corresponding to a work of art? For instance, they can be fractionalized through joint ownership arrangements. But this can take any of a number of different forms and in general is more complicated than fractional ownership of a fungible token. NFTs are most popular as a way to represent a kind of ownership of digital artworks or game pieces for NFT games, which we've talked about. For example, an artist named Beeple recently sold a work called Everydays for $69 million, and he sold it as an NFT. There are also efforts afoot to represent ownership of real world goods such as real estate in the form of NFTs. In principle, any digital object whose ownership is easily transferable can be turned into an NFT.
00:04:26.050 - 00:05:14.990, Speaker A: So we could imagine undertaking an effort to turn everything that can be turned into an NFT into an NFT. Exactly. The process I described for a game license, for example, could be applied to all kinds of things. It could be applied to any of a variety of in game objects magic swords, for instance, or magic armor or whatever else you like. A te could take custody of a magic sword and issue an NFT representing it. And of course, the same could be done for various other in game items, as well as for non game software licenses and so on and so forth. Of course, I'm glossing over the limitations of service agreements and various other possible hiccups.
00:05:14.990 - 00:05:55.790, Speaker A: I'm just describing technical possibilities. Let's proceed to the second application, private DeFi. To show what's possible here, I'd like to consider a very simple instrument called a binary option. I'll just refer to it as a binary bet with the contract named accordingly. Let's suppose that Alice and Bob want to bet on whether the price of bitcoin will reach $1 million by 2024. Each of them bets $1 on the BTC price. Alice bets in the yes direction.
00:05:55.790 - 00:06:48.720, Speaker A: What I mean is that if the price of bitcoin reaches this target, she wins and gets $2 the dollar she bet, plus Bob's dollar, which he forfeits. And I'm ignoring details like gas fees. Of course, Bob bets in the no direction, which is to say that he wins $2 if the bitcoin price doesn't reach the target. The bet is resolved, of course, by having an oracle report at the very end of 2023 on what the maximum bitcoin price was. If it was at least a million dollars, Alice wins. Otherwise, Bob does. Now, what's the problem here? Well, it's clear to the whole world from inspecting the contract code exactly what Alice and Bob are betting on.
00:06:48.720 - 00:08:05.586, Speaker A: As a CoinDesk article declared, DeFi without privacy is predatory. What they mean by this and it's a somewhat extreme word, but what they mean by this is that existing systems have sacrificed users privacy in the name of monetary gain, and this article advocates for a reclaiming of lost privacy. We can solve this problem using essentially the same techniques we considered for the flight insurance contract. A partial solution, therefore, you'll recall, is to have the oracle simply report a bit, whose meaning Alice and Bob randomize when they invoke the binary bet contract. This is good, because now somebody observing the contract, observing the blockchain, will just see a meaningless bit sent to the contract and will have no idea what Alice and Bob bet on, but it's still not truly privacy preserving oracle. Because the oracle learns what binary bet does, we can invoke a Te as a stronger solution, of course. And here we see yet another useful application of privacy preserving oracles.
00:08:05.586 - 00:08:53.190, Speaker A: But in this case, they don't completely solve the problem. That's because if we construct the contract naively, it may not be clear what was bet upon by the two players, but you can easily see who got the money and who won the bet. So we need something more. We could use sophisticated techniques like zero knowledge proofs. But happily, there's a relatively simple solution here. Alice and Bob can each contribute an independently generated fresh address, one that hasn't been used yet, but to which they have access to the corresponding private key. And they contribute these in a random order, meaning that the first address could belong to either Alice or Bob.
00:08:53.190 - 00:09:54.182, Speaker A: Now, all anyone sees, including the oracle, is that the money is sent to one of the prespecified addresses. If it's sent to P zero, for instance, an observer can't say whether it was Alice who won or it was Bob who won. Either would be a valid or could be validly instantiated in that address. The final application I'd like to discuss for privacy preserving oracle systems is decentralized identity. Decentralized identity is the idea of enabling users to generate and manage their own credentials on blockchains. For example, suppose that Alice would like to generate a trustworthy credential stating that she's over 18 so she can participate in a financial opportunity like an ICO, an initial coin offering. You can see how this might be done using the oracle tools we've discussed.
00:09:54.182 - 00:11:02.090, Speaker A: And you can see why privacy preservation is important. A Te based oracle system could log into authoritative websites that know Alice's birthday, perhaps multiple sites to hedge against errors or website failures, and can then generate a statement or attestation on a blockchain saying that it inspected Alice's birth date, and indeed, she's over 18 years of age. Alice can use this credential plus, say, a credential showing her income to qualify her as what's called an accredited investor. This is a special designation that allows for participation in certain financial opportunities in the United States. And note that Alice can do this without having to reveal her identity. So an important privacy goal is met. She can provide the credentials, provide cryptocurrency to participate in the coin offering, and receive the coins without indicating that it is Alice who purchased the coins or tokens.
