00:00:01.240 - 00:00:03.594, Speaker A: You're now plugged into the Delphi podcast.
00:00:05.854 - 00:00:37.954, Speaker B: Hey, everyone, welcome back to the Delphi podcast. Today we're extremely excited to host Sriram, who's the founder of Eigen Layer. We previously hosted Sriram around 14 months ago when we invested, and since then, the protocol has grown to 15 billion in TVL, numerous avss launched and the Eigen token details and airdrop went live. I'm thrilled to be joined by my partner and CEO of Delphi Labs, Jose, as a co host. He's got some incredible questions. So excited to dive in. Sriram, how's it going?
00:00:38.814 - 00:00:44.674, Speaker A: Excellent. Thank you so much. Tommy and Jose, really excited to be here and looking forward to this discussion.
00:00:45.494 - 00:00:47.474, Speaker B: Yeah, Zay, you excited to dive in?
00:00:47.814 - 00:00:49.822, Speaker C: Yep. Yeah. Excited.
00:00:49.958 - 00:00:59.060, Speaker B: Sriram, let's dive in real quick on a brief overview on Eigen layer, and maybe you could explain, explain what restaking means, maybe give a brief overview of the protocol for those who may have missed.
00:00:59.132 - 00:01:30.228, Speaker A: Yeah. The core idea of Eigen layer is the name Eigen in German for your own, your own layer. So anybody should be able to build new crypto applications, crypto systems, without having to worry about the source of decentralized trust. If you think about what is cloud and what is crypto, the dividing line is decentralized trust. Decentralized trust is the raw material out of which crypto economy is manufactured. So Eigen layer is a layer for decentralized trust. It takes the decent.
00:01:30.228 - 00:02:35.686, Speaker A: So how does Ethereum, for example, why is Ethereum trustworthy? It's because people stake in Ethereum, stake means they lock up their digital asset, in the case of Ethereum etH, and then make a promise that they're running the Ethereum node protocol correctly, they're liable to lose their eth if they don't run the, the protocol correctly or try to attack the protocol. And what eigen layer does. So this is the root of trust of Ethereum. What Eigen layer does is to let other protocols inherit this kind of security. So the way it works is when you stake etH, you make a promise not only that you will run the Ethereum protocol correctly, but also that you will run whichever other protocols correctly on top of that. And so now that transfers the trust to these other protocols, because if you don't run these, any of any one of these protocols, if you behave maliciously, you may be liable to lose your ETH. And so this lets new protocols that are being built which require a whole new decentralized trust network bootstrap without any significant cost.
00:02:35.686 - 00:03:18.388, Speaker A: So that's the kind of high level idea of Eigen layer. Eigen layer was started not as a kind of what is a new source of yield for DeFi or anything like that. It was started as an academic. I was a professor at the University of Washington, Seattle, working on new consensus protocols. And the big problem I found is lots of great ideas in the academic world, even in the blockchain industry, don't make it. The mechanism to translate these ideas into being parts of the rich ecosystems that already exist was missing. And so it was really started from the innovator side, which is, how do we lower the barrier to innovation?
00:03:18.556 - 00:03:48.936, Speaker C: That's cool. Yeah. It's interesting to hear the backstory on Eigen. I actually almost assumed it was the Nobel Prize chemist guy, but that makes more sense now. I thought it was like an oiler type thing or Tesla or whatever, but, yeah, that makes more sense in these terms. That makes sense. Could you also maybe explain what an AV's is and how it works? And I really liked this metaphor you've used in the past of Ethereum is the verifiable Internet roll ups is verifiable web servers.
00:03:48.936 - 00:03:59.336, Speaker C: AVSS is very verifiable SAS. And then Eigen layer is the verifiable cloud. I don't know if you want to jump into that to explain it or if you want to just do it. Yeah, code, whatever you prefer.
00:03:59.480 - 00:04:37.450, Speaker A: Yeah. Let me start with the kind of like a direct explanation of what an AV's is, and then I'll go to the metaphor. The AV's is actively validated service. So any service that wants to consume decentralized trust from the Eigen layer ecosystem is called an AV's actively validated service. Why actively validated? We are not talking about, you know, as a scope for what Eigen layer is. We are not talking about, hey, you know, lending and borrowing and DeFi. This is not the scope of, you know, the ETH free staking, or ETH staking, that is part of the eigen layer protocol.
00:04:37.450 - 00:05:11.102, Speaker A: It is to run validation services for any kind of new protocol. Validation means you run your node software, make sure that it's running correctly, and provide assurances for that. The reason this is very important is there are different categories of risk in the kind of crypto ecosystem. A lot of the DeFi risk is price risk. So I provide liquidity into an amm, I provide liquidity into a lending market. Any of these things. Essentially what you're undertaking is a price risk.
00:05:11.102 - 00:05:54.558, Speaker A: There is a relative price volatility across various financial instruments, and you want to kind of underwrite that, hey, I'm willing to provide liquidity under these spaces, and so therefore you get rewards for that. So DeFi risk is all price risk, whereas validation risk is a different category of risk. You run node software and you're promising that you will not maliciously attack the system. It's a very different category of risk premised on an information asymmetry between the service provider and the service receiver. So I'm running Ethereum node software. I know I'm not malicious. So from my locus, from my viewpoint, my risk is much lower.
00:05:54.558 - 00:06:41.696, Speaker A: But from your viewpoint, as a receiver of the service, like who the hell is Sriram? I don't know this guy. So this information asymmetry is bridged by me putting up a bunch of ETH and promising that hey, I won't go rogue on any of these services. And so this is, we call this validation risk. Validation risk is a fundamentally different category of risk than DeFi or price risk. So Eigen layer is when we're bundling risk across various validation services, we do not want to bundle price risk into it. So Eigen layer is for validating various kinds of protocols, running the node software, making sure that the assurances are correct. Okay, so services built on top of Eigen layer, which consumes this decentralized trust, are called actively validated services.
00:06:41.696 - 00:07:13.704, Speaker A: Actively because unlike providing liquidity in an ammo, you to actually keep running the software, otherwise it doesn't work and validate it because you're running validation services. And the third word services is also equally important. The reason is a lot of people that they hear of restaking and then you can run, provide decentralized trust. They think you are going to run new chains on top of it. And there's also a much broader debate in the crypto space about app chains versus integrated chains.
00:07:14.054 - 00:07:18.554, Speaker C: Yeah, I want to get into that at some point. It's probably my next question, but we can pull.
00:07:19.334 - 00:07:58.718, Speaker A: Yeah, absolutely. The reason that I mentioned that here is Eigen layer is intending for a different market structure. The market structure is where there is services as different from chains. So the actively, so we didn't call it actively validated chains, we're calling it actively validated services is because these services can service many, many chains. So a chain is an ordered ledger of transactions, whereas a service could be something that's called upon from a chain. And go and fetch the Oracle prize. Go and run an AI and give me the output.
00:07:58.718 - 00:08:46.848, Speaker A: Go and run a database and tell me what the SQL queries result is all these kinds of things are services. And so now going to the metaphor, which, you know, it kind of like all these pieces were there in our model for some time, but I think they only clicked like, a few weeks back. So it's a pretty new model for how we think about all these pieces fitting together. So starting from. And I think the model is instructive in understanding the difference between. A lot of people have asked me, or is Eigen layer pro or against the layer? Two things are like L2 roll ups going to go away because of Eigen layer and things like that. So it just kind of puts everything together in a common framework.
00:08:46.848 - 00:09:14.916, Speaker A: So the first thing says, it says ethereum is the verifiable Internet. So if you think of, like, what's the difference between the cloud and crypto? You can say, like, two major properties that are, like, unique to crypto. One is openness, and the second one is verifiability. Openness means anybody can continue to build on top of you, allow transactions are allowed. We call it permissionlessness. So other people can build on top of you and continue to use you in an open manner. So openness.
00:09:14.916 - 00:09:39.738, Speaker A: The second part is verifiability. When other people build something on top of you, they're getting the answer that they're supposed to get. So that's a notion of verifiability. So openness and verifiability are the two kind of quantifiers. You know, saying both makes the tweet, like, not sound very good. So we just said ethereum is the verifiable Internet, but it's the open, verifiable Internet. Okay, so let's say Ethereum is the verifiable Internet.
00:09:39.738 - 00:10:25.954, Speaker A: Why are we saying this? The Internet was basically meant as a communication protocol across all the nodes connected, you know, on this substrate. Right. And why is ethereum the verifiable Internet? Because now, if you want to build a new kind of a service and prove to others that you're open and verifiable for that service, what you do is you build a rollup. Roll ups, basically just analogous to building a web server in the Internet. So you have the Internet which lets people communicate, but anybody can go and plonk their web server on top and use the Internet to talk to each other between web servers and clients and servers and servers. So roll ups are verifiable web servers. So it's like a web server.
00:10:25.954 - 00:11:20.830, Speaker A: There are two ways to think of accruing or acquiring decentralized trust. One mechanism is, hey, I want everything in my protocol to exactly inherit this decentralized trust. The other option is I do actions unilaterally. That's the kind of like the high level view of a roll up is I do actions as a roll up sequencer, unilaterally. But I prove that I've done the right actions to the rest to Ethereum, which means now once I prove that I've done the right actions to Ethereum, other roll ups can consume the output of it and know that they can trust it. So rollups are verifiable web servers. And this model is super important because when you think of like how do I build a consumer application in crypto? This might serve as a kind of like a model for thinking, say, hey, if you want to build a consumer application on the Internet, you would build your web server to connect to the Internet.
00:11:20.830 - 00:11:47.326, Speaker A: And then anybody you can query and use your service. And instead what you do is you connect your roll up to Ethereum. And then now everybody on Ethereum can verify and know that you did the thing correctly. So roll ups are verifiable web servers. The third one is Avss. Actively validated services are verifiable. SaaS.
00:11:47.326 - 00:12:35.872, Speaker A: SaaS is software as a service. This major category that was maybe the most successful, profitable category in venture investing in the last 20 years. And what is SaaS? SaaS is basically just every web application, lots of web application need a common set of services. They all need a login mechanism, they all need an identity mechanism, they all need a database mechanism, they all need to use some AI or machine learning tools and so on. So every application needed, you know, back in 1995, every application would have had to build web application would have had to build their own login, payments, identity database, all of this stuff. But in 2024, that's absolutely not the case. What you would do is you just go plug in to some existing services and then say, oh, this is stripe is my payment service.
00:12:35.872 - 00:13:11.116, Speaker A: You know, OAuth is my login service and MongoDB is my database service. And then just integrate all of them to create your application. So a web application still has a web server. It just doesn't need to run all the logic by itself. Lots of the portions of the logic are outsourced to standardized software as a service tools. And what this does is to massively increase the number of applications that can be built, because each application doesn't need to think about how to build a database, how to build an AI, how to build all of these things. So AVSs, in our view, are exactly that.
00:13:11.116 - 00:13:39.664, Speaker A: It's the counterpart of, hey, I want to build a roll up, but I want to have an ordering service. I want to build a roll up, but I want to have a ZK proof verification service. I want to build a roll up, but I want to have oracle, I want to have an AI service. All of these running on decentralized trust. So that's what AVSSR. So I build a rollup. Rollups can now consume a lot of these SaaS equivalent software as a service equivalent, which is the AVSS.
00:13:39.664 - 00:14:12.240, Speaker A: And the last analogy to the Internet is a lot of these web servers and SaaS needed hardware to run on. And that's what clouds provided with an economy of scale. And what we're aspiring with Eigen layer is by channeling a portion of the Ethereum trust. Now anybody can come and build these avss and roll ups, you know, aspects of that can be built on top of Eigenveil. So Eigen layer is a verifiable cloud. So that's the analogy. I'll stop there and take reactions.
00:14:12.352 - 00:15:05.482, Speaker C: Yeah, absolutely. I have a lot of follow up questions I do want to get into at the end, the inter subjective staking as well in the Eigen token. But before I kind of want to dig into a bit of the value proposition for eigen layer, based on what you just said, with decentralized trust, specifically, I guess specifically what this means in this case is economic security. Having some bonded ethics that can back that, the validators, or in this case the restakers are going to behave according to the rules. To some extent. Economic security has been a bit of a meme in crypto so far, in the sense that a lot of the oracles, because obviously one of the canonical examples people talk about you can build on Eigen layer is oracles. And a lot of the existing oracles have never implemented economic security, as far as I know.
00:15:05.482 - 00:15:33.884, Speaker C: They don't even have it right now, like Chainlink or pith. And there's never been an attack that I know of because of this. Right. And then at the same time, like there's been a bunch of l one s where the value has gone, has gone, the market cap has gone super low. And we've also never really seen a 51% attack like we saw Ethereum, classic get 51% attack, right? Famously. And the network was just fine. Like it seemed like, you know, price dip maybe like 4%, you know, a standard kind of crypto intraday swing.
00:15:33.884 - 00:15:40.880, Speaker C: And so to what extent, like why is that? I guess, why do you think economic security hasn't mattered so far.
00:15:41.032 - 00:16:14.524, Speaker A: Yeah, it's a great question. And I think the first answer to this is when we're building. So the whole point of crypto or blockchains is that you have a stronger notion of trust than existing centralized systems. If you remove this diff of it, you could say, I'm running everything on a server, everything's going to be fine. Really don't need pretty much all of crypto. We don't need bitcoin, we don't need Ethereum, we don't need any of this stuff. And then you go into the root of.
00:16:14.524 - 00:17:33.173, Speaker A: So the next step is, okay, we do acknowledge that we need some stronger notion of trust because that's the only value proposition that blockchains are actually adding relative to everything else. Then you ask, what is the kind of right trust model? What is the stronger trust model than the rest of the world that we can provide inside crypto, and is that valuable? And so then you say, you know, in fact, this is, it's, it has been a journey for us. You could say pretty much the entire like of my, like last seven years of research is just trying to unravel what is the correct trust model on which, you know, blockchain scanned should be built. And so if you look at it, okay, what are the other possible models that are better than single centralized nodes? The first one is, hey, we have a decentralized group of nodes. That's what basically makes this better is not one node, it's many nodes. But if you put a lens to that particular question and then understand how is it that we're actually getting decentralized trust, you would actually find that answer to be very lacking. And the reason is, okay, people stake a bunch of token and then they delegate to some node operators.
00:17:33.173 - 00:18:30.474, Speaker A: That's what is actually happening. And right now, and people think and talk a lot about is the token distribution decentralized? Because that then leads to more independent choice and more independent operators. But really, at the end of the day, every token is transferable and is sellable to the highest bidder. Nothing prevents Blackrock tomorrow from coming in and owning 40%, 50% of all eth. That's just how it is. It's an open market, anybody can buy it. So what keeps validation decentralized? What is the principle that actually makes these systems really okay? So just decentralized trust in a pseudonymous economy is neither measurable nor actually guaranteed because we don't know how to guarantee that it will remain decentralized.
00:18:30.474 - 00:19:22.012, Speaker A: And the other problem is, in centralized systems, there is legal liability, like AWS cannot go and run arbitrary things to, like, break your system and then say, hey, I'm fine. There is legal liability that ties a centralized player, put them in a hot seat. And whereas in decentralized systems, we don't know what the roles of each of these things are, what the liabilities are. Recently we saw the low carb crusader as an example, and the opinion is mixed as to whether the participant was engaged in like, a protocol related activity or an attack. Because that's the problem of decentralized systems, is we are saying, hey, we are self enforcing. We want these systems to be self enforcing rather than externally legally enforced. So just decentralized trust doesn't cut it.
00:19:22.012 - 00:20:06.308, Speaker A: So then the next answer we get, it's all social consensus, the other extreme of this solution. And what is that? That basically says, really, the Ethereum blockchain is secure, because if the Ethereum blockchain was attacked, double spent, or data was withheld, or whatever other things happened, as a community will coordinate a fork and follow only the right chain. So that's the other solution. So on. The one end is decentralized trust, which is, hey, everything is decentralized, therefore it works. The other end is really social consensus, which means social consensus can modulate whatever is the right chain. So economic security or other things don't matter.
00:20:06.308 - 00:20:43.768, Speaker A: But social consensus operates at a slow time scale, weeks. Okay? So, you know, imagine you send me a transaction, and then I'm like, hey, I'm waiting for social consensus to kick in for this block to be canonized because, you know, I'm waiting for three weeks before I can now, like, give you your coffee. It doesn't work. It's not a correct principle. So on the one end of the spectrum, we have decentralized validation. The other end, social consensus. In the middle or in the short time scale, we have economic security.
00:20:43.768 - 00:21:20.172, Speaker A: That's the only thing that makes a blockchain secure at the fast timescale. Why is this? What we're seeing is, hey, validators put up a bond and you run the thing correctly. And if you don't run the thing correctly, social consensus will come at your back and then take your money away. So you don't want to do wrong things, because if you do wrong things in the short time scale, you will lose your money. So you have built now a system of karma checks and balances. Give incentives to the people who are doing the right thing. Take away, give negative incentives to people who are doing the wrong thing.
00:21:20.172 - 00:22:00.154, Speaker A: So that in the short time scale. So that's our principle. Our principle is in the short time scale, economic security supplies like enough value so that the value transacted within the short timescale is lower than the amount of economic security than the system secure in the short time scale. In the long timescale, it becomes regularized by social consensus. Social consensus operating in the time of weeks, economic consensus acting instantaneously. These two together form a very powerful system of trust. And that's why Eigen layer is designed to actually provide economic security in the short timescale.
00:22:00.154 - 00:22:32.028, Speaker A: And later, Eigen token is designed to provide that more flexibly by bringing an aspect of social consensus and forking into it. So that's the high level principle for why we think it's neither just purely, oh, I have a decentralized group of nodes, validating is not enough, nor just pure social consensus is enough. At the short time scale. The only thing that is regularized, provable, internal, without relying on exogenous authority is economic security. But that is regularized by fundamentally social concern.
00:22:32.116 - 00:23:01.884, Speaker C: That makes sense. And I think we're going to dive into that, especially in the internship, subjective staking, because I think it really informed the architecture that you picked for this. But I'm still curious. Maybe it's easier if we dive into the SaaS area of the AVSs and the services. So you talk about the SaaS era and the innovation that that enabled. Right. And allowing these services that a lot of apps could use to be deployed on the cloud.
00:23:01.884 - 00:23:23.740, Speaker C: But in the case of crypto, a lot of these services already exist. Right? Like we kind of talked about before, like Oracles or data availability or these things, they already exist. They just don't have economic security. Right. Chainlink secures. I don't know what it is now, but, like, probably 10 billion in assets without economic security. And these apps already exist, I guess.
00:23:23.740 - 00:23:58.314, Speaker C: What do you see as the difference? Is there something. Yeah. Do you think economic security is a limiting factor to having all these services exist? Or like, what is it about, I guess, Eigen layer that you think will enable these services? Because even in the example of like a roll up, let's say that you had a roll up being a web server, let's say it's like a Defi roll up, like a Defi application, and they want to have an oracle. The traditional route right now would be they have to convince Chainlink or maybe go to pith because it's pull based and get them to deploy on their roll up. Right. Is there. Yeah.
00:23:58.314 - 00:24:01.766, Speaker C: What's the example with an AV's. Yeah, go ahead.
00:24:01.870 - 00:24:53.942, Speaker A: So the first thing is imagine you had a better oracle design than Chainlink or pit somebody had. And this is really the theory of open innovation, is that the amount of innovation and ideas outside any one company or team, as good as they are, as good as Chainlink is, and as good as pith is, is that the amount of innovation outside of the surface is much larger. Like, that's our theory of open innovation. And so if you start from that premise, somebody else probably has a much better model for how an Oracle should be designed, how to minimize its cost basis, how to make it more permissionless without having to talk to a company to actually make sure that they get deployed on every roll up. Somebody else has great ideas. And the problem is, imagine you are sitting from the outside. I used to feel like this all the time.
00:24:53.942 - 00:25:28.000, Speaker A: Like, let's say three years back. You're sitting on the outside and you say, hey, I know how to make Ethereum better. Now, what is the locus that you have to actually go and make Ethereum better? You have to go and submit an EIP, make, you know, some upgrades to Ethereum. Or let's say you had an idea for how to make Chainlink better. You would have to go talk to the VP of product at Chainlink. And maybe they like you and they buy your idea out, you know, which they've done sometimes and maybe they don't, and then they say, get the hell out. So that's the options that you have.
00:25:28.000 - 00:25:57.048, Speaker A: The other option for you is to go start your own oracle, in which case it's secured by your own token. And the first thing people will say is, hey, Chainlink is a 10 billion tokens securing the network. Even though economic security is a meme, people pay attention to the meme. The way it is deployed right now is a meme. People pay attention to the meme. They come and say, oh, Chainlink has $10 billion in security. Who the hell are you? Why should I work with you? Imagine there is something like Chainlink deployed on Eigen layer and something like a new competitor wants to come.
00:25:57.048 - 00:26:40.848, Speaker A: They'll come and say, yeah, I know these guys. They have a service. They are getting $10 billion or whatever in economic security. And I can also get access to it because the market structure is now permissionless. Anybody else who has a new idea for how to build a better oracle can come in and compete on a purely technical and utility basis, rather than, hey, I have a bootstrap network effect and I'm going to kind of hold it against you, against everybody else who has new idea and innovation. So creating a market structure which allows any innovator to come in and say, yeah, you know, you're already, you have an oracle, or like eigenda is a data availability service. I'm going to build something better.
00:26:40.848 - 00:27:31.294, Speaker A: Amazing. Come in and build on top of a common security pool so you're an equal in the security pool. And so you can actually provide these services at the same amount of decentralized trust and economic security as an existing major player, which is a big, big point in how to help new services come up. And this view that we have to address, another point from Joe say on this, is, do we think every such possible service exists today? And one way to answer this is when people think of a modular blockchain ecosystem, they're thinking of three services. Maybe there's data availability, maybe there's consensus or settlement, maybe there is a sequencing. And maybe outside of that, there is an oracle. Like maybe there are three or four services that actually make up this error.
00:27:31.294 - 00:28:05.778, Speaker A: That's not our view at all. And the reason this is not our view is if you look at what software as a service industry looks like over the last 20 years, you see super specialization. You see something like, here is a real time streaming database for AI inference for autonomous vehicles. That is a SaaS service. Look at all the quantifiers to this. It's not database. It's like a streaming real time database for AI inference.
00:28:05.778 - 00:28:45.212, Speaker A: In autonomous vehicles. You have 20 quantifiers, but still the autonomous vehicle market is a trillion dollar market. So you're like, okay, that's fine. Let me build this service. So that is the level of specialization that we anticipate in this AV's economy is people will build. How do I build tensorflow inference onto ethereum? How do I build a SQL database onto Ethereum? How do we build a Nosql database for Ethereum? The sets of combinations of what are useful and viable services is much, much larger than what the three or four things that exist today. And even oracles.
00:28:45.212 - 00:29:21.780, Speaker A: We think of oracles as prize oracles. I think prize Oracles is like a 1,000,000th sliver of what an oracle service is like. You know, imagine I want to run a campaign saying that anybody who helps spread a message on Twitter will get some rewards on chain. How do I do that? I need to have a Twitter oracle. Where is the Twitter oracle? I don't know. So the set of things that are needed to make a rich and viable on chain economy versus the set of services that are available today is barely a sliver. Like, that's our view.
00:29:21.780 - 00:29:29.380, Speaker A: And so thousands of new services need to be developed and we need to lower the barrier for innovators to come in and develop these services.
00:29:29.452 - 00:30:12.302, Speaker C: Okay. Yeah, I definitely agree with pretty much everything you said. I guess the sort of not really pushback, but just wanted to hear your thoughts on it. Is that to what extent does economic security lower the barrier, or is it just kind of providing them with a better meme? To some extent, because let's take the oracle example, because it's sort of the one we've been talking about. You have oracles live right now, like Redstone or whatever, which don't even have a token and are securing, I think, nearly a billion dollars worth of value, especially in the LRT economy or whatever. In that case, there's not even a pretense that there's economic security. You're trusting other things, you're trusting the mechanism, the circuit breakers, you audited the code or whatever.
00:30:12.302 - 00:30:48.206, Speaker C: So security is kind of multi dimensional in some cases, like a roll up. You don't need actually economic security because you have these proofs. And so is it, for instance, in the example that you gave of the AI inference or some of these avss, is it just the idea that, okay, normally maybe you would look at, all right, this article is VC funded. I looked at the mechanism. It's good. And is it just that this would like how much sort of ETH is restaked against it would be another dimension on which you look at it. Like you say, okay, there's, you know, $20 million of ETH staked against it.
00:30:48.206 - 00:31:03.154, Speaker C: Like this gives me some security that this is safe, but it's still just like meme. Or you think that eventually all these things will actually move to models where there is like a direct economic security link, which there isn't right now, I think you'd agree.
00:31:03.234 - 00:31:41.424, Speaker A: Absolutely. Our view that it will move, our view is that it'll absolutely have to move to a system which is not trusting things which are exogenous to what is very fabulous protocol. Two things that are very fabulous protocol. Social consensus will revert you over longer time scale. Economic security protects you on the shorter times. So I think there is no world in which blockchains become a serious contender to the rest of the financial system, to the rest of the Internet, in which it's built on principles which are not solid. And what does it mean for something like an AI co processor? Imagine I'm using.
00:31:41.424 - 00:32:46.422, Speaker A: I'm providing an Amm into Uniswap. Like, I'm providing liquidity into Uniswap. And I say that, okay, the maximum weekly transaction volume on this, like, amm is $100 million. And I have a measurable $100 million of security for my AI inference because I'm using the output of this AI inference to actually trigger actions in this protocol. So these two, the link between homage of insurance or like, attributable security that you have from, you know, how much of economic security, how much of economic security that you have will need to be tied on chain verifiably to the amount of economic value that you transact in shorter than the social consensus timescale. In longer than the social consensus timescale, you can actually transact infinite value because, you know, the social consensus is regularizing that. You mentioned, Jose mentioned, Jose mentioned the idea of, like, roll ups don't need economic security.
00:32:46.422 - 00:33:32.854, Speaker A: They don't need economic security after the proofs have been verified on l one, but in the intervening time. So that's when you get infinite economic security. After the proofs have been verified in the intervening time, you absolutely don't have infinite economic security. And you will need exact amount of crypto economic collateral to back the actions that need to be done faster than finalization. So if you think of finalization as when you can transact infinite economic value in the intervening while, you need economic security to make fast movements. And if you think about it, that's really the only correct principle at least we have been able to come up with for how to build these systems. These two numbers of how much I'm transacting in the.
00:33:32.854 - 00:33:43.874, Speaker A: Before finalization time needs to be backed in a crypto economic manner. So that's, that's our vision for how these systems would be built.
00:33:43.994 - 00:34:12.538, Speaker C: Yeah, I mean, I definitely agree. I've been. I always thought that, like, the oracle scenario that's going on was like a ticking time bomb. Like, to the extent that there was so much value secured by systems with no economic security, and there's. But, but it just, it sort of never played out, which was bizarre to me. And also, like, no one really seemed to care in terms of either on the user side or the protocol side. It just kind of became accepted to some extent, which was definitely surprising to me.
00:34:12.538 - 00:34:21.410, Speaker C: Do you think there's some event that happens that triggers this, or how do you think people move to actually economic security?
00:34:21.602 - 00:35:57.244, Speaker A: So the general trend is, when you think about risks and tail events, most people are not prepared most of us in our regular lives are not going to sit and calculate what all tail events and risks actually happen. Usually you're kind of, it happens at an institutional level, because at the level of an institution, when you're getting in and you're deploying public money and this and that, you need to actually take into account all these tail events because you're deploying a scale of money that actually matters, that if these tail events happen, it's going to be a big problem. And you have things like government regulation which says, hey, you know, if you're transact, if you need to have home insurance or you need to have auto insurance, otherwise you should not be driving on the street. Things like this regularize people into thinking about risks that they normally wouldn't think about, right? Like, okay, so that's just like an outside perspective is in the real world, there are risks. And if you just let everybody just decide whether a risk is worth it or not, they're not going to factor in these risks correctly. And institutions, societal institutions like democracies and governments kind of plays a check and balance against tail risk calculated out and then like try to translate them into social protocols that actually make sure that you're doing the right thing. So what I expect to happen is in, you know, our time preference and time scales that we think about at Eigenlabs is, you know, we, this is going to take a decade.
00:35:57.244 - 00:37:14.236, Speaker A: We are not talking about like what's happening in this bull cycle. If you look at the next decade, we are going to see that as more and more serious institutional players enter and they want to participate, you will see this bifurcation of protocols which have sharp, measured security and protocols which are like yoloing into it. And over time, you will see that protocols which have thought a lot more today, to be honest, pretty much every protocol, including Eigen layer, including rollups, everything is like, trust us, that's where we are, right? It is just that we, you know, some of them have a roadmap for improving and adding full proofs and adding, you know, thinking about these things and several others don't even care because they're like, yeah, you know, doesn't matter in this market. We'll talk about it when it matters. And so that's how it will be because, you know, as end user consumers cannot kind of parse through the risk matrix to know all these things. And so we do expect that as the space becomes more professionalized over like at least a half decade timescale, this will matter a lot. Things that are built on correct principles, have provable guarantees, will win over things.
00:37:14.236 - 00:37:51.350, Speaker A: There will still be a space for things that are like, yeah, you know, it's like this and that, but even the other things need to be regularized correctly. Imagine like I want to have an oracle that is based on legal liability. It should actually have legal liability countered in the protocol and say, oh, you know, this pith is using jump and these like 30 other things. These are in these legal jurisdictions. This is the legal contracts on which they're operating. You should just either bring them on chain into the protocol that these are the legal liabilities and you're assigning these counterparty risks correctly, or you should have an on chain enforcement mechanism. And I see right now we have neither.
00:37:51.350 - 00:37:57.822, Speaker A: And it seems like it's an unclear principle as to what is being sure.
00:37:57.878 - 00:38:23.496, Speaker B: Maybe a more basic question from my side, just to conceptualize this a bit, but how do you envision this playing out? Like in your chain link example, somebody comes up with their own oracle design, they build it on eigen layer, they attract restaked eth to that. Like is this a slow process where people move over? Is there an event where people leave protocols like Chainlink? Like what exactly, how exactly does that play out?
00:38:23.600 - 00:39:29.150, Speaker A: I think this is the same kind of meta thing I would say for cryptos, like adoption cycle is people think a lot about what existing services will be replaced by a crypto service. Like is a social network going to be a crypto? Social? Is a, is something else going to have a crypto version? And usually it is much easier to win in categories that simply didn't exist before crypto won. In nfts, there was no like non on chain NFT, just nfts, the online on chain digital art or whatever, or a profile or a community or whatever. So I think that's the same thing that's going to happen with Eigen layer is because of our vision that there are thousands of services, not the three that already exist. We are going to see the other services that are simply don't have competition, don't. Just new things like AI inference, like databases, like two factor authentication, like just brand new services like fully homomorphic encryption. These are the categories that are just like, there's nothing else.
00:39:29.150 - 00:40:22.718, Speaker A: Secure multiparty computation. That's what people are going to build on Eigen layer first, of course, people are also trying to build a competitor to chainlink. We have like several, we're trying to work with Redstone, many others, but the idea is that it's going to be easier for some of those other ones which simply don't have competition because it's greenfield to bootstrap and win those markets, setting a precedent, helping some of these other services to then compete with non Eigen layer services. But our goal is never that like services built on Eigen layer is, are always going to be better than services not built on Eigen layer. Our goal is that open innovation means better services when that's our goal. So that's the theory of permissionless innovation. We want to see somebody who has a better idea and a better economic model, a better understanding of how to build these systems more secure, more carefully.
00:40:22.718 - 00:40:43.418, Speaker A: They should just win. And that's what we want to empower. If chainlink is that, or pith is that, it's amazing. Like that's awesome. And they should do it. So that's our view is that the open innovation means it gives new service area for innovation. New developers can come in and build new things.
00:40:43.418 - 00:41:15.634, Speaker A: Just as an example, like our motivating example was consensus. The reason I got into building Eigen layer is we had like 15 papers on how to build consensus protocols. And you know, imagine you had a better consensus protocol. What can you do? You had to go and like get Ethereum, bitcoin, avalanche or Solana to change their consensus protocol. Otherwise you have no game. Now what I can do on eigen layer is I can come up and say, hey, roll ups, you want like 500 millisecond finality. Use my consensus protocol for finalization.
00:41:15.634 - 00:42:17.696, Speaker A: I build something on Eigen layer and then deploy it and see if actually it has traction and users and usage. The best protocol wins. So what we were seeing is an anti pattern for crypto, which is that once a technology bootstraps, even Ethereum, once Ethereum bootstraps, now you have no ability to do permissionless innovation at the core infra layers of Ethereum. And then we are just stuck as a kind of like a whole community with a massive amount of network effect, powering Ethereum, but no way for us to modulate it, to actually make it better and better as a technology. Imagine Ethereum was a centralized company. There'll be a VP of product and a VP of engineering will be sitting around and you have a better consensus protocol. They'll buy your company for 10 million, and it'll get at least internalized into the technology stack at the speed of business operations, as opposed to we are now enshrining really, really slow moving technology at the core layers and not having the scale of permissionless innovation.
00:42:17.696 - 00:42:56.926, Speaker A: This bundling of technology and network effects is an anti pattern for, I think, crypto. The network effects should go with things like, oh, you know, ETH is money, ETH has network effects, it's totally fine. But technologies should be open and permissionless. Ethereum already took this view very seriously, and that's why the L2 era, and today, like people are talking about it, doesn't have enough gas burn or whatever, is because Ethereum committed to this permissionless innovation as being a much more important principle than value accrual. One of the reasons we chose to build on Ethereum is this, like directionality.
00:42:57.030 - 00:43:38.658, Speaker B: Just have one more question on the topic, Sriram, not to linger on the Chainlink competitor example, but for projects that. So the thesis is max creativity, like lower barriers to innovation. I love that thesis. And that was, you know, one of the reasons why we loved backing you guys. But can you kind of walk us through the other side of that barrier? Like, if I'm a venture funded project, I don't really have to cater to a crowd, I don't have to give updates, I don't have to share fees, I don't have to share a token, I don't have to do anything on a continual basis to attract staked Eth. I can just build and then release. Is there a negative where projects have to like pander to this crowd to attract that?
00:43:38.706 - 00:44:36.292, Speaker C: I had a. Yeah, just to add a bit to that. Yeah, I had the same. Same kind of question, which is, I guess we've established that economic security is a meme right now, but I definitely agree with you that it can't be a meme in future for this to succeed, otherwise you just kind of recreate it, traditional systems. And if it does succeed, then clearly we need to implement economic security. Now. Then there's Tom's question, which is, if you accept that the projects want that, then they kind of have to choose, do I use my own token for this, right, and send all the cash flows and narrative through my own token, or do I come in and use Eigen layer? And my answer to this would be, eventually, for the same reason that you have economic security emerge, you also need to have a legal system of sorts emerge, right? Like a neutral third party that isn't just the protocol itself, that's arbitrating everything, because there can be some situations you could imagine, let's say with Aave or something like that, where there's bad debt big enough that it's irrecoverable.
00:44:36.292 - 00:44:59.434, Speaker C: And if they were to dump all the AAvE and the stake AavE safety module, you would literally like Aave would go to zero. And at that point, it's like our AAvE holders just incentivize to look out for their own interests, rather than the a token holders. Right. And I guess that's where you would need something like Eigen layer. And that's where it's not just like a stopgap for projects, I guess, to go to their own security. But I'm curious what your answer is for that.
00:44:59.474 - 00:45:54.888, Speaker A: Okay, so there are two like sides to this question. As an EV's, am I using Eigen layer in the beginning, am I using Eigen layer in equilibrium? From the Eigen layer viewpoint, how does this exist in the long term, as opposed to just being a bootstrapping engine? The first part is, as an AV's, you can decide. Eigen layer is a system of open innovation. You can decide what you're using to protect your system. This is one of the core principles we enshrined in the protocol, is you can use your token or ETH or whatever to actually secure yourself. We do have multi quorum support baked in as a first class citizen in the Eigen layer protocol, the answer for is economic security in your own token. The right answer versus like in ETH or in an Eigen or something.
00:45:54.888 - 00:46:19.462, Speaker A: I think the answer is, first one, economic security in. If you have your own token and it is valuable enough and you want to use it for economic security, absolutely. One should go ahead and do that. Like there's no doubt or question or like prohibition around that. It's useful. You know, people have the token, it is valuable, use it. But here is a kind of like a very important factor.
00:46:19.462 - 00:47:17.806, Speaker A: The factor is the, what is the right unit for economic security is basically, what is the unit? It has to be matched to the unit of risk. Imagine I'm moving ETH around my I have a bridge, and a bridge needs economic security, and the bridge is moving 1 million eth per week. That's what it's moving. Now, what is the right measure for economic security for this bridge? Is it eth? Is it Eigen? Is it my own token? And it depends on the cross volatility. Imagine I'm taking like, I have 1 million eth in the bridge, and I want economic security in an AV's token. I need to now account for the one week cross volatility between the AV's and ETH, and factor that in when I'm taking the amount of economic security in the AV's token. Whereas if I'm taking, we're moving 1 million ETH and I'm taking economic security in ETH, then there is no cross volatility risk.
00:47:17.806 - 00:48:13.686, Speaker A: 1 million ETH is 1 million etH, and I just need 1 million eth. So this is a very important point. So is just like the thing that accrues monetary premium and becomes the denomination of risk, also becomes the denomination of economic security. There is a cross volatility matching between what risk is measured in versus what economic security is supplied in. So we think ETH and BTC are probably the two notions that are like most plausible for this mechanism. But that's just something to factor in because, you know, there is going to be a cross volatility comparison, because otherwise, I don't know what your token will be worth in a week when the thing gets settled or in two weeks when this gets settled. So I have to like discount for the relative volatility between them.
00:48:13.686 - 00:48:46.948, Speaker A: So that's something to note. So AVSs may choose to use their own token, you know, versus use eth versus use eigenvalue. Like it's flexible. So for bootstrapping, it's helpful to use ETH because it's already there in addition to your token. And in the long term, should AVSs continue to use Eigen layer? I don't know. We don't have a prescription that you should continue to use. You should continue to use it if it is profitable to you to continue to use it.
00:48:46.948 - 00:49:48.630, Speaker A: So what this does is this makes Eigen layer an optionality for the AV's. You use it if it continues to be beneficial. If it's not beneficial, don't use e, just use your own token and just do whatever is most beneficial to push up your innovation. So if you take this AV's hat, then you see, okay, in Eigen layer is pure optionality to add ethan Eigen to my economic security. And so, optionality does not reduce value, it only increases value, if at all, to my AV's ecosystem, because the AV's token is going to be the governance for how I decide whether to incorporate what other sources of economic security, number one. So this is from the AV's viewpoint, I think this is a simple enough logic to understand why the AVSs own value is only better, if at all, by using Eigen layer rather than not using Eigen layer, because there's a pure optionality you can always disconnect. It's not like building an app on top of Ethereum where you're saying, hey, I'm on top of Ethereum.
00:49:48.630 - 00:50:34.694, Speaker A: I need to be on top of Ethereum. It's like an optionality. It's like a dial that you can switch on and off to the extent that you want, number one. So then the question comes to me, which is, hey, if that's the case, what I estimate is every AV's which is successful is going to go off and like not be part of the Eigen layer ecosystem. So it's up to us as Eigen layer to understand and answer what is the long term value proposition and benefits we can offer AVSs to continue to use it, because it's optionality, not a, you know, not a tie in. And there are lots of answers for this, and I think very few people understand these answers. So the first one is pool security is better than fragmented security.
00:50:34.694 - 00:51:20.280, Speaker A: I have 100 protocols, each of which have 1 billion staked versus $100 billion staked into 100 protocols. Both of them cost the same, because in the first one, each protocol is paying off their 1 billion. In the second one, the 100 protocols together are paying off the 100 billion. But the second one is much harder to attack. So there is a benefit of pooling number one. The second one is what we call elastic scaling of security. Elastic scaling of security means if I had to provision the security just for myself, for my av's, for my service, then I have to provision whatever I need, in the worst case, in my own pool.
00:51:20.280 - 00:52:03.936, Speaker A: But if there's a common pool, and I'm drawing out of the common pool, how much I need as economic security, you can imagine a bridge, a bridge will have weekly volume, fluctuate week to week based on price, interest, activity, all of these things I don't need to provision, let's say, fluctuates between 10 million and 200 million. I don't need to provision 200 million stake all the time for my bridge. I'll provision 10 million this week and 200 million in a week when I actually need 200 million. So elastic scaling of security is like I can draw the amount of security I need just in time. So this is a very powerful thing. This is the reason why cloud is a phenomenon. Cloud is a phenomenon because you can draw the amount of compute that you want.
00:52:03.936 - 00:52:53.544, Speaker A: So EC two is elastic compute cloud, so you draw the amount of compute that you want rather than provision it statically. So elastic scaling of security is a big advantage. The third one is when you have pool security, the economy is actually much better. Imagine I'm an application, and the application uses an oracle, an AI, two factor authentication, all these different things. Now, if I want if the application was doing hundred million dollar weekly volume, it needs to have hundred million dollar economic security from each of these services separately. Right? Like, I have to go and get $100 million economic security from an oracle, need to get $100 million economic security from a two factor authentication and so on. But if they were all run on a common substrate, I just need to get economic security one time.
00:52:53.544 - 00:53:30.880, Speaker A: This is a huge, huge thing. Just to give an example, historic example, para bound the oracle into the consensus protocol, said, okay, I have the oracle as a part of the consensus protocol. This is actually like what I call premarket bundling. The person who was building the blockchain needed to know that actually having these two together is better than not having these two together. Whereas Eigen layer is post market bundling. You build a service, somebody else builds a service, somebody else builds a service. Now they're bundled post market because they're run by the same validator set.
00:53:30.880 - 00:53:51.574, Speaker A: They can be under return security one x rather than n times. So there's lots and lots of things that happen when you have a system of shared security, but allow open innovation on top. And so these are some of the reasons why protocols may choose to stay over the long time horizon.
00:53:51.954 - 00:54:31.682, Speaker C: That makes sense. Yeah, I want to move to the inter subjective staking stuff just because I think it'll take a while to get through. So I want to maybe say it back to you the way I understand it, and you can confirm if that's correct or not based on the paper. You start off the paper with this idea of objective, subjective and intersubjective faults. And if I had to, like Eli five, I would say objective faults are ones that can be resolved on chain. Right? Like deterministically. So you don't need to ask anyone, you don't need consensus, you don't need a committee.
00:54:31.682 - 00:54:50.364, Speaker C: And then subjective and intersubjective, I would say, are the same, except intersubjective. There is some hope of a committee coming to an agreement on, whereas subjective, there's no possibility. It's just like completely subjective, right? Different people will have different opinions and there's really no way to come to a conclusion.
00:54:50.784 - 00:55:19.190, Speaker A: Yeah, that's absolutely right. And another way I would phrase this is the first time I heard of blockchain. I saw this claim that blockchains are truth machines. And, you know, this kind of like, hit me and I'm like, truth machine. Like, truth seems like a big word and like, how do you get a truth machine? Seems like a pretty amazing thing if you can get a truth machine. Then you think about it. You see, like, there are two kinds of truths.
00:55:19.190 - 00:55:45.114, Speaker A: Objective truth, which is. Or you can say a mathematical truth, which you can just, like, two plus two is four. Or did you sign your. The person who has this public key signed this private key. Things like that are mathematical truths. And mathematical truths can be verified cryptographically and certified that, you know, the. The person who did it is the one who actually did it.
00:55:45.114 - 00:56:35.354, Speaker A: Whereas most of society is constructed on social truths, social truths are. Who is the president of the United States? How much money does Tommy have? You know, who's the founder of, like, eigen layer whatever, right? Like, these are all social truths. And we. These truths exist because we agree that these are the truths, but they're very important because they help us create human social coordination systems. So if you divide truths into objective truth, which is mathematical and scientific truth, versus, like, social truths. So the thing that we are talking about is, how do we bring social truth on chain? So that's the scope of social truth is just another word for inter. Subjective truth.
00:56:35.354 - 00:56:45.322, Speaker A: Inter like, because our subjective opinions mingle with each other and create an emergent effect of truth. Who is the president of the United States is a perfect example of that.
00:56:45.498 - 00:57:09.850, Speaker C: That makes sense. And so the idea is that basically, for the objective faults, you can use restaking, right? Eth restaking. And it's kind of. It's easy to determine. It can be found deterministically, and you can just slash. And then you have these inter subjective truths, which you can't determine them on chain in protocol. Right.
00:57:09.850 - 00:57:39.444, Speaker C: You need to have some kind of, like, court like system. That's what I compared it to in my tweet, right, of this being like, a court where you're trying to decide what the facts are and what the outcome should be. And I guess one basic question is, why can't you use ETH for this, too? Because you could just have ETH bonded, and then a committee that decides, and then you slash based on that. But I guess the reason for that is because you want to have this forking option. Is that the only reason, or is there something else that I'm missing?
00:57:40.144 - 00:58:28.420, Speaker A: Yeah, great question. I think it's super important to dive into this. So imagine I bonded etH, and then, like I said, hey, you know, this is the oracle input, and if the oracle input was wrong, I'll get slashed. Then the question is, who is determining whether the oracle input is wrong? Okay. Then you say, oh, let's let a committee stand in place, and then make a determination. Now you say, okay, the people are bonding their ETH and making a promise that they're bringing the oracle input correctly, but the committee is going to decide whether they did their job correctly or not. And then you're like, what if the committee is malicious and the original guys who ran the oracle were correct? So an honest party will be slashed based on a dishonest committee.
00:58:28.420 - 00:59:28.244, Speaker A: So what's happening is basically the whole system is now the root of trust, which, as we pointed out earlier, we don't want committees to be the root of trust. That means the committee is the root of trust. It's like saying, oh, let the committee do everything. Like, why do we need these blockchains? What is the fundamental kind of like, reason why you need these blockchains? Kind of goes away because just have a committee run everything. So that's the problem with bonding eth. And then, like, letting a committee decide, it may be okay in like very, like when the stakes are low, right? Even the stake is low, you would say, yeah, you know, let the committee decide and do it. But when you want to have like, a system that transports a phenomenal amount of value, you need to make sure that, you know, now the committee needs to be honest, and the committee may have problems in deciding whether it's correct or not.
00:59:28.244 - 01:00:45.650, Speaker A: And, you know, Vitalik was very worried about this, and rightly so. Imagine there was some slashing event decided by a committee, and then the committee was malicious. Now there'll be pressure on the entire Ethereum blockchain to fork because people lose their money for no good reason. And so this is what Vitalik called, do not overload Ethereum consensus. And so we had to figure out, and really what he's saying is, do not overload Ethereum's social consensus, because the social consensus is getting pressure to fork based on an extraneous event exogenous to the core running of the Ethereum protocol. And so we had to figure out how to, instead of externalizing social consensus on Ethereum, how do we internalize it into the Eigen layer protocol itself? And the court is a good analogy, but the real, real thing happens in blockchains, which has no real, you know, no analogy in the court system is forking. Right? And forking basically means if you don't like the output of the court, like, go to a different world where the output of the court was different.
01:00:45.650 - 01:01:51.084, Speaker A: It's a crazy, crazy property. And it's only true in digital worlds, because in the digital world, you have this phenomenal object called copy paste. We make jokes about copypasta, but this is really a uniquely digital feature that I can replicate the entire kind of system, copy paste it, except with this difference that I don't agree with the oracle, and you can create this new version. So whenever there is enough disagreement, the world forks into two different worlds and two different in the case of Eigen token, two different tokens and people decide. So the really cool thing with people decide is there is no jury or juror or like a court or voting or anything in the Eigen token system, nobody is deciding anything. Enough people disagree. They forked the token, and now the amorphous, unknown, infinite outsider kind of decides which one to imbue value into.
01:01:51.084 - 01:02:39.894, Speaker A: So it's a really clever trick of using the idea is that because, you know, people will converge on the true thing, you don't want to bet on the wrong thing because you lose all your money. And that puts pressure on, like, everybody converging to truth. So going back to like, how do we bring social truth on chain? Social truth is transparent outside the frame of the blockchain, not inside the frame of the blockchain, but from the outside. Social truth is transparent. This happens all the time. Like, how do we know that this particular token is the unitoken? Somebody else could deploy a token called the unitoken, and we don't all go to that. It's because value is allocated into the unitoken based on all of us agreeing that that's the right unitoken.
01:02:39.894 - 01:03:37.936, Speaker A: And it's super important that this kind of a tethering. And similarly, somebody can fork the Ethereum blockchain, but nobody else is going to follow that until it has enough social consensus and the power of truth behind it. In some sense, the mechanism to bring truth into the chain is by saying if there is enough disagreement, the token will fork and then there'll be two versions of the token. The version of the token which is true will accrue all the value, and so you better already comply to it rather than trying to fight it. So now it's starting to kind of like this principle that social truth can be brought on chain is starting to kind of make sense. The way you're bringing it on chain is by creating multiple versions of truth on Chain. And if the version of truth that has like real world cache accrues value and people follow it, so that's the.
01:03:37.960 - 01:04:35.800, Speaker C: Kind of principle, yeah, that makes sense. And so I guess in the real world, the equivalent is. Yeah, to use the court analogy, which I know you don't like, but it's in the real world, you have a court, like a local court, and then basically you can appeal, which is a committee, effectively, and then you can appeal to like a more respected committee, right? It can go up to the most expected committee, most respected committee, which is like the Supreme Court, right? Or it's the. I forget the name in the UK. And so it's expensive. It has a cost, but here it's like you can actually appeal to the entire country, right? And I guess there is no. While you were speaking, the only sort of example that came to mind was, like the American Civil War, right? Where you had effectively a fork attempt over slavery, right, as a court case, right? You had, like, you had the south try and fork the United States and cause a war over it.
01:04:35.800 - 01:04:50.284, Speaker C: And it's really cool because, like you said, you end up involving not just eigens, stakeholders, not just the committee, but the entire centralized exchanges, decentralized exchanges. Everyone in Defi, everyone gets to vote on this case effectively.
01:04:50.784 - 01:05:25.354, Speaker A: Exactly. They're voting by buying. And it's really this really interesting thing where we're using the market power to, like. And the market's self interest is propelled in the common interest because no one exchange will say, I only hold this bad Eigen token because they know everybody else is going to switch to the other token, and they will lose all the value. So they don't want to be stuck holding the kind of like a toxic bag. So everybody switches because, you know, everybody else will switch. So putting this enormous pressure to truth.
01:05:25.514 - 01:05:28.402, Speaker C: Yeah, that's cool. That makes sense.
01:05:28.498 - 01:05:59.320, Speaker A: And there are, like, worst cases, like the civil war. Like, imagine there's a highly contested election, and the question was like, who's the president of the United States? And maybe we actually get a social. Maybe there's no real social fork, but we actually poll people. You might find, like, there are, like, some people are, like, just gonna disagree and could happen. And if this happens, all that happens with the eigen layer ecosystem is now you have two tokens. There is a Democrat eigen token and a Republican eigen token. It's fine.
01:05:59.320 - 01:06:20.228, Speaker A: It's not like the end of the world. It's maybe the one has, like, 60% value and the other has like, 40% value. And, like, you can stake this token or that token. And some people will accept both tokens. They're kind of like politics neutral. And some, like, AVSs will say, yeah, I'm a Republican avss, only a. Except the Republican Eigen token, it is okay.
01:06:20.228 - 01:07:34.976, Speaker A: Like, it is not a catastrophic outcome. Even if forking happens, even though we've designed forking and want forking to be like a nuclear option, even if it does happen, there's a kind of graceful degradation in a way that chains don't have. And the reason is chains bundle information and state across everything that's running there. And in the Ethereum community, we talk about this a lot that hey, USDC and Jeremy Allaire and Circle is going to decide which Ethereum fork wins, because whichever one honors USDC redemptions is having a significant say in which is the right version. The Eigen token being just a pure value forking rather than forking, USDC and applications and everything else together makes it much more like atomic, because USDC has no say on which Eigen token is true or not. Anyway, so that's the mechanism that we designed. And the other thing that I think to just make this even more strong, the thing we did is to create isolation between financial applications and like forking applications, we created a version of the token that is going to remain one, one on all the forks.
01:07:34.976 - 01:08:15.110, Speaker A: Even if there were many forks, you can have a token and this token can be traded on exchanges, decentralized exchanges, so they don't have to kind of rack their brains in deciding which version of the fork is right, or exert unnecessary influence in kind of king making a fork, because they're now not touching the other token, they're touching the token, which is what we call a solid representation, which means it's one, one honored across all the forks. So isolation actually makes forking more trustworthy because you don't have centralized participants exerting over leverage and influence on what should be the right version of the fork.
01:08:15.262 - 01:08:30.183, Speaker B: Sure. If you do have to go through the nuclear forking option for a specific issue, how does it affect all of the other avss and activity on Eigen layer? Like, you know what I mean? Like is there. Yeah, yeah. Curious your thoughts there.
01:08:30.223 - 01:09:17.582, Speaker A: Okay, great question. This is discussed in great detail in the white paper. But the core thing is Eigen layers core premise is that the same group providing decentralized trust should provide it to as many different applications as possible. And that's the same thing we aspire for. The Eigen token is many, many abss will consume the Eigen token for this kind of like intersubjective false and intersubjective staking. And the question is, if a fault happens on one application, what happens to all the other applications? And I think it's a great question, very important one. And the core mechanism.
01:09:17.582 - 01:09:59.652, Speaker A: So let's imagine a case where all stake is restaked like all eigenstaked, into all the applications. This is how it's going to be for the Eigen system initially. So we have all these different AVss and eigenstaked across all of them. When a fault is raised in one, it's now imperative for all the AVss, their governance, to decide which token to follow within like a lag period. Like we have a lag period of forking of 28 days. Within the 28 days, each of them have to kind of make up their mind as to whether they're continuing with a fork or continuing on the other side, what that does. And all of them happen synchronously.
01:09:59.652 - 01:10:49.930, Speaker A: Whenever after the 28 day period, everybody switches to one of these two forks and they all sit on one of them. And of course the default option would be to continue on the existing fork. They could do that, but they have the optionality to switch to the other fork within this period. And what happens is because inter subjective falls and everybody's taking like, you know, all eigenstakers. And when an AV's is faulty, we only consider like faults, where like a large fraction of the eigenstakers can be attributed for the fault. Like in an oracle, the answer is wrong only if a majority of the oracle gave a wrong answer, because you're taking a median or average or whatever, like majority opinion. So what this does is we know whenever forking happens, you're going to fork a large number of tokens.
01:10:49.930 - 01:11:27.782, Speaker A: Not fork, like a small number of tokens. That's not something we want to fork a token for. The token should be forked only if like a majority, or like, you know, 33% or whatever significant fraction is malicious. Not for, hey, one guy is malicious. I'm going to fork the token. No, that's not, that's not how it works. So what you would do it to, to do things where like a smaller fraction of stakers are participating, is adjudicated at the, like, take a majority vote among the, all the eigenstakers, and now, like you're up to, you amplified the fault.
01:11:27.782 - 01:12:03.206, Speaker A: Either a majority is right or the majority is wrong. And if the majority is wrong, they'll be forked. The majority is right, they'll continue to remain so all faults are like from whatever the local resolution or propagated to the global resolution. And either a majority is right or wrong. And so now the majority of the stakers basically go. And after this 28 day period, all of them need to switch to one version or the other version. And because the switching could impose like complexity for all the avSs, there is attributable security to each of these avss.
01:12:03.206 - 01:12:46.488, Speaker A: And all of them are paid out whenever fault occurs in any one AV's, because it's an externality to everybody. And so you need to kind of pay out the compensation for all of these avss. That's how the system works. It's kind of like. So as long as each of the AV's takes an amount of attributable security more than its transaction value, within this 28 day period, the system is totally secure. Because in this 28 day period, you've kind of made sure that the transaction value that you're doing is less than the amount of attribution and attributable security that you have. If the token goes malicious, you are still guaranteed that you are paid back whatever you're owed.
01:12:46.488 - 01:13:03.220, Speaker A: So when you migrate to the next system, you've already been made whole as an AV's. So this is how we create a very tight system of crypto economic security between all the different ABS's sharing a common pool of security, but they all are affected by the 4k.
01:13:03.372 - 01:13:16.812, Speaker B: Got it. I was going to ask you if there's a lot of overhead in every AV's having to make a decision, but given that it likely will not happen, or only ever happen once, it doesn't seem like it should be a lot of overhaul.
01:13:16.868 - 01:13:51.380, Speaker A: Yeah, and the way we force it, like the way we force it, is that to create a fork, you have to burn a significant fraction of the or some fraction of the Eigen tokens. So, you know, let's say it's 3% or 5%, right? So you have to burn 5% of tokens off the current fork. You can of course, get the 5% of the tokens on the other fork, on your new fork. But you are giving up like a concrete, real, like value on this fork. And you would only ever do it if there's something really, really real, like, otherwise you wouldn't do it.
01:13:51.442 - 01:14:10.336, Speaker B: Shrimp, I had a question. Just to go back to the token side, I'd be curious, your thoughts on what were the runner up designs for the Eigen token that you thought through? I'm sure you guys had some pretty aggressive debates. Is there anything that you had in second or third tier that you were debating implementing?
01:14:10.480 - 01:14:52.272, Speaker A: Oh man, great question. This is like a three year process to actually get this particular version of intersubjective token. We've had many, many, many designs, some completely crazy things. And hopefully we'll put up some of them in the coming year and they could be useful in lots of other different places. So one way to think about it is think of an axis where you have how much order versus how much chaos do you want. This is the kind of like, rooting thing with inter subjectivity is the most order you get is a completely objective token. It's a non chain ERC 20.
01:14:52.272 - 01:15:32.004, Speaker A: Like, forget it. This is the token. Nobody else can do anything with it. That's the one end. And the Eigen token is in the middle. It's kind of like you can fork it, but you can only fork it if there is a lot of disagreement or enough disagreement, and you create enough checks and balance on when you can fork it. The other extreme would be to make it very inter subjective or like, very subjective, and to say, let me just give you an example of an extremal design is each token is an NFT.
01:15:32.004 - 01:16:26.220, Speaker A: And anybody can value this, whichever NFT, how much hour they want, and to gather, like, state that, hey, I want these NFTs because they're all right. And those nfts I don't like. So you can create very extreme, like, chaos or inter subjectivity, or subjectivity. So you can think of like, the extreme design of everybody just has an NFT, right? Like they're non fungible specifically, so, which means it's up to anybody how they value it. Like, imagine there was an oracle input and Tommy gave an answer, which is 0.01% of the right answer, whereas Jose's answer was within 2%. People be like, yeah, maybe I'd recruit Tommy's NFT for future actions a little bit more than Jose's answers.
01:16:26.220 - 01:17:15.342, Speaker A: So you have these graded variations and, like, highly subjective reputation type emergence on that end and the other end is completely objective. And the middle, which we try to understand, what is this middle? We think, like, pretty much all of life happens at the middle between order and chaos, right? If you just go like, just take a very physics view of the world. The extreme order is like a frozen crystal, right? Like everything is frozen in place, nothing moves. That's extreme order. And extreme chaos is all particles going random brownian motion just randomly hitting here and there. And there's no structure. So life is actually at the kind of like, in between order and chaos.
01:17:15.342 - 01:18:14.664, Speaker A: Like, it's neither a frozen crystal, which is all in some sense, both the frozen crystal and, like, a random gaseous moment are both, like, equally uninteresting from a kind of like a human lens. It's like this calibrated order and calibrated chaos, which is the most interesting. And so the eigen token was kind of chosen as this calibrated order and calibrated chaos to actually strike the middle point. But I think there are other use cases where this is not the right, the Eigen token is not the right operating point. You need to operate in different points. For example, think of intersubjective means and like valuing like subsets of like people's opinions and ideas and things differently. It's not what we designed the Eigen token for, but it's, it's a very rich, interesting design space where you can piggyback off existing tokens, right? Like subsets of them have different values and then like their opinions matter, all of that.
01:18:14.664 - 01:18:34.824, Speaker A: So we'll be releasing much more information. The complexity of those kinds of systems is in how do you make it expressive but low gas cost to express these preferences and still actually make it usable? And so we have a pretty cool set of designs there.
01:18:34.984 - 01:19:03.962, Speaker C: Yeah, that's awesome. I want to get into the wrap up questions, but I have one more on this. It's actually maybe going backwards from the Eigen token. What's the, I guess what's. Because forking will be like a nuclear option, or at least a very obviously less nuclear given the setup that you've created and stuff, but still pretty nuclear most of the time. I guess it'll be a committee, right, that's set in place. And I'd like to just walk through like how that works with an example.
01:19:04.018 - 01:19:39.434, Speaker A: Like, yeah, Eigen DA is a great example. So the scope of the Eigen token utility is for automated validation services. So it's very different from, you know, examples like Kleros where there's a court and jurors and like human subjective opinions in the normal mode. So let me go through it with the example of Eigen DA. Eigen DA is a data availability system. And in a data availability system you have two fundamental functions of a DA node. They need to store the data and they need to serve the data.
01:19:39.434 - 01:20:30.830, Speaker A: And when they're storing the data, you can create a ZK proof for data storage. Why? Because you can create a proof that says that somebody who has knowledge of my private key also has knowledge of this data item. So that's exactly the structure of a ZK proof is proving that somebody has knowledge of certain things. Somebody who has knowledge of my like private key also has knowledge or possession of the, this data item. So you can actually do this is called proof of custody. So you're saying that the person who has the private key also has custody of the data, could see the data. This is a really interesting kind of, you know, one aspect of data availability which is provable on chain, and you can slash people if they're not able to furnish this proof for you can slash eth, they're not able to furnish this proof.
01:20:30.830 - 01:21:26.168, Speaker A: There's another part of data availability which is serving the data. Serving the data is, hey, the DA node has the data, but it did it publish it into a public peer to peer network. Okay? And the answer may be yes or no, but this is not provable on chain that I published the data into this peer to peer network, because it's a networking kind of like a fact, which is not provable on chain. But anybody who's putting their ears to that peer to peer network knows whether the data was published or not. So what's happening is the eigen da nodes are promising by staking Eigen that they have stored the data and published the data in this public peer to peer network. That's what they're promising on by staking Eigen and then making this commitment on chain. There's no humans in the loop.
01:21:26.168 - 01:22:36.034, Speaker A: It's all computers just making these decisions and then putting them, putting their Eigen backing it. And then everybody else in the real world sees this and then says, hey, can I actually find that the data is floating around in this public peer to peer network or not? And how do I find it? I find it by running a full node. I find it by querying an RPC node and asking for like the whole data or portions of the data, or by running a light node that just samples small portions of the data. Whatever your mechanism, you can actually like download some data and know that whether the data was published in the peer to peer network or not. Okay, so this is an example of. So now if everybody else knows, hey, for the entire week, you know, the challenge period, the data was never made public. Now that's enough kind of like inter subjective consensus to say the Eigen token should be forked because all the eigenstakers maliciously stated that they have stored and published the data in a public peer to peer network, but nobody in the real world could download the data.
01:22:36.034 - 01:23:25.068, Speaker A: So that means we need to fork these Eigen token holders. This is an example where no human in the middle, completely automated services in the normal mode, but in the exception mode, when somebody creates a fork, people are like, yeah, I know, my phone said data was not available. So I'm going with that fork. The human judgment is only exerted when somebody creates a fork, and then you have to follow it, otherwise there's no human in the loop. It's a completely automated system. Which is why I think this system scales in a way that human adjudication systems don't scale, because they're basically making statements about computation, networking and storage, which are all done in an automated manner, just evaluated when somebody forks it in a human conscious manner. So that's an example.
01:23:25.068 - 01:24:25.024, Speaker A: Another example would be, I ran an AI protocol, and like this is the answer from chat GPD on this particular query. And when you do it, of course you have to make sure that because GPT has things like randomness, you are calibrating all the randomness and feeding the random seed correctly to it, so that it's replicable, but it's replicable. And maybe nobody has written a ZK proof or a fraud proof for GPT, and like AI, but anybody who has a GPU can run the same protocol and get the answer. So lots of places where it's computation, storage, networking, and some combination of these things, you want to assert and make statements that in the normal mode there's no committee, nothing else, there's just stakers running their service. And if they go wrong and try to pull one over everybody, then somebody can go and say, hey, fork it. And then everybody else has enough footprint and data trace to follow the right fork.
01:24:25.564 - 01:24:53.736, Speaker B: Sure, I'm not to take a 180, but just one of my closing questions for you. Eigens obviously attracted a ton of TVL, like 15 billion. TVL is quite a lot of money. There will be a gap in real fee revenue from AVss and the flow. And that gap is probably bridged by, honestly, trust and excitement and innovation on the AV's side and what's going to come out. How do you kind of feel about timelines there, the dynamic and how you bridge that gap?
01:24:53.880 - 01:25:51.406, Speaker A: Yeah, great question. I think there are like three things that make this kind of economy possible. The first one is Eigen layer was built on restaking for a good reason, is because the cost of capital of restaking is lower than the cost of capital of staking, because it's an asset that I'm already using to stake on Ethereum. So I can actually share that at lower capital cost. And this capital cost gets even lowered because of things like liquid restaking tokens, which take away the illiquidity premium of staking. And people are a little worried that like liquid restaking is actually some kind of leverage or something. It's not really because an LST comes already loaded with operator risk.
01:25:51.406 - 01:26:48.694, Speaker A: So if you think about a liquid staked token, a liquid stake token is a representation saying I have staked this and I'm going to run this, and if this operators are right, I'm not going to get slashed, the operators are wrong, then I will get slashed. So an LST is basically native eth loaded with operator risk and an LRT, a liquid restaking token, because Eigen layer is very careful in like keeping the boundary on validation risk. And LRT is also basically just ethanol plus operator risk plus operator risk. Instead of operator risk on running ethereum, it's operator risk on running ABCD ABS's. So it is of the same type as a liquid staking token. So all of this together means the cost of capital of restaking should be lower. And you know, there is a kind of like in a bull market, people have like, you know, unreasonable expectations for everything.
01:26:48.694 - 01:27:45.636, Speaker A: But really the ethereum staking rewards are like 4%. And what would be the cost of capital to actually add on additional risk while still having a liquid staked position? I don't know the answer. But that is the type of things that actually make this possible, to have a lot of economic security supplied cheaply. Because like I said, validation risk is premised on the information asymmetry. So what's happening is people who are holding the LST are saying, I trust the operator set, and therefore I'm not taking any additional risk. Anybody who is saying oh, I don't want to touch that, I only want to touch native ETH is saying I don't know if this is trustworthy or not. And by and the services that are consuming the trust are saying I don't know who the operator is because I don't know who they are.
01:27:45.636 - 01:28:43.240, Speaker A: And so therefore I don't want to take a counterparty risk on this because I have no locus to measure. Because I'm a protocol, I have no locus to measure whether an operator is good or bad. This is the right splitting of the ecosystem where socially somebody can say, yeah, lido operators are great, so I'm holding stethoscope, whereas ethereum protocol cannot say lido operators are great, I'm holding Steth. Ethereum protocol says I'm secure because ETH is staked and I'll slash EtH. So this is the right splitting of how to reduce the capital cost for economic security, while protocols, which are rigid on chain objects consuming economic security. So that I think. I don't think people are factoring this fundamental observation into their thing when they're thinking about reward and yield that is needed to sustain, like shared security on Eigen layer.
01:28:43.240 - 01:29:19.624, Speaker A: The second one is the. I think this is the dominant kind of, like, point. After that, you're like, okay, no reward is coming not from one AV's, but from many, many avss. You're aggregating all the rewards, and some of the rewards are coming from real ETH that people are paying, but some of the rewards are coming from emissions from these Avss. That's an important factor to note. And then the third one is this. The other thing that I was talking about, which is the.
01:29:19.624 - 01:29:49.616, Speaker A: The network effect between the monetary premium of ETH and the utility of ETH as the thing that that needs to secure, provide economic security. So there is a premium that people will be willing to pay. But once you understand how crypto economic security should work, I'm a bridge. I'm taking a counterparty risk. I need this to be paid in ETH. Because I am transacting in ETh. The ETH monetary economy grows.
01:29:49.616 - 01:30:00.964, Speaker A: There'll be many places where you need economic security in measured in ETH. So all of these together, I think, regularize the system a lot more than people realized. Nice.
01:30:01.434 - 01:30:52.306, Speaker C: I think, yeah, I had one closing question for you as well, which is just that there are different views of the world in crypto. And as an investor, you kind of get to, I guess, probabilistically bet on them, but as a builder, you can only really, you're betting you're all in on one. And you, I think, spent a few years kind of looking around the space, looking at what to build, looking at the various ecosystems. So I'm very curious, like, how you ended up at Eigen Lair. And like, I would say there's maybe the Solana view of the world, which is sort of that synchronous composability is the most important thing, right, and synchronous state. And then maybe there's the cosmos view of the world, which is that sovereignty is most important, and sovereignty implies having your own validator set. And then maybe there's the ethereum centric view of the world.
01:30:52.306 - 01:31:15.854, Speaker C: And Celestia, which is like the roll up centric view of etH, is the ultimate settlement layer. And money for all these different roll ups built on top of them, which I would say is probably more so, where Eigen Lair sits in that view of the world. And I'm curious how you arrive there and why you think it's the correct one, why you chose to make that bet?
01:31:16.234 - 01:32:00.142, Speaker A: The defining view for Eigen Lair is the only difference. The only reason we're all here is the only difference between crypto and the rest of the computing world is decentralized trust. Decentralized trust is the raw material out of which the crypto economy is manufactured. Decentralized trust is the kind of foundation on top of which everything else rests. People thought block space is the foundation on top of which everything else rests. But block space is just like distilled, decentralized trust. Take decentralized trust, make it go through, like, a consensus protocol, a blockchain, and, like, a block, you know, and then a block limit, and then you get block space.
01:32:00.142 - 01:32:25.944, Speaker A: But really, the raw material is decentralized trust. An eigen layer is, how do you take and supply decentralized trust as flexibly as possible? Eigen layer is the layer of decentralized trust. That's our view. And this is a very different view from some of the other views. And I'll contrast them. Um, so the Solana view is composability. Synchronous composability is what matters.
01:32:25.944 - 01:33:19.354, Speaker A: And the Eigen layer view is trustless composability is what matters. So what do I mean by that? The. As many different systems, what is the total bandwidth on top of which we can do trustless composition. Why trustless composition? Because, you know, these, or composition with decentralized trust or common decentralized trust. And this is the most important metric because this is the only thing that's different in blockchains. Everything else is already there. So instead of optimizing on the synchronous composability inside a given trust zone, which is the Solana view, we are optimizing for what is the maximum throughput of all the applications that can share common decentralized trust or can compose without additional trust assumptions.
01:33:19.354 - 01:34:02.176, Speaker A: So that's the difference with the Solana world. Solana Worldview. The difference with the sovereignty worldview is the sovereignty is basically saying, hey, each of us are our own sovereign individuals or sovereign blockchains, each of these systems. But, you know, what is my sovereignty is, from your point of view, if you have to interact with me, is my unpredictability. What is sovereign to me is like, I'll do random things, I'll just bang on the camera. It's sovereign to me, it's unpredictable to you. And so drawing the boundary of what is the coordination relationship, it's super important.
01:34:02.176 - 01:34:45.412, Speaker A: Like, when I'm interacting with you, what am I guaranteeing to you? That is the basis on which there is an API and a relationship between you and me. And this is the same thing for blockchains. Each blockchain, if it is just arbitrarily sovereign, cannot interoperate at all. Because interoperation requires that something be translatable across the interoperation barrier. We have to agree on what that something is. And so pure sovereignty basically fractures decentralized trust into small islands which cannot really interoperate. Or you can say there is sovereignty in a limited domain and then there is interoperability, trustless interoperability on the remaining domain.
01:34:45.412 - 01:35:45.520, Speaker A: There should be some set of things that we all agree on. Otherwise, we cannot interoperate. And in IBC, the interoperation is based on whatever the majority of the other guy says, I am going to trust it. Like, that's the interoperation kind of consideration in IBC and cosmos, whereas it's different in the roll up and the ethereum, or like the Eigen layer worldview is that they all need to kind of interoperate. So this is the difference from the purely sovereign viewpoint. And like, another way of thinking about it is like, you know, this is like, is it libertarian or is it like a more leftist worldview? And we think these two are kind of like, just like I mentioned about order and chaos, these two are kind of like tied one on top of the other. The free market view requires property rights to be guaranteed very strongly using a coordination mechanism.
01:35:45.520 - 01:36:23.746, Speaker A: Otherwise you don't get a free market on top. It's the same thing. What is the coordination conditions that bind all these distinct domains and how do you express them as richly as possible? And then finally, the difference between the Ethereum and the celestia view is the Ethereum and Celestia view is all that is needed to actually make these blockchains work is a common ledger of all the events. That's the Ethereums like roll up centric view. And Celestia is like roll up centric. And our view is, no, that's nowhere near enough. I need to get Twitter information into blockchains.
01:36:23.746 - 01:36:51.356, Speaker A: I need to get two factor authentication into blockchains. I need to do all these other things which are beyond ordering and proving, doing Zk proofs of these transactions. So this is how we are similar and different from all these different views. So I would say we are the closest to the Ethereum view, but adding on this dimension of bringing social proof into subjective truth into chains in a way that was not possible without overloading Ethereum consensus before.
01:36:51.540 - 01:37:33.806, Speaker C: Really? Yeah, really, really. Good answer. Appreciate that. I have definitely have some, like, a lot of, a lot of things I wanted to bring up there, but we've already overran a lot. So I'm going to ask my actual final, final question, which is just, you've been like, Eigen Lair has built an entire meme and ecosystem around it, right? Like a meme. I say meme in a complementary sense, but by the way, like, you know, you, like, restaking was created from, from scratch with, with Eigen layer, and now there's a whole industry with, with probably at this point like hundreds of millions of dollars of investment into this. And I'm curious, like, how you, how you did this.
01:37:33.806 - 01:37:54.334, Speaker C: Do you think, was this like an intentional, like, engineered effort that you sat down with your team and like, put together on how to make this, how to build this ecosystem? Or was it like an emergent thing where the ideas just resonated with people and they. Yeah, I'm curious, like, what tips can other projects take away to try and recreate this, the success that you've had?
01:37:54.834 - 01:38:42.404, Speaker A: Thank you for the compliment, but I don't think we can take too much credit for engineering it. It is definitely emergent, but it is. I think there are a few principles which I think may be helpful in other people when they're thinking about building similar systems. Number one is, I think we have this graph that we use internally, which is like, you want to build something which has value and merit long term. So you can think of the x axis as long term builder centric, philosophical, foundational. And the other axis is what is actually has utility in the short term. Right.
01:38:42.404 - 01:40:01.076, Speaker A: And you can take these two axes and try to kind of put projects on these two axes. And what we tried to do is to create a system which has merit in the long term, but also has bootstrapping ability and utility in the short term. I think this is my own failure mode in systems that we had built before, is my inclination is very much on the x axis. Like, think of long term builder centric, like, what is correct structure, market structure, what is the right way to do things? Think a lot about it, but you also have to think about, because this is like an academic worldview, is what's the right way to do things versus what is the way that people are incentivized to do things today. And thinking about both of these simultaneously. So if you just index on the y axis, which we also see projects doing, they'll create a meme, they'll create kind of like a short term narrative and interest around it, but actually, if you just play it out in the long term, there is no value in it. On the other side, we also see builders building really important and complex things, but don't have enough power to bootstrap it and incentivize it in the short term.
01:40:01.076 - 01:41:08.234, Speaker A: And I would say we try to think about both these axes all the time, because you cannot build a new system with long range utility if you can't make it survive in the short term. The meta thing that we are trying to do with Eigen layer is actually bring a lot of builders who are on this x axis, just like they're probably good to build, but not thinking about how to get adoption, how to incentivize this, how to bootstrap this, and try to bring them into blockchain, into crypto, like, try to make them build systems that can both viably bootstrap, but also bring real value in the long term. So just thinking about these two axes together is important. What is viable in the short term versus what is productive, useful net positive sum in the long term. Trying to kind of, like, bridge these two together, it's hard, it's painful. And a lot of people even now, like, think of Eigen layer as purely, like, a y axis project. They think, oh, restaking is some, like, degen thing.
01:41:08.234 - 01:41:36.342, Speaker A: Like, you just go and, like, get some yield somewhere, and it's. It is a completely emergent thing. We had very little to do with, like, a lot of what emerged there, but the one thing we did think about is, how do you reduce capital cost? How do you reduce, like, the opportunity cost for people doing various things so that this becomes viable to bootstrap? So that was an important aspect of the thinking.
01:41:36.398 - 01:41:51.504, Speaker B: Sriram, this has been an incredible episode. Thank you so much for your time. Eigen layers was so fascinating. And Jose, shout out to you for doing a lot of the prep for this episode and asking incredible questions. This was a lot of fun, and we definitely have to do it again soon.
01:41:52.084 - 01:41:58.540, Speaker A: I've really, really enjoyed this. Tommy and Jose, like, one of my most favorite conversations. Thank you so much for doing this.
01:41:58.652 - 01:42:12.224, Speaker C: Really appreciate it. Yeah, learned a lot and. Yeah, very. I think people will learn a lot from this as well, because I don't think everyone has fully groped, like, just what you guys are trying to build. So. Yeah, awesome. And very happy to be.
01:42:12.224 - 01:42:13.376, Speaker C: To be involved here.
01:42:13.440 - 01:42:14.024, Speaker A: Thank you so much.
