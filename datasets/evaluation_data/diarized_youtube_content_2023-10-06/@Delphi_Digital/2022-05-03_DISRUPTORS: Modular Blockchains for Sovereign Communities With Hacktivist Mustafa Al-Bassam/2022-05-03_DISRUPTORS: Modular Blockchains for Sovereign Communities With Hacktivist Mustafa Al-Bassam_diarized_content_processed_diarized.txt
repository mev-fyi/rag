00:00:18.080 - 00:01:05.698, Speaker A: Hi everyone, I'm Tom Shaughnessy and welcome to Disruptors by Delphi, an invite only twelve guests per year seminar series where we host the brightest minds in crypto, not only to educate the Delphi team, but to share the guests vision and knowledge for the entire space. Today we're thrilled to host Mustafa Albassam, the co founder of Celestia, for our third episode in the series. In this episode, Mustafa will discuss the importance of decentralization and power distribution, a history of scaling blockchains, and the value of blockchain modularity. Celestia is the first modular blockchain. A modular blockchain is fundamentally different from a monolithic one or the ones we know today, like Ethereum in a monolithic blockchain where pretty much all the blockchains are today, nodes repeat the same work. In contrast, a modular blockchain. The workload is separated across layers of the stack.
00:01:05.698 - 00:01:31.594, Speaker A: Each layer specializes in one or many of the core three functions of a blockchain, consensus and data availability, settlement and execution. As a co founder of the modular blockchain, Celestia, Mustafa will shed light on the importance of blockchain modularity as a social coordination tool for enabling sovereign communities. Special shout out to John at Delphi who has spearheaded our work and knowledge of Celestia. With that, let's dive into disruptors episode three with Mustafa.
00:01:32.214 - 00:02:20.326, Speaker B: Thank you for the introduction, Tom. So today I want to talk about two very powerful ideas and how they can complement each other. And those two ideas are modular blockchains and sovereign communities. But first, let me talk a little bit about how I got here and why I'm interested in sovereign communities and blockchains. So I was originally born in Iraq and I moved to the UK as a refugee when I was five in the year 2000. I spent a lot of time on the computer and I learned to code at a very early age. And then when I was a teenager, when I was 15 or 16, I got involved with various activist groups, including anonymous.
00:02:20.326 - 00:03:39.924, Speaker B: And I co founded a hacktivist group called Dulcec where we hacked into a whole bunch of corporations and government entities like Sony, FBI, affiliates, Fox and so on and so forth. I was arrested and when I was 16 and I was also banned from the Internet for two years. And while I was doing this, I kind of realized the impact of activism and hacking in general. So one of the companies we hacked, for example, called HPGary Federal, was this us military or US Department of Defense contractor that we hacked the emails off and that was revealed to be doing weird or potentially illegal activities like blackmailing american journalists who support WikiLeaks. And as a result of the emails that we leaked, the CEO had to resign and Congress wanted to launch an investigation. We also participated in the Arab Spring. So, for example, we hacked the website of the prime minister of Tunisia, and we helped the tunisian people evade government censorship with anti sorry, evade government surveillance with anti surveillance tools.
00:03:39.924 - 00:05:23.884, Speaker B: And these activities kind of made me realize that power is effectively a bell curve. So if you think of power as a bell curve, and power is concentrated among the very few or the top 1% of people, I saw hacking as a means to really kind of transcend that bell curve of power, because as a teenager with a $300 laptop, I could easily transcend the bell curve of power just with a bit of knowledge and some cheap computer hardware. Because in the 21st century, just being able to access and modify information is a very powerful tool that can, that can redistribute or help people to transcend the bell curve of power. And I see systems like peer to peer systems and decentralization can actually skew the bell curve of power. So historically, power is distributed among the very few at the top. You can redistribute that power to the masses by reducing the friction for people to access and organize information, because the ability to access and modify and manipulate information is potentially the most powerful kind of tool in the 21st century. A good early example of this is peer to peer file sharing systems like BitTorrent and the Pirate Bay.
00:05:23.884 - 00:06:48.454, Speaker B: And we also use BitTorrent, for example, to distribute leaks of organizations that we hacked. But to me, the most interesting thing about BitTorrent and the Pirate Bay was that effectively it allowed people to access information like software and books, and also cultural media like movies, that could potentially change their lives that historically they might not have been able to afford. And so you could. So if you were, for example, in a low income household, you could download books or software, for example, you could download Photoshop and become a graphic designer, whereas previously you might not have been able to afford that if you had to actually pay for it, and the information was not free available on the Internet. And so I was always kind of thinking about decentralized protocols and peer to peer systems. And like, one of the earliest things I was thinking about when I was doing hacktivism was there was this tool that we used called a low orbit ion cannon. And the idea was that hundreds of people could run it at the same time, and it would flood a website with traffic to try to shut that website down.
00:06:48.454 - 00:07:40.574, Speaker B: And it was kind of like a means of digital protest, like a, like a digital version of a sit in. But this tool required someone to have coordinate the attack and operate it. And so you had to have this like a centralized server to coordinate the attack that could be shut down. So I was thinking about how to create a decentralized version of that using bittorrent, for example, or peer to peer protocol. But my first kind of. I first heard about bitcoin in around 2010 and 2011, and we actually used bitcoin as donations for our hacker group in 2011. So you could actually donate bitcoins, if you like, the hacks we were doing, and you could buy more servers and bandwidth with that to do more hacks.
00:07:40.574 - 00:09:43.944, Speaker B: And so I was always kind of following the story of bitcoin very early, and I was involved with the bitcoin community and ethereum communities to kind of follow the different debates that were going on there and technical arguments, because back in the early days of bitcoin, and people were talking about all kinds of different decentralized protocols that they could build that are not just cryptocurrency, but other kind of protocols, like decentralized DNS, for example, or decentralized like HTTP or websites, for example. But the story of blockchain scalability kind of really begins in July 2010, which is where my kind of technical story also starts. So in July 2010, Satoshi, the creator of bitcoin, added this single line of code to the bitcoin codebase. And this single line of code was in response to a worry that someone could attack the bitcoin network by spamming it with lots of transactions and make their blockchain really big and too big for anyone to be able to process. And so he inserted this 1 mb maximum block size limit in the code so that miners couldn't generate or produce a block that's greater than 1 time. That was seen as not a big deal, like, because people thought, well, if we ever, you know, reach that limit, we could easily increase it. But seven years later, this turned out to be somewhat of a ticking time bomb, because what happened was in 2017, there was a massive bull market, and all of a sudden, the bitcoin block, bitcoin blocks became full.
00:09:43.944 - 00:10:34.284, Speaker B: And because they were full, no one could get their transactions included in the chain. And so the transaction fee skyrocketed to up to $50 per transaction. And you would have thought that the bitcoin community could just increase the block size limit to make things back to normal and to allow more transactions to be processed. But the bitcoin community didn't do that. And the reason why they didn't do that is because there's a difference between throughput and scalability. And this is also what differentiates between web two and web three. So through port of a blockchain, you can think of it as the transactions per second that a blockchain can handle.
00:10:34.284 - 00:11:58.594, Speaker B: You know, like 1000 transactions per second, for example. And that's also, you know, the scalability of any web two website, for example. How many users can it handle? But in web three, scalability is more nuanced than that. In web three, scalability is the transactions per second that the blockchain can handle divided by the cost. For ordinary users to check that all the transactions in the chain are actually valid. And this is kind of important because this is what makes a decentralized blockchain decentralized, because the whole reason why a blockchain is decentralized is because ordinary users that are running ordinary machines, like laptops, can easily go to the blockchain and re execute and reprocess every single transaction and actually verify for themselves that the miners did not insert any invalid transactions in the chain or broke the rules of the protocol that everyone agreed on. Because if users didn't do that, then the miners could just change the rules however they want and, for example, print unlimited money for themselves.
00:11:58.594 - 00:12:57.894, Speaker B: Because there's effectively two types of nodes in a blockchain network. The first type of node, which is what everyone's familiar with, is this idea of a standard full node. And the standard full node is what I just described, downloads all the data and checks every transaction to check that the actual blockchain is valid. And the miners haven't inserted any invalid transactions. But then there's light clients, and lite clients are kind of nodes that use less resources, that don't download the entire blockchain, but only download the metadata of the blockchain, which is known as the block headers of the chain. And they don't actually check that all the transactions are valid. Instead, they just assume that they're valid.
00:12:57.894 - 00:14:31.504, Speaker B: And they assume that the miners of the chain are being honest and not inserting or adding invalid transactions to the chain. But the problem is that if everyone just ran a light node, then the miners of the chain could simply, like, for example, change the rules of the chain or add invalid transactions that violate the core properties of the chain. For example, they could print money out of thin air or steal money and so on and so forth. And so there was this kind of debate that went on in the bitcoin community and the bitcoin community kind of split into two different camps. The first camp, they wanted to keep the block size limit at 1 mb because the core belief there was that everyone should be able to validate the chain. And this, the other camp, they wanted to increase the block size limit to eight megabytes, because their belief was that maybe, well, it's fine if not everyone can needs to validate the chain. So a lot of my kind of research over the past few years, and a lot of what I've been thinking about is like, how can we actually increase the transactions per second that blockchain can handle without decreasing the cost for end users to validate all the transactions, which is what keeps blockchains actually decentralized.
00:14:31.504 - 00:15:48.164, Speaker B: So to increase the top part of the equation, which is the transactions per second, there's kind of two main way of two main ways of doing that. The first way is, as mentioned, you simply increase the block size to whatever you want. The second way is known as sharding, which is also somewhat like increasing the block size, but it allows more nodes to participate in the consensus of the network sharding. The way that sharding works is that basically splits up the blockchain into multiple different chains that are running in parallel. And I worked on one of the earliest blockchain sharding proposals back in 2017, called Chainspace, which we published a paper on while I was doing my PhD at UCL. And Chainspace was eventually kind of spanned out into a startup, and that startup was later acqui hired by Facebook. But I did not join Facebook, and I continued working on decentralized blockchains, including Celestia.
00:15:48.164 - 00:17:00.284, Speaker B: So even if you use sharding or increase the block size, how do you actually do that without increasing the cost for end users to actually violate all the shards in the chain or the bigger blocks in the chain. So a basic idea for doing that is something known as fraud proofs. And the basic idea of fraud proofs is that if you have these lite clients that I mentioned, they only download the header of the chain, and then you have full nodes which download the entire chain. The full nodes can actually alert the like clients if there's any invalid transactions in the chain. So if the full node sees there's an invalid transaction, they can just let the like clients know, hey, this specific transaction is invalid. And you can and like clients can check that that specific transaction is invalid and can reject that block. And so the light client can have almost the same level of security as a full node.
00:17:00.284 - 00:18:35.054, Speaker B: And this is a very powerful idea in theory and also in practice. But the problem with this basic idea is that the miner could do what's called a data withholding attack. And with the data withholding attack, the miner could do something where they only release the header of the block, but they don't release the actual transactions in that block. And so the lite clients would accept and receive the headers, but the full nodes would not know what the actual transactions in the block are. And because the full nodes don't know what the actual transactions in the block are, then they wouldn't be able to actually generate the fraud proof because they don't have the information they need to generate any proof that something was wrong in the block because they don't know what happened in the block. So to fix this, what you basically need is a way for like clients to guarantee or somehow check that the data in that block was actually available and published to the network without actually downloading it themselves. So I started kind of working and thinking about this problem, and Vitalik was also thinking about this problem.
00:18:35.054 - 00:19:55.516, Speaker B: And Vitalik wrote a note on the Ethereum GitHub wiki about this problem and a potential solution for it, using a kind of primitive called erasure coding. And the idea of erasure coding is that it's a technology used in things like CD ROMs and also satellites. What erasure coding allows you to do is it allows you to construct or construct the data, or apply kind of like a mathematical, computational data, and then you would store the mathematical result of that. And what that would allow you to do is that if you lose any part of data, you can recover the entire data. So if you think about CD ROMs, for example, if you scratch a CD ROM, then a part of that CD ROM or part of the data in the CD ROM is lost, but your computer can still recover the entire data on that CD ROM, even though you scratch, even though you scratched it. Because of the erasure coding allows you to recover it. It's also used in satellites, because the communication between Earth and space data can be lost.
00:19:55.516 - 00:21:24.444, Speaker B: And so satellites can recover that data even though some of the data is missing. And so we can apply the same kind of primitive to blockchains where you can construct this, you can construct a scheme where if you use the same technology on the data inside blocks, even if some of the data inside a block is missing, you can recover it. And then you can construct something called a data availability sampling scheme. And the idea of data availability sampling is that it allows light clients to have a very high probability guarantee, like over 99% probability guarantee that the entire block is valid by only downloading less than 1% of that block. And this was a very powerful kind of like new technology. And I wrote a paper about this with Vitalik and implemented a prototype for it. So now we've established that you can actually increase the block size limit or increase the three port of a blockchain without actually increasing significantly the cost for end users to validate or check that all the transactions in the chain are valid thanks to data availability proofs and thanks to fraud proofs.
00:21:24.444 - 00:23:59.034, Speaker B: And this kind of got me thinking about like, what is a blockchain, fundamentally? So Satoshi introduced the concept of the bitcoin blockchain, and ethereum kind of came along and adapted it for a smart contract platform. But I kind of started to think kind of philosophically, but what is the kind of core properties of a blockchain, and what is a blockchain at its heart? And I kind of came up with the conclusion that ultimately a blockchain is simply a proof of publication mechanism. It's effectively a mechanism where someone can publish data to it, and you can, and they can prove that they published some data to it. And the way that I came to this conclusion is through a kind of a thought experiment that I had, which is like, what is the simplest version of bitcoin that you can create? So if you had a version of bitcoin that is as simple as possible, and with as many, with as few rules as possible on the actual chain itself. So effectively a version of bitcoin without any on chain computation or execution, what you would have is effectively imagine a bitcoin blockchain where you can submit arbitrary transactions to it, and you can submit invalid transactions to it that steal people's money, for example, or do double spending transactions, that blockchain can still be made secure because you can still have a rule on the actual end users clients that are actually computing the account balances of everyone's bitcoin. And the rule would say, I will simply ignore the invalid transactions. And so even though you can have a version of the bitcoin blockchain, where invalid transactions can be posted on the chain, it would still be secure, because all you have to do is simply ignore them, because everyone knows that they're invalid, because everyone has the same copy of the rules of what makes or what constitutes a valid transaction.
00:23:59.034 - 00:25:09.654, Speaker B: And so this is how I came to the conclusion that fundamentally a blockchain is simply a mechanism where you can prove the publication of data. Because ultimately, what bitcoin does, the problem that the bitcoin blockchain solves is this problem of double spending attacks, where it prevents people from spending the same coins twice. And the way it does that is by fundamentally having, fundamentally having an order over the transactions in the chain. But all you need to prevent the same money from being spent twice is all you need to know is a the order that the transactions were sent. Because if you know the order, you know which transaction came first. And if you know which transaction came first, you know that the second transaction is invalid. And secondly, in order to know what transaction came first in the first place, you actually need to have a copy of every single transaction.
00:25:09.654 - 00:26:04.074, Speaker B: And in order to have a copy of every single transaction, the transactions must have been published. And that's why at its core, bitcoin is just a proof of publication mechanism. And so with this kind of insight that you can have, you can actually have a version of bitcoin with no on chain computation or execution. You can actually have a blockchain where you can decouple consensus and execution. So you can have a blockchain that does the two. The two core things that blockchain does, which is? Which is ordering the data and making the data available. And if you just have a blockchain that does two core things, you can build anything on top of it as a layer above it.
00:26:04.074 - 00:27:21.574, Speaker B: And so I came up with this insight that you can decouple consensus and execution. And so I published a paper about this in 2019, and I also posted about it on the Ethereum Research community forum. And I formed the team around it to kind of build it out and implement it in a, and get it to kind of a testnet and Mainnet and so on and so forth. And so I met Ismail in Germany, where I invited him to be CTO. And John, he was the first person to respond to my post and Ethereum research. And two months after I published Lazy Azure paper, John came up with the first proposal for an optimistic roll up, which made a lot of sense, because the kind of core concept of optimistic roll up is that it uses a different blockchain, or it also relies on this primitive of decoupling, consensus and execution. Because a optimistic roll up is basically a blockchain that has off chain execution, but uses a different blockchain for consensus and data availability.
00:27:21.574 - 00:28:25.174, Speaker B: So I coined this term called modular blockchains around 2019, when I was blogging about lazy Ledger, which is now called celestia to differentiate between traditional blockchains and the new paradigm of blockchains, which is the modular blockchain stack. So traditional blockchains, they're monolithic, which means that they try to do everything. So for example, bitcoin and ethereum, they try to, they both, they all do consensus and execution. And Ethereum also does smart contracts. So if you have a. If you want to use Ethereum for application, for example, Ethereum will provide you the consensus and also the computation for your application. But in the modular blockchain stack, you can actually decouple consensus and execution.
00:28:25.174 - 00:29:37.824, Speaker B: And the way that would work is that you would all the execution instead of the consensus layer doing the execution. The execution happens off chain or on a different chain, because as we've kind of realized with this bitcoin thought experiment, you can actually decouple consensus and execution and have someone else do the execution. So if you think about this, this modular stack thesis follows a very similar paradigm to the evolution of the early web. So if you consider the early web in the nineties, if you wanted to create a website, you had to have your own physical machine, like, for example, in your house or in your university. But then in the two thousands or the late nineties, various companies like Geocits and Dreamhost kind of had servers. And they said, we'll share those servers with you if you pay us a fee. And that made it really easy for people to create their own websites.
00:29:37.824 - 00:30:52.524, Speaker B: But the problem was that you were also limited to the same limitations that the servers of those companies had. So, like, you couldn't install new things on the servers, so you had to use whatever tools or programming languages or database technology that was given to you or used on those servers, so you couldn't really experiment. But then in the late two thousands, this idea of the cloud started getting popular and this idea of virtual machines where you can go on Amazon, AWS or digitalocean and you could deploy a virtual machine in seconds. That virtual machine gives you the same benefits as a physical server. You have full control over the execution environment, and you can install anything you want, and you can have any operating system you want on that, but you don't have to actually maintain any physical hardware or buy any physical hardware. So you kind of had the best of both worlds there. Now, web three also follows a very similar evolution.
00:30:52.524 - 00:32:21.174, Speaker B: So when bitcoin was first released in 2008, there was bitcoin. And then people also created other chains like Litecoin and Namecoin. And it was basically like each application had its own blockchain because, like, you know, bitcoin only had one application and that was cryptocurrency. And then Vitalik kind of saw this and said, well, why don't we just have a kind of a general purpose blockchain with a general purpose virtual machine like the Ethereum virtual machine, we can upload arbitrary applications to it. And that is similar to shared hosting, because now you can program your application and you can upload it to the shared Ethereum blockchain and share the same blockchain as everyone else. That was very powerful because it allows people to effectively experiment with decentralized applications in ways they couldn't before. But they were still limited by the limitations of having a shared blockchain, that you have to use the Ethereum version of the machine and you have to follow along with the hard forks that was, that were happening on Ethereum, even if you don't agree with the kind of social consensus of Ethereum, or even if you don't agree with the values of Ethereum, for example.
00:32:21.174 - 00:33:18.704, Speaker B: But more recently, over the past few years, this idea of application specific blockchains, or layer twos, started getting more popular. So now, instead of having your application on the same blockchain shared by everyone else, you can actually create your own blockchain in the form of an optimistic or ZK roll up. And those blockchains are effectively like virtual blockchains, kind of like you have virtual machines in the cloud. And this virtual blockchains, they all share the same consensus layer or the same consensus blockchain. And so they can share block space and security. And that's the way that roll ups on Ethereum work. For example, the roll ups use Ethereum for their availability and consensus, but execution happens on the roll up chain itself.
00:33:18.704 - 00:34:28.384, Speaker B: So that's basically what, effectively, what a modular blockchain stack is one where you can separate consensus, data availability and execution. So there's two main benefits to having a modular blockchain stack. The first benefit is scalability. So as I mentioned, the current blockchains, they try to do everything. In particular, they try to do consensus and execution at the same time, which means that if you run a full node on such a blockchain, you have to actually not only check if the blocks have consensus by the miners, you also have to check if the transactions are actually valid. And you have to execute all the transactions to make sure they're valid. But with Celestia, which is the first modular blockchain, the design is that because we're decoupling consensus and execution Celestia only provides consensus and data availability.
00:34:28.384 - 00:35:46.734, Speaker B: Celestia does not provide any execution. It doesn't provide any kind of smart contract platform like Ethereum for example. And so that means that as an end user, if you want to check that the chain is valid, you don't have to care about the contents of the transactions on the chain. All you have to check is that the transactions are actually available, have been published, rather than having to actually go inside those transactions and check that they're valid and execute them, which is much slower because if all you have to do is check that transactions are available. As we've established with this new technology that I described, data availability sampling, the lite clients and the end users can have a very high probability guarantee that the block is available by only downloading very small amount of that block. They only have to download like some random chunks from that block. And if they download this random chunks from that block, and they could successfully download it, then they have checked that the data is actually fully available.
00:35:46.734 - 00:37:23.324, Speaker B: If they sampled the block and they couldn't download that 1% of data that they were trying to download, then they can assume that the block is not available. Now this scheme only works if you have enough lite clients or users in the network that are running the same protocol, so that they all have enough pieces of the blockchain so that if they get together, they can actually reconstruct the entire block. And so that means if you want to increase the block size in such a system like Celestia, you also have to increase the number of nodes in the network in order to make sure that in case there's an attack, the nodes can actually have enough data to reconstruct the entire chain and actually kind of prevent an attack where data is being withheld. And that's a very nice scalability primitive. It's very similar to sharding, where the more nodes you have in the network, the higher the block size you can have. The reason why I like this is because if you think about what's the world's most scalable decentralized protocol, it's basically BitTorrent. Because at one point BitTorrent handled a quarter of the Internet's traffic.
00:37:23.324 - 00:38:39.904, Speaker B: This was back before Netflix existed. People were pirating movies on the Pirate Bay. And the reason why the Pirate Bay and BitTorrent was so scalable was because BitTorrent doesn't do any execution, it just distributes data. And the properties of BitTorrent were such that the more nodes and the more seeds and peers that you have sharing a file and distributing that content, the more data the network can store and the more bandwidth it has to share that data. And so Celestia makes a very similar insight, which is that if we can simplify the process of block verification to data availability verification, you can actually achieve very similar scalability properties to BitTorrent. And as I mentioned, in this new modular blockchain paradigm, you would use a system like Celestia just for the data availability of your transactions. And the execution happens off chain on, for example, a layer two chain or independent blockchain.
00:38:39.904 - 00:40:02.256, Speaker B: And there's already various kind of projects developing these different execution environments. For example, you can use the EVM, or you could use Starknet or optimism's roll up, or cosmosm and so on and so forth, or the Cosmos SDK. And so in this new modular paradigm, developers have the freedom to choose their own execution environments instead of being restricted and limited by the ethereum virtual machine or whatever virtual machine that's already on that blockchain that you have to use. The second major benefit of modularity, and this is more of a kind of social benefit, is this idea of sovereignty. So I strongly believe that groups of people with shared goals have an inalienable right to self organize, unburdened by the status quo. And to me, that's fundamentally what decentralization and blockchains are about. And article 20 of the Universal Declaration of Human Rights states that everyone has the right to freedom of peaceful assembly and association, and no.
00:40:02.256 - 00:41:11.224, Speaker B: 1 may be compelled to belong to an association. To me, that's fundamentally what blockchains should solve. If you look at the personal computing revolution in the nineties, the personal computing revolution allowed individuals to become sovereign. You know, you had system, you had platforms like Twitter and Instagram where people had personal profiles, and they could allow the like, they could allow the individual to share content in ways and mass, you know, share content and spread messages to the masses in ways that weren't possible before. And this kind of version of the web is very kind of focused on the individual systems like Facebook and Twitter and Instagram. But blockchains are effectively community computers, and blockchains are the kind of community computing revolution that allows communities to be sovereign. So you have daos, for example, a very good example of this.
00:41:11.224 - 00:42:42.074, Speaker B: For example, you have defi daos like Mercadao, and you also have kind of political daos like Constitutiondao and the Sandao. And all of these daos are effectively kind of sovereign digital communities that exist online that have in many cases, tens of thousands of participants, and they have a shared pool of funds that they all have, that they all use for a shared common purpose embedded in that dao. But the problem is that while daos are very powerful tools to make community sovereign, daos on monolithic blockchains that are not modular like Ethereum, are not sovereign. The reason for that is that, for example, a Dow and Ethereum is bound effectively by the social consensus of the Ethereum community because that Dao is running on the same blockchain as every other dao. So it's running on the same execution environment as every other daO. And so the kind of like the validators of the Ethereum chain process all of these transactions of multiple daos. If the Ethereum community decides to hard fork, they will potentially have to go along with that, and they might choose to hard fork in a way that's not favorable to that doubt.
00:42:42.074 - 00:44:12.648, Speaker B: It's very similar to if you want to create a company today, for example, let's say you create a company in the United States, or like in a specific state or in a specific country, you're creating that company according to the laws of that country. Usually that country has regulations that allow you to kind of incorporate a company and, you know, the shareholder agreement and so on and so forth. Those are enforced by the laws in that country and enforced by the, by the kind of the police and the court system of that country and so on. Obviously, a company that's incorporated in the country is not sovereign because it derives its authority from the state. Similarly, a DAO on a shared monolithic blockchain is not sovereign because it derives its authority from a different or higher level community, which is the social consensus of Ethereum, for example. But if that DAO has its own blockchain, then it's fully sovereign because it does not derive its authority from any kind of higher, like, authority or social consensus or community. The way that I think about blockchain layers is that it's commonly known that you have layer one and layer twos.
00:44:12.648 - 00:45:07.646, Speaker B: So layer ones are, you know, blockchains and layer one blockchains. They provide consensus on data. But the only reason why the, the value on the layer one blockchain has any value, or the reason why the tokens and coins on that blockchain has any value is because people agree it has value. Like the reason why bitcoin and Ethereum has value is because people agree that it has value. And so ultimately, a layer above layer one or beneath layer one is this idea of the layer zero social consensus. And the way that I see it is that blockchains are effectively social coordination platforms that implement the results of social consensus. Like the rules of the bitcoin blockchain were decided by Satoshi.
00:45:07.646 - 00:46:14.502, Speaker B: It was decided by a person. The rules of every single ethereum hard fork that happens every year or so are decided by people. And it's also those people that decide to do those hard forks and decide that the kind of old fork has no value. And so, as mentioned, blockchains are effectively social coordination tools for sovereign communities. And each community can have its own blockchain with its own social consensus, instead of being bound by the social consensus of a different blockchain that it might not share any values with. And if you think about one of the core things that makes a society is this idea of a mechanism for social recourse. So for example, if something, you know, if someone gets, like murdered in the street, for example, you have this idea where as a society, people agree that there's a recourse to that.
00:46:14.502 - 00:46:56.214, Speaker B: You know, you put that person in jail. For example, if you look at Dao hack. So a few years ago in Ethereum, there was a major hack of something called the Dao, where hundreds of millions of dollars worth of ETH were hacked. The Ethereum community got together and decided to hard fork to undo that hack. So there was a social recourse mechanism to that hack. But there's also lots of hacks on Ethereum now. But obviously the Ethereum community does not hard fork for every single hack that happens on Ethereum, because it's simply not scalable to do that.
00:46:56.214 - 00:48:18.484, Speaker B: And so all the applications on Ethereum that have been hacked, they don't have any means for social recourse, they've lost their social recourse mechanism. And so because hard forks are a feature, and hard forks are effectively a social recourse mechanism, but if each community has its own blockchain, then they have a social recourse mechanism that they can utilize, especially if that blockchain has a community that has a shared vision or a shared goal. They can do hard forks without it likely being controversial. So in 1934, Lewis Mumford came up with this idea of the polytechnic and the monotechnic. So the idea of the polytechnic is that you want to enlist many different modes of technology, providing a complex framework to solve human problems. And that's where this layering goes in, and where we realize that above layer one blockchains, you have the social consensus layer. Ultimately, what gives the tokens and a blockchain value is that people agree that it has value, aka the social consensus layer, agrees that it has value.
00:48:18.484 - 00:50:08.184, Speaker B: And then you have this idea of the, of the monotechnic, which is the idea that technology, of building technology only for its own sake, which oppresses humanity as it moves along its own trajectory. And that's what I see monolithic blockchains as potentially being, because you basically have these massive monolithic blockchains where you submit applications to. But these applications have lost kind of the core element of what a blockchain, blockchain is about, which is enable sovereign communities the idea of a sovereign community. Going back to what I was talking earlier about, transcending the bell curve of power, similar to how as a hacker, I could transcend the bell curve of power with some cheap equipment and some knowledge. I believe that we can actually redistribute power to communities by also giving them the power to have access and control over their own value systems and over their own information and data, in ways that hasn't been possible before. Because traditionally, if you wanted to create kind of a shared group of people and formalize the kind of agreements between those people, we'd have to go through middlemen, either banks or the state, and those middlemen take away some power from you. But if we give communities the ability to be sovereign, then we can redistribute that power back to them and kind of skew the bell curve of power to the right.
00:50:08.184 - 00:51:18.132, Speaker B: So to end with, to summarize, what are the three values of modernism? First of all, users are first class citizens, the networks. And this is codified in the sense that users should be able to validate the correctness of that chain using data availability proofs and fraud proofs. And finally, second thing, the second value of modularism is modularism, not maximalism. So whereas traditional like, over the past few years, there's been a lot of layer two wars between Solana, Avalanche, Ethereum, and so on and so forth. These are all different communities that are fighting each other to say that their layer one is the best. But with mongoralism, I think we should embrace that. People that want to create sovereign communities should have the power to have their own blockchains and should have the ability to be sovereign.
00:51:18.132 - 00:51:56.258, Speaker B: And it shouldn't force people to incorporate their group of people to some community, like Ethereum or Solana, or avalanche layer ones that you might not necessarily share values with. And finally, the third value of modulism is that we should create sovereign chains for sovereign communities. So to summarize, you should build modular and be sovereign and if you want to learn more, go to celestia.org. And you can also check out the repos on our GitHub.
00:51:56.426 - 00:52:33.898, Speaker A: That was an absolutely incredible presentation. Let's start with a question from John, who's led a lot of our work and knowledge around Celestia. So I thought it would only be right to start with a question from him. His main question is, what are some of the challenges that a modular blockchain stack has to address smooth ux for cross chain communication. I guess his second question there would be, if you're able to do this communication between apps or between chains, does this mean monolithic blockchains like Ethereum just aren't viable anymore? How do you view that?
00:52:34.026 - 00:53:34.934, Speaker B: Yeah, it's definitely the case that if you move away from this paradigm where every single smart contract runs on the same blockchain and you have different blockchains, then interoperability between those chains and communication between those chains becomes more difficult, not impossible. And it's definitely, there's lots of projects that facilitate cross chain communication, but slightly more complicated. And that does potentially present a UX challenge because users would have to move tokens across different chains, for example. But I think that's a very solvable UX challenge. We've seen bridges with reasonably good uX. Like, you go to a web app and you select the chain that you would move it to, and it's just like one click transfer basically.
00:53:36.754 - 00:54:01.664, Speaker A: Makes sense. And I wanted to circle back. I mean, layer twos on Ethereum are getting a lot of traction, right? Like, Starkware has really solid tech. It's powering immutable DyDX, a bunch of other things. We're seeing arbitrum, we're seeing other l one s like, Solana really shine here. What's your take on the competition here? Like, does Celestia have room to execute and deliver, given it's not launched yet and given there's so much traction on other tech to scale?
00:54:02.724 - 00:54:51.414, Speaker B: Yeah. So with Celestia, the beauty of mondrealism is that you don't have to focus on the whole stack. So with Celestia, we're only focusing on the data availability and consensus layer of the stack, and different parts of the different components in the stack are interchangeable. So, for example, we've already got a version of optimism roll up running on Celestia, on the Devnet. So you can take existing execution layers, like stocknet or other roll ups, and deploy them onto a different data availability layer. Because of the fact that it's modular, the upper layers are not bound to specifically module underneath it.
00:54:53.754 - 00:55:03.574, Speaker A: That's interesting. How do you view Celestia's rollout panning out here? What are the next steps for the network to go live in a meaningful fashion that developers can use today?
00:55:04.594 - 00:56:09.204, Speaker B: We've got a devnet already where people can run nodes. We are almost ready to have a testnet in the next month or two, and we're slowly building out our documentation to allow people and developers to understand how to use celestial for data availability. But our go to market strategy kind of is this. We have kind of a twofold short term go to market strategy, the first of which is to allow Ethereum layer two s to use Celestia for off chain data availability. So for example, if you have like a stockx or validium that uses an off chain data availability solution, you can use thesd. And secondly, we're also building something called serveboss, which is like an alternative settlement layer that Ethereum roll ups can settle to. So instead of settling to Ethereum, they can settle to sevmos for cheaper transaction fees.
00:56:09.204 - 00:56:32.704, Speaker B: That's the short term go to market strategy. The long term vision, of course, is sovereign roll ups, where people can actually deploy their own sovereign blockchains very easily, the same way that you can deploy a Cosmo zone. And there's already one team that's working on this idea to build a sovereign roll up on top of Celestia.
00:56:33.804 - 00:57:02.824, Speaker A: That's awesome. Yeah, I'm excited for that team. I think I might know who they are. The other thing I wanted to talk about is what keeps you up at night risk wise, as a founder of such a enormous product and vision. Right? Like, I mean, I didn't get the chance to talk to Vitalik, you know, early Han, or, you know, say, Anatoly from Solana. But I'm sure they also had their own kind of concerns and risks. But, like, what are the top three or maybe just the top one risk in your mind, to Celestia that, that really keeps you up? That might be unsolved right now.
00:57:05.044 - 00:58:02.824, Speaker B: I mean, I wouldn't say like, there's this something that necessarily keeps me up, but I would say that, like, one potential, um, like, risk to think about is, um, like in the short term, users might not care about decentralization. So, you know, with Solana, for example, that has a lot of traction, but it's really expensive to validate the chain. Um, so obviously that. And, you know, it makes sense. There's a lot of users that just kind of want to use the chain as they do with any web two, application, they don't necessarily care about the decentralization of it. It's a very short term view to take. But I guess one risk is that if people don't start caring more about it, then we might end up with a world where we basically end up with centralized chains because users don't really care about decentralization.
00:58:04.244 - 00:58:31.144, Speaker A: That's a good point. I mean, you kind of close with the idea of these sovereign blockchains and communities not wanting to be pinned to ethereum, having more control. But in my, that's like changing the Internet, right? Like it's getting really hard to change or update Ethereum at all. Right. Do you think that that's still going to be an issue? Like are people really going to care? Like, hey, let's start a dao, but actually we need our own blockchain. Do you think that level of thought will go into global DaO communities?
00:58:32.884 - 00:59:38.354, Speaker B: I think yes, to some extent. Because even though it is the case today that the Internet has a lot of centralized points, everyone just uses Twitter and YouTube and Facebook for content. That would never have been possible if the Internet was centralized from the beginning. All of these different innovations that all of these major platforms that people could use were only possible because the Internet was permissionless and because the Internet was modular and you could define any kind of application on top of it. We can see a similar trajectory with blockchains. There's a lot of things that Cosmos zones are doing that would not be as easy to do on the Ethereum virtual machine. So we're seeing a lot of interesting experimentation with Cosmo zones that have deployed their own blockchain that would have been possible on a shared smart contract platform.
00:59:38.354 - 01:00:03.564, Speaker B: But even though we have all decentralized services, it's still great that on the Internet you can still actually have your own website, you can still compete with these major providers, and people compete with them all the time. And that is thanks to the fact that the Internet is modular, that Google is not enshrined to the Internet, for example, you can compete with them.
01:00:04.824 - 01:00:20.324, Speaker A: It's pretty cool. What type of features do you think a dao would want to change, though? If I launch a dao on Ethereum, yes, I'm stuck to their rules. If I launch my own blockchain, aka dao community on Celestia, I have full control. What do you think that means? What features would they look to edit?
01:00:21.194 - 01:01:04.344, Speaker B: Yeah, so there's several things here. Like the first. The first major thing is this idea of social recourse or governance. So like if something goes wrong in the Dao, like just like there was a, for example, there's a hack in the Dao a few years ago, but anything could go wrong. It might not be a hack, it might just be like the protocol failed or something like that. You might want to have a governance mechanism in that dao that allows you to recover from that. And that governance mechanism might not be simply like a multi sig vote or a vote by token holders.
01:01:04.344 - 01:02:23.944, Speaker B: You might want to have like a social consensus for that off chain governance mechanism that's more of an ad hoc social consensus mechanism. It's just like if you want to hard fork Ethereum today, and who gets to decide who to hard fork Ethereum? Like, you go offline and you debate the hard forks and the changes. It's not as if like the token holders of Ethereum, just because they have diverse money, they can change the rules because that would be meritocracy. But instead you can have a governance system based on social consensus, where the changes happen ad hoc or agreed by the community offline, not based on who has the most tokens or the most votes, but based on what if there's ecosystem buy in, effectively, the second kind of thing is you might want to like have. You might want to create a blockchain that has rules in it, or does things that might be traditionally too expensive to do in a traditional like in a shared smart contract platform. There's various projects that are doing interesting things with cryptography that would be too expensive to execute on a shared or mallithic blockchain like Ethereum.
01:02:27.244 - 01:02:52.354, Speaker A: Makes a lot of sense. The one thing I'm still personally a little shaky on, or I don't fully understand, is so Celestia splits consensus and execution, so anybody can create their own execution environment for their app or their use case, whatever they want. How are we all sure that that's secure? How is everybody using an app? How do they sleep at night knowing that the execution for what they're using is actually secure on the off chain side?
01:02:54.014 - 01:03:39.666, Speaker B: Well, the same way that you ensure that bitcoin transactions are secure, because you have this notion of a fully validating node. Like the end users of the, like, everyone who's using the chain is supposed to check that all the transactions are correct themselves. But obviously that doesn't scale with a normal blockchain. But if you add fraud proofs to it, that does scale. So if you want to check that the execution of the chain is correct and all the transactions are correct. You don't have to trust anyone but yourself. As long as you can trust yourself that you're checking the fraud proofs or the ZK proofs, you don't need.
01:03:39.666 - 01:04:06.314, Speaker B: Like you don't need to ask anyone else because the fraud on the ZK proofs speak for themselves like they're either correct or they're not. And if someone like produces invalid block, then there's a hard coded social consensus rule that says if it's an invalid block, then everyone rejects it. But if someone decides not to reject it, then they're just hard forking themselves off to a different network. But it doesn't affect you, it just affects them.
01:04:07.894 - 01:04:34.884, Speaker A: Got it. The other component I want to ask about before we close out is just the growth in nodes for Celestia. I guess two questions here. One, how easy is it for mass consumers to deploy a celestia node? And two, what are the effects of that? I mean, you mentioned that the more nodes, the more data availability sampling you could do, obviously larger blocks. But if you can get into the ease of deploying nodes and then just reiterate the effects of that, it would be helpful.
01:04:35.264 - 01:05:15.564, Speaker B: Sure. So there's several types of nodes in celestia. The most basic type of node is the light node. And the unique thing about celestial light nodes is, as I mentioned, they can actually contribute to the scalability of the network by helping to sample and store parts of the blockchain. These light nodes are very lightweight. So for example, I've managed to actually run one on my mobile phone. And so one of our goals here is it should be possible to run a celestial light node that contributes to the network on a mobile phone.
01:05:15.564 - 01:05:26.704, Speaker B: Right now you can actually go to the docs on our website, docs dot solicitor.org, and there's very straightforward instructions for running a celestial lite node.
01:05:28.004 - 01:05:47.734, Speaker A: Do you think that's the sell to consumers? Do you think it might be the reverse where, hey, you know what, as a consumer, you could run this node on your phone, you're not even going to know it. Earn tokens. And then on the other side of this, developers see, hey, you know what, we have an ultra secure settlement layer, in essence, we can use. Let's go out and use this. Do you think that might be an avenue for you guys?
01:05:48.754 - 01:06:39.764, Speaker B: Yeah. So I think the main sell for consumers is that developers can create roll ups that are more scalable and sovereign. The question is, do users care about the fact that their lite clients are secure? Because most users use metamask, right? And metamask uses infura, which is a centralized RPC endpoint. But actually I do think that the reason why metamask does that is just because Ethereum has very poor lite client support. And so I genuinely believe that if Ethereum had good lite client support, then there's no reason why metamask would not implement integrate lite client by default. That's decentralized. Instead of relying on a centralized RPC node.
01:06:39.764 - 01:07:16.704, Speaker B: Bitcoin has very good lite client support. You can actually download a bitcoin wallet on your phone that runs light client that doesn't use any centralized servers. And there's millions of people that have installed that wallet, just like there was millions of people that use bittorrent, even though instead of using a centralized server. So if we embed these clients by default to wallets like Metamask, the user doesn't even need to know that it's running. The resource requirements aren't that high.
01:07:17.964 - 01:07:29.544, Speaker A: But for something like Ethereum, running that like client doesn't help secure the network though, right? Because earlier in your presentation you covered why you're just getting the block header, you're not actually getting the transaction data within.
01:07:30.094 - 01:07:48.194, Speaker B: Yeah, that's correct. So light clients, the reason running lite client for Ethereum bitcoin is mainly for your own personal security. But in Celestia with data availability sampling, it's not just for your own personal security. As a nice bonus, it also does help secure the network.
01:07:49.454 - 01:08:09.074, Speaker A: That's a big differentiation. So on Ethereum, if I ran a lite client link to Metamask, if it was possible, I wouldn't be reliant on infuria messing with my transactions. But with a celestial like client, with a wallet, you don't have to worry about a central entity like Infuria messing your transactions and you're also securing the entire network.
01:08:09.454 - 01:08:28.174, Speaker B: Yeah, exactly. I'm not sure most users would care about that, but I do think that for many users that's kind of like a nice, there's probably a nice feeling in that, that they're actually, you know, they're actually doing something useful with their, with their, with their computer if they believe in the sovereign community's vision.
01:08:28.514 - 01:08:37.294, Speaker A: Is the UI or ux better for running like let's say a lite client on Celestia linked to your wallet versus a lite client on Ethereum, because that might be a key sell?
01:08:39.474 - 01:09:07.414, Speaker B: Well, I mean it can be better, but as far as I know, like the main, like the main reason why Ethereum doesn't have flight clients is simply because they did not prioritize light clients in the protocol. The protocol developers did not prioritize it. They did not prioritize building like clients. There is some like client support now, I think, but it's still not as mature as it could be. So people still using Vera?
01:09:07.794 - 01:09:25.044, Speaker A: Yeah, no, I could see that. So a couple technical questions to hit you with, but one from John C at Delphi. Is, is there any way to, Sybil attack the light node count, like spinning up a bunch of light nodes just to increase like block size? Or would that actually help the network? What's the answer there?
01:09:25.984 - 01:10:20.104, Speaker B: Yeah, I mean you could, like, yeah, I mean, like the light nodes in the network are not supposed to be Sibyl resistant. And so that's why like, we don't. The block size limit in celestia is not decided in protocol is decided by the social consensus or the governance of the celestial community. And the reason for that is, as you said, like someone could limit or someone could sybil a bunch of fake like clients. So you can't rely on the metric of how many like clients there are on the network to decide what the block size is. Instead, that limit has to kind of be decided socially on the social consensus layer. So that like if someone, so we can actually like look into more data to understand and look to see how big the community is and see if they agree with increasing the block size limit.
01:10:20.724 - 01:10:44.764, Speaker A: The social consensus side there makes sense. And one contrarian, I guess, technical question from priyanch Patel at Delphi is how does ZK Porter compare to Celestia since both are enabling data availability? Like wouldn't ZK Porter with Zksync 2.0 and Ethereum sort of be like a complete stack in itself or. Yeah, I guess. What's the reasoning on the comparison between those two in Celestia?
01:10:45.184 - 01:11:28.498, Speaker B: Yeah, I mean, so ZK Porter is still quite early, so I don't have the full details on that. But as far as I know, ZK Porter is planned to be a proof of stake kind of blockchain that attests to data availability of the. Well, sorry, maybe this I'm confusing ZK Porter and ZK Porter 2.0 or ZK 16.0. ZK Porter today I think is just correct me if I'm wrong, it's a centralized committee. But the main difference is that celestia is not. Although celestia, like ZK Porter, is off chain data availability layer for Ethereum roll ups or Ethereum l two s.
01:11:28.498 - 01:12:23.414, Speaker B: The difference is that because the main purpose of celestia is not to provide data availability for some Ethereum roll ups. It's an independent blockchain on its own right. And because it has data availability sampling, it has additional crypto economic guarantees for Ethereum L two s that use it for off chain data availability. Because if the celestial validator set signs a block with invalid data, even though the Ethereum chain would not be able to detect that, because the Ethereum chain cannot do data availability sampling on the celestial chain, the celestial validators would be slashed. And so you have this crypto economic kind of guarantee or crypto economic security that you would not get with other data availability committees or off chain data availability solutions.
01:12:24.814 - 01:12:50.674, Speaker A: Makes sense. I'm going to dig into both post call and circle up a pre anch. My closing question for you, Mustafa, is why do you think that Ethereum was built the way it is? Your own knowledge of the space and your activity dates back 1213 years. Early bitcoin user at this point, why do you think that it's just coming to air now that modular is the right way to go.
01:12:52.224 - 01:13:56.734, Speaker B: So, I mean, if you look at the history of Ethereum, Ethereum, the original motto for Ethereum was the world computer. So it was like this international computer that everyone could use. And the original design philosophy of bitcoin, of Ethereum, was that similar to bitcoin uses proof of work and everything, except that you have a general purpose virtual machine on top of it. And obviously that does not scale. And, but that's kind of like the paradigm, this monolithic blockchain paradigm that bitcoin introduced, Ethereum also followed it. Now, interestingly, just before Ethereum, there was this idea of, there was this thing called Master coin. And Mastercoin was actually a kind of like a not smart contract platform, but it was like a platform that enabled different decentralized applications that used bitcoin for data availability.
01:13:56.734 - 01:14:48.454, Speaker B: And it was like there was a specific set of applications on the master coin. Like for example, there's one for like gambling or domains, and it used bitcoin. It just posted its data on bitcoin. So it used bitcoin for data availability. But that didn't really kind of take, take traction because bitcoin was not really designed to be for data availability. So that's why Ethereum proposed this idea of just, let's just take bitcoin and add the general purpose virtual machine. But now, ten years later, we're kind of going full circle back, back to a paradigm similar to Mastercoin, which was before Ethereum, where you actually just have off chain execution and on chain data availability.
01:14:48.454 - 01:15:00.214, Speaker B: Except that Celestia is doing this. It's kind of taking this paradigm and building a system with this paradigm explicitly in mind and making it as scalable as possible.
01:15:02.094 - 01:15:33.844, Speaker A: Makes a lot of sense. Mustafa. Mustafa. This has been an incredible disruptors episode on modular blockchain. Celestia, your history as an insane hacker and somebody who's just been incredibly plugged into all of the technical achievements and advancements in the blockchain space for the past decade, and how that influenced your decision to co found lazy ledger, which is now Celestia. So it's been really exciting having you on and really appreciate your time today.
01:15:34.464 - 01:15:36.264, Speaker B: Thanks. It's been an honor to be here.
