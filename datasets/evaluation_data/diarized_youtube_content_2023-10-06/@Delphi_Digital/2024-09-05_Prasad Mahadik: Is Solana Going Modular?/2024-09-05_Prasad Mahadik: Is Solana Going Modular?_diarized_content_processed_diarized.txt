00:00:00.360 - 00:00:34.249, Speaker A: This podcast is strictly informational and educational and is not investment advice or a solicitation to buy or sell any tokens or securities or to make any financial decisions. Do not trade or invest in any project tokens or securities. Based upon this podcast episode, the host and members of Delphi Ventures may personally own tokens or art that are mentioned on the podcast. You're now plugged into the Delphi Podcast. Hello, everybody. Welcome to an episode of the Delphi Digital Podcast. My name is Ceteris.
00:00:34.249 - 00:01:21.125, Speaker A: I am coming on the pod now on Tom's pod. I'm the head of research at Delphi and I'm bringing on one of our analysts on the infrastructure side and we're going to talk about this new report that he put out called Salon in the Modular. I think this is pretty timely when we got it out. You've seen a lot of talk recently on Twitter. You've seen people like Austin from Solana had this tweet the other day calling, you know, Solana has these new network extensions, which I guess is kind of a different word than L2 or roll up. You have Kyle Simone talking about how Solana roll ups will look a lot different than Ethereum roll ups. Right.
00:01:21.125 - 00:02:02.923, Speaker A: And so instead of getting into kind of like these debates over terminology, which is kind of just like a big waste of time, we just wanted to do this pod, go through some of the stuff on the report, kind of understand, like, you know, why roll ups are now coming to Solana. Like, when did this start happening? What are the implications for like Solana for, you know, Celestia, Ethereum, even Cosmos and like app chains, you know, or RSVM chain is going to be the new app chains, Right? So, yeah, brought on Prasad. And Prasad, you joined us how long ago? Like four, six months ago, something like that?
00:02:02.979 - 00:02:04.443, Speaker B: Yeah, around six months.
00:02:04.539 - 00:02:29.745, Speaker A: Around six months. Okay. So yeah, you've definitely been into a lot of these technical pieces. First one with the bitcoin roll ups. Right. And this one now. So just like, what made you kind of like want to dive into Solana roll ups and like, when did it kind of start getting put on your radar that this was something that had like some real kind of like traction behind it.
00:02:31.725 - 00:03:37.529, Speaker B: So I think generally the separation of SVM from the validator client by Anza was one of the main developments that I started watching the space. Before that I was just like taking look at the banking stage improvements in the scheduler, which were like more focused on making the L1 more improved. But this was the first instance in which There was some kind of separation of SVM from the validator and not just that the SVM along with the RPC and scheduler are going to be decoupled. So I kind of saw that the validator is getting split apart into a couple of different areas and this would lead to a lot of roll ups, application specific roll ups, app chains and also off chain services, which Ansa team kind of highlighted. Along with that there were a few more developments happening in parallel, similar to what was happening on Bitcoin. So next were a couple of rollups which looked very interesting to me.
00:03:37.617 - 00:04:16.369, Speaker A: Maybe just to go back on the SVM before. So Enza kind of splitting that out. This made it now easy for anybody to kind of just go grab that and work with it. I guess in the past they would have to take the whole collective Solana code base and kind of like reconstruct it. I think Solana is probably one of the most misunderstood code bases out there. It's like my understanding that there's like 20 people in the world that understand SVM and then you know, Solana's consensus mechanism isn't formally verified or anything. And so it's very confusing.
00:04:16.369 - 00:04:33.605, Speaker A: So yeah, I guess Anza, by them removing, you know, all the validation and like consensus and just purely having the virtual machine on its own, that was like pretty powerful move to kind of like get the ball rolling here.
00:04:33.905 - 00:05:27.455, Speaker B: Yeah, that's right. Because earlier the code base was like very intertwined with each other. So if anybody wanted to use the SVM by itself, there was nothing like SVM that was separated in the code base. So they just had to use the entire code base and take into consideration all the dependencies with respect to the consensus and so on. So they couldn't make any kind of customizations as such if they wanted to without being tied down by the consensus separation kind of makes it very easy to just work with the SVM which is, yeah, one of the most battle tested VMs out there after EBM. So yeah, I expected that there's going to be a lot of demand from rollups, app chains, off chain services and that's what we are kind of also seeing. So yeah, that was one of the first developments out there.
00:05:27.455 - 00:06:25.725, Speaker B: Apart from that there were a couple of roll ups which were very interesting, which is Magic Block and the other one was SpiceNet. So magic block. I saw the demo of their on chain game which was like at a latency of 10 milliseconds or so, which was very, very interesting. And then there was an announcement by Termina as well about launching an SPM cloud. And yeah, I think they are developing some sort of an SDK also an extension of SVM which is called an SVM plus. So along with that there was three different syscalls on Solana as well, which went live recently and these are related to ZK verification. So overall similar to Bitcoin, I was starting to see a lot of developments that were organic in nature moving towards that direction.
00:06:25.725 - 00:06:54.723, Speaker B: And it wasn't like there are some roll ups and they are trying to figure out the supporting infrastructure. But a lot of these other pieces of puzzles were coming together at the same time. And there was this community also which was the SVM community which also developed at the same time. They started discussing about the interop problems, the designs and overall it seems like a very organic movement. And yeah, that's, that's when I kind.
00:06:54.739 - 00:08:00.217, Speaker A: Of decided that makes sense. I think, you know, people talk about how, you know, we're all converging and building the same thing in the long run, which is, you know, definitely truth to it. But the path you take there also matters a lot. Like if I think about why Cosmos ecosystem has mostly failed, which I think it's fair to say that it's mostly failed at this point, I think that they can, I think like the Cosmos thesis of app chains is actually going to be correct in the long term. I think the, the challenge is that they never had this like one, you know, central hub that you had general purpose contracts on that you had all these developers come in and like everyone kind of, you know, you know, grew their app there. Right. And I think Solana, you know, some people say this is like a narrative violation or whatever.
00:08:00.217 - 00:08:46.487, Speaker A: Narrative shift, moving the goalpost. I don't really agree with that because Solana is still laser focused on making the L1 as scalable as they're able to. Right. And what you're seeing with, you know, roll ups that are launching on Solana is that, you know, if you're, if, if you're an application and you want access to Shared State, you can just go Launch on Solana L1, right? You're always going to have that, you're always going to have that option. And so for a developer it's a very easy process to go from. Okay, if I want Shared State, I'm just going to launch on L1 and my app can live here. And then maybe my app like outgrows the L1.
00:08:46.487 - 00:10:37.991, Speaker A: Maybe I want my own custom block space, right? Maybe I'm a perp. Dex like perp dexes don't need to share state with anybody else because you have one collateral asset, you know, so it's easy to like app chains. I mean, if there's one thing that app chains have product market fit for, it's perp dexes, right? There's like a million of them. And so I do think the architecture is a lot different than what you've seen in Ethereum and even what you've kind of seen in Celestia too, because you're kind of just seeing in those ecosystems general purpose chains, whether it's like evm, there's SVM with like Eclipse now, but you're kind of just seeing the same thing as Ethereum L1 now on its new roll up in its new kind of ecosystem, right? And then these L2s, like whether it's base, arbitrum, optimism, whatever, they're now trying to like become this new liquidity hub, right? And you're seeing like base mints, all the USDC on base now and they want to get like base L3s, right? And that's just kind of like moving down the stack one step lower. Whereas if you look at these roll ups that are actually looking to use Solana, they are all actually kind of unique in their own ways. And I want to get into how some of these are unique, but I think what you're not really seeing is you're not seeing people launch these essentially Solana as a roll up on Solana, right? Which is very different from the Ethereum Escal system because like base optimism, Scroll, Zksync, Starknet's kind of the only one that is actually different in a sense because it's like Cairo vm, but for the most part you're just relaunching Ethereum on as a. On Ethereum, right? And so maybe we can start to get into some of these differences in what we're seeing.
00:10:37.991 - 00:11:03.713, Speaker A: I know you mentioned, you mentioned Magic Block at the top there. Magic Block is an interesting one because they have like these ephemeral roll ups, right? And then they do use the L1 for some stuff. So maybe kind of like walk us through how Magic Block works and I.
00:11:03.729 - 00:11:57.015, Speaker B: Think you made a great point there that building an SVM on top of SVM doesn't make any sense. Especially because I think Anatoly and others have also pointed out that if there is contention for a particular state, having roll up on top of it doesn't really help scaling it, right? But Magic Block is kind of different. And I think in these Cases it might really help. So for start, maybe I'll kind of address how Magic block architecture works in general. So one thing that is very different for Magic Block is that is highly composable with Solana Mainchin. And what that means is these ephemeral rollups don't have their own state on which programmers are going to deploy their own smart contract. So the smart contracts, programs and liquidity, everything remains on the base chain.
00:11:57.015 - 00:13:08.969, Speaker B: And what happens is like these applications, they delegate some of the execution rights to these ephemeral rollups and Magic Block takes charge of provisioning certain execution environment for them. So what ends up happening is you get certain select applications or programs and they get this customized execution layer for just a specific account or a specific program. So the application could be made up of a lot of different programs, a lot of different accounts, and the application can actually choose which part of their application logic kind of runs on the roll ups, while the other part still keeps on running on Solana itself. And the liquidity also stays on top of Solana. So there is no bridging of assets and so on. And so this on demand burst capacity which is available for the applications is very interesting for use cases like, you know, defi liquidations, let's say where there's a very high demand and there could be like the application might have a lot of contention. And these ephemeral roll ups can actually be highly customized in terms of the blocks timing or the hardware used.
00:13:08.969 - 00:13:27.765, Speaker B: So actually it could have a very different performance compared to the svm. So what the applications end up having is like a very customized execution for only whatever part of the program they want accelerated to be on. So in a sense it's like a CPU GPU relationship.
00:13:28.825 - 00:13:53.269, Speaker A: Okay, that's kind of interesting. I kind of thought a Magic block is like some gaming thing. Can you kind of like. So let's go into that liquidation example. So obviously the state of like the lending protocol would be on Solana, the liquidity would be on Solana. And so what happens on this ephemeral roll up? Is it kind of like the auction process or something?
00:13:53.357 - 00:14:33.845, Speaker B: Yeah, yeah, yeah. Let's say the auction would be actually the most demanding part of the part of the program itself. So that program delegates its rights to the ephemeral rollups and the ephemeral rollup then gets provisioned and the developers can choose what kind of customization it has. So it can have different kind of fraud proof windows, it can have different kinds of securities, it has a committee which can sign on top of it, it can also have different block times and custom hardware. So basically the auction or particular part of the program only runs on the ephemeral rollup while the other part keeps running on Solana main chain.
00:14:34.385 - 00:14:55.781, Speaker A: Okay, yeah, that's cool. That's cool. And then. Yeah, and then they are also doing a bunch of gaming stuff too, right? Yeah, you want to run specific game tasks that doesn't make sense to put on the L1. Right. But then you can still have the other parts of the game kind of like on the L1. Is that how it works?
00:14:55.813 - 00:15:19.695, Speaker B: Yeah, exactly, exactly. I mean like if there's certain part of the game which has very high demand that can be provisioned to ephemeral rollup, it can have its own customized security because it could be micro transactions which are not that depending on security. So it could have a very short fraud window and it could have custom logic and so on.
00:15:21.115 - 00:15:44.935, Speaker A: Yeah, that's cool. Okay, so that's magic block. That makes sense. That makes a lot of sense. And you can kind of see how that's different from what we kind of think of as a roll up. Right. Simply it's not some like new blockchain kind of that you have this shared state and whatever you're doing all this stuff on, it's something that is ephemeral, serves a purpose.
00:15:44.935 - 00:16:14.149, Speaker A: Okay. So I think maybe let's move into some other ones and then we can get into some more, you know, more high level questions maybe. I think the other main one know is like Spice. What's it called? There's two. Right. It's like Pepper Decks and Spice Net, right? Yeah. And they've also, I think they've like constructed the Blob stream for Solana Celestia.
00:16:14.149 - 00:16:19.061, Speaker A: Yeah. So maybe, maybe we can talk about SpiceNet and what they're doing. Yeah.
00:16:19.148 - 00:17:16.359, Speaker B: So SpiceNet is also again very interesting. You know, a couple of weeks back I saw the presentation by RET on the Paradigm Founders Day and they also talked about, you know, some kind of customizations in which you could let go of the VM in case you want some enhanced performance. So Pepperdex and spicenet basically are application specific. And what they're claiming is like the application specific rollup that they are building doesn't really need that kind of expressive smart contract development. So they're kind of letting go of the VM and what they're using is just a pure rust execution environment. So that gives them a lot of handle on the performance as well as what kind of features they are controlling on it. Other Than that they're also using something called as namespaced optimized Merkle tree.
00:17:16.359 - 00:17:59.823, Speaker B: So usually for the execution part in any blockchain, use of state commitments like Merkle trees is often the most expensive part. And parallelization cannot relieve the pressures introduced by use of the state commitments because there are so many hashes that you have to do and keep on traversing between these Merkle trees. So this optimized Merkle tree that they are using uses a different hash function which is much faster. They also use some caching mechanism and some compression of metadata. So I think for execution that becomes much faster again. So that is another customization that they.
00:17:59.839 - 00:18:32.483, Speaker A: Are using and that makes it much like more like validity provable or like fraud provable too. Right. That's like. Yeah, because I know that's always been. Solana doesn't commit to like a global state route. Right. And so that's always the hardest part with when people talked about making like SVM roll ups, it's like when you have an EVM roll up every block, you kind of have this state route and everything lies underneath it and then you just prove that with validity or fraud proof and then you're good.
00:18:32.483 - 00:19:05.705, Speaker A: Right. And with svm it didn't have that had this continuous block production thing. And so it wasn't so simple to just say, oh yeah, we're going to make SVM roll ups like they did EVM roll ups because you don't have that Merkle root. Right. So yeah, that seems like a pretty big development for them. We do care about the tech at the end of the day and actually having these roll ups be like fraud and validity provable. Of course you could launch some multi seg SVM roll ups if you wanted to.
00:19:05.705 - 00:19:12.305, Speaker A: I think the industry has probably gone too far in accepting a lot of these trade offs in recent times.
00:19:12.685 - 00:19:13.465, Speaker B: Yeah.
00:19:14.765 - 00:19:23.735, Speaker A: So that's cool. And then SpiceNet is like, I think it's just like a trading chain in general kind of.
00:19:24.155 - 00:19:47.595, Speaker B: Yeah, they're building a protocol just for trading perps and developers can essentially build things on top of it in a permissionless way. So it does not have a lot of expressivity because of lack of vm, but it's as far as the application needs that kind of expressity is there.
00:19:47.975 - 00:19:51.315, Speaker A: Okay, that makes sense.
00:19:51.775 - 00:20:07.799, Speaker B: Also they are working with I think RISC0. So RISC0 is basically running a Celestial Light client. And so basically they are able to kind of fetch the blobs that they are posting on Celestia.
00:20:07.927 - 00:20:12.825, Speaker A: And Yeah, so maybe like why Are they using Celestia for da?
00:20:13.965 - 00:20:37.263, Speaker B: Yeah, that's a great question actually. And Pepperdex since beginning has been very clear that they don't want general purpose expressivity, general purpose programming on top of it. So that's why they are letting go of VM and for the DA also they want something like that. So Celestia doesn't have any programming or VM on top of it. So they want high capacity as far as I see.
00:20:37.439 - 00:21:06.771, Speaker A: Okay. But it doesn't like Solana still have, I mean so I know that Celestia has, you know, Solana doesn't have like data availability sampling with da. They don't have like client support yet. So I understand. Why don't you Celestia for that reason. Right. Like Solana does have more da, but if you consider that like, well Salon doesn't have like clients, it doesn't have sampling, then it doesn't really have or DA kind of.
00:21:06.771 - 00:21:26.015, Speaker A: Right. So if Solana did it sounds so like even if Solana did have that, they don't like the fact that there's still all this execution happening on L1 and they still just want. And because they're afraid that congestion on the L1 is going to cause like the blobs to spike.
00:21:26.595 - 00:21:27.355, Speaker B: Exactly.
00:21:27.475 - 00:22:01.945, Speaker A: Yeah. I mean that makes, that makes sense. I think that is a good feature of a pure DA layer for like another roll up to use, whether that's good. I still am very skeptical that pure DA layers are kind of like viable long term just because the amount of activity you need. And I know people will say well there's like when, when you have all these roll ups using them they get this economies of scale because like data availability sampling is like, it's more scalable. Right. The bridging between all the rollups that share the DA layer bridging is a lot safer.
00:22:01.945 - 00:22:30.975, Speaker A: I get all those points. I'm still kind of skeptical that that is still going to be enough to kind of make it sustainable. But I guess we'll see. And so that is a. I think SpiceNet is a pretty interesting one because it's kind of, you know, proving out two things. It's one, it's proving out like a Solana roll up and then two, it's proving why you would want to use a Celestia type DA layer. Right.
00:22:30.975 - 00:22:52.855, Speaker A: And so both of those are, both of those are pretty interesting to me. Both of those reasons. But like spicenet was going to have, it's going to have like its own sequencers and everything. Right. It's not going to use Solana for anything. Yeah, just the bridging basically. So this is not going to feel like Magic block, right? Like magic block for a user or whatever.
00:22:52.855 - 00:23:18.985, Speaker A: It sounds like Magic block is mostly going to be used by I guess in Defi. It's mostly going to be used by like liquidators and like traders and like. So like the average retail user is never going to really use Magic Block for that. It'll kind of happen without them knowing. And then I guess for gaming they'll maybe be using it, but still the user won't really know that they're using separate chain. Whereas with SpiceNet obviously this is like a fully separate chain. You got a bridge, all this stuff.
00:23:18.985 - 00:23:39.391, Speaker A: So. Okay, that makes sense. And then I know that there's. I know like Zeta is doing one that's pretty self explanatory. Zeta's like perp Dex making. I don't know if there's anything unique with Zeta versus like other perp decks roll ups or is it basically just like perp decks roll up on Solana?
00:23:39.583 - 00:23:43.687, Speaker B: Yeah, it's just like the regular perp decks roll up on Solana.
00:23:43.791 - 00:24:05.193, Speaker A: Okay, so yeah, we don't need to go too far into that. I guess this other one I know, Grass. Grass is one. Right. They're doing. Can you explain Grass? Actually a bit. I know Delphi Ventures is invested in GRASS as a disclosure, but can you maybe explain like how this.
00:24:05.193 - 00:24:06.685, Speaker A: Yeah, kind of works.
00:24:07.545 - 00:24:50.965, Speaker B: I think what GRASS is trying to do is trying to make some verifiable data database available. And for that basically normal users, basically whenever they visit websites or they can provide their own data. So what they can do is like they can ask the GRASS nodes for scraping of this data. And so basically these are the GRASS nodes that have extra bandwidth capacity who can do the scraping of data for the clients. What Grass wants to actually do is prove that the data was actually scraped in a. You know, it's not a fake data or it's not synthetically generated data. It has to be real data.
00:24:51.005 - 00:24:51.565, Speaker A: Right.
00:24:51.725 - 00:25:12.655, Speaker B: And for that specific purpose, Grass is actually using like an L2 only for generation of ZK proofs. So all the other parts of the execution are not necessarily using the L2, but the L2 only does the proof generation part. I think it's similar to what ZK TLS is trying to do.
00:25:13.075 - 00:25:18.135, Speaker A: Yeah, this kind of sounds like, I mean is like CO processor the right term?
00:25:19.755 - 00:25:32.585, Speaker B: I think. Yeah, like a ZKTL as CO processor maybe like proofs of correct. Just scraping data. It's not necessarily creating proofs of state transition.
00:25:33.045 - 00:25:44.533, Speaker A: Okay, okay. I guess it's a network extension. Right? That was a bad joke. Okay, so I guess now let's move on. I think so.
00:25:44.589 - 00:26:09.915, Speaker B: I think I broadly do agree that there is so much diversity of these L2s on Solana. For example, like Magic Block is more or less like a co processor. Spicenet is definitely nl2 grass is somewhere between again this getcode which is again just using a sequencer for increasing the reliability again.
00:26:10.535 - 00:26:27.195, Speaker A: Yeah. How does get code work again? I know Rinko was talking about that a while ago. He kind of explained it. So code is this payments app, but they don't use. They use their own token. Right. And so they have this sequencer.
00:26:27.195 - 00:26:30.355, Speaker A: Do you understand how it works? Like at a high level?
00:26:31.055 - 00:27:09.315, Speaker B: Yeah, I think at a very high level. Not very deeply, but as far as I understand they are trying to. Since like payments are very, you know, like the consumers for payments really need high reliability. The payments cannot fail in terms of the transactions. Also there needs to be some kind of privacy or payments. So there has been a problem of reliability of transactions like landing them and getting them confirmed on Solana. So the sequencer kind of holds these transactions and ensures that they are reliably posted on Solana and these get actually executed later on.
00:27:09.315 - 00:27:16.789, Speaker B: And it has some sort of privacy encryption. So it's only for these two purposes that they are using the sequencer.
00:27:16.887 - 00:27:46.811, Speaker A: So I guess like let's say people like to talk about Solana's outages. I think that's fair. You know, I think it's fair to assume Solana goes down once a year, maybe more, maybe less, depending on, you know, how much it improves. But let's say you're using code, Solana goes down, their sequencer is still going to be like processing all your stuff now though. You're just like kind of waiting. You're fully reliant on this. You're fully trusting, I guess, code sequencer until Solana comes back up.
00:27:46.811 - 00:27:48.179, Speaker A: Right. So that's kind of like.
00:27:48.227 - 00:27:49.155, Speaker B: Yeah, yeah.
00:27:49.195 - 00:28:20.585, Speaker A: Which I think is an okay. Like I think what we've seen in the last year too is that liveness issues kind of affect everybody except for, you know, Ethereum L1. But there's all, there's obviously trade offs with their design. Right. And so I think you're gonna see L2s have liveness issues. Like we've seen a bunch, right. Like every, every L2 has kind of had a liveness issue with their sequencer.
00:28:20.585 - 00:28:58.475, Speaker A: Solana's had issues and So I do think this is kind of like a bit off topic tangent. I do think there's, there's like some sort of market or something that can be designed to like kind of allow state to maybe like still progress while there is a liveness issue with. Obviously you're going to have more trust assumptions, it's going to be a bit more centralized. But I feel like there's some sort of trade off. There's some sort of design there that probably makes sense as like a fallback type mechanism, but I guess. Yeah, we'll see.
00:29:00.305 - 00:29:40.017, Speaker B: Yeah, I do agree, Yeah, I do agree. Reliability is one particular area where I think even the Solana people have agreed that L2 is for that makes sense to improve reliability and to also reduce latency and to add privacy and you know, for the compliance purposes. I think these four things are actually, you know, kind of adding to the Solana main layer and I don't want to call them extensions, but yeah, definitely these are things that L1 is currently not providing and L2s might want to build something to address that.
00:29:40.161 - 00:30:08.647, Speaker A: Yeah, that makes a lot of sense. So maybe I think one more kind of want to talk about here with Sonic and then maybe we can maybe move on to some other things like there's like Tiny Dancer, there's Rome, the Shared sequencer. Yeah, maybe we can talk about Sonic. I've seen this a decent amount on Twitter. Maybe you want to explain kind of like this is like a gaming focus thing too, right?
00:30:08.831 - 00:30:57.755, Speaker B: Yeah, yeah. Sonic is completely focused on gaming and basically Sonic is like a horizontally scalable, like a, like an ecosystem more than an L2. So it has something called as grids and grid is essentially an execution environment similar to what SVM is. But what the games can do is basically they can either choose to deploy on top of Sonic or they can just spin out their own grid. And also these grids are basically, if you run out of the capacity on a single grid, you can get another instance spun out of it. And also these are kind of fault tolerant in nature. So let's say a program on a single grid kind of dies off, they are cloned and they run on the other grid.
00:30:57.755 - 00:31:43.435, Speaker B: And Sonic also has an interesting customization again on the state commitment side. So instead of Merkle tree again they are using something called as concurrent Merkle tree. So that's very interesting because on a regular Merkle tree it's like similar to a sequential execution. So you can just update one thing at a time. Concurrent Merkle tree again can update multiple things on the Merkle tree at a time. And so yeah, it kind of extends that parallelization to the state commitment side as well. Also, Sonic has a sequencer and the sequencer kind of acts like a bridge for all these different grids.
00:31:43.435 - 00:32:23.125, Speaker B: And that also creates like a ZK proof for settling. And Sonic is also using ZK compression. So ZK compression is not an L2 and it just like reduces the cost for state on Solana. So basically what it does is like it offloads a lot of state on the ledger and instead just like posts commitments on the main main chain. Right. So basically transactions on Sonic are also again, 10 to 100x more cheaper because of the use of ZK compression. So all these microtransactions for games benefit a lot from it.
00:32:24.145 - 00:32:34.513, Speaker A: Yeah. So just so I understand the architecture, Sonic is like, it's kind of like general purpose, the Sonic main chain and then they have these hyper grids.
00:32:34.649 - 00:32:34.871, Speaker B: So.
00:32:34.893 - 00:32:37.535, Speaker A: So it's kind of like this L2L3 thing, is it not?
00:32:38.035 - 00:32:39.491, Speaker B: Yeah, yeah, kind of.
00:32:39.643 - 00:32:55.335, Speaker A: Okay. And then they have their own sequencer that sequences all like the hypergrid transactions, all the Sonic VM transactions. And then it'll post that all on Solana L1.
00:32:55.795 - 00:33:02.307, Speaker B: Yeah. Only the difference is like it's going to use ZK compression, so the costs are going to be much, much lower.
00:33:02.491 - 00:33:06.735, Speaker A: It'll use ZK compression on Solana or on Sonic.
00:33:08.315 - 00:33:15.315, Speaker B: I mean, the accounts can stay on Solana, but they will be in the form of a Mercury.
00:33:15.475 - 00:33:26.883, Speaker A: Okay, okay. For like a user using something on Sonic, are they gonna have to deal with like bridging and everything or will they just live on? Yeah, yeah. Okay.
00:33:27.059 - 00:33:30.855, Speaker B: Yeah, there's bridging involved and currently it's an npc.
00:33:31.425 - 00:34:11.203, Speaker A: Okay. All right, cool. Well, yeah, I think those were like the main kind of roll ups we wanted to talk about. I guess I would say like a question that. Well, I guess first of all I think you're making this point in your report how like, even if Fire Dancer, you know, Fire Dancer is this new client that's coming out for Solana, everybody's really, you know, bullish on it. We'll see. We haven't like seen it go live yet, but let's say it hits some theoretical, you know, 1 million TPS, okay? Some.
00:34:11.203 - 00:34:46.525, Speaker A: Some crazy high number that I wouldn't really bet on right now. But let's say, let's just say for the sake of this, it hits it. You were kind of making the point that even in that world you're still going to need Roll ups because of the amount of like you know, if you're talking, if you're comparing it to maybe if you're, maybe if you're just thinking about finance and people are just trading, you don't need roll ups. Right. But if you're talking about, if people are actually going to start using like blockchains and all this for just everyday transactions like they use the web that even like 1mil TPS is still way too low, right. To kind of like serve all these use cases.
00:34:47.145 - 00:35:47.935, Speaker B: Yeah, yeah. I think for the argument there could be a lot of arguments that can be made for having not roll ups but essentially 1 million transactions per second not being able to service the actual demand that blockchains are trying to address. So one of the arguments is taking a look at the daily interactions that normally user does on Internet and that comes out to be around 3,000 transactions or interactions a day. And if we do some basic math, using 1 million transactions per second as the capacity, it's only able to service like 30 million people. And that is excluding all the surge, that could kind of reduce that even low. The other argument could be. So I was just checking out this thing called utisip that's used in Nasdaq and what it does is it aggregates a lot of quotes and prices from different venues and brings, brings a singular price to Nasdaq.
00:35:47.935 - 00:37:01.315, Speaker B: And this also operates at you know, around 1 billion 1 million tps. But what's different is like its latency is 15 microseconds and even with 15 microseconds is like around 10,000x far away. Yeah, so yeah, it's pretty far away. And the third part of the argument could be looking at the catalysts in the future. So all these AI agents and IoT devices that are going to be the new entities on Internet which are going to do a lot of transactions interactions and at a much higher latency, this demand will be also at least like an order of magnitude higher than what human consumption is. So I think like that demand also especially like AI would need blockchain because yeah it's, we can't really trust OpenAI or any other AI company to make the decisions for us. So considering all these arguments, I think 1 million TPS is not really sufficient at all.
00:37:01.315 - 00:37:24.523, Speaker B: And yeah, it makes sense to use L2s which are not really bounded by any hardware requirements. So you know, the settlement consensus, all of that can be taken care of by a very fast L1, but the execution part can be taken care of by an L2 which can just push the performance to completely next level.
00:37:24.659 - 00:38:16.385, Speaker A: Yeah, no, that all makes a lot of sense. My theory on, so my theory on all of this and has been for the last few years is that I believe that like 80% of the finance will take place on like three to five shared state machines. Okay. But then there's like thousands of other like things that you've kind of talked about here. Right? There's thousands of different things that can use roll ups. And so when people talk about this, this world of like a million roll ups, I actually do mostly agree with that because I think you're going to need roll ups or like maybe co processors or network extensions or whatever you want to design. I think you will need that for a lot.
00:38:16.385 - 00:38:41.983, Speaker A: But I still think that like 80% or so of the actual financial value moving will happen on L1s essentially. Right. And only a select few of them. And this is why I think Solana is still moving in kind of like an optimal architecture from my standpoint. And like they continue to make the L1 scalable. They're continuing to have like this Fire Dancer. Right.
00:38:41.983 - 00:39:00.897, Speaker A: Anza Ansa is trying to make their client as good as Fire Dancer too. Right. I don't think we should kind of discount the Enza team and the engineers there as well. Right. They have some pretty cracked devs that are insanely smart. And so, you know, having Firedancer also is competition. Kind of lights a fire, no pun intended.
00:39:00.897 - 00:39:20.611, Speaker A: Like underneath the other client. Underneath. Under the other client teams as well. Right. And so I just really like this architecture of having the L1 where all the finance lives for outside, you know, perp decks and like other stuff like that. But for the most part you need this shared state. This is where a lot of the finance happens.
00:39:20.611 - 00:39:43.891, Speaker A: This is where a lot of the activity happens. And now you can kind of like add these roll ups on top when you need these specific use cases. Right. And this, when I go back to the Cosmos thing, like this is why I think Solana might back into like winning app chains too in a kind of ironic way is that they didn't go to the end game right away. Right. Like Cosmos might have been. Right.
00:39:43.891 - 00:40:13.315, Speaker A: And seeing the end game was app chains, but they started with app chains. And the path to getting there matters a lot. And so like the more liquidity that Solana L1 continues to amass, like I know PayPal, they're putting a lot of like stable coins on there now. More assets getting launched on Salon. RWAs all this stuff, all the deep end Stuff like, the more liquidity you start getting on the L1. That just makes it again as your developer. It's like a very easy thought process.
00:40:13.315 - 00:40:25.079, Speaker A: Like, I want to go shared state with Solana. I want to be an SVM. Like, I want to be SVM dev, I want shared state. I'm going on L1. Okay, maybe I've outgrown the L1. Maybe I need an L2 for something else. Right.
00:40:25.079 - 00:40:56.685, Speaker A: And you kind of make that decision. I just think that's really clean from like both a development perspective, like a social consensus kind of perspective. And so that's why, yeah, like people will say Solana moving modular is like a pivot. It's not really a pivot if you listen to leadership. They're still laser focused on making the L1 as scalable as possible, right? Yeah. And so it's a super important distinction to me. Let's touch on a few other things here.
00:40:56.685 - 00:41:12.645, Speaker A: I think I want to talk about maybe quickly. I think there's like a couple banks or something that are going to be using the SVM for something. So we don't have to talk about this too much because nobody likes permission chains, but maybe what are they doing there?
00:41:14.505 - 00:42:14.425, Speaker B: Yeah, one of the projects there is kind of building a core for banking operations. So core is essentially just similar to a settlement layer in which a lot of different banks essentially transact between each other and they just settle between each other and the core kind of coordinates between them. So, yeah, there's this team that is building a core which is using the SVM and it's a separate network. And what I've observed is like, the main reason for these financial applications to kind of separate out completely apart from the main chain is the control of validator set. Because for the compliance purposes of these applications, they can't really trust on Validator, which they don't know anything about. So the validator set really needs to be controlled. And that's the reason these financial applications are using this.
00:42:14.425 - 00:42:57.963, Speaker B: And there's another team which is also kind of building a banking kind of an application. It includes like a suite of services. But what's different is like they want some sort of privacy on top of it. So they are adding FHE on top, which would be very difficult to do on the main chain because, yeah, I think it would definitely, you know, kind of interrupt the progress that they are making on the firelance side because, you know, introducing FE would require a lot more hardware. And yeah, for those purposes they are having their own separate chain, adding aphe on top of it also using token extensions. So that's for just the privacy part.
00:42:58.139 - 00:43:20.787, Speaker A: Yeah, that makes sense. There's, you know, when you're building, I know the one thing the Fire Answer team has had to deal with is like Solana keeps adding these new things to the code and then it kind of just keeps delaying Fire Dancer because now they need to kind of incorporate this. And yeah, FHE is like very computationally intensive. Right. And so it doesn't. It makes sense to kind of have this. You want to be.
00:43:20.787 - 00:43:59.775, Speaker A: I think the privacy angle is also really important too because when we think about privacy, most people will think about tornado cash, which is, I think it's sad that that's the thing that comes to people's mind when we talk about privacy. Because in reality, no bank, no institution, not a lot of high net worth people are going to use these rails if they don't have privacy. Right. Like you can't be a business, you can't have all your accounts payable, receivable, just like on chain, who you're paying with everybody to see this. Right. And so yeah, doing this permission environment, which is obviously they're going to have a backdoor, whatever kyc. Right.
00:43:59.775 - 00:44:33.305, Speaker A: I still think those kind of things make sense. Okay, so I think the last thing I want to touch on here is. And then we'll end it is Rome protocol. And the reason I want to kind of talk about Rome protocol is because we talk about, okay, we talk about roll ups and in, you know, Ethereum, you're kind of seeing this now. Everyone's, I mean, ETH price has been really bad, underperforming. And so now, you know, everyone starts doubting the roadmap and doubting all these different things. Right.
00:44:33.305 - 00:44:58.783, Speaker A: And I think a clear takeaway is that roll ups do accrue most of the value to their own sequencers. Right. Or like in the future maybe their own tokens. And not necessarily Ethereum. Right. If you look at, you know, base, it's like they make millions of dollars on sequencing fees and they play and they pay the L1 like 10k over an entire month or something. Right.
00:44:58.783 - 00:45:25.737, Speaker A: And so you've seen this push to like based roll ups, right. Which uses kind of like Ethereum L1 for sequencing. And I think based roll ups make a lot of sense in this. In like the sense that they're. Yes, I think based roll ups if got adoption would be very good for, you know, the value curl of eth. It'd be like definitely a net positive. I think the challenging thing with base roll ups is just getting people to invest in based roll ups.
00:45:25.737 - 00:46:09.239, Speaker A: If what you're investing in is only going to benefit like the ETH token, right? It's kind of like so you're investing in a public good almost and like so maybe the ETH foundation needs to invest in based roll ups. But Rome is using Solana as a shared sequencer. Right. And so this is interesting to me because I think Solana actually has a lot of nice properties. If you think about based roll ups and all this pre confirmation stuff, there's a lot of talk about like making the L1 faster and like single slot finality to kind of support based roll ups. And this is what Solana kind of already is. Right.
00:46:09.239 - 00:46:26.965, Speaker A: And so Solana actually makes a lot of sense as like a sequencer for base roll ups. So maybe, yeah, maybe you want to talk through like some of Roam protocol and kind of what their like philosophy is, like what they're building towards. Because I think they're definitely an interesting one.
00:46:27.665 - 00:47:21.505, Speaker B: Yeah, for sure. I think what Roam's main philosophy is to kind of bring out the modular components from Solana and make them usable for different entities. So sequencer is one of the parts but they're also building a lot of different things like zk. I think they're also building something like ZK compression. They're also building their own DA and an EVM overlay like Neon and I think a fast finality layer. But yeah, obviously the shared sequencer is very, very interesting. So how that works is essentially any rollup that wants to use Solana as a sequencer, they have programs on top of Solana as like their roll up programs and these programs have their own state and which is like identical to the actual roll up state.
00:47:21.505 - 00:48:36.945, Speaker B: And what happens is like let's say there are two or three different rollups. They are sending all these transactions. These transactions basically get converted into Solana transactions and into bundles. So there are entities like, similar to Ethereum has the searches who create these bundles from different rollups and they just bundle a lot of different transactions from different rollups and they get executed on top of Solana and what ends up happening is you get guarantees of atomic execution because essentially the roll up state is the same on Roam as well. So if it gets executed exactly it means that the state is actually valid because it's tracking the same state. There's another entity which ends up processing that on the main rollup. I think the main benefit is having the atomic execution which I think has been one of the Most difficult things that everyone keeps talking about when there is a sequencer involved because I think atomic composability is achievable, but execution is not guaranteed.
00:48:36.945 - 00:49:11.035, Speaker B: There are a couple of other proposals, but I think using Roam makes a lot of sense. The other thing that they do is they are not interested in exactly capturing the mev. So they allow the roll ups to define how the transactions are going to be sequenced and those also get encrypted. What Roam is trying to do is providing a suite of services along with the sequencer and allow the sequencing to be done by the roll up itself. So I think, yeah, it's really interesting in that sense.
00:49:11.115 - 00:49:16.339, Speaker A: That's cool. Are these only like EVM roll ups that it supports?
00:49:16.387 - 00:49:30.165, Speaker B: Yeah, so it's very interesting. It's the SVM roll ups, EVM rollups as well as Solana. So all of them get composability because them can be essentially composed into a single transaction and you know, processed on top of Solana.
00:49:30.285 - 00:49:58.423, Speaker A: Okay, yeah, that's. That's pretty cool. I think we've seen the, I mean we've been talking about shared sequencers for a long time and we still don't have them anywhere. Right. We don't even have like leader rotation, you know, just like set schedule. Let's just rotate it every, you know. So yeah, I think this is definitely an interesting design.
00:49:58.423 - 00:50:28.403, Speaker A: I like how they're using Solana validators. I think that's, I think that's good for Solana. Like my. I just believe that sequencing is really where a lot of the value lies. And so I think if Solana actually becomes, if Solana validators actually start sequencing all these roll ups, I think that's pretty bullish for Solana long term. Yeah. Okay, well that was good.
00:50:28.403 - 00:50:49.781, Speaker A: And yeah, as you said, Roma is doing a lot of other stuff too. I guess we're running up on time here. I think. I got. I just want to ask you one question to kind of end on. This is from Rinko from the research team. He says is there any reason to.
00:50:49.781 - 00:50:58.345, Speaker A: And I think you've kind of answered this throughout the podcast, but is there any reason to believe Solana L2s won't lead to the same issues Ethereum is currently facing?
00:51:00.005 - 00:52:24.153, Speaker B: Yeah, so one of the problems is the composability with the base layer. And I think things like Magic Block, NCK compression kind of address that because these things are more composable and I think if what Magic Block is actually using the program delegation part can be extended to other rollups that would be great because they all would be composable with the base layer then. And the other thing is the sequencing part where the alignment between the L1 and L2 is not there because the sequencing it does is by the own sequencer. So on that front actually, Solana being a very fast L1 actually ends up being very good to forge kind of an alignment between the L2s and the L1. And I think yeah, base sequencing would definitely work better than what Ethereum would have currently. Other than that, I hope that Solana kind of takes note from the chain abstraction stuff on Ethereum to kind of address any kind of fragmentation there would be by the other L2s because I think since it's permissionless, there would inevitably be other L2s which are general purpose on Solana as well. So I think at least they could learn from the approaches used.
00:52:24.289 - 00:52:51.467, Speaker A: Yeah. And I mean even if, you know, Solana keeps building towards this one single state machine and everything, it doesn't mean they could still lose a lot of liquidity to like some Solana roll up kind of like unintentionally. Right. And run into the same problems even if they're not specifically designing for it or whatever. Right. So yeah, I guess that would. But no, I agree like the architecture is definitely a lot different in Solana.
00:52:51.467 - 00:53:41.955, Speaker A: I mean Salona, Ethereum and Celestia, which I would say are like, you know, the three main chain main like L1s that have a place in like the roll up eco. Now they're all very different and kind of like the architectures, you know, Celestia purely da, no execution on it. Solana's got this like very highly scalable like finance chain and actually I saw recently that like SWE is doing data availability sampling too. So that's, that's like if you look at Solana and they got these roll ups, Solon doesn't have Divilby sampling. Right. And so I guess you could see like. Yeah, I think the idea of like having this like shared state, highly scalable roll ups on top kind of makes sense.
00:53:41.955 - 00:54:03.321, Speaker A: Yeah, I mean we'll see. Right, we'll see. Ethereum is obviously the leader in roll ups. Same with I would say Celestia too. We'll see how Eclipse does. We'll see how some of these other ones like Sonic Magic Block and all that do. But yeah, definitely a lot of development going in this area.
00:54:03.321 - 00:54:58.775, Speaker A: I think it is a good reinforcement of there are more developers that are interested in SVM and salon ecosystem. Right. And so even if I think the bullcase people always say with Ethereum it's like okay, even if these roll ups take away a lot of the value cruel from eth well they have these very positive network effects on the EVM and developers. Right. And I do agree with that point and so yeah I guess we're starting to see it here in svm. SVM is by far like the number two vm. I know there's like a bunch of other ones there's like wasm, there's, there's like the MOVM fuel I guess but SVM is definitely number two now and yeah we'll see kind of how this goes but yeah thanks for hopping on doing this pod.
00:54:58.775 - 00:55:19.025, Speaker A: I thought it was it was good if anybody is you know Delphi member feel definitely like go read Swan the modular. We go into Prasad goes into all this stuff and in great detail there. But yeah, thanks for hopping on and kind of given the lowdown on what's going on in Solana roll up land.
00:55:19.645 - 00:55:22.105, Speaker B: Yeah thanks. It was a pleasure talking to you.
00:55:22.805 - 00:55:23.525, Speaker A: All right, take care.
