00:00:01.680 - 00:01:21.694, Speaker A: Okay, let's continue our code walkthrough for this RISC zero foundry template. We have looked at the ZKVM portion of the application which lives in the methods directory. This time let's dive into this contracts directory. So this is the on chain part of your, your application, and the only solidity contract that's here at this stage, if you're just looking at it in the repo online, is this even number contract which references two solidity files which don't exist yet that are going to be constructed along the way. So in total you're going to end up deploying this verifier contract and this even number contract that we're looking at. And the image id here is the cryptographic identifier for the ZKVM guest program that's running inside. So this is referencing the part of the application that's living in the methods directory.
00:01:21.694 - 00:02:45.566, Speaker A: So let's take a look at what this contract here is actually doing. First, we're, this is the address for the verifier contract that we're going to use and the image id for the ZKBM program that we're making a proof about. And we're going to introduce a number which is going to be public and we're going to initially construct the contract to have this number be set to zero. And we're going to have a verifier parameter that's referencing the contract here, the verifier contract and the sort of key ZK part is happening in the set function. If we try to change the value of x in order to do that, we're going to require a proof. And that proof is going to have to pass through the verifier. And that proof or is going to attest to the fact that the number that we're changing it to is also even.
00:02:45.566 - 00:03:16.584, Speaker A: So, you'll always be able to be guaranteed that the contents here are even, because when the contract is constructed, it's set to zero. And for every set moving forward we require that it is proven to be still. Even. So, that's a little orientation to the on chain contract part of your foundry template application. Happy building.
