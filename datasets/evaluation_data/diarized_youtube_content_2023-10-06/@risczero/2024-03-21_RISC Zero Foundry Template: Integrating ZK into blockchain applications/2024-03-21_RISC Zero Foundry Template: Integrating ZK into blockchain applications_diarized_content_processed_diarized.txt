00:00:01.530 - 00:01:29.930, Speaker A: Okay, let's talk about integrating zkvm applications into blockchain applications. So at the core, what you're going to need to do is post proofs on chain and then have them verified on chain. And if you click on this link for integrating your proofs into onchain applications, you'll find your way to our sort of orientation page for blockchain integration. Let me zoom out a little bit so that the sidebar is visible. So yeah, we're in the blockchain integration section of the docs here and this diagram kind of gives you an orientation to the conceptual view of what's going to happen. Assuming that you are using bonsai to generate proofs, you're going to request a proof from Bonsai and Bonsai is going to send the proof back and then that proof is going to get published on chain and then it's going to get verified on chain. So that's the sort of conceptual frame here we provide this verifier and in our foundry template you can find starting points for the onchain app contract and what we call the publisher app here.
00:01:29.930 - 00:02:49.630, Speaker A: So I'll click into the foundry template and zoom in a smidge and I'm going to sort of speed through this. This is similar information to what's on the other page with a little bit more granular detail into different parts of the repo here. So quickly at the directory organization level there is a contracts folder which includes the relevant solidity contracts, and a methods folder which includes the relevant zkvm application. So inside this methods folder you'll find the guest code. The guest code for this example is even you can learn more about writing guest code with this guest code 101 file. So that's my initial orientation here. There's probably more details that I should orient to, but the initial places I'll point you to is this contracts folder contains the solidity stuff.
00:02:49.630 - 00:02:52.540, Speaker A: This methods folder contains the ZkVM stuff.
