00:00:01.930 - 00:00:05.946, Speaker A: Okay, let's talk about options for generating proofs.
00:00:06.138 - 00:00:09.054, Speaker B: So you've written a zkvm application and.
00:00:09.092 - 00:00:20.510, Speaker A: You'Re ready to start generating proofs. Hopefully while you were developing, you were using dev mode so that you didn't have to wait for the proof generation.
00:00:21.250 - 00:00:23.166, Speaker B: But now that you are ready to.
00:00:23.188 - 00:00:25.030, Speaker A: Generate proofs, you need to make a.
00:00:25.060 - 00:00:27.126, Speaker B: Choice between whether you are wanting to.
00:00:27.148 - 00:00:37.640, Speaker A: Generate proofs locally on your own machine, or whether you would like to request that we generate proofs for you using bonsai and send the proofs back.
00:00:38.670 - 00:00:42.650, Speaker B: So the advantage of using bonsai is.
00:00:42.720 - 00:01:12.770, Speaker A: That it's highly parallelized. So this means that the proofs are going to be substantially faster than they are on your own machine. Recall that if you have a large computation when we're proving it, we're going to split it into a bunch of segments, and when using bonsai, each of those segment proofs is going to be generated in parallel. Whereas if you're using your own machine, each of those segment proofs is going to just be proven one by one sequentially.
00:01:14.310 - 00:01:20.134, Speaker B: So again, the advantage of remote proving is it's substantially faster as well.
00:01:20.172 - 00:02:38.270, Speaker A: As you don't need to worry about the liveness of your hardware and the demand spikes of your application, we will have bonsai available to manage dynamic spikes in demand. The main reason to consider generating proofs locally is if your inputs are highly sensitive information. In particular, it's important to note that although the output of the ZKVM is a fully zero knowledge proof, whoever is generating the proofs can see all of the innards of the system. So if you aren't willing to have your secrets leave your own machine, then you'll want to generate your proofs locally on your own machine. Once you generate those proofs, they can be distributed with full confidence about the privacy of the information. It's a fully zero knowledge proof that comes out of the ZKVM whether it's generated locally or remotely. So those are your options for proof generation.
00:02:38.270 - 00:03:13.780, Speaker A: I will note on the local proving there are options to run on CPU and GPU. It looks like they're not documented on this page. But if you go to the main repo and you go to the feature flags on the main repo, then there is the flags for Cuda and for metal are listed here. So those are your options for proof generation. Happy building.
