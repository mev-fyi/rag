00:00:00.330 - 00:00:08.318, Speaker A: Welcome back to the show, as always. My name is Mikhail, and I am with Daniel, security expert. Welcome back, Daniel. How are you?
00:00:08.484 - 00:00:13.614, Speaker B: I'm all right. Happy to be back. Yeah, let's get this thing going.
00:00:13.732 - 00:00:52.080, Speaker A: Yeah. First episode was pretty fun, talking about Ledger, metamask, and all the different risks associated with those wallets. It was a good conversation. This time around, there's a few other pieces of news that are hitting the. I want to start with the Hong Kong police. Hong Kong has been making a lot of noise lately in terms of crypto in general, and now they're looking to crack down on metaverse, but they're doing it by launching their own metaverse. Isn't that contradictory? I'm not really sure I understand the concept here.
00:00:53.970 - 00:01:19.960, Speaker B: I don't either. I guess all I can say is I think I should give props to the police, because it seems like they went through a lot of trouble to try to help educate people on blockchain security. They actually launched their own metaverse. I admit I haven't played with it or anything. I haven't gone into the metaverse to see how nice it.
00:01:22.010 - 00:02:20.310, Speaker A: Mean for some context. Let me share this with you, Daniel. So the Hong Kong Police force has launched cyber Defender, which is a metaverse platform to raise awareness around technology crime prevention. They aim to educate the public about potential risks in the metaverse as crimes in cyberspace can also occur there. The platform will be used for public educational initiatives, particularly targeting the younger generation. Due to an increase in the virtual asset crime in Hong Kong, the focus is on preventing technology crimes and raising awareness around advancements in information technology. So that's kind of like the summary around it, but, yeah, I don't know the details in terms of how they're planning on fighting cybercrime with a metaverse that could potentially have its own vulnerabilities.
00:02:20.310 - 00:02:35.610, Speaker A: I imagine just like everybody else, they most likely have to go through the same security measures. Right? Potentially have a third party auditor to conduct a security analysis of their protocol.
00:02:37.070 - 00:03:08.470, Speaker B: Yeah, I imagine so too. I feel like this is one of those things where because obviously this didn't happen overnight. It took them time to make this their government. Right? So they're like, uber slow. So I wonder if it's like they came up with this and funded it at the height of the bull market, and then they just started doing it, and then everything crashed, and then people stopped going to the metaverse and stuff, but they were already in it. And somehow this project survived and didn't just get unfunded in the middle of production. So they got it out.
00:03:08.470 - 00:03:32.480, Speaker B: I mean, that's my guess how it all went down, just having worked in the government and knowing how inefficient they are and slow. But hey, I'm happy. I think any products that go out that educate the public about the dangers of blockchain at this early stage in its, I guess, adoption, I'm for it. As hokey as it sounds, I think it's great.
00:03:33.030 - 00:04:19.120, Speaker A: Yeah. We're starting to see more and more government agencies utilize blockchain technology, right. Even in San Jose, California, here in the states where the regulatory aspect of blockchain technology is extremely strict, San Jose is looking at leveraging blockchain technology for the voting system. So we're seeing blockchain technology trickle into these government agencies. And so when people are asking, well, is blockchain, is it here to stay? I think the answer is, I mean, we're seeing it internationally where the adoption might be a little bit more advanced, but we're also seeing it domestically in terms of here in the United States.
00:04:19.570 - 00:04:51.162, Speaker B: Yeah, no, there's definitely interest there, right. There's remnants of interest from the peak of the bull market. And I think now there's still a lot of development that has continued even as the markets crashed. And it's typically the good projects that continue, right, because they've got a future and not these like ponzies. So it's cool. I think for me, the part that's fuzzy is whether or not these things are going to work. I think if they work, we rock it to the moon, right.
00:04:51.162 - 00:05:12.570, Speaker B: But I think the jury is still out on whether or not these sort of services can effectively utilize blockchain. I think if it turns out that they can, you're going to see a pretty strong adoption of the technology. But I think if it fails, then I'm not sure after that.
00:05:12.740 - 00:05:42.854, Speaker A: Yeah, well, only time will tell. But there's something else that's been trending lately, and that's what's happening with bitcoin and ordinals. So there's an article that came out. I'll give you the summary. So. BRC 721 is an innovative protocol on the bitcoin network that revolutionizes the management of digital collections. It offers a secure and standardized platform for creating and managing digital collectibles.
00:05:42.854 - 00:06:54.530, Speaker A: The protocol aims to address the fragmented and insecure methods of handling digital collections, providing trust and fostering growth in the ecosystem. BRC 721 provides a playground for hands on learning and offers future innovations through its API for developers to build applications. The protocol seeks to make bitcoin ordinals more accessible and drive the expansion of the digital collectibles ecosystem. So this begs the question, is this just creating issues on the bitcoin network in terms of congestion? A lot of maxis will argue that this is really bad for the network. And then you have people like Michael Saylor that says, hey, this is actually really good because it shows that we are continuously advancing our capabilities. And now you have these scaling solutions that can help the bitcoin network essentially be faster. What are your thoughts on both sides of the conversation?
00:06:56.150 - 00:07:53.806, Speaker B: I don't know. My thoughts are like, personally, I'm kind of neutral about it, but I do think it's funny because a lot of people who are bitcoin Maxis love the simplicity of bitcoin. And they talk about like, oh, you just can't change it. And all it is is a token. There's limited supply and it's great. And then I think what they're seeing is like, it might not end up as simple as they thought, because first of all, the community can still update their mining clients and you can still see updates to the protocol to make it more complex, like having things like Lightning Network tacked onto it and stuff. And now you're seeing people take a page out of a world I know very well, which is the hacker playbook, evil hackers, right? Where you basically just take any empty space inside of a messaging protocol and you stuff bits in it and you give it semantics.
00:07:53.806 - 00:08:35.810, Speaker B: That's what it is. And they're trying to standardize it, which is kind of funny. That's how ordinals began, right? They just took empty space on certain messages in the blockchain and they were like, I'm just going to add semantics to it and stuff bits in it and you can't tell me what these bits mean. 1011 means this. And so, yes, there's more traffic. And I think there's going to be an interesting fight, because for a long time, bitcoin didn't like smart contracts. But now if you start putting weird bits in it, you've got what essentially turns out to be a very inefficient smart contract if everyone buys in and buys into the semantics of it.
00:08:35.810 - 00:09:15.994, Speaker B: And so I think bitcoin is going to have to make a choice. That community is going to either need to change their protocol to be more friendly towards it. And now you're going to introduce all of the complexities and security issues that you've seen on other chains that have smart contract functionality or they're going to have to go the other way and be like, you know what? I'm going to exorcise this from the protocol, and we're going to tighten up. And these bits won't even, this scratch space won't even be available. Whether they can do that or not, that's the other extreme. And I don't know which way they're going to go, but it's kind of funny to see, just to watch, there's.
00:09:16.042 - 00:09:57.994, Speaker A: Two things that I'm thinking about, and this may be way out there, and that's why talking to you is really important. And I don't know if you know the answer to this, but as we're discovering all of these new capabilities of bitcoin, are we going to reach a point where we don't need the other networks? Could we potentially reach that point where bitcoin can do everything that Ethereum is doing or everything else that's happening in, say, Cosmos? Can we ever reach that point, you think? From a technical perspective, I think it.
00:09:58.032 - 00:10:41.994, Speaker B: Is one of many possible worlds, but for that to happen, bitcoin would need to really sell out. I mean, those Maxis and their whole simple protocol thing, that's going to sell out. And if bitcoin becomes the thing, it's not going to look anything like the bitcoin protocol we have now, where it's just simple tokens and simple transactions. I mean, it already kind of doesn't. And they're getting to the point where now they're adding like, a PTP layer on top of it to increase the performance. Now you're going to add, like, BRC 20 and BRC 721 to scratch space and messages. If they take over, they're really going to need to change a lot.
00:10:41.994 - 00:11:00.960, Speaker B: And what you're going to end up seeing is maybe merges. People will just be like, all right, well, since bitcoin basically looks like Ethereum now, why don't we just merge the two efforts and have one chain, one giant chain? Honestly, I don't think it's going to happen, but you never know.
00:11:02.470 - 00:11:36.538, Speaker A: Yeah. The other part that is concerning is, as we add all of these new elements, can it open us up to more vulnerabilities? Right. Because as you mentioned, at the end of the day, some of these things are running on a smart contract, which has its own limitations, and so they also need to be audited. And will those limitations and vulnerabilities, could they actually have an impact on the bitcoin network? I don't know. I don't know the answer to that.
00:11:36.624 - 00:11:48.240, Speaker B: Yes, they will. I mean, if somebody can create a collection, that person can rug pull the collection. There could be problems with the way they implement it. I mean, all of those same problems are going to come to light.
00:11:48.690 - 00:12:27.350, Speaker A: Yeah. Moving on. Speaking about vulnerabilities and exploits, there's one that we just had recently, Jimbo's protocol, which I believe was on arbitrum. And so on May 27, 2023, the Jimbo's protocol was exploited, resulting in a loss of 7.5 million USD. The vulnerability originates from the absence of a slippage control mechanism in one of the functions which moves a substantial amount of liquidity in the pool. Consequently, this function can be exploited by an attacker to siphon tokens off liquidity providers.
00:12:27.350 - 00:13:12.330, Speaker A: The total profit was around 7.5 million worth of assets. The attacker bridged these assets to Ethereum network and then transferred them to an address. Now, from what I saw, Jimbo's protocol came back and they offered 10% of the stolen amount, which I don't know if there was an update on that, but that's the last thing I heard, that they offered a 10% reward, otherwise they'll start getting the authorities involved. So my question to you is, well, how much confidence should this attacker have in not being traced? That's the first question, right? How easy is it to determine the hacker?
00:13:13.550 - 00:14:04.634, Speaker B: I haven't looked at the details yet, but how easy it is depends on how amateur the hacker was, right? If the hacker made mistakes, then yes. Okay, the hacker is going to be traced back to a central exchange. They're going to subpoena them for a kyc, especially if the central exchange complies with the US government or whatever government's chasing them. They could have made some silly mistakes, like had an ens name that matched a Twitter handle. And people do amateur stuff like that sometimes. Now, the majority of these hackers are pretty much the real deal, and they don't do stuff like that, but I think there is a value to being able to sleep at night. And so if you can keep 10% of 7.5
00:14:04.634 - 00:14:48.370, Speaker B: million, depending on where this person lives, it could change their lives. Right? And it might be worth it just to know that they don't have to have the worry that they'll be somehow caught one day. So I think it's been proven to be an effective method of getting their money, people's money back sometimes. It's kind of similar to paying off the ransom in ransomware attacks, right? Yeah, I don't know. I don't have much to say about this, except this was a classic crypto attack. You see this all the time. Someone finds a vulnerability in the swap rate in a liquidity pool.
00:14:48.370 - 00:14:58.826, Speaker B: Not to get super technical, unless people want me to. And I guess we'll find out. If people comment and say this is like way too high level, we'll get deep down. If they say it's way too technical, I'll get even higher than this.
00:14:58.848 - 00:15:03.350, Speaker A: But at least right now I'm sure there's people that will really enjoy it.
00:15:03.440 - 00:15:55.594, Speaker B: Okay, well, I don't know. All we're going to say is, yes, there was a problem where you could manipulate the exchange rate for jimbo tokens in a liquidity pool. Somebody recognized it, did a flash loan, bought a bunch of jimbo tokens, messed with the exploit, changed the exchange rate, cashed in on ETH, and then put their ETH and then just ran away with their ETH. Right. So I just think that to me, this is such a classic attack, and it shows us where we are in the world of cybersecurity today in web three, which is you've got some hardening services like audits that try to prevent a contract from having exploits or vulnerabilities that could be exploited. Sometimes people don't do audits or for whatever reason, these vulnerabilities still show up. Maybe configuration errors, maybe there was a missed vulnerability.
00:15:55.594 - 00:16:18.274, Speaker B: In an audit, they get hacked and there is no prevention. No prevention, no way to fight an attack when an attack is happening. Pretty much no way for these smart contracts. And so you just end up in this situation where the only recourse is incident response. Meaning this is after the money stolen. My money's gone. What can I do? Maybe I offer you some reward.
00:16:18.274 - 00:16:59.122, Speaker B: Take the hit, reduce my losses. Maybe I call a detective, and that's all we can do. And I don't think it's good enough. I actually think that we do need some kind of prevention service in web three. By prevention, I mean when an attacker is attacking you and trying to exploit a vulnerability that they found, you have some way to fight back. And there just hasn't been a strong service in that area of security yet. In Web three, you have a lot of things like AI based antivirus, endpoint detection products in Web two, but nothing like that in web three.
00:16:59.122 - 00:17:03.554, Speaker B: And this is just another incident that highlights that fact.
00:17:03.752 - 00:17:39.534, Speaker A: Well, I think from what I'm seeing, I don't think they even had a general security audit. So I could be wrong, but I'm not seeing anything about them. Even having an audit, which obviously having a security audit doesn't necessarily, it's not a foolproof way. We've already kind of touched on that. You mentioned that before in the past conversations. But yeah, I think the first step is to at least have an analysis of the smart contracts and then beyond that. Right.
00:17:39.534 - 00:18:07.590, Speaker A: Because exploiters, they don't have a preference. Right. They can either enter through the front end or the back end. So it doesn't have to be necessarily the smart contracts where they find those exploits. Right. They just happen to be the most common areas. It doesn't look like they even had an audit, which I think is just a message to the other projects out there that first and foremost get an audit.
00:18:07.590 - 00:18:18.760, Speaker A: And from there, there's obviously other things that projects can do to ensure safety. But that would be the first step.
00:18:19.130 - 00:18:32.030, Speaker B: I'd agree. I would agree. I mean, if you're going to handle people's money, I think you should have to have one. I think that's true in the tradfi world too. Right. Not all code in web two gets audited, obviously. Right.
00:18:32.030 - 00:19:18.880, Speaker B: I don't think every piece of software that's coming out of Microsoft is getting a third party audit. But if you're working with money, I have a feeling like banking software and stuff like that, they do get audits, whether voluntarily or maybe even by regulation. I'm not a lawyer, so I don't know the rules, but yeah, I definitely think that if you're handling people's money, you have just a moral obligation probably to do your due diligence as a service provider and get that audit. Maybe it costs you a bit, but you're handling people's money and you want them to trust you as a moral serviceman, as a moral business, you should have all the security that you can in place.
00:19:19.250 - 00:19:46.962, Speaker A: And also to the user, this is a learning lesson. Before interacting with any smart contract, just do your research. Make sure that they've been audited. Make sure that the smart contract that you're going to be interacting with has been audited. Right. Because time and time again, we see a lot of these protocols. They may have an audit in place, but not everything is within that scope.
00:19:46.962 - 00:19:57.290, Speaker A: Right. And so just because there's a specific reputable auditor associated with a specific protocol, that doesn't necessarily mean that it's trusted.
00:19:59.070 - 00:20:16.420, Speaker B: Yeah, I partially agree. I think it's true. I do agree that people need to do their own research. But actually, and we're going to touch upon this in the next story. I think our last story we're covering. I think there is a limit to what do your own research can do for a user at this point in the game.
00:20:18.230 - 00:20:26.094, Speaker A: Yeah. And to segue into the next story, there's a new crypto mixer, promises to be tornado cash without the crime.
00:20:26.142 - 00:20:57.034, Speaker B: Not a new mixer. No, it's not a new mixer. It actually was tornado cash. So there was a story on Tornado cash recently because their Dow got hacked. Right. And the way it was hacked was actually quite technically elegant. The hacker basically took advantage of a real quirk in the way that Ethereum works, their smart contracts work, and when contracts make contracts.
00:20:57.034 - 00:21:48.814, Speaker B: And again, I'm choosing how deep in the weeds we want to go here, but let's just try this. When contracts create contracts, there's a way to do it where the address that the new contract is deployed at is deterministic. So you can predict what address like this new contract is going to be at. And as long as the parameters of the contract creation doesn't change, it always gets deployed at that address. And part of the parameters is a nonce. Another thing is assault, but the important thing is a nonce. And so what happened was the attacker was able to create a contract that the Dow sort of approved to follow, and then he was able to self destruct that contract so that it was like empty space again.
00:21:48.814 - 00:22:20.140, Speaker B: Because if you don't self destruct the contract, you can't recreate it. When you self destruct the contract, you reset the nonce. So then you can redeploy your contract and then do a bunch of transactions to get the nonce right. Nonce is basically a counter for which transaction you've done. If you've done 50 transactions, your nonce is 50. When you get the nonce value right, you can then deploy a contract with that contract and have it end up in the exact same place. And so that's what he did to kind of update the code.
00:22:20.140 - 00:22:58.974, Speaker B: And in that updated code, he gave himself a bunch of addresses. He controlled 10,000 torn tokens. And because the Dow went with one token, one vote, he made enough addresses and registered them where he had more votes than the, I think, 700K. Legitimate users out there. Legitimate votes out there. So he essentially, just by himself, could control any type of anything. He could pass anything he wanted, the Dow, which includes like, oh, I can just have a lot of money get siphoned over to my addresses and blah, blah, blah, blah, blah.
00:22:58.974 - 00:23:39.666, Speaker B: Right? So then that's the story. And then the weird thing about that story, I think, and that's where I left off, and I haven't looked at it for like a day or two, is the guy dumped a bunch of torn token and cashed in on some ETH and then put it into tornado cash, which is funny, but he also then made a new proposal to reset the damage that he had done. He was like, okay, what I'm going to propose now is that all that 10,000 tokens I stole and all these accounts I controlled, we'll reset those back to zero just to be a nice guy. He didn't talk about why. He didn't go into why or they, he or she, I don't know who. Right. The hacker didn't talk about why.
00:23:39.666 - 00:24:25.330, Speaker B: Maybe they didn't care or I don't know what it was. But, like, funny, intriguing story. That's about the summary of it. I think my comments on it is just that this is what I meant when I kind of said, do your own research. Only takes you so far, because it's like, how could anyone be expected to understand these nuances of these contracts? I mean, there's no way a user would be like, oh, yeah, that dow ain't going to work because you got to self destruct in it, and then you're using a certain opcode create to create the thing. And then there's this whole deterministic nature of where contracts get deployed. And if you self destruct, you can then play with the nonce and control that.
00:24:25.330 - 00:25:16.482, Speaker B: It's like. I feel like there needs to be a lot less of these engineering quirks that are exposed to the user side. Elegant engineering. In elegant engineering, users think of the product as magic. They don't have to know about all these weird engineering quirks and tweak them around, right? And in bad engineering, well, not bad, but just kind of like less elegant engineering, a lot of those little wires are exposed to the user, and I think in web three right now, a lot of these wires are exposed to the user where it's like there just isn't enough smoothness in all of it. There's so many quirks in the protocol that the users can't do their own research unless they were, like, doing this full time and didn't have a life. There aren't that many people like that.
00:25:16.482 - 00:25:28.470, Speaker B: If you want retail adoption, you've got to mature the protocol to not have these type of quirks become something the users need to know about to keep themselves safe.
00:25:29.610 - 00:26:03.700, Speaker A: It also makes me wonder if large part of there are certainly white hackers, right? But I'm not really referring to them. I'm referring to people that are looking for exploits outside of specific programs. Right. Do a lot of them have good intentions? And they're not even necessarily doing it for the money aspect. They just want to be able to say, like, hey, I was able to find an exploit here. I was able to take advantage of this code base.
00:26:07.270 - 00:26:36.060, Speaker B: Well, obviously the black hat hackers, they don't reveal who they are. So it's hard to figure out the ratio of white hats to black hats. But I will say that there are a lot of white hat hackers. And you see this because of. Well, I don't even want to say that. I guess you could just say this. This is probably a bit philosophical, but it's a cost benefit analysis for people.
00:26:36.060 - 00:27:06.034, Speaker B: And there is definitely a cost to having to run away from authorities. And there's definitely a benefit from being able to sleep at night. Right. So there's a few benefits to reporting a hack. One is you might get a bug bounty if there's a bug bounty program. And two is you can get sort of famous, especially if a CVE is tied to you. Like basically a finding is tied to you, and that looks really good on a resume.
00:27:06.034 - 00:28:00.578, Speaker B: And you can get a job, you can parlay that into a job, or you can parlay that into an independent consulting service. Right. I guess if that economic construct is in place, then a lot of black hats become white hats because they'd rather sleep at night and work for a Fortune 500 company or collect those fat bug bounty checks, right. Than be a criminal. But if the money is right, I think everybody's got a lot of people have a breaking point. And if you're choosing between $6 billion and maybe somebody coming after you or like a $5 bug bounty, or maybe no money and just some recognition, you might choose the 6 billion. It's just human nature.
00:28:00.674 - 00:28:14.570, Speaker A: Do you think we could reach a point where there is enough of an incentive? Can it happen, web three? Because I don't think it's happened yet in the traditional cybersecurity world. That's why I'm asking if it can happen in Web three.
00:28:14.720 - 00:29:13.946, Speaker B: I would beg to differ. I actually think it's the reverse. And we can disagree on this. I actually think that in the traditional cybersecurity world, there is a large incentive for people. In fact, I think bug bounties have been getting bigger, and it's because a lot of these companies are seeing the effects of bug bounty, the positive effects of bug bounty, and so they're offering greater rewards and so you're actually seeing, with greater rewards, more reports happening. Obviously, if you can make $500,000 legally, why make it illegally? And also, the other benefit of the traditional cybersecurity world in Web two is that when you exploit a piece of software in web two, there's a limit to how much money you can get out of it. What could you do, really, if you hacked Facebook and you were able to hack someone's Facebook account, what could you really do with it? Sell it for $0.10
00:29:13.946 - 00:29:52.442, Speaker B: in the black market or mess with somebody's life for a second before they find out and change their password? There's not much to do with it. You'd rather go and probably sell it back to the company and make some money because it's hard to monetize. Web three, on the other hand, is easy to monetize because we've created this whole thing where tokens are worth something and you can just swap them on an exchange. So there's way more money to be an evil person than there is to be a good guy. And I think bug bounties are springing up in web three. And the problem, though, is you've got to get the money. Right.
00:29:52.442 - 00:30:10.560, Speaker B: Where in web two, there isn't a lot of money to be made in hacking some obscure pieces of software or services, maybe a little. But in web three, you can make hundreds of millions. We've seen. Right, we've seen hundreds of millions. That's a hard amount of money to compete against.
00:30:11.330 - 00:30:38.882, Speaker A: Yeah. I think in Web three, it's outside of the monetary aspect, there's really not much of an incentive. Right. But in the traditional cybersecurity world, there's a lot of incentives outside of the monetary. Right. Getting access to certain information if it's especially a different government. So there's a lot of different variables that come into play into all the incentives to find an exploit.
00:30:38.882 - 00:31:21.480, Speaker A: But, yeah, I do like the fact that in web three we are seeing more bug bounties in place, which is, I don't know if this is because we're in the quote unquote bear market and there's just more people that are serious about their security or in general, people are starting to see the importance, and it's just a maturing industry. Right. The same way you would have it in the traditional web two world. Now people are starting to incorporate those same characteristics in web three. So I don't know if it's just we're right now left with people that are serious about building for the most part or just in general? The industry is evolving and.
00:31:23.610 - 00:31:49.310, Speaker B: Yeah, if I had a guess, I would say it's the latter. I think bug bounties are at least at the moment. The general sentiment is that they're pretty effective. You even see the Pentagon doing it every quarter or every half a year. Now they have hacked the Pentagon, so I think a lot of people are seeing benefit to it. So Web three is just jumping on that train, which is a good thing, I think. I like it.
00:31:49.460 - 00:31:57.358, Speaker A: That'll be one crazy crypto conference. Pentagon hosted. ETH Pentagon.
00:31:57.534 - 00:32:13.640, Speaker B: Yeah, that might happen sooner than you think. I don't know. The government's always like a couple of years behind when it comes to cloud tech, so I think they're just probably about to start adopting blockchain right about now.
00:32:14.490 - 00:32:27.274, Speaker A: Yeah, we don't know what's going on behind the scenes, but as always, Daniel, it's always a pleasure to cover these stories with you. Thanks for your two cent, and until next week, we'll do it again.
00:32:27.472 - 00:32:28.858, Speaker B: Awesome, cool.
00:32:29.024 - 00:32:33.520, Speaker A: Where can people follow along and ask you for some questions?
00:32:34.050 - 00:32:39.050, Speaker B: Yeah, we'll see if this was too technical or not technical enough. I'm really curious.
00:32:39.210 - 00:32:43.470, Speaker A: Yeah, what's your handle on Twitter?
00:32:43.970 - 00:32:49.054, Speaker B: It's genster one one two. Jenster one one two.
00:32:49.172 - 00:32:56.946, Speaker A: Perfect. Yeah, be sure to follow Daniel. Dm him, ask him any questions. And yeah, until next time. Thanks a lot, Daniel.
00:32:57.058 - 00:32:57.540, Speaker B: See you guys.
