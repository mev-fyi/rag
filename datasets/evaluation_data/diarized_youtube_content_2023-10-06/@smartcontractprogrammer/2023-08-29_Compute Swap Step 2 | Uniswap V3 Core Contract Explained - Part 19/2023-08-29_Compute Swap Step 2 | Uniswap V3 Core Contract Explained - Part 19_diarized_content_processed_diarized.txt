00:00:00.250 - 00:00:24.542, Speaker A: In this video, we'll finish up the function. Compute swap step. So if I scroll down all the way down, then we wrote our code all the way up until here. To complete this function, we'll write some code to calculate the fees on a mountain. Now to do that, I'm gonna go to swapmap sol inside unisoft b three pool contract. And here is the code. So what I'm gonna do is I'm gonna explain how this code works.
00:00:24.542 - 00:00:55.418, Speaker A: And then we also write it inside our cram contract. Fee on swap is taken out from token that comes in. And there are two cases. If this swap step does not reach the square root ratio target, then fee amount is taken out from amount remaining. Otherwise, if this swap step pushes the current square root ratio all the way to the target, then the swap fee is calculated in a different way. And here's the code and I'll write some comment for how the fee is calculated. So the fee is equal to mountain.
00:00:55.418 - 00:01:49.438, Speaker A: This is the amount in needed for this swap step multiplied by the fee percentage. We'll call it f and then it's dividing this by one minus the fee percentage, one e six minus the fee percentage. Where does this math come from? And why is the fee calculated in this way? So in this video, I'll explain how to derive this equation. Okay, so let's go back to our swap math contract and then write our code inside here. So the easy case is when the swap is an exact n and the current square root ratio does not reach the square root ratio target. So say if exact n and square root ratio next x 96 did not reach the target, is not equal to square root racial target x 96 then the fee is taken out from amount remaining. So say fee amount is equal to.
00:01:49.438 - 00:02:33.062, Speaker A: We will cast amount remaining to un u int 256 amount remaining. And then from this we subtract amount in. Amount in is the exact amount that needs to come in and amount remaining is something greater than amount in and the difference will be the fee else. So how will we calculate fee amount in this case? So inside here we have the situation not exact in or square root ratio next is equal to target. One of this condition is false. It's either not exact in or it is exact in and the square root ratio next is equal to the target. In this case, how will we calculate fee amount? To calculate fee amount, let's do some math.
00:02:33.062 - 00:03:11.414, Speaker A: Let's say that a is the amount in, f is the fee pips, and we'll say that x is equal to amount in needed to put amount in plus some kind of fee. And since the fee is charged on amount in, the amount of fee will be equal to x times f. And this fee over here is equal to this fee amount. So if you can solve for x, then we know what fee amount is. Well, from the definition of x, we know that x is equal to amount in plus some kind of phi, a plus phi. And we also know by definition that this phi will be equal to x times f. So x is equal to a plus x times f.
00:03:11.414 - 00:03:37.218, Speaker A: We can bring this x times f to the left side and we get x times one minus f is equal to a. And now we can solve for x. X will be equal to a divided by one minus f. Okay, so now we're ready to calculate the phi. Phi is equal to x times f, as mentioned over here. And what is this equal to? Well, we know that x is equal to a divided by one minus f that you see over here. So this is x.
00:03:37.218 - 00:04:05.874, Speaker A: And to this we need to times it by f. So we get this expression for the phi, phi will be equal to a divided by one minus f times F. Now, if you go back to the unison b three pool contract, and this is the exact same equation that you see over here. So let's now write the fee amount. So we'll use full math. More div rounding up amount in. And then we need to multiply this by fee pips.
00:04:05.874 - 00:04:28.860, Speaker A: Fee pips. And then divide this by one minus fee pips. And that completes the calculation for fee on swaps. Let's try compiling the contract inside my terminal. I'll type forge build. Okay, and our contract compiled. So that completes the code for compute swap step.
