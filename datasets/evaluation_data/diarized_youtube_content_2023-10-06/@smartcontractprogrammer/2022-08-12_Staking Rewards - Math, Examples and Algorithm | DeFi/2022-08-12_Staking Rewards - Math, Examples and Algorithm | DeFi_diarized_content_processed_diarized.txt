00:00:00.250 - 00:00:33.558, Speaker A: Synthetic's staking rewards contract is one of the most influential contracts in Defi. So in this video, I'll explain what it is and the math behind it. And later on we'll write some code. So first of all, what is it? The staking rewards contract is a contract where you earn rewards for staking, a token. Let's say that there is a staking rewards contract. The owner of this contract will be able to set the rewards and the duration, the amount of reward to pay and the duration that they're going to be paying. For example, let's say that this owner sets 1000 rewards that are to be paid out for the duration of one week.
00:00:33.558 - 00:01:12.830, Speaker A: So the owner sets the rewards and sets duration and sending the 1000 rewards. Once the owner sets the rewards and the duration, the users will be able to stake their token and start earning the rewards. For example, let's say that the user stakes 200 tokens into this contract. Besides this user, there are many users that have already staked their tokens inside this contract. So for this example, we'll say that the total amount of tokens that are staked is 2000 tokens. One week later, this user withdraws all of his tokens that he staked 200 tokens so he will get the 200 tokens back. And let's now calculate how many rewards this user has earned.
00:01:12.830 - 00:02:00.542, Speaker A: This user staked 200 tokens out of the total of 2000 tokens that were there. The amount of reward tokens that is being paid out is 1000 tokens per week and this user has staked it for one week. So we multiply this by one week. So this will be equal to 200 divided by 2000 is one over ten times that by 1000, that will be 100 per week, times it by one week and we get 100 rewards earned. So this was an overview of how the staking rewards contract worked. The owner of the contract sets the rewards and the duration, and then sends the rewards token into the staking rewards contract. The users stake their token and over time the users will earn the reward tokens.
00:02:00.542 - 00:02:36.798, Speaker A: In the previous video, we looked at a simple example of how much rewards a user would earn. In this video, I'm going to explain the two math equations that describe the amount of rewards that a user earns for staking. Let's start with some definition. I'll define a function named r that calculates the amount of rewards that was earned by a user. It takes in three inputs, uk and n and it calculates the rewards earned by user u from the time k to n and both k and n are in seconds. Next, I'll define some variables. I'll say s, sub I is equal to the amount staked by user u at time equals I.
00:02:36.798 - 00:03:26.350, Speaker A: T of I is the total staked at time equals I, and here we'll assume that t of I is always greater than zero and r is the reward rate per second. This will be the total rewards that is being paid out, divided by the duration in seconds. With these variables defined, we can now write the equation for the function r that calculates the amount of rewards earned by the user. This will be equal to the sum from I equals k to n minus one s, sub I divided by t of I. Multiply the reward rate r. What is this equation doing here? Well, for each second from I equals k all the way up to n minus one, we are calculating the percentage of token that is staked by this user s. Sub I is the amount of tokens that is staked by this user, and t of I is the total amount of tokens staked by all of the user at times t equals I.
00:03:26.350 - 00:04:09.594, Speaker A: We multiply this percentage by reward rate per second. This term here s, sub I divided by t of I times r will give us the amount of rewards earned by this user in 1 second, and we sum this up for the duration from seconds I equals k to n minus one. And that is how we calculate the amounts of rewards earned by the user u from seconds k to n. However, if you were to translate this equation into solidity code, since it's running a for loop, there's a chance that it uses up too much gas. Luckily, there's another way to write the same equation that will use less gas. So let me show you how to write this equation in another way, and that will be the equation that is used inside the staking contract. Consider the case where s, sub I.
00:04:09.594 - 00:05:13.770, Speaker A: Remember that s, sub I is the amount of staked by user u at time equals I is a constant s from times t equals k to n minus one. In this case, we can simplify this equation. Assuming that s, sub I is a constant from I equals k to n minus one, we can pull out this s, sub I out of this summation and we get this equation over here. The rewards earned by user u from times k to n will be equal to s is the constant that we pulled out from the right of this summation, and we get s times the summation from I equals k to n minus one multiplied by the reward rate r divided by the total state that time equals I. Let's simplify this equation one more step. Notice that summing from I equals k to all the way up to n minus one is the same as summing from I equals zero all the way up to n minus one, and then subtracting the terms all the way from I equals zero to k minus one. And this is the final equation that is being used by the staking contract to calculate the amount of rewards earned by the user inside the staking contract.
00:05:13.770 - 00:05:56.234, Speaker A: This part is stored in a variable called reward per token. Every time our reward rate per second, or the total amount staked, changes, this will be updated. This value on the right will be stored in a mapping called user reward per token paid. This value will be stored for each user and anytime a user deposits or withdrawal this value will be updated. By keeping track of these two values, the staking contract will be able to efficiently compute the amount of rewards earned by the user. In the next video, we'll go through some examples of calculating how much rewards users have earned using this formula over here. Let's go through an example of how many rewards a user earns by using this equation.
00:05:56.234 - 00:06:33.574, Speaker A: For this example, we'll say that Alice stakes 100 tokens for 3 seconds. And using this formula, we'll calculate how many rewards earned by Alice on a graph. The y axis represents the total stake and the Xaxis represents time in seconds. Let's say that at 3 seconds Alice stakes 100 tokens and then at 6 seconds she withdraws all of her tokens. So in total she staked 100 tokens for the duration of 3 seconds. Let's calculate how many rewards Alice has earned in this 3 seconds. And we'll be using this equation to calculate how many rewards Alice has earned at 3 seconds.
00:06:33.574 - 00:07:00.590, Speaker A: Alice had 100 shares, so that will be 100. The total stake by all users is also 100. This will be just Alice. We times this by the reward rate per seconds R and that is the amount of rewards that Alice has earned from 3 seconds to 4 seconds. From 4 seconds to 5 seconds. The amount of tokens staked by Alice is also 100. The total staked by all users is just Alex.
00:07:00.590 - 00:07:39.898, Speaker A: So this will be again V 100 and the reward rate will be still be R. So that will be the amount of rewards earned by Alice from four to 5 seconds. And lastly, from seconds five to six. Again, the amount staked by Alice is still 100 and the total is also 100. So that will be 100 over 100 multiplied by R. We add all of these terms up and this is equal to three R 100 over 100 times r is just simply R again, for the second term, 100 over 100 is one. One times R is R, and the same for the last term.
00:07:39.898 - 00:08:08.242, Speaker A: Adding three r's, we get three R. So three R is the amount of rewards that Alice gets for staking 100 token for 3 seconds. Let's look at another example. Alice Stakes 100 tokens for 4 seconds, and Bob Stakes 200 tokens for 5 seconds. Let's calculate how many rewards are earned by Alice. Here is the graph showing how much tokens were staked by each user and the duration they were staked for. At 3 seconds, Alice Stakes 100 token.
00:08:08.242 - 00:08:43.586, Speaker A: At 5 seconds, Bob Stakes 200 tokens, and at seven second, Alice withdraws the 100 token. And at ten second, Bob withdraws his 200 tokens. Let's calculate how much rewards are earned by Alice. At 3 seconds, Alice had 100 tokens staked, so that will be 100. The total amount staked at 3 seconds is also 100, so that will be 100 over 100. We times this percentage by the reward rates per second, so that will be by timing it by R. That's the amount of rewards earned by Alice for 1 second from seconds three to four.
00:08:43.586 - 00:09:20.720, Speaker A: At 4 seconds, the amount of rewards staked by Alice is also 100, and the total staked is also 100. Again, we multiply this by r. So between 4 seconds and 5 seconds, Alice has earned 100 over 100 times our amount of tokens. However, at 5 seconds, the amount of staked by Alice is still the same 100. So that'll be 100 over the total staked by all users. At 5 seconds, Bob stakes 200 100 plus 200 is 300. So the total staked is 300 times this by the reward rate per seconds, R.
00:09:20.720 - 00:09:43.090, Speaker A: And that is the amount earned by Alice at 5 seconds. At 6 seconds, Alice still has 100 staked. The total staked by all users. Alice and Bob are still 300. So we add another 100 over 300 multiplied by r. At 7 seconds, Alice withdrawals so she is no longer earning any rewards. So this is the total amount earned by Alice.
00:09:43.090 - 00:10:24.354, Speaker A: Let's now simplify this. This is equal to 100 over 100 simplifies to one, and the same goes for the second term. 100 over 300 simplifies to one over three, so this will be one over three. And the last term, 100 over 300 again simplifies to one over three. Let's add all of these up. The first two terms will be r plus r, so that will be two, r plus the last two terms are one over three, r plus one over three, r, so that will be two of those, so this will be two over three, r let's simplify this one more step. Two r is equal to six over three r.
00:10:24.354 - 00:11:10.802, Speaker A: Six over three r plus two over three r is eight over three r. So the amount of rewards earned by Alice first taking 100 token from seconds three to seven is eight over three r. Those were two examples of calculating the amount of rewards earned by a user using this equation. In the next video we will go over an example of calculating the amounts of rewards earned by a user using this equation. We saw example of how to calculate rewards earned by a user using this formula. Next, I want to show you an example of calculating rewards earned by a user using this formula. However, before I do that, I first want to rewrite this equation so that when we go through example of using this equation, the calculations will be easy.
00:11:10.802 - 00:11:35.414, Speaker A: In particular, in this video I want to prove two formulas. We define rj to be the reward per token from time I equals zero all the way up to j minus one. In certain case, this equation can be simplified to this equation. So we'll prove this. And also we'll prove that summing from I equals k all the way up to n. Summing once is equal to n minus k plus one. Using this fact, we'll derive this equation.
00:11:35.414 - 00:12:22.282, Speaker A: So first, let's start with proving this equation. Let's define the summation of reward per token up to time j. For j equals zero, we'll say r of zero is equal to zero and for j greater than zero, we'll say r j is equal to the summation from I equals zero all the way up to j minus one. Summing the terms r divided by t of I t abi is equal to the total stake that tie I. Now, when t of I is equal to some constant t for the time duration j of zero to j, then we can write this formula as r of j is equal to r of j zero plus r divided by t times the duration j minus j zero. Let's prove this formula. We will start with r of j from the definition that we defined over here.
00:12:22.282 - 00:13:03.254, Speaker A: R of j is equal to the summation from I equals zero to J minus one, summing the terms r divided by t of I. Next, we'll split the summation into two parts. We sum from I equals zero to j zero minus one. And then next we sum from I equals j zero to J minus one. All we're doing here is rewriting this summation into two parts. Summing from I equals zero to j zero minus one, and then summing from I equals j zero to j minus one by definition, the first summation is equal to r of j of zero plus. For the second summation, notice that t of I from I equals j zero to J minus one is a constant t.
00:13:03.254 - 00:13:47.778, Speaker A: This is because we said over here that t of I is equal to a constant t for the duration j zero to all the way up to j. So for this summation t of I is a constant. This means that from this summation we can pull out r divided by t and we get this summation pulling out each of the terms inside the summation. To the left of the summation, we get r divided by t and summing one from I equals j of zero to j minus one. Next, we'll simplify this part of the equation. Summing from I equals j of zero to a j minus one. Adding ones well, in the general case, when we sum one from I equals k to all the way up to n, we get that this sum is equal to n minus k plus one.
00:13:47.778 - 00:14:19.086, Speaker A: We will prove this formula later in the video. Let's apply this equation to this summation here. We start with n, so n will be j minus one, so that'll be j minus one. Next, we'll need to subtract k. K is over here and k over here will be j of zero, so that will be minus j of zero. And lastly, we add a one so plus one. Therefore, this summation will be equal to J minus one minus j zero plus one.
00:14:19.086 - 00:15:13.706, Speaker A: Finally, we simplify this equation. One last step and we get this is equal to r of j of zero plus r over t, and this summation will be equal to j minus one minus j zero plus one. Or simply this will be equal to j minus j zero. And we have proven the fact that the reward per token r of j is equal to the summation from I equals zero to j minus one. Adding the terms r divided by t of I, and when t of I is equal to some constant t in the interval j of zero to j, then we can write this formula as r of j equals to r of j zero plus r over t times the duration j minus j zero. In the next example, when we calculate the amount of rewards earned by a user, we will need to compute this equation. But instead of calculating this, we'll use this formula.
00:15:13.706 - 00:15:42.314, Speaker A: So for the next part of the video, I'll prove this formula. Adding ones from I equals k to I equals n. This is equal to n minus k plus one. Let's see why. Let's start with some simple examples and try to find a pattern for the summations, when we sum one from I equals k to k plus one, we're basically counting these vertical ticks from k to k plus one. So that would be k and k plus one. So one plus one equals to two.
00:15:42.314 - 00:16:22.982, Speaker A: How about summing from I equals k to k plus two? Again, we're counting the number of vertical ticks from k to k plus two. So that will be one, two and three, and the summation is equal to three. And likewise, when we count the number of these vertical ticks up to k plus three, then that will be one, two, three and four. And we get the summation from I equals k to k plus three is equal to four. So here observe the pattern that if we sum to k plus one, then our summation is equal to two. When we sum up to k plus two, then our summation is equal to three. And when we sum up to k plus three, then our summation is equal to four.
00:16:22.982 - 00:17:18.354, Speaker A: Notice that the sum is always one greater than what we're summing up to. Starting from k in general, we observe that when we sum up to k plus I, then the sum is equal to I plus one. When we sum one from I equals k to k plus I, then the total that we get back is I plus one. When we continue this step all the way up to n, then what is this summation? What is the sum summing from I equals k all the way up to n? Well, in order to apply this observation to this equation, let's write n in terms of k. So, notice that n is equal to k plus n minus k. Likewise, over here we will rewrite n as k plus n minus k. Now observe that we can apply this formula to this equation.
00:17:18.354 - 00:17:50.734, Speaker A: When we sum all the way up to k plus I, then we get that the total is equal to I plus one. So here we will replace the I with n minus k, and this will be equal to. We replace the I that we see over here with n minus k. So that will be n minus k, and to that we add a one, so plus one. And that is our final result. Summing one from I equals k all the way up to n is equal to n minus k plus one. And we got here by applying this formula.
00:17:50.734 - 00:18:29.866, Speaker A: And that completes the proof for proving that reward per token. This summation r of j equals to from I equals zero to j minus one, summing r over t of I. When t of I is a constant in some duration j of zero to j, then we can rewrite this formula in a simpler form. Being r of j of zero plus r over t times the duration j minus j zero. In the next video, we'll go over an example of calculating the rewards earned by users. And instead of using this formula, we'll be using this formula. Let's go over an example of calculating the amount of rewards earned by a user using this equation.
00:18:29.866 - 00:18:51.814, Speaker A: Here's the graph of amount of tokens staked over some time period. For this example, we'll say that Alice Stakes 100 token at three second. At five second, Bob Stakes 200. At six, Carol Stakes 100. At nine, Alice withdraws her 100. And at ten, Carol Stakes additional 100 tokens. At eleven, Bob withdrawals his 200.
00:18:51.814 - 00:19:38.830, Speaker A: And at 13, Carol withdraws her 200 tokens every time a user, either Alice, Bob, or Carol stakes or withdrawals. We'll need to calculate this value. To make our life easier, we'll introduce some variables. We'll define reward per token at time j r zero is equal to zero, and for time greater than zero, we'll say rj is equal to the sum from I equals zero to J minus one, summing the terms r divided by t of I, where t of I is the total stake that time I. Now, if the total stake that time I is equal to zero, then we'll just say this term is equal to zero. What we're doing here is defining this part of the equation for each second. However, instead of calculating this formula, we'll use this formula that we have derived in the previous video.
00:19:38.830 - 00:20:30.118, Speaker A: And just for a review, when t of I is equal to some constant t, let's say for the duration j of zero to j, then we can write this formula rj to be equal to r j of zero. So the reward per token evaluated at j of zero plus r divided by t times the duration j minus j zero. Okay, so let's go over an example of calculating rewards earned by each user. On the left, in blue, we'll list the time at which a user either staked or withdrew the tokens. On the right of this white vertical line, we'll calculate r of j for each second. Now, every time a user deposits or withdraws their token, we'll have to keep track of this part of the formula for each user. So we'll keep track of user reward per token pay on the right.
00:20:30.118 - 00:21:02.218, Speaker A: And anytime the amount of tokens staked by each user changes, we will calculate the amount of rewards earned by that user. At the very bottom, we'll keep track of amount of rewards earned by each user. Okay, let's get started at time zero. What is reward per token? By definition, at time zero, the reward per token is equal to r zero. So it will be simply be equal to r zero equals zero. Let's see what happens at 3 seconds. At 3 seconds, alice stakes 100 token.
00:21:02.218 - 00:21:33.994, Speaker A: So let's compute r of j at 3 seconds. Again, instead of using this formula, we will be using this formula R of j at 3 seconds. So that would be r of j at zero. The previous time that reward per token was updated was at r zero. So r j of zero will be equal to r zero. To this, we add r divided by t. But remember that for the duration from zero to 3 seconds, the total staked was zero.
00:21:33.994 - 00:22:06.754, Speaker A: And we said over here that when total staked is equal to zero, we'll just say that this part of the term is equal to zero. So this will be zero times the duration times the duration from zero to 3 seconds. Three minus zero. And this is equal to r zero plus zero times three minus zero. R of zero is equal to zero, and zero times three minus zero is zero. This is equal to zero. R of three is equal to zero.
00:22:06.754 - 00:22:33.966, Speaker A: Since I staked 100 tokens, we'll also update user reward per token paid, so this will be equal to r three. Okay, moving on. Let's see what happens at time five. At 5 seconds, Bob stakes 200 tokens. So let's compute rbj for five. So this will be r five. This is equal to the previous reward per token will be r three.
00:22:33.966 - 00:23:06.338, Speaker A: R three plus. Now, notice that for the time seconds, three to 5 seconds, the total staked is 100, which is greater than zero. So instead of saying zero, we'll apply this part of the formula. So that will be r divided by the total state. For the time interval, three to 5 seconds will be 100. So I'll divide this by 100. And what is the duration? The duration is from three to 5 seconds.
00:23:06.338 - 00:23:36.354, Speaker A: So this will be five minus three, and this is equal to r three is zero. So zero plus r divided by 100 times the duration, five minus three is equal to two. R five is equal to two. R over 100. Now 5 seconds. This was Bob who staked 200 tokens. So we also update user reward per token paid for Bob to be equal to R five.
00:23:36.354 - 00:24:07.418, Speaker A: Okay, let's move on. At 6 seconds, Carol stakes 100 tokens. So let's compute R of J at 6 seconds. R of j at 6 seconds. R six. This is equal to the previous reward per token will be R five plus the reward rate, r over what is the total staked between the time intervals five and six. Between the intervals five and six, the total staked was 300.
00:24:07.418 - 00:25:00.986, Speaker A: So this will be total staked will be 300. The duration will be from five to 6 seconds. So this will be six minus five, and this is equal to R five is two r over 100 plus we need to add this term, so, plus r over 300 times the duration, six minus five is equal to one, so that will be one, and that is r six. This was Carol who deposited 100 tokens. So let's update user reward per token page for Carol, and we'll say that this is r six. Let's scroll up and see what happens at 9 seconds. At 9 seconds, Alice withdraws 100 token.
00:25:00.986 - 00:26:00.286, Speaker A: Okay, so let's compute rewards per token at 9 seconds, r of nine is equal to the previous reward per token will be r six plus reward rate r over the total staked from time six to nine. The total staked from times six to nine was 400, so the total staked will be 400 and the duration will be from six to 9 seconds. So we'll multiply by the duration nine minus six, and this will be equal to r of six. Is this value over here r over 400 times the duration nine minus six, which is equal to three. This was Alice who withdrew 100 of her tokens. So let's update user reward per token paid. The new user reward per token pay for Alice is r nine.
00:26:00.286 - 00:26:41.230, Speaker A: And we'll cross out the previous user reward per token for Alice being r three. Now, using this equation, let's compute the amount of rewards earned by Alice when she's staked from 3 seconds, and then she withdrew at 9 seconds. So I'll scroll down and let's compute the amount of rewards earned by Alice for the time duration from three to 9 seconds. The amount of rewards that Alice staked is 100. And if I scroll up at this point, the reward per token is nine, so that will be r nine, and user reward per token paid before r nine. That will be. This value is r three.
00:26:41.230 - 00:27:12.374, Speaker A: So what we need to do over here is r nine minus r three. Let's write this down over here. So we multiply 100 by rb nine. That's the current reward per token minus the previous reward per token specifically to Alice. This is user reward per token paid is r three, and this is equal to 100 times what is r of nine. R of nine is this value. So I'll paste it here.
00:27:12.374 - 00:27:57.610, Speaker A: And what is r three? R three is equal to zero. So over here we'll say minus r three is zero, and that is the amount of rewards earned by Alice for staking from three to 9 seconds, Alice has staked 100 tokens, and for the first 2 seconds, she was the only one who has staked the tokens. So, we divide by 100 for the next 1 second. In total, there was 300 staked, and for the last 3 seconds, there was 400 staked. When we add these up, we get the amount of tokens earned by Alice for staking from three to 9 seconds. Okay, let's scroll up and see what happens at 10 seconds. At 10 seconds, Carol stakes additional 100 token.
00:27:57.610 - 00:28:46.246, Speaker A: This means that the amount of tokens staked by Carol from the duration six to ten is a constant of 100. And now she has staked the additional 100. So from here on, she'll be staking 200 tokens. So what we'll do here is we'll compute the amount of rewards earned by Carol from the duration six to 10 seconds, and then update the user reward per token pay that we see over here. Okay, so first, let's compute R of ten. R of ten is equal to the previous reward per token is r of nine, plus the reward rate, r over. What is the total stake from the duration nine to 10 seconds? If I scroll up, we can see that the total stake from the duration nine to 10 seconds is 300.
00:28:46.246 - 00:29:29.518, Speaker A: So we divide this R by 300, and the duration will be from nine to 10 seconds. Ten minus nine. And this will be equal to the previous reward per token, R of nine. Is this formula plus R over 300 for the duration ten minus nine, that will be one, and that will be r of ten. Let's update user reward per token paid for carol. So this will be R ten, and we'll cross out the previous user reward per token pay for Carol, and let's compute the amount of rewards earned by Carol. Again, we'll be using this formula.
00:29:29.518 - 00:30:07.738, Speaker A: The current reborn per token is r of ten, and the previous user reborn per token paid will be this value, and for carol, that will be r of six. So here we'll have to do s. The amount of token staked by Carol from the duration from six to ten is 100, so s will be 100. The current reward per token will be r ten minus. The previous user reward per token paid for carol will be stored as r six. So 100 times r ten minus r six. So, I'll scroll down and we'll calculate the amount of rewards earned by Carol.
00:30:07.738 - 00:30:37.640, Speaker A: This will be 100 times. The current reward per token is R ten, and the previous user reward per token pay for carol is r six. So here we'll do r ten minus r six. Let's calculate what this value is. So this will be equal to 100 times r ten will be this value. Minus r six. R of six will be this value.
00:30:37.640 - 00:30:59.198, Speaker A: So this is r of six. And we'll need to put a minus. So I'll put a minus here and change the plus to a minus. And let's simplify this equation. I see a two r over 100 here. Minus two r over 100, they cancel out. I also see one r over 300 canceling out with minus one r over 300.
00:30:59.198 - 00:31:40.714, Speaker A: And what are we left with? We're left with 100 times whatever that is left inside. This will be three r over 400 plus one r over 300. And this will be the amount of rewards earned by Carol at time equals to 10 seconds. Okay, let's scroll up and compute arb eleven at 11 seconds, bob withdraws 200 tokens. So we'll calculate rewards per token at 11 seconds and also calculate the amount of rewards earned by Bob. Let's start with reward per token at 11 seconds. So r eleven is equal to the previous reward per token will be r ten plus the reward rate, r over.
00:31:40.714 - 00:32:22.438, Speaker A: What is the total amount of token staked from the duration ten to eleven? Scrolling up from ten to eleven, there were 400 staked. So this will be 400 for the duration from ten to eleven. So eleven minus ten and this will be equal to r ten will be this value to r ten. We add r over 400 from the duration eleven minus ten, so that will be one, and that is r eleven. Now, this was Bob who withdrew his tokens, so let's update. User reward per token paid for bob. The user reward per token paid for bob is r eleven.
00:32:22.438 - 00:33:02.566, Speaker A: And I'll cancel out the previous user reward per token paid for bob. Okay, let's calculate the amount of rewards earned by bob. So far, the amount of tokens staked by bob was 200 tokens from time five to eleven. Using this formula, the current reward per token will be stored in r eleven the previous time bob either staked or withdrew. The token is stored at r five, so the amount of rewards earned by bob will be 200. The amount staked by Bob. The current reward per token, r eleven minus the previous time bob either staked or withdrew the tokens will be stored at five, so that will be r five.
00:33:02.566 - 00:33:40.514, Speaker A: So scrolling down, I'll move Carol's calculation further down. And inside the space that we just created, we'll put our calculation for bob. The amount staked by Bob is 200 tokens. If I scroll up, we'll need to minus r eleven from r five. So scroll back down, multiply 200 by r eleven minus r five, and this will be equal to 200 multiplied by r eleven. R eleven is this value over here, minus r five. Scroll up.
00:33:40.514 - 00:34:09.306, Speaker A: And r five is simply two r over 100. So minus r five being two r over 100. Okay, let's simplify this equation. I see a two R over 100 over here, minus two r over 100. So the amount of rewards earned by bob is 200 times whatever that is left inside here. So that will be these values, and that is the amount of rewards earned by bob. Okay, let's scroll up.
00:34:09.306 - 00:34:59.450, Speaker A: What happens at 13 seconds? At 13 seconds, Carol withdraws 200 token. So again, we'll calculate reward per token at 13 seconds, then minus the last user reward per token for Carol, and that will give us the amount of rewards earned by Carol from the duration ten to 13. So I'll scroll down and let's calculate reward per token at time 13. R of 13 is equal to previous reward per token plus R over the total staked from the duration eleven to 13. The total staked from duration eleven to 13 is 200. So r over 200 times the duration 13 minus eleven. And this will be equal to r eleven is this value.
00:34:59.450 - 00:35:28.594, Speaker A: And to this we add r over 200 for the duration 13. Minus eleven will be two. This was Carol who withdrew her tokens. So let's update user reward per token for Carol. Scrolling up, we'll say that the latest user reward per token pay for Carol is R 13. And cross out the previous user reward per token pay for Carol. Okay, finally, let's compute the amount of rewards earned by Carol from the duration ten to 13.
00:35:28.594 - 00:35:57.146, Speaker A: I'll scroll up. And the amount of tokens staked by Carol from the duration ten to 13. We can count the number of boxes. And it is 200. So scrolling back down. So, total staked by Carol from the duration ten to 13 will be equal to the total staked in that duration by carol 200 times the current reward per token. That will be arb 13 minus the previous user reward per token paid for Carol.
00:35:57.146 - 00:36:30.140, Speaker A: And this will be r ten. So I'll scroll down. And from r 13, we minus R ten, and that is the amount of rewards earned by Carol from the duration ten to 13. Let's calculate what this reward turns out to be. So this will be equal to 200 times. What's r 13? R 13 is this value, minus r ten. Scroll up again.
00:36:30.140 - 00:37:06.722, Speaker A: And r ten is this value over here. Scroll down. We'll need to minus this value from the top, so I'll put a minus here and then replace the plus with a minus for all the terms. The top is r 13 and the bottom is r ten. Okay, let's simplify this equation. I see a two r word. 100 minus two, r over 101, r over 300, minus one, r over 303, r over 400 minus three, r over 401, r over 300 minus one, r over 400.
00:37:06.722 - 00:37:54.206, Speaker A: So, simplifying this equation we get this is equal to 200 times whatever that is. Left inside here is one r over 400 plus two, r over 200. And that is the final amount of rewards earned by Carol. First, taking 200 tokens from the interval ten to 13 seconds. This completes the example for calculating rewards earned by user using this equation. In the next video, we'll summarize what we just did, and we'll come up with an algorithm for calculating the rewards earned by user using this equation, let's come up with an algorithm that calculates the amount of rewards earned by a user when they stake or unstake. First, we'll start by writing some comments, and then later we'll add some pseudocode.
00:37:54.206 - 00:38:44.110, Speaker A: If we remember from the example from the previous video, the first thing that we did when a user staked the rift true was calculate the reward per token. So here I'll put a comment calculate reward per token. Once we calculate the current reward per token, then we can calculate the amount of rewards earned by a user. So I'll type calculate reward earned by user. What else do we do? We updated the user reward per token paid. So I'll type update user reward per token paid. Now if we scroll up, you can see here that every time we calculated a new reward per token, we have to know the last time the reward per token was calculated.
00:38:44.110 - 00:39:21.354, Speaker A: So for example here, to calculate reward per token at 10 seconds, we had to know that the last time it was calculated was at 9 seconds. So over here, we'll need to keep track of the time the last time reward per token was updated. Update last update time. And the last thing that we'll do is update the amount of tokens staked by user. So type update staked amount. Okay, let's now write some pseudocode. Let's start off with calculate reward per token.
00:39:21.354 - 00:40:17.886, Speaker A: Let's say that the current reward per token is stored in a variable. We'll name it r. And to calculate the reward per token to this current reward per token, we'll need to add the reward rate r divided by the total amount of token staked in the contract. We'll say that this is stored in a variable named total supply and then we'll need to multiply this by multiply this by the duration. The duration will be the current time minus the last time reward per token was updated and we'll say that this is stored in some variable name last update time and this step is how we update the reward per token. Next, let's calculate the reward earned by user. We'll say that the total amount earned by the user will be stored in some mapping.
00:40:17.886 - 00:41:04.334, Speaker A: We'll name it rewards and this will be stored per user. So this will be a mapping from user to the amount of rewards earned by the user, and to this mapping we'll need to add the amount of rewards earned. So this will be plus equals. For this part we'll be using this equation. So I'll scroll down. The current amount of tokens staked by the user will say that it is stored in a mapping balance of user, and to this we'll need to multiply by the current reward per token minus the user reward per token paid. Multiply this by the current reward per token that will be r minus.
00:41:04.334 - 00:42:06.854, Speaker A: We'll say that the user reward per token paid is stored in a mapping called user reward per token paid and this will be stored per user, so we'll need to access the user and this completes the step where it calculates the amount of rewards earned by the user. Next we'll update the user reward per token paid, so we'll need to update this map being user reward per token paid. So I'll copy this, paste it here and say user reward per token paid for the user is equal to the current reward per token that we calculated in the first step. So this will be equal to r. Next we'll update the last update time. Last update time. Let's say that it's stored in a variable named last update time and this will be equal to we set it to the current time, so type current time and the last step is to update the staked amount.
00:42:06.854 - 00:42:55.382, Speaker A: The amount staked by a user is stored in a mapping balance of user and depending on whether the user stakes or withdrawals, this will be plus or minus equals to the amount that they are either staking or withdrawing. I'll put a comment here. Plus on staking and minus on withdrawal. Okay, and the last step is to update total supply. Total supply is the total amount of token staked by all users. Total supply plus or minus again, plus if a user is staking and minus if a user is withdrawing, plus or minus equals the amount that they are either staking or withdrawing. Okay.
00:42:55.382 - 00:43:04.610, Speaker A: And that completes the algorithm for calculating the amount of rewards earned by a user. And this code will be executed every time a user stakes or withdrawals.
