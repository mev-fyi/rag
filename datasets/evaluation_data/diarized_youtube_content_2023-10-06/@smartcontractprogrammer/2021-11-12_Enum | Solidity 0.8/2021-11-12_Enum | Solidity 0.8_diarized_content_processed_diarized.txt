00:00:00.490 - 00:00:30.742, Speaker A: Structs allow you to express multiple choices. For example, the Boolean data type allows you to express true and false. But what if you need to express more choices? Then enum is a great choice. For this example, I'll create an enum that represents a shipping status. I'll declare it by saying enum status, curly braces. And inside here we put our choices. A shipping status can be none, meaning that there is no shipping request made yet.
00:00:30.742 - 00:01:15.610, Speaker A: It can be pending, meaning that it is getting processed, can be shipped, completed, rejected, or canceled. Don't worry what all these status are supposed to represent, I'm just listing them out. For this example, we can use this enum as a state variable by typing status public status. We can also use it inside a struct. So I'll define a struct order. It will have a buyer of address, and it will have a shipping status of the enum status that we defined over here. So inside a struct, I'll type status is equal to status.
00:01:15.610 - 00:02:00.930, Speaker A: Furthermore, we can create an array of orders. So I'll type order bracket, meaning that this is an array of destruct orders public orders. These are some examples of how to combine an enum with other data types. For the rest of the example, I'll be using this simple enum over here. For the first example, I'll show you how to return an enum from a function. So the function output will be an enum function. I'll name this get it will be a view returns the enum status, and inside the function we will type return status status being the status state variable that we defined over here.
00:02:00.930 - 00:02:38.682, Speaker A: Next, I'll show you how to take an enum as input and then set the status to the enum from the input. So I'll say function set, and then inside the input, we'll say the type is status. And I'll name this underscore status external. And we'll update the state variable status over here to the input by typing. Status is equal to underscore status from input. Next, I'll show you how to update an enum to a specific enum. For example, let's say that we wanted to update this status to be shipped.
00:02:38.682 - 00:03:31.882, Speaker A: So I'll define a function, I'll call it ship, it'll be external, and then we will update the status state variable by typing. Status is equal to capital status shipped. So here we're saying that we want to update the state variable status to have a specific value of being shipped. And lastly, you can reset the enum to its default value by using delete. I'll call this function reset external and to reset it to its default value we use delete status. This will reset the status state variable, which is an enum to its default value. So what is the default value of this enum? Well, it will be the first item that is defined inside this curly braces.
00:03:31.882 - 00:04:08.870, Speaker A: Let's compile the contract, deploy it, and call some functions over here. I'll hit Ctrl s to compile it and then deploy it and then open the contract. We can set the status by passing in a number here. Num will be equal to zero, pending will be equal to one, ship will be equal to two, three, four and five. I'll set the enum to be completed, so this will be 0123 inside the function set. I'll pass in three and then call the function. When we call the function get, it's going to return the status as a number three.
00:04:08.870 - 00:04:21.340, Speaker A: Ship is the third item defined in this enum. So after we call ship and then call get, it will return to lastly, if we call reset and then call get, it will reset to its default value, zero.
