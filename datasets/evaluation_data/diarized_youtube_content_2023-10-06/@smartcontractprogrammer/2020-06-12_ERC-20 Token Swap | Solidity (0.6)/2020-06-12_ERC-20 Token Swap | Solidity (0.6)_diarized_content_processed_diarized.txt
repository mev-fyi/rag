00:00:00.650 - 00:00:51.274, Speaker A: In the previous video, we learned how to send tokens on behalf of the token holder by using approve and transfer from. In this video, I want to take a step further and show you how you can use those functions to build a contract that can trade one ERC 20 token for another. Let's say that Alice has 100 Alice Coin and Bob has Bob coin, and they want to exchange ten Alice coins for 20 bob coins. So that after the trade, Alice will have 90 Alice Coin and Bob will have ten. Alice will also have 20 bob coin and Bob will have 80. Let's see how we can accomplish this. We'll start by considering what could go wrong when Alice directly sends ten of her tokens to Bob.
00:00:51.274 - 00:01:24.354, Speaker A: So Alice transfers ten of her tokens to Bob. Alice now has 90 Alice Coin and Bob has ten. Bob sees that he received his ten tokens. If Bob is a dishonest person, then he has no incentive to complete the trade by transferring 20 of Bob Coin to Alice. He decides to no longer cooperate with Alice and leads the trade. Alice is left with ten less Alice coin and zero Bob coin. This situation can happen to both Alice and Bob.
00:01:24.354 - 00:02:10.226, Speaker A: So if Bob transfers tokens first and Alice decides to not do her part of the trade, then Bob loses 20 of his tokens for nothing. You can see that both Alice and Bob can get the most tokens by not cooperating and cheating the other. In other words, they are incentivized to not cooperate. The problem is that once Alice sends tokens to Bob, then Bob can ignore Alice. Likewise, after Bob sends tokens to Alice, then Alice can ignore Bob. To fix this, we somehow need to do the two transfers at the same time, so that in a single transaction, Bob will get ten Alice coin and Alice will get 20 bob coin. Enter token swap.
00:02:10.226 - 00:03:10.394, Speaker A: Token swap is a contract that will transfer ten Alice coin to Bob and 20 bob Coin to Alice in a single transaction. Let's see how it works using the ERC 20 functions. Approve and transfer from first, Alice will approve token swap to spend ten of her tokens so that the token swap contract is now allowed to withdraw ten tokens from Alice. Bob would do the same thing on his side and approve the token swap to spend 20 of his tokens so that token swap is allowed to withdraw 20 bob coin from bob. Now, Alice and bob are ready to finalize the trade, and either Alice or bob can call the function swap. And this is a function that we'll define later in remix. The swap function will first transfer ten Alice coin from Alice to Bob by calling the transfer from function inside alice coin and token swap can call this function.
00:03:10.394 - 00:04:14.510, Speaker A: Since Alice allowed this contract to spend ten tokens on her behalf, after the first transfer is completed, the function swap transfers 20 bob coin from bob to Alice. This is done by calling the transfer from function inside bob coin, and again, the token swap contract can call this function inside bob coin because bob allowed token swap to spend 20 of his coins. This is how token swap enables Alice to get 20 bob coins and bob to get ten Alice coin in a single transaction. Notice that after the trade, token swap is no longer allowed to spend from either coins. If Alice and Bob want to do another trade, then they'll have to repeat the process again. Now that we know how the token swap contract works, let's now write the code in remix first we need to import the ERC 20 interface, so we'll import it from open Zeppelin. This is the code that's being imported from the statement above.
00:04:14.510 - 00:04:51.050, Speaker A: I'm going to leave this as a comment here, and this will help us remind what functions we can call on the ERC 20 token. Our contract token swap will need to store some state variables. We'll need to store the two tokens that's being traded and the respective owners. Here, I named them token one, owner one, token two, and owner two. We'll write the constructor to set the state variables above the function that's actually going to be trading the tokens. We'll name it swap. When we call this function, we'll pass in the amount of tokens that's being traded.
00:04:51.050 - 00:05:45.018, Speaker A: We don't want everyone to be able to call this function. We only want the two owners to be able to execute the trade. So here we'll require that message sender is equal to owner one or equal to owner two. We'll also check that this contract is allowed to spend token one from owner one. We can get the amount that owner one has allowed this contract to spend from token one by calling the function allowance, and then we can compare that with the amount that is being traded. Next, we'll do the same check on owner number two and make sure that owner number two has allowed this contract to spend from token two. We'll check that the amount that is being approved is equal to or greater than amount two, which is the amount of tokens that is going to be withdrawn from owner number two and then sent to owner number one.
00:05:45.018 - 00:06:50.686, Speaker A: Lastly, we'll transfer the tokens by calling the function transfer from now back at top. If you look at the function signature for the function transfer from you can see here that it returns a boolean value and this will tell us if the transfer from was either successful or not. We're going to be calling the function transfer from on token one and token two. And in both cases we'll have to check that the transfer was successful and the code to do that for token one and token two are almost the same. So we'll write a private function that's going to transfer the tokens and then make sure that it was successful. We'll call this function safe transfer from for the inputs we'll pass in the token, the sender, the recipient, and the amount that is being transferred. And then we'll call token transfer from sender recipient amount, and this function will send this amount of tokens from the sender to the recipient, and then we'll assign the result in a variable called sent.
00:06:50.686 - 00:07:40.654, Speaker A: Lastly, we'll make sure that the transfer was successful. Back inside the swap function, we'll need to make two transfers. We will need to send amount one of token one from owner one to owner two. Token two will be transferred from owner two for the amount amount two and sent to owner one. We'll do the first transfer by calling safe transfer from and it's going to be sent from owner one to owner two for the amount amount one, and the other side of the trade will be similar. Here we'll send token number two from owner two to owner one for the amount amount two, and this completes the function that will trade one token for another. All right, let's deploy this contract and try trading one ERC for another.
00:07:40.654 - 00:08:16.410, Speaker A: Over here, I've deployed three contracts. The first one, called my token, is ERC 20 token deployed by Alice. The next contract is also my token, and this is an ERC 20 token deployed by Bob. And lastly we have our token swap contract. The contract my token is a contract that we created in the previous video. And to quickly go over what it does, it creates 100 tokens for message sender. So over here Alice would have 100 Alice coins and over here, Bob will have 100 bob coins.
00:08:16.410 - 00:09:09.906, Speaker A: Now, the contract token swap was deployed by passing in the address of Alice Coin and then the owner Alice, followed by the address of Bob Coin and then the address of Bob. The address of Alice and Bob are just accounts from over here, the first one and the second one. The situation is that Alice and Bob want to trade ten Alice coin for 20 bob coins. Now recall from the previous video that my token has 18 decimal places. So this means that when we trade ten Alice coins for 20 bob coins, each of these numbers here need to have 18 zeros behind the actual number that we're trading. So it will be ten with 18 zeros and 20 with 18 zeros. The first thing that Alice and Bob need to do is allow token swap to spend their tokens.
00:09:09.906 - 00:10:10.638, Speaker A: So make sure that we're using account number one for Alice, and Alice will call the function approve on token one for ten tokens. Next, we'll switch over to Bob's account, and then Bob will also approve token swap for the amount 20 tokens. And we're now ready to call the function swap inside token swap. So we'll call token swap for ten Alice coin and 20 bob coins, and then hit swap. After the swap, we can check that the balance of Alice is equal to 90 tokens and the balance of Bob for Alice Coin is ten tokens. Similarly, the balance of Bob coin for Alice is now 20 tokens, and the balance for Bob is 80 tokens. So Alice and Bob were able to trade tokens without one cheating the other.
00:10:10.638 - 00:10:33.650, Speaker A: And this was possible because the function transfer from transfers tokens on behalf of the owner, and we call transfer from twice in a single transaction. And that's the basic idea of how to trade one ERC 20 token for another using a combination of approve allowance and transfer from. Thanks for watching and have a nice weekend.
