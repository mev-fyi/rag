00:00:00.490 - 00:00:41.050, Speaker A: We're going to start building a web application that can interact with our Multisig wallet contract. But before we do that, there are several things that we need to do. One, we need to run our local blockchain inside our computer. And two, we need to deploy the multisig wallet contract onto the local blockchain. So in this video, those are the two things that I'm going to show you. Run a local blockchain and deploy the Multisig wallet contract to give you a better idea of what we're going to be doing. Remember, in remix, we deployed our contract and then sent some transactions to interact with our smart contract.
00:00:41.050 - 00:01:33.290, Speaker A: Transactions are not actually sent to the real blockchain and instead it runs inside the browser. So similar to remix, we're going to use truffle to run a local blockchain and write some JavaScript that will deploy our multisig wallet contract instead of deploying it manually, like Remix. All right, so the first thing that we're going to do is run a blockchain inside your computer. So open up your terminal and type shuffle develop. This would start a blockchain running inside your computer. So this is not the real blockchain that runs on the Internet. This is just a simulation that you could run inside your computer and it's very useful when you're building an application that interacts with a smart contract.
00:01:33.290 - 00:02:21.530, Speaker A: Instead of deploying and interacting with a smart contract on the real blockchain, you can just deploy your contract here and then interact with it. So once the blockchain is running inside your computer, truffle provides you with some accounts that you can play around with and you can see them here. So these are the accounts that are available. And this is like remix that provides you with some accounts that you can play around with. Now, if you scroll down, you can see here that truffle also shows you some private keys that corresponds to the accounts above. Now, when you're writing your application, don't expose your private keys. This is like giving your credit card to a stranger.
00:02:21.530 - 00:03:08.278, Speaker A: So that was how to start a local blockchain using truffle. So next, I'm going to show you how to deploy our contract using truffle. So in the top left corner here inside the migrations folder, we're going to create a file and I'll name it two underscore deploy contracts Js. So the new file is created and the first thing that I'm going to do is open one initial migrations. We're going to copy this code and then paste it into our new file. This is the script that's going to be run when we deploy our multisig wallet contract. But this isn't the code that we want to run.
00:03:08.278 - 00:03:57.110, Speaker A: So now let's modify the script so that our multisig wallet contract will be deployed. And the first thing that we're going to do is import our multisig wallet by changing migration to our multisig wallet. So the first line will import our multisig wallet contract. Next, to deploy our multisig wallet contract, we need to pass in some owners and Num confirmations required. So first let's get some owners to pass into our multisig wallet. And we can do that by getting the default accounts provided by truffle. So the second parameter of this function here provides the network, which I'll explain later when we need them.
00:03:57.110 - 00:04:56.790, Speaker A: And the third parameter accounts is the one that we're interested now. So from the accounts that truffle provides, we'll initialize some owners by saying const owners equals accounts, and we'll get three owners by saying slice zero to three. Next we'll say that the NUM confirmations required is equal to two. And then we'll finally pass the owners and the NUm confirmations required, which will pass these parameters to our multisig wallet contract. So this code here will deploy a multisig wallet contract with three owners and two Num confirmations required. All right, so now let's run the script and deploy our contract. So open your terminal again and make sure that you're inside the truffle console.
00:04:56.790 - 00:05:43.140, Speaker A: And you can do that by typing shuffle develop, and to run the script inside the console, type migrate. If you scroll up on the logs, you can see here that our multisig wallet contract was deployed onto the local blockchain that completes the two setup needed to run a local blockchain and then deploy the contract. And what I just showed you is similar to how remix runs a local blockchain inside the browser. And the JavaScript that we just wrote is similar to automating this process of deploying the multi SIG wallet. In the next video, I'll show you how to connect truffle with Metamask. See you soon. In the next video.
