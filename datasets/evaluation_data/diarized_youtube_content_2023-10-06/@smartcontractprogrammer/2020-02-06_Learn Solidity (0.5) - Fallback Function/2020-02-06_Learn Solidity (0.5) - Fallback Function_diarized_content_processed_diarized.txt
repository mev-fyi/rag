00:00:00.410 - 00:00:30.470, Speaker A: Let's talk about the fallback function. Inside the contract. You can define a special function called the fallback function, and you can do it like this. The function cannot have a name, it cannot take any inputs, and it cannot return any outputs, and it must be declared as external. Now, this function will be called in two situations. One, when you call a function that does not exist. Two, when you send ether to this contract by send, transfer, or call.
00:00:30.470 - 00:01:29.206, Speaker A: And in order for this contract to receive ether, the fallback function must be declared as payable. And inside the function, you can write your code here like a regular function, but it is recommended not to write almost any code inside here. The reason is that when you send etherby, send or transfer it forwards 2300 gas to this fallback function, which is enough gas to emit a log, but not enough gas to write to storage or call another contract. And to show you that send and transfer forwards 2300 gas. We're going to use a special function here called gas left that returns the remaining gas, and we'll update our log event to return the amount of gas left. We'll also create a helper function that returns the balance of ether stored in this contract. Next, we're going to create a contract that will send ether to the contract above, which will trigger the fallback function.
00:01:29.206 - 00:02:29.370, Speaker A: The first function that we're going to create will be called transfer to fallback. After we deploy these two contracts here, we're going to pass in the address of the fallback contract above, and we're going to send ether using the transfer method. Transfer forwards 2300 gas, and later, when we actually call this function here, you'll be able to see that the gas left is less than 2300. Now, recall that sending ether by call forwards all of the gas to the fallback function, and in that case, gas left can be greater than 2300. And to show you a demo of this, we're going to create a function that's going to call the fallback contract above using the call method, and we'll name this function call fallback. We'll send ether using the call method and make sure that it was able to send the ether. Now, let's deploy the contract, execute the functions, and I'll walk you through how the codes are executed.
00:02:29.370 - 00:03:50.498, Speaker A: So here I've deployed the two contracts, the fallback contract that's going to be receiving the ether and send to fallback contract that's going to be sending the ether. And let's go over the transfer to fallback function first. So I'm going to copy and paste the address of the fallback contract here and send one ether when we check the transaction log, you can see here that it logged 2255 gas. So when we call the transfer to fallback function, it sent the ether to the fallback contract above using the transfer method, which triggered the fallback function inside the fallback contract. And since transfer forwards 2300 gas by the time the code reached here, it used some of the gas and gas theft returned an amount less than 2300. In this case, it returned 2255. Next, I want to show you that the call method is going to forward all of the gas.
00:03:50.498 - 00:05:16.290, Speaker A: So again, I'm going to copy the address of the fallback contract here and then send one ether again. And let's check the transaction log and you can see here that it forwarded more than 2300 gas. Similar to the previous example, when we called the function call fallback, it sent the ethers to the fallback contract by the call method which forwarded all of the gas. The fallback function was executed and it logged the remaining gas, which is this amount here. So in summary, the fallback function receives 2300 gas when it is invoked by the send or transfer method, but it can receive more gas when it is invoked by the call method. The call method can forward all of the gas to the fallback function, which means that you can write code like a regular function to execute inside the fallback function, but it is recommended not to write much code inside it since the function can fail if it uses too much gas, which means that you won't be able to send ether to the con track using the send or transfer method. So that's all I got for this video.
00:05:16.290 - 00:05:24.030, Speaker A: If you have any questions, let me know in the comments below. Have a nice day and I'll see you soon in the next video. Bye.
