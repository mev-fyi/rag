00:00:00.330 - 00:00:40.870, Speaker A: Constant sum automated market maker in this video I'll explain what it is and go over the math for swaps. Adding liquidity and removing liquidity first of all, what is an automated market maker? An amm? Amm is a decentralized exchange where the price of the token is determined by a mathematical equation defined inside the contract. This is in contrast to a centralized exchange where the price of a token in is determined by the traders. What can you do with this amm? Well, you can add liquidity, swap and remove liquidity. Let's take a look. When a user adds liquidity, they are adding tokens to the amm. For example, let's say that here I have a user.
00:00:40.870 - 00:01:14.782, Speaker A: A user that is adding liquidity is called a liquidity provider. This liquidity provider is providing 20 token A and 30 token b. Inside the AMM contract it had 100 token A and 60 token b. When the liquidity provider provided his token, the balance of token A increased by 20. So in total there are 120 token A and in total there are 90 token b. When the user provides liquidity, the amm mints shares back to the user. This share represents a partial ownership of the total liquidity.
00:01:14.782 - 00:01:37.818, Speaker A: So that is add liquidity. A user provides token in return he gets back some shares. Let's take a look at swap A. Swap is when a user trades token. For example, this user is trading ten token B for ten token A. Before the trade, this amm had 120 token A and 90 token B. The user put in ten token B.
00:01:37.818 - 00:02:07.138, Speaker A: So the amount of token B increased by ten, and now the total after the trade is 100 token b. Ten token a went out. So after the trade, the total amount of token A inside the amm is 110. For this example, we'll assume that the trade fee is equal to zero, and that all tokens trade at one to one. If a user provides one token A, then he gets back one of the other token. The prices of token A and token B are the same. So that's a swap.
00:02:07.138 - 00:02:39.790, Speaker A: Let's look at the last functionality. Remove liquidity the liquidity provider can remove liquidity. This means that he is withdrawing his token in exchange for his shares. So for example, the liquidity provider will return back his shares. His shares will be burned. The Amm will calculate an appropriate amount of token A and token B to return back to the liquidity provider. Notice that in this example, when this liquidity provider provided liquidity, they put in 20 token A and 30 token B.
00:02:39.790 - 00:03:12.550, Speaker A: For this example, we also assume that trades are one to one token A and token B have the same value. So in total, this liquidity provider provided 50 of tokens. In return. This user got back 26 token A and 24 token B. However, in total, this is also 50 tokens. 50 tokens in and 50 tokens out. The amount of tokens being traded and the amount of tokens that the user gets back when the user calls remove liquidity depends on the amm.
00:03:12.550 - 00:04:02.426, Speaker A: But for constant sum amms, the math is very simple. You just add up all the tokens and that is the value of tokens that are coming in and tokens that are going out. Next, let's take a look at why this amm is called a constant sum amm, and let's also work out some of the math. How many tokens does a user get back in a trade? How many shares are minted when a liquidity provider adds liquidity? And how many tokens does a liquidity provider get back when the liquidity provider removes liquidity? Let's start with the first question. What is a constant sum amm? A constant sum amm is an amm where the price of tokens are determined by the equation x plus y equals k. X is the amount of token a in the amm, and y is the amount of token b in the amm. When you add these two values up, you get a constant called k.
00:04:02.426 - 00:04:49.978, Speaker A: When a user trades in this amm, this constant k must remain the same even though the amount of token x and the amount of token y may change. So let me show you an example. For this example, we'll say that a user sells token a and then buys token b. Dx is the amount of token A that is coming in, and dy is the amount of token B that must go out. In this trade, we'll say that the horizontal access represents the amount of token a locked inside the amm, and the vertical axis represents the amount of token b that is locked in the amm. When we graph the equation x plus y equals k, the equation that you see over here, it turns out to be a straight line that looks like this. If there are zero amount of token b, then y will be equal to zero and we're left with x equals k.
00:04:49.978 - 00:05:38.278, Speaker A: So over here, this will be the point x equals k, y equals zero, and similarly, if there are zero amount of x tokens, then to satisfy this equation, y will be over here with y being equal to k, y is equal to k, and x is equal to zero, and all trades happen on this line. For example, before a trade we'll say that there are x amount of token a and y amount of token B. So on this line, this will correspond to this point over here. And for this example, remember that we're selling token A and then buying token B. Selling token a means that dx amount of token a is coming in. So this will shift the initial x from over here to the right to x plus dx. When we do a trade, the point must be on this line.
00:05:38.278 - 00:06:03.866, Speaker A: So the new y after the trade will be somewhere over here. Some of the token b is coming out. So from before the trade and after the trade, the amount of token b inside the amm must decrease. Before the trade x and y was over here. And after the trade x and y is over here. Let's see the details. If we were to put in Dx amount of token A, what is the amount of dy? Let's look at the math.
00:06:03.866 - 00:06:49.278, Speaker A: How many tokens to return in a trade? For this example, we'll say that we trade from token A to token B. Before the trade we have the equation x plus y equals k. After the trade we have x plus dx plus y minus dy still has to equal k. Dx is the amount of token a that is coming in, and dy is the amount of token B that is going out. Although the amount of token a and the amount of token B varies, the constant k must remain the same from before the trade to after the trade. Notice that after trade, the constant k on the right side of the equation, we can replace it with the k that we define before the trade. So we'll replace k over here with x plus y.
00:06:49.278 - 00:07:26.470, Speaker A: The left side of this equation. We'll just bring it down so that it still remains x plus dx plus y minus dy is equal to x plus y. We replace this k with x plus y, since before the trade, k was equal to x plus y. Notice that there are x and y on both side of the equation, so we can cancel them out. I can cancel this x with the x over here, and the y on the left with the y on the right. Simplify this equation and we get dx minus dy is equal to zero. Or put it another way, dx is equal to dy.
00:07:26.470 - 00:08:03.398, Speaker A: And what does dx equal to dy mean? Well, remember that dx is the amount of token A that is coming in, and dy is the amount of token b that is going out. In other words, dx equals dy means that the amount of token a must equal the amount of token L. If you put in one token a, you get back one token b. And if you put in, let's say, five token a, then you get back five token b. Token a and token b have the same value. Let me show you an example. For example, we'll say that the token that is coming in, the token that we're selling is token A and we're selling 100 token A.
00:08:03.398 - 00:08:32.782, Speaker A: Okay, let's ask a question. How many token B do we get back in return? Well, we know that Dx, the amount of token that is coming in token A, is equal to 100. So Dx is equal to 100. From the equation that we derived earlier, we know that dx is equal to dy. So this means that dy must be equal to dx, which is equal to 100. Dy is equal to 100. And the answer to our question how many token B to return token out is equal to token B.
00:08:32.782 - 00:09:01.306, Speaker A: Dy is equal to 100. So the amount of token B that it goes out is 100. That is the math for a swap. The amount of token that goes out is equal to the amount of token that goes in. Next, let's take a look at the math for adding liquidity. When a user adds liquidity, how many shares to mint? The way we will derive the amount of shares to mint is very similar to how we derive the amount of shares to mint for the vault. This was discussed in a previous video.
00:09:01.306 - 00:09:57.370, Speaker A: The basic idea to calculate the amount of shares to mint is that the increase in liquidity is proportional to the increase in total shares. We'll say that a is the amount of tokens that's coming in, L is the total liquidity before the new liquidity is added, s is the amount of shares to mint, and t is the total shares before mint. Again, the increase in liquidity is proportional to increase in total shares. So we can write this as equation L plus a over l is equal to t plus S over t. The liquidity increased from L to L plus A, and in this case, the total shares must also increase from t to T plus S. Now, solving this equation for s, we get that s is equal to a times t over L. Now, notice that A is a single variable, although this amm takes in two tokens, token a and token B.
00:09:57.370 - 00:10:34.086, Speaker A: However, because we said token a and token b have the same values, we can say that a is equal to dx plus dy the amount of token A that is coming in plus the amount of token b that is coming in. We can say that token A and token b have the same value and hence, we can add it here. Because earlier we said that dx is equal to dy. The amount of token in that goes into a trade must equal the amount of tokens that go out. Out of the trade. Token A and token B have the same value. So that is why over here we can say that token A and token B have the same value.
00:10:34.086 - 00:11:02.906, Speaker A: So we'll just add it up. Dx plus dy. We can also do something similar for L, the total liquidity. The total liquidity L. We can expand this to say the amount of token A that is inside the amm and the amount of token b that is inside the amm. X plus y is equal to L. Again, because token A and token B have the same value, we can add the total amount of token A and the total amount of token b to get the total liquidity.
00:11:02.906 - 00:12:02.606, Speaker A: We can expand this equation, replacing a with dx plus dy and L with x plus y, and we get that s. The amount of shares to mint is equal to dx plus dy times t over x plus y. Dx plus dy being the total amount of tokens that's coming in and x plus Y being the total liquidity before this new dx plus dy is added. So when a user calls add liquidity, how many shares should the amm mint? Well, s is equal to this equation over here. Okay, finally, let's look at remove liquidity. When a user removes liquidity, how many tokens should the amm withdraw back to the user? Again, similar to the math for the vault, the amount of tokens to withdraw is proportional to the shares. We'll say that a is the amount of tokens that are going out, l is total liquidity, s is the amount of shares to burn, and t is the total shares.
00:12:02.606 - 00:12:44.066, Speaker A: The amount of tokens being withdrawn is proportional to the shares. We can write this as equation a over l is equal to s over t, a is a total amount of tokens that are going out, l is the total liquidity, s is the shares that is being burnt, and t is the total shares. Here we're solving for a and we get that a is equal to l over s divided by t. We just multiply the l from the left side of the equation and we do the same for the right side of the equation. To get l times s over t. Like what we did when we added liquidity, we replaced a with dx plus dy. Here we can do the same.
00:12:44.066 - 00:13:18.522, Speaker A: We can replace this a with dx plus dy. Likewise, we can do the same for total liquidity. L l is equal to x plus y, x being the amount of token a that is inside the amm and y being the amount of token b inside the amm. Expand this equation and we get that a is equal to dx plus dy. This is equal to l being x plus y multiplied by s divided by t. We'll expand the right side of the equation. It becomes x times s over t plus y times s over t.
00:13:18.522 - 00:14:03.590, Speaker A: And we're now ready to answer our question. How many tokens to withdraw? When tokens are being withdrawal, it must satisfy this equation. Dx plus dy must equal x times s over t plus y times s over t. One simple way to satisfy this equation is set dx equal to x times s over t and dy equal to y times s over t. The amount of token a that is being withdrawn is proportional to the shares multiplied by the amount of token a inside the amm. Likewise, the amount of token b that goes out is proportional to the shares multiplied by the amount of token b inside the amm. Let me make this a little bit more clear.
00:14:03.590 - 00:14:33.500, Speaker A: When we withdraw, it must satisfy that this side of the equation must equal this side of the equation. Then what easy way to do it is to say dx is equal to this part of the equation and dy is equal to this part of the equation. Dx is equal to x times s over t, and dy is equal to y times s over t. And that answers our question. How many tokens to withdraw? When a user calls remove liquidity? It follows this equation over here.
