00:00:00.570 - 00:00:30.486, Speaker A: The best place to start learning solidity is remix. So I'm going to show you how to write your first smart contract, compile it, deploy it, and poke around with it. The first thing that we'll do is create a new solidity file. Make sure that you've clicked on the file icon, and then click on create new file. We'll name the smart contract hello World Soul. A length file will open on the right. We'll write our first solidity smart contract here.
00:00:30.486 - 00:01:11.538, Speaker A: On the first line we put the license of the code. I'm just going to copy paste the MIT license. Now, your code will compile without a license, but if you don't put a license when you compile a contract, it will give out warnings. We rather not see warnings from the compiler, so I'll just put an MIT license here. The next thing that we need to do is specify the compiler version here we'll set it to solidity 0.8.7, and we do that by saying pragma solidity 0.8.7 semicolon now, if you want to target a compiler version that is greater than or equal to 0.8.7,
00:01:11.538 - 00:01:56.946, Speaker A: this is how you do it over here you put a carrot and this will tell the solidity compiler that this contract is meant for compiler greater than or equal to 0.8.7. However, the best practice is to set the compiler version to a specific number, and you should definitely do that when you're deploying a contract to the main. Net. So we'll set the compiler version to 0.8.7. Once that is done, we're now ready to define our first smart contract, and we do that by typing in contract. We'll name this contract hello World Curly braces and there we go. This is the simplest solidity contract that we can create.
00:01:56.946 - 00:02:38.750, Speaker A: Now, to make this example a little bit more interesting, I'm going to define a string inside this contract hello world. So we do that by saying string public. Public means we'll have read access to this variable. After we deploy this smart contract, we'll name this variable my string, and we'll set it equal to hello World Semicolon. When we deploy this contract, the variable mystring will be stored on the blockchain. We'll be able to get the value of this variable mystring, which is equal to hello world. Let's compile this contract and then deploy it.
00:02:38.750 - 00:03:15.000, Speaker A: To compile the contract, I'll click on this solidity icon, make sure that the solidity version is 0.8.7. Which matches the header over here, and then hit compile. Once the contract is compiled, we'll deploy it by hitting on this Ethereum icon and then clicking on deploy. At the bottom you'll see the contract that we just deployed, hello World. Now, this contract is not deployed to the main net. It is deployed onto the local blockchain that is running only inside your browser. I'm going to expand this contract and see what we can call.
00:03:15.000 - 00:03:23.420, Speaker A: We can call my string on the contract hello world. So I'm going to click on my string and it returns the value hello world.
