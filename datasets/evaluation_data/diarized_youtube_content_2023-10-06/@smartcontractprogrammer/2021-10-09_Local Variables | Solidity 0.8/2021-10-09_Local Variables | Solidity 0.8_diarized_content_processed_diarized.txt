00:00:00.410 - 00:00:30.598, Speaker A: State variables save data onto the blockchain. In contrast, local variables are only used inside a function. I'm going to show you some examples of local variables. Here is an example of a local variable inside the function. For we declared a local variable type uint named x and we set it equal to one to three. We also have another local variable of type boolean named def, and we set equal to false. Let's say that there are some code over here and inside this function.
00:00:30.598 - 00:01:12.754, Speaker A: Later on we decide to update the value of x, adding four, five, six, and let's also say that we decided to update the boolean value of f, set it equal to true. These two local variables only exist while this function is executing, so that after the function executes these variables and the data will be gone. In contrast, I've declared some state variables over here un named I, boolean named b, and address named my address. Inside the function foo, we update the state variable ib and my address. When this function is called, it will update I to one, two, three, b.
00:01:12.792 - 00:01:15.380, Speaker B: To true, and my address to address zero.
00:01:15.690 - 00:01:21.734, Speaker A: After the function is done executing, these state variables over here will store the.
00:01:21.772 - 00:01:24.598, Speaker B: Values that are set over here.
00:01:24.764 - 00:02:01.634, Speaker A: On the other hand, these local variables that are defined inside the function will only div while the function is executing, and when the function is done, they will be gone. Let me show you this in remix. So I'm going to compile the contract with control s, and then we'll deploy the contract, scroll down, expand the contract. You can see here that we can call the function foo and get the values for the state variable bi and my address. Before we call the function foo, the b is false, I is zero, and.
00:02:01.672 - 00:02:03.940, Speaker B: My address is the zero address.
00:02:04.710 - 00:02:30.382, Speaker A: After we call the function foo, the value of b is set to true, I is set to one, two, three, and my address is set to one. Notice that the data stored in the state variables are saved. They persist even after the function is done executing, whereas these local variables only exist while the function is executing. So that is the difference between local.
00:02:30.436 - 00:02:32.490, Speaker B: Variables and state variables.
