00:00:00.330 - 00:00:37.080, Speaker A: Let's look at how to call other contracts from a smart contract. So here I have a contract called call test contract. And from inside this contract I want to be able to call the contract test contract. For this example, we'll be calling these functions from inside this contract. Call test contract. For the first example we'll call this function set x. So inside here I'll create a function, name it set x, and for the input we'll pass in the address of the test contract below and the input x to pass to this function test x.
00:00:37.080 - 00:01:02.042, Speaker A: This function will be external. Now there are several ways to call other contracts. The first way is to initialize the contract. So I'll say test contract and then pass in the address of the contract to call. Here we're passing in the address test. So inside here I'll put in test and the function that we're going to be calling is called set x. And then we'll pass in the input.
00:01:02.042 - 00:01:40.890, Speaker A: When we call this function set x inside the call test contract. This will call the test contract. Deploy that the address test and it's going to call the function set x pass in the input x for the address of test. If we pass in the address to the test contract, then this will call this function set x, which will set the state variable x to the input. Now instead of passing the address of the contract and then initializing it, you can pass in test contract as a type and omit this initialization process. So what you'll do here is say replace the address. So the type will be test contract.
00:01:40.890 - 00:02:25.162, Speaker A: Now we don't have to initialize it, so we'll just remove it and then just call test set x. Next, I'll show you an example of how to call the Getx function inside the test contract. The first thing that I'll do is just copy this function, paste it, and this example I'll call it get x, and for the input it's going to take in the test contract. Again, if you're confused, then you can also pass in the address of the test contract and then initialize it as test contract. So this code and the previous code that I showed you does exactly the same thing. Also, we don't need the input, so I'll admit it. And the function that we're calling is get x.
00:02:25.162 - 00:02:57.606, Speaker A: So remove the input from here. When we call this function, it's going to return the state variable x. So we can assign the return value as u and x equals. And for this example, we want to return this output. So over here we'll say external view returns un and we'll say return x. Now here, instead of assigning the output to a variable x and then returning it, we can also do this in one step. Well, actually there are two ways.
00:02:57.606 - 00:03:40.914, Speaker A: The first way is to just return and then remove this. Or another way is to declare the output as u into x over here and then assign x equals to the output. So these are some ways to return the output. Next, I'm going to show you a little bit more complex examples. First, how can we call a function on another contract and also send ether? So here I have a function called set x and receive ether. This function is payable, meaning that we can send ether to this function. And as you can see here, it sets the state variable x from the input and it sets value to message value.
00:03:40.914 - 00:04:14.846, Speaker A: This will hold the amount of ether that we send when we call this function. So let me show you how to call this function from another contract. To start off with, I'll copy this first example again. Paste it here, and I'll name this function to set x and send ether. Now we don't have to change this test contract, but just to show you some different ways of calling other contract, I'll change this to address input x. We'll still pass it. When we call this function, I'll send some ether to this function.
00:04:14.846 - 00:05:03.534, Speaker A: So I'll make this function payable. We'll initialize the contract by typing test contract at the address of test call the function set x and receive ether. So set x and receive ether for the input we'll pass in a u and text, which we do over here. Now. So the question is, how do we send ether to this function? Well, to do that you type curly braces, and inside the curly braces you say value colon. And here we specify the amount of ether that we're going to be sending to this function. For this example, we'll forward all of the ether that's sent to this function to this function.
00:05:03.534 - 00:05:40.266, Speaker A: So inside value we'll say message value. The last example that I will show you is here I have a function called get xm value. And notice that it returns multiple values. So how do we call a function inside another contract that returns multiple values? So to start off with I'll copy this example, paste it here. The name of the function. I'll name this get x and value. Since the function get x and value returns to outputs for this example, we'll return to outputs as well.
00:05:40.266 - 00:06:10.660, Speaker A: So un this part does not have to change the function that we're calling is get x and value calling. This function will return two outputs. So here we need to capture two outputs. The two outputs are type un. So we'll say un, x and un value. And to return this, we'll say return x value. This is one way of returning the outputs for this example.
00:06:10.660 - 00:06:43.790, Speaker A: But like this example over here, we can name the outputs and then assign it to a variable. And just to show you this, I'll name the output as x and value. I'll remove this return statement, and I'll also remove the type from the output assignments. So these are some ways of calling another contract. Let's compile this contract, deploy it, and see some examples. So I'll deploy the call test contract. This is the contract that's going to be calling the test contract.
00:06:43.790 - 00:07:11.558, Speaker A: And then also deploy the test contract. Scroll down, open call test, contract, and we'll call these functions. We will call set X. And here we need to pass in the address of the contract that we're calling. So I'll scroll down, copy the address of the contract that we're calling. In this case, it will be test, contract, paste it here. Further input we'll pass in one, two, three, and then call set x to get the value of x that we just set.
00:07:11.558 - 00:07:40.238, Speaker A: We can paste the contract address here, call get x, and we get the value. One, two, three. So a similar example, we'll next call set x and send ether. So paste the address here, and for the input I'll pass in two, two, two. And for the amount of ether that we're going to be sending, I'll pass three, two, three. Scroll down, call the function to get the new value of x and the amount of ether that was sent. We'll call this function, get x and value.
00:07:40.238 - 00:07:49.980, Speaker A: So I'll copy the address of the contract, paste it here, call the function. The new value of x is two, two, two, and the amount of ether that we sent is 333.
