00:00:00.330 - 00:00:43.834, Speaker A: There are two ways to create a contract from another contract, create and create to. In this video I'll explain how to use create, and in another video I'll explain how to use create to create contracts. Here I have a contract called account and we're going to be using the contract account factory that's going to be creating these contract. So when we call a function inside account factory, it's going to deploy the contract account. Let's see how to write code so that we can deploy contracts from another contract. We'll be calling a function called Create account. For the input, we'll provide an address owner, which we will pass this owner to the constructor of the contract account.
00:00:43.834 - 00:01:40.482, Speaker A: This function will be external and to create another contract, to deploy another contract from within a contract, we type new followed by the name of the contract. We're going to be deploying the account contract above so you'll say account parentheses, and inside the parentheses we pass in the inputs to pass to the constructor. The constructor of the account contract takes in one parameter, an address named owner, which we provide as a function input, and we'll pass it into here owner. And this is how you would deploy another contract using solidity. Now, to assign this newly deployed account contract as a variable, we type account, and the name of the variable I'll name it lowercase account is equal to. After we call this function create account, I want to see the address of the actual account that was deployed. So I'll create a state variable.
00:01:40.482 - 00:02:28.266, Speaker A: I'll create an array of accounts to store these contracts that we deploy. So type capital account brackets. We'll make this state variable public, and then I'll name it accounts. After we deploy the contract, we'll push the new account into the accounts array. By typing accounts push account. Now, notice that the contract account is payable, meaning that when we deploy this contract, we can also send some ether with it. So when we deploy a new contract, new account, how do we send ether to this contract? Well, to send ether to the constructor of the contract account, what we do over here is similar to what we did for low level function call.
00:02:28.266 - 00:03:18.490, Speaker A: We do curly braces, and inside the curly braces we specify the amount of ether that we're going to be sending. For example, let's say value is equal to one one. And because when we call this function, it is not going to have any ether, we'll have to provide with some ether. And we'll do that by making this function payable, which means that when we call this function, we'll send some ether with it, make sure that it is greater than or equal to 111 way. This 111 way will be forwarded to the new account contract that we deploy. So when we call this function create account, let's say that we send 200 way of that 200 way that we send to this function, 111 way will be sent to the account contract that we deploy. Over here.
00:03:18.490 - 00:03:48.262, Speaker A: Let's now deploy this contract and execute this function. Call a function that will deploy another contract. I'll hit ctrl s and then we'll deploy account factory. By the way, why did I name this contract account factory usually when you see contracts that deploy another contract, those contracts will be named something factory. Since this contract deploys the account contract. That is why I've named this contract account factory. Like a factory, it creates new stuff.
00:03:48.262 - 00:04:09.098, Speaker A: In this case, it creates a new account contract. Anyways, we will deploy the account factory contract. Scroll down, open the contract, and then we'll call the function create account. The owner of this contract. I'll use this address. So I'll copy this, scroll down, paste it here. We will also send 200 way.
00:04:09.098 - 00:04:55.160, Speaker A: So over here, I'll type in 200, scroll down, and then call create account. Our transaction was successful, so we created another contract by calling a function create account. Where is this new contract deployed? Well, since we stored it in the state variable accounts, I can get the address of the newly deployed contract by typing zero in accounts and then clicking on accounts. That is the address where the new contract is deployed. I'll copy this and then scroll up, click on Account, and we'll get the account deployed at this address. Click on that address, scroll down, expand Account contract. And the owner is the input that we passed in over here.
00:04:55.160 - 00:05:06.300, Speaker A: Clicking on bank. It refers to message sender, the account that deploy this contract, this address, which is equal to the account factory that you see over here.
