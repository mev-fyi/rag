00:00:00.330 - 00:00:27.974, Speaker A: There are two ways to call parent functions directly and using the keyword super. Let's take a look at how to use each of them. For this example, we'll be using this inheritance graph. E is the base contract f and g inherits from e and h inherits from both f and g. Here's the base contract d. It has two functions, foo and bar. And for this example we'll be using the event named dog to log some strings when the functions are called.
00:00:27.974 - 00:00:58.042, Speaker A: So the contract f inherits from contract d. Here the function foo overrides the function foo inside contract d. Now, inside this function I want to call the parent function foo. So how do I do it? The first way to call a parent function is to directly call it. The parent of contract f is e. So I'll say e dot followed by the function that I want to call. Here I'll call the function foo, so I'll type foo parentheses semicolon.
00:00:58.042 - 00:01:47.214, Speaker A: So when we call this function foo, it's going to emit the event f dot foo, and then it's going to call the function foo on contract d, which will emit the event e foo. The other way of calling a parent function is to use the keyword super. To show you this, I'll use this function bar. So we'll use the keyword super to call the parent function bar. So I'll type bar parenthes semicolon if we call this function bar, it will log f dot bar and then call the function bar on the parent contract. The parent contract of f is e and the function bar inside e will emit the event e bar. So far, there's no difference between directly calling a parent function and using the keyword super to call it.
00:01:47.214 - 00:02:45.422, Speaker A: To show you the difference between directly calling a parent contract and using the keyword super, we will first create this inheritance graph. F inherits from E, G inherits from E, and the contract h inherits from both f and G. So I've declared contract g that inherits from E and contract h that inherits from both f and g. Inside contract h we override the function foo, which overrides the function foo both in f and g, and likewise we override the function bar that is declared both inside the contract f and g. The difference between these two function is that for foo we directly call the parent contract f dot foo, whereas for the function bar we use super bar. When we call the parent function directly, it only calls that function. On the other hand, using the keyword super, it will call all parents.
00:02:45.422 - 00:03:28.862, Speaker A: So when we call the function foo, it's going to call f dot foo. F dot foo will emit the event f dot foo and then call e foo. E foo will emit the event e foo. On the other hand, if we call the function bar on contract h, it's going to call super bar the parents of the contract h is both f and g. So this function will call g bar. G is one of the parents of contract h, and then it's also going to call the function bar on the other parent, which is contract f. Now, both of the bar functions inside contract f and inside contract g calls super bar.
00:03:28.862 - 00:04:00.874, Speaker A: In this case, the parent of contract g is e and the parent of contract f is also e. So lastly, it's going to call the function bar on contract E. I'm going to show you the difference between calling foo and bar. One directly calls parents, the other uses the keyword super to call the parent functions. So I'll compile the contract and then deploy the contract h. We'll start by calling the function foo which will call parents directly inside the transaction log. H.
00:04:00.874 - 00:04:23.502, Speaker A: Foo called f dot foo which is one of the parents. And then next it called e foo, which is the base contract. Next we'll call the function bar. The function bar uses the keyword super, so it will call all parents. I'll click on it. Open the transaction logs. The first parent function that was called is g bar.
00:04:23.502 - 00:04:37.250, Speaker A: Next it called h bar, and lastly it called e bar. So those are two ways to call parent functions. You can either call it directly or using the keyword super. The difference that super calls all parent contracts.
