00:00:00.330 - 00:00:32.994, Speaker A: Let's take a look at mapping and solidity. I'll explain how to declare a mapping both simple and nested. And then I'll give you an example of how to set, get, and delete elements from a mapping. First of all, what is a mapping and why is it useful? Mapping is like a dictionary in python. It allows for efficient lookup. For example, here I have an array of names, Alice, Bob and Charlie, and I want to find if Dave is included in this array. The way I will find it is to iterate each element in the array and see if it is equal to David.
00:00:32.994 - 00:01:07.662, Speaker A: So I will look at the first element, this is Alice, this is not equal to David. I'll look at the next element, which is Bob, also not equal to David. I'll look at the next element, which is Charlie, also not equal to David. And now I know that in this array David is not included in this array. That took us three lookups to find that David is not included in this array. Now, using a mapping we are able to do just one lookup and find our answer here. In this mapping we know that Alice is present, Bob is present, and also Charlie is present, but David is not included in this mapping.
00:01:07.662 - 00:01:54.718, Speaker A: So using a mapping we'll be able to find out in one lookup whether David is included in this mapping or not. To declare a mapping, we start with the keyword mapping followed by parentheses, and inside the parentheses we declare the key type and the value type. For this example, I'll create a mapping where the key is address and where the value is un. So I'll type address equal sign greater than so that it looks like an arrow, and then un. I'll make this mapping public and then I'll name this mapping balances so in this example, this mapping will represent a balance of each address. If you give me an address, I can quickly look up the balance of the address. We can also create a nested mapping.
00:01:54.718 - 00:02:36.570, Speaker A: To create one again, we'll start with mapping. This time I'll create a mapping that goes from address to another mapping of address and finally to Boolean. So we'll type address and then the arrow and here I'll type mapping again parentheses, address, arrow, and then Boolean. I'll make this mapping public and this mapping will represent whether an address is a friend with another address. So I'll name this nested mapping is friend. These are two examples of mapping. Let's now see how to set, get, and delete elements from a mapping.
00:02:36.570 - 00:03:32.186, Speaker A: So let me show you how to set a key to a certain value in a mapping using balances, we'll say that the balance of message sender is equal to one two three, and we do that by typing balances of message sender is equal to one two three. The syntax to get the value stored in a mapping is similar to how we access an array. So to get the balance of message sender stored in balances, we will type balances of message sender and this will return a unit. So I'll type un. Bow, short for balance is equal to balances of message sender. We can also get a value for a mapping that we have not set yet. For example, we can get the balances of address one which we have not set yet, and it returns a unit.
00:03:32.186 - 00:04:15.902, Speaker A: So I'll declare variable unbow two is equal to balances of address one. Notice that we have not set the balances of address one, but we'll be able to access the value stored in balances of address one since we have not set any value here. So what would the value over here return? Well, it defaults to the default value. The default value of un will be zero, so this will return zero. Next, I'll show you how to update a mapping. Since we set balances of message sender to one two three. Here we'll update it by saying balances of message sender is equal to four five six.
00:04:15.902 - 00:04:51.558, Speaker A: This will update the balance of message sender. Now if you wanted to increment the balance of message sender, then we can do a shortcut. Add a plus over here. This will mean to the current balance of message sender, add four five six. It's stored one two three, and to one, two, three we're adding four five six. So after this operation it will be one two three plus four five six, which is equal to five seven, nine. Now if you want to clear a value stored in a mapping, then you will use the keyword delete followed by the place that you want to delete.
00:04:51.558 - 00:05:31.686, Speaker A: Let's delete the value stored at message sender. So we say delete the balance of message sender. Once this operation is executed, the value stored inside balances for message sender will be reset, so it will be reset to the default value. Again, the default value of un is equal to zero. Let's take a look at a more complex example using a nested mapping is friend. We'll say that message sender is a friend of this contract. So we'll do that by saying is friend message sender of address.
00:05:31.686 - 00:05:35.700, Speaker A: This is equal to true and.
