00:00:00.330 - 00:00:42.406, Speaker A: In unison b three the average price of a token, let's say token b over token a from time tk to tn is calculated by taking 1.1 to the tick average, where the tick average is equal to the time weighted average of each tick per second. Stick around and find out how we derive this equation. Let's say that the price of token b in terms of token a at time I is equal to p of I. In uniswap b three, this price is represented as 1.1 to the tick of I. As a side note, recall from the previous video that we can derive the price of a token by dividing the amount of tokens in the pool.
00:00:42.406 - 00:01:23.814, Speaker A: So if you know the virtual reserves of token b at time I and the virtual reserves of token a at time I, then we can do y divided by x to get this price. However, in unisop b three, these virtual reserves are not tracked. There is no variables inside the contract that stores these values. Instead, UnisOp b three tracks the price and the liquidity, and these two imply the virtual reserves. So the virtual reserves are not tracked inside the Unisop B three contract. However, this tick that is used to compute the current price is tracked in unisoft B three. So that's just a side note, and how the price and liquidities are computed is a topic for another video.
00:01:23.814 - 00:01:51.690, Speaker A: So let's see an example of how p of I is equal to 1.1 to the tick. Let's say inside a die e pool, 3000 die is worth one. E p is equal to 3000 and this is equal to 1.1 raised to the power of 80,067. Now if you pull up the calculator and compute this number, this will turn out to be 2999 and 9999. So there are some rounding errors.
00:01:51.690 - 00:02:42.826, Speaker A: Anyways, this 80,067 is the tick that will give us 3000. Now that we know how the price is represented in unisoft B three, let's now take a look at how the time weighted average price is calculated in unison. B three. Imagine that price of token b is pk at tk and at time tk plus one, it spikes up to p to the k plus one. At time equals t to the k plus two. The price of token b is p to the k plus two, and so on all the way up to p to the n in uniswap b two, the way we calculate the time weighted average price is by taking the price, multiply by the duration, summing them all up, and then dividing it by the whole duration. Now to actually calculate the time weighted average price in uniswap b two, instead of adding all of these numbers up, there is a shortcut.
00:02:42.826 - 00:03:35.774, Speaker A: We'll define a function so t of n to be equal to the summation from time I equals zero all the way up to time n minus one, multiplying the price at I for the duration from t to the I to t to the I plus one, and then adding all of these up. To simply put it, we're adding all the price times the duration. This equation is similar to this equation above. The only difference is that we start from time I equals zero. This is called a price cumulative, and you'll see a variable inside unisoft b two that keeps track of this number. Now, to get the time weighted average price, you will get the price cumulative at time t equals n minus the price cumulative at time t equals k, and then divided by the duration of the time t to the m minus t to the k. This will be a single variable, and this will also be a single variable.
00:03:35.774 - 00:04:15.582, Speaker A: So this equation is a very efficient way to calculate the time weighted average price. Whereas over here, you will have to perform multiple additions. Over here it is just one single subtraction. So this is how you calculate time weighted average price in unisoft b two. In unisoft b three, we do something very similar to calculate the time weighted average tick. So, in unison b three, to calculate the time weighted average tick, the first thing that we'll do is compute the tick for each price at p of k, we compute the t of k. At p of k plus one, we compute the t of k plus one, and so on, all the way up to p to the m minus one.
00:04:15.582 - 00:05:02.186, Speaker A: To get the time weighted average tick, we can do something very similar to what we did with uniswap b two. So we'll take this equation that calculates the time weighted average price and then paste it here. And all we have to do to get the time weighted average tick is replace the price with the tick. Likewise, in unison B two, we don't actually use this equation to calculate the time weighted average price. Instead, we use this formula so we can apply a similar trick for uniswap b 32. So the first thing that I'll do is copy this equation and then paste it here. First, I'll rename s of p of n to be s of t of n t standing for tick.
00:05:02.186 - 00:05:51.506, Speaker A: So a function summation of ticks up to time t equals n. Instead of storing the price cumulative, this will store the tick cumulative and like what we did over here, we'll replace the p with the tick. And instead of getting the price average, we will get the tick average. So the tick average is equal to s, sub t of n minus s, sub t of k divided by the duration t of m minus t of k. So this equation is very similar to uniswap b two. Once we have the time weighted average tick, we can get the average price by raising 1.1 to the tick average.
00:05:51.506 - 00:06:16.274, Speaker A: So the average price is equal to 1.1 to the tick average. And that is how you get the time weighted average price in Unisoft B three. Let's take a look at some examples. Let's say that at t equals zero, the price of token B is 3000. At t equals phi, it is 4000, t equals nine, 1000. And at t equals ten it is back to 3000.
00:06:16.274 - 00:07:25.622, Speaker A: And over here, I've already used a calculator to compute the ticks. Let's compute the time weighted average price in uniswap B two and then uniswap B three. So in uniswap B two, the time weighted average price, the first term is 3000 multiplied by the duration from 0 second to 5 seconds. So that will be five minus zero plus the next price, 4000 times the duration. The duration goes from five to 9 seconds, so that will be nine minus five plus 1000 from the duration nine to ten, so that will be 1000 times ten minus nine. This will be over the whole duration of 10 seconds. Ten minus zero, so that will be ten minus zero and this is equal to 3000 times five, so that will be 15,000 plus 4000 times four, so that will be 16,000 plus 1000 times one, which will be 1000 divided by the duration of 10 seconds.
00:07:25.622 - 00:08:02.726, Speaker A: Then I'll use a calculator to get that. The price average in uniswap B two is 3200. Let's do the same example in uniswap B three. First, we'll need to get the tick average and recall from the discussion over here that all we have to do is replace the price with the tick. So what we'll do over here is we'll copy this expression and then paste it here and then replace these prices with the ticks. The first tick is 80,067. The second tick is 82,944.
00:08:02.726 - 00:08:39.390, Speaker A: And the third and last tick is 69,081. The duration does not change. And using my calculator I get that the average tick is equal to 80,119. The average price is equal to 1.1 raised to this tick average which is equal to 80,119 using my calculator. This turns out to be 3015. Notice that although we use the same prices, we get a different price average between unisoft B two and unisoft b three.
00:08:39.390 - 00:09:04.500, Speaker A: In b two we got 3200. However, in b three we get 3015. The reason why we get different average prices is because in unisoft B two it is using arithmetic mean to calculate the average price, whereas in unisoft b three it is using the geometric mean to calculate the average price. What's the difference between arithmetic and geometric mean? That will be a topic for another video.
