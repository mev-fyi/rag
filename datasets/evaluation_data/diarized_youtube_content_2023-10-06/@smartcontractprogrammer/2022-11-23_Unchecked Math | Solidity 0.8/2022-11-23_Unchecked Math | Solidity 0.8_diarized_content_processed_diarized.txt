00:00:00.250 - 00:00:31.730, Speaker A: In splitty zero eight overflows and on the flows throw an error. This behavior can be disabled by writing your code inside unchecked. Here I have two functions, add and subtract. If I add two large numbers and let's say that this addition overflows, then solidity will throw an error. Likewise, if y is greater than x, then this subtraction of x minus y will underflow. I'll show you how to use uncheck so that we can disable the overflow error and the underflow error. The reason why you might want to do this is to save gas.
00:00:31.730 - 00:01:06.642, Speaker A: Let's start with the function add. Let's write this same exact code using unchecked. So first I'll comment this code, and then what we're going to do is type unchecked curly braces and then return x plus y. Whatever code inside the unchecked block, overflows and underflows will not be checked. So this is how we will be able to save a little bit of gas. Later, when we run an example, we'll compare the gas usage of having our code inside the unchecked and having our code outside of the unchecked. Okay, moving on.
00:01:06.642 - 00:01:58.910, Speaker A: Let's also do the same thing for the function. So let's write this code inside unchecked. So first I'll comment this code, and then to do the exact same subtraction, but disabling the underflow check, we'll do unchecked curly braces. And then inside the curly braces we'll do return x minus y. Let's deploy this contract, then compare some gas usage. So first I'll hit ctrl s, make sure that the contract compiles, then open the deployment tab and then deploy the contract. And then let's call the function add with one and two, and then it returns a three and we'll get the gas usage from the transaction logs when we call the function add using the unchecked we used this much amount of gas, 22,103 gas.
00:01:58.910 - 00:02:34.874, Speaker A: Let's also call the function sub and get the amount of gas that it used. So for subtraction, let's subtract two from one. I'm going to call sub and then open the transaction logs and the gas cost is 22,125. 22,125 gas. Okay, as a comparison, let's comment these code and we'll get the gas usage. If we did enable the overflowing on the floor checks, I'll comment out the unchecked math and then we'll just return x minus y. We'll do the same for addition.
00:02:34.874 - 00:03:10.826, Speaker A: Comment out the unchecked code and then just return x plus Y. Hit Ctrl S to compile a contract again and let's redeploy the contract. Redeploy and then call the function again. Add one and two, check the gas usage 22,291. So when we enable the overflow and on the floor error checks, you can see here that it used a slightly more gas than what you see over here. Let's do the same for subtraction. So we'll subtract two from one and then call sub and then get the gas cost.
00:03:10.826 - 00:03:37.282, Speaker A: And then I'll paste it here. The default gas cost for subtracting x minus y is 22,307. Whereas for the unchecked math, you can see here that it is slightly lower, 22,125. So here we're saving about 150 gas. The code inside unchecked block doesn't have to be single line, it can be multiple lines. So let me show you an example. So first I'll create a function.
00:03:37.282 - 00:03:59.378, Speaker A: Function. What we're going to do is this function. I'll name it sum of cubes. And this function is going to take in two inputs, un x and un y. And as the name of the function suggests, what we're going to do is multiply x by itself three times. So x to the three and do the same for y. Take y to the three and then we're going to add the result.
00:03:59.378 - 00:04:30.226, Speaker A: This will be external peer returns un what I'm going to show you inside here is an example that we can write multiline code inside the unchecked block. So type unchecked. And let's first get x to the power of three. So we're multiplying x by itself three times. I'll name it un x three equal to x multiplied by x multiplied by x. And then we'll do the same for the input y. Un I'll name it.
00:04:30.226 - 00:04:58.514, Speaker A: Y three is equal to Y multiplied by y multiplied by y again. And then we'll return the sum of x three and y three. Return x three plus y three. Let's try compiling this contract. So I'll hit Ctrl s and the contract compiles. So this was an example of showing you that inside the uncheck block you can write multiline code. All of the code inside here will not check for overflows and underflows.
00:04:58.514 - 00:05:01.770, Speaker A: So again, the code inside this block will save a little bit of gas.
