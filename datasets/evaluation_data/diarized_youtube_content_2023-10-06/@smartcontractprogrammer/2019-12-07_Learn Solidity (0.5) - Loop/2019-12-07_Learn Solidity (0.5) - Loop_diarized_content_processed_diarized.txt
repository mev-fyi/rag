00:00:00.410 - 00:00:46.300, Speaker A: In this video, we're going to go over how to write a for loop in solidity. First, we're going to create a function that will execute our for loop. We're going to name this function loop, and for the input we're going to pass in the number of iterations to run. To write a for loop, you start with the keyword for followed by apprentices. This loop should run n times, where n is the input that we passed into this function. So inside the parentheses we declare a local variable that starts with zero, and while this local variable I is less than n, it's going to execute the code inside the curly braces. Once that code is finished executing the variable, I will be incremented by one.
00:00:46.300 - 00:01:49.470, Speaker A: For this example, we're going to create a counter that increments every time the for loop is executed. First, we initialize a state variable named count, and inside the for loop we increment the count by one, compile, and deploy the contract. When you execute the function loop with an input of ten, it would run the for loop inside the function ten times, and each iteration will increment the counter by one. So by the time the function finishes execution, it would have incremented the counter by ten. Now, when you call the loop function again with an input of eleven, the counter will start incrementing from ten, and you'll end up with ten plus eleven, which is 21. And that is a basic demonstration of how to write a for loop in solidity. Now, one thing you want to be careful of when writing a for loop is that you want to make sure that your for loop doesn't run out of gas.
00:01:49.470 - 00:02:55.010, Speaker A: In other words, the number of iterations should have an upper bound. And by having an upper bound to the number of iterations, you know that the amount of gas that the for loop can consume will not exceed a certain amount. So, for example, if you have a contract that pays dividends to its shareholders, you would want to put a limit to the number of shareholders, like 100. If you don't, then this function will use up more and more gas as the number of shareholders become larger and larger. Since there's a limit on the amount of gas that can go inside the block, this means that this function will stop working when the number of shareholders is large enough, and your shareholders will not be happy that they can no longer receive the dividend. So when writing a for loop, make sure that there is an upper bound. In this case, we created an upper bound by limiting the number of shareholders that can participate in this contract.
00:02:55.010 - 00:03:02.450, Speaker A: Tracked. Well, that's all I got for this video. Thanks for watching, and I'll see you next time. Bye.
