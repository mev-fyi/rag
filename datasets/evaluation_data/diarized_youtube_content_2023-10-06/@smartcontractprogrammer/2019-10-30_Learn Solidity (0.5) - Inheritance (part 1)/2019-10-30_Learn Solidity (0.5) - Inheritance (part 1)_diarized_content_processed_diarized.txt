00:00:01.210 - 00:00:40.806, Speaker A: Let's go over inheritance in solidity. In this video, we'll go over the case where a contract inherits a single parent contract. For example, contract B inherits a parent contract a, and we're not going to deal with the case where contract B inherits from two parents contract c and contract d. Multiple inheritance will be the topic of the next video. So let's see some examples in remix. So we'll go over the basic syntax for inheritance and go over some examples of inherited functions. Next, we'll go over how to override inherited functions.
00:00:40.806 - 00:01:20.466, Speaker A: I'll also show you examples of how to pass parameters to parent constructors. We'll consider two situations when the parameter that we pass into the parent constructor is fixed, and the case when the parameter that we pass into the parent constructor is not fixed. First, let's go over the syntax for inheritance. We want contract B to inherit from contract a. In other words, contract A is the parent of contract b. Let's say we have a function in contract A that we also want in contract b. For this example, I've created a function inside contract a that returns the name of the contract.
00:01:20.466 - 00:02:00.500, Speaker A: Contract b can inherit the functionalities of contract A by using the keyword is and followed by the name of the contract. In this case a. Go ahead and compile and deploy contract b. Click on the deployed contract and you can see here that contract b inherited the function. Get contract name from contract a, execute the function, and you can verify that the function inside contract a was called. Next, let's go over how to override functions from a parent contract. First, copy the function from contract a into contract b.
00:02:00.500 - 00:02:44.692, Speaker A: We want this function to return a different value from the function inside contract a, so we'll change the return value to contract b. Recompile and redeploy contract b. Once the new contract is deployed, go ahead and execute the function get contract name. You can see here that the function returned the string contract b. This shows that the function we wrote overwrote the parent function. One thing you need to be careful here is that the function signature for the contract and the parent contract has to be the same. For example, here I slightly changed the function to take in a parameter.
00:02:44.692 - 00:03:34.330, Speaker A: After you recompile and redeploy the contract, you'll notice that contract B has two functions, and it did not overwrite the function from contract a. So when you want to overwrite a function from a parent contract, make sure to match the function signature as exactly as it is. So next, let's talk about how to pass parameters into a parent constructor. First, contract A has a constructor that takes in a name as parameter and stores it as a state variable. One way to pass parameters to a parent constructor is like this. Another way is like this, and if you need to pass variable parameters to the parent constructor, this is how you do it. Let's deploy this contract and see an example.
00:03:34.330 - 00:04:18.548, Speaker A: I'll pass in contract B with double quotes as parameter to the constructor of contract B and hit deploy. Click on the deploy contract and click on the function name. You should get contract b back. So what just happened here was that we passed in the parameter contract B to the constructor of contract B. Next, that parameter was passed into the constructor of contract A. The constructor of contract A took that parameter and then set it to its state variable. In this video, we went over how to inherit single parent contracts and how to pass parameters to parent constructors.
00:04:18.548 - 00:04:27.670, Speaker A: In the next video, we'll go over multiple inheritance and how to call parent contracts. Thank you so much for watching and I'll talk to you soon.
