00:00:00.250 - 00:00:41.254, Speaker A: Today I'm going to show you how to use hard hat to do a main net fork and unlock account. For this video I'll show you an example where we would take control of an account that has some die and then transfer it to another account. So the first thing that we'll do is copy one of the tests. Now for this code example, I'm using the code from Unisoft B three examples. This is a project where we have some examples on how to do swaps with unison B three. The link to this code base will be in the descriptions below. So anyways, I'll copy one of the tests that I already have copy and then paste and then I'll rename this to ondogaccount test js.
00:00:41.254 - 00:01:15.634, Speaker A: And then next I'll remove some of the variables. For this example we will be testing with die so I don't need ref nine and USDC and I'll rename this to test undock account. We're not going to need some of the variables like swap examples and ref. However we do need the dai. I'll also declare a variable called whale. This will be an account that holds dai that we're going to be undoc and we're also going to need accounts. We're going to use one of this account to send die from whale to account zero.
00:01:15.634 - 00:01:39.978, Speaker A: Okay, I'll also remove all of the test and then inside the before block. This is part of the code that will be run before any of the tests run. We're not going to need ref, we're going to need die and we're not going to need any of the accounts. Sorry, any of the contracts. And that completes the setup for now. Let's now find the address for the whale. Let's go find an account that has some dai that we're going to be unlocking for this test.
00:01:39.978 - 00:02:10.610, Speaker A: From Etherscan. We're going to look for an account that has some dai. So I'll search for Dai, click on Dai stablecoin and then scroll down and click on holders. This will list both the contract addresses and accounts that have some dai. We won't be able to unlock contracts so we'll have to look for account that has some die. Now from my experience, centralized exchanges are usually accounts that hold Dai. So I'm looking for a name of a centralized exchange.
00:02:10.610 - 00:02:44.530, Speaker A: I'll scroll down, scroll down a little bit further and I see binance eight which is a crypto exchange and FTX exchange. I'm going to click on this just to make sure that it is account. So I'll click on it and you can see that the page reloaded. I'll scroll down and then click on this address. This is the address for the FTX exchange. And just to make sure that this is not a contract, that it is an account, I will scroll down and make sure that there's no contract tabs over here. We don't see any contract tabs over here.
00:02:44.530 - 00:03:23.254, Speaker A: So that means that this address is an account. I'll copy this. Back inside our test file, I'll declare a variable called Diwal Const dial is equal to equal to the FTX exchange address that we copied. Okay, the next step is to unlock this account. The way we unlock our account in Harhat is by calling hardhat impersonate account. So I'll copy this code and then back inside the test file, I'll paste the code snippet that we just copied and then I'll replace this address with the diwal address that we copied from Etherscan. Remove the address, and then inside here we'll type diale.
00:03:23.254 - 00:04:09.850, Speaker A: This unlocks a diwale address so that we can use this diwal account inside our test file. Now notice that here we get some accounts by calling ethers, get signers. We'll have to do the same for the die whale as well in order to use the die whale inside the test. So the next step after unlocking the account is to call. So I'll type whale is equal to awaite ethers, get signer, and then passing in the address of the dial dial. When we copy the code over from the hardhat documentation here we're using the variable HRe, but this variable is not declared inside this test file. So from hardhat I'll import network.
00:04:09.850 - 00:05:23.886, Speaker A: Then instead of calling Hre network, I'll just call network. Okay, we're now ready to use the whale and transfer some die from the whale over to one of the accounts. I'll write some test, so I'll type it undocs account async and we'll say that the amount of die that we're going to transfer is 100 die. So const amount equal to 100 n times ten to the n to the power of 18 and we'll log the balance of the die for the whale. So say console log die balance of whale is await die balance of whale address. And before we transfer 100 die from the whale to one of the accounts, we'll check that this whale has enough die to transfer by typing expect await die balance of whale address to greater than or equal to the amount that we're going to be transferring. And then we'll actually transfer the amount by calling await die connect whale.
00:05:23.886 - 00:06:01.646, Speaker A: So we're sending die as if we're the whale to another account. Dot transfer to account zero address for the amount 100 die. And lastly, we'll log the balance of die for account zero. So die balance of account die balance of account zero address. And I'll remove this code. I made a misspelling over here, so I'll fix this to die connect open the terminal. And then we'll run the test by typing Mpx hardhat test.
00:06:01.646 - 00:06:24.434, Speaker A: The name of the test. The file of the test is under test unlockaccount test Js and our test pass. This is the balance of die of the whale before transferring 100 die. Transferring that 100 die over to the account. The account has zero die. And after the transfer it has some die. So that was a quick video of how to unlock account in hard hat.
00:06:24.434 - 00:06:33.650, Speaker A: And you do that by calling hard hat impersonate account. And then afterwards calling ethers get signer passing in the address of the account that you unlocked.
