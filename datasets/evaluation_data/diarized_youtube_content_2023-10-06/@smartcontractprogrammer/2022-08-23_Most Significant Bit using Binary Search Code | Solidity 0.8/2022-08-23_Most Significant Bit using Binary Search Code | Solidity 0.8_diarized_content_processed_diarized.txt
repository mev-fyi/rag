00:00:00.170 - 00:00:05.150, Speaker A: Let's write a function to find the most significant bit. Using binary search, I'll declare a function.
00:00:05.220 - 00:00:11.614, Speaker B: Called function find most significant bit for.
00:00:11.652 - 00:00:18.734, Speaker A: The input we'll pass in a unit 256. So I'll type un and then name it x. The input x will be the number.
00:00:18.772 - 00:00:21.278, Speaker C: That we're gonna find the most significant bit for.
00:00:21.364 - 00:00:48.826, Speaker A: This function will be external and it will be peer. To find the most significant bit, we're looking for the position of the leftmost bit. For Un 256, there are 256 positions, so the biggest position will be at 255. And this can be represented in un eight. Un eight can represent any number from zero to 255. So we'll type returns un eight and I'll name this variable R. As you.
00:00:48.848 - 00:00:50.294, Speaker D: Saw in the video about the algorithm.
00:00:50.342 - 00:00:51.418, Speaker A: The first thing that we'll need to.
00:00:51.424 - 00:00:53.338, Speaker E: Do is ask the question, is x.
00:00:53.424 - 00:00:54.986, Speaker D: Greater than the middle number?
00:00:55.088 - 00:01:00.254, Speaker A: For Un 256, there are 256 bits, so the middle number will be half.
00:01:00.292 - 00:01:02.798, Speaker B: Of that at two to the 128.
00:01:02.884 - 00:01:05.042, Speaker E: So we will ask the question, is.
00:01:05.096 - 00:01:10.418, Speaker A: X greater than equal to two to the 128?
00:01:10.504 - 00:01:12.146, Speaker E: For the next iteration we'll ask the.
00:01:12.168 - 00:01:14.766, Speaker C: Question, is x greater than or equal.
00:01:14.798 - 00:01:17.814, Speaker F: To two to the 64?
00:01:17.932 - 00:01:21.334, Speaker C: In the next one we will ask the question, is x greater than or.
00:01:21.372 - 00:01:23.974, Speaker F: Equal to two to the 32.
00:01:24.092 - 00:01:27.350, Speaker G: The next will be two to the 16.
00:01:27.770 - 00:01:30.214, Speaker A: And for the next one we divide 16 by two.
00:01:30.252 - 00:01:32.326, Speaker G: So this will be x greater than.
00:01:32.348 - 00:01:35.260, Speaker F: Or equal to two to the eight.
00:01:35.790 - 00:01:37.466, Speaker C: Next one will be x greater than.
00:01:37.488 - 00:01:40.140, Speaker F: Or equal to two to the four.
00:01:41.070 - 00:01:46.142, Speaker A: X greater than, equal to two to the two. In the last case will be is.
00:01:46.196 - 00:01:49.118, Speaker C: X greater than or equal to two to the one?
00:01:49.204 - 00:01:50.858, Speaker A: Okay, so these are the if conditions.
00:01:50.874 - 00:01:51.822, Speaker G: That we'll need to write.
00:01:51.876 - 00:01:53.898, Speaker E: Let's start with if x is greater.
00:01:53.914 - 00:01:56.226, Speaker D: Than or equal to two to the 128.
00:01:56.328 - 00:01:58.914, Speaker E: So first we'll say if x is.
00:01:58.952 - 00:02:02.466, Speaker A: Greater than or equal to two to the 128.
00:02:02.568 - 00:02:03.986, Speaker H: Recall that in the video about the.
00:02:04.008 - 00:02:06.146, Speaker A: Algorithm, when x is greater than or.
00:02:06.168 - 00:02:08.178, Speaker C: Equal to two to the 128, the.
00:02:08.184 - 00:02:09.794, Speaker G: First thing that we did was shift.
00:02:09.842 - 00:02:15.750, Speaker C: This number over by 128 over to the right. So we'll do that by typing x.
00:02:15.900 - 00:02:22.634, Speaker B: Greater than greater than equals 128. This will shift x by 128 over.
00:02:22.672 - 00:02:24.714, Speaker C: To the right and then reassign that.
00:02:24.752 - 00:02:26.410, Speaker D: Value to the variable x.
00:02:26.480 - 00:02:28.794, Speaker A: Since we shifted, we'll keep account by.
00:02:28.832 - 00:02:33.006, Speaker B: Saying r incremented by 128 and we.
00:02:33.028 - 00:02:35.102, Speaker D: Do the same for the case for.
00:02:35.236 - 00:02:36.800, Speaker B: Two to the 64.
00:02:37.650 - 00:02:39.258, Speaker A: If x is greater than or equal.
00:02:39.274 - 00:02:41.440, Speaker F: To two to the 64, we'll say.
00:02:42.290 - 00:02:47.874, Speaker B: Shift it by 64 and then to r add 64.
00:02:47.992 - 00:02:50.740, Speaker D: Then I'll do the same for two to the 32.
00:02:51.430 - 00:02:57.602, Speaker F: If x is greater than or equal to two to the 32, shift it over to the right by 32 and.
00:02:57.656 - 00:03:00.326, Speaker C: Increment the shift count by 32.
00:03:00.428 - 00:03:02.422, Speaker A: We continue this process all the way.
00:03:02.476 - 00:03:07.046, Speaker D: Down until the base case of x greater than or equal to two to the one.
00:03:07.148 - 00:03:08.662, Speaker H: Okay, so I wrote all the if.
00:03:08.716 - 00:03:11.270, Speaker E: Condition except for the base case of.
00:03:11.420 - 00:03:12.998, Speaker A: When x is greater than or equal.
00:03:13.014 - 00:03:13.978, Speaker D: To two to the one.
00:03:14.064 - 00:03:15.386, Speaker H: Recall that from the video about the.
00:03:15.408 - 00:03:17.734, Speaker B: Algorithm for the base case we didn't.
00:03:17.782 - 00:03:21.610, Speaker G: Have to do any shifting of the bits. The only thing that we did was.
00:03:21.680 - 00:03:23.838, Speaker C: Increment total shift by one.
00:03:23.924 - 00:03:25.422, Speaker G: So we'll do that here.
00:03:25.556 - 00:03:28.218, Speaker C: If x is greater than or equal.
00:03:28.234 - 00:03:29.994, Speaker G: To two to the one is simply.
00:03:30.042 - 00:03:37.220, Speaker C: Two, then we don't shift the x by one. Instead we just increment the counter r by one.
00:03:38.870 - 00:03:46.722, Speaker E: And that completes the function for finding the most significant bit using binary search. Let's compile this contract and call this.
00:03:46.776 - 00:03:48.342, Speaker C: Function with some numbers.
00:03:48.476 - 00:03:50.146, Speaker F: So I'll hit ctrl s to compile.
00:03:50.178 - 00:03:55.890, Speaker C: The contract and then I'll deploy it, scroll down and then open the contract.
00:03:55.970 - 00:03:57.730, Speaker A: Okay, so let's see some examples.
00:03:57.810 - 00:03:59.414, Speaker H: I know that the number eight is.
00:03:59.452 - 00:04:00.758, Speaker I: Equal to two to three.
00:04:00.844 - 00:04:02.342, Speaker E: So if you put in eight here.
00:04:02.396 - 00:04:04.226, Speaker G: Then the most significant bit that we'll.
00:04:04.258 - 00:04:06.646, Speaker B: Get back should be three and it.
00:04:06.668 - 00:04:07.558, Speaker I: Is equal to three.
00:04:07.644 - 00:04:10.062, Speaker C: How about nine? Nine is eight plus one.
00:04:10.156 - 00:04:12.254, Speaker A: So the most significant bit should still.
00:04:12.292 - 00:04:13.294, Speaker I: Be equal to three.
00:04:13.412 - 00:04:14.334, Speaker B: And it is.
00:04:14.452 - 00:04:15.886, Speaker F: Let's give it another try.
00:04:15.988 - 00:04:23.280, Speaker B: How about 1616 is equal to two to the four? So if you call find most significant bit, this should return four.
00:04:23.650 - 00:04:26.640, Speaker A: How about one less than 1615?
00:04:27.010 - 00:04:30.620, Speaker B: This should return three and it does.
