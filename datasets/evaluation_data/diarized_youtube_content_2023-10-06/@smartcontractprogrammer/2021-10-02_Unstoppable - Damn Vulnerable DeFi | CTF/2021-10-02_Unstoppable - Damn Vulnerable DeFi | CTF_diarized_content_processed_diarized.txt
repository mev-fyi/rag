00:00:00.490 - 00:00:20.586, Speaker A: Damn vulnerable defi is a CTF challenge. Simulating defi hacks. Let's beat them all. Capture the flag if you want to follow along, scroll down and then go to the repo and download the code. Open zeppelin dambonable defi. Either fork it or clone it. In this video we're going to be unstoppable.
00:00:20.586 - 00:00:43.210, Speaker A: What's the setup and what's the challenge? So there is a lending pool offering flashnomes. If only there was a way to attack and stop the pool from offering flashnodes. Meaning we win the challenge if we disable the flashnode. Let's take a look at the code. I've downloaded the code. Our challenge is unstoppable, which is under contracts. Unstoppable.
00:00:43.210 - 00:01:18.946, Speaker A: Under unstoppables, there are two contracts and the flash loan function is inside the contract unstoppable lender. Our challenge is to disable this function. So let's take a look at this function. What does it do? First, we'll be able to request amount to borrow the balance of the token that we're going to borrow. Damn valuable token must be greater than or equal to the borrow amount. And then it checks that pool balance is equal to the balance before. Balance before is the actual balance of the dam valuable token that this contract owns.
00:01:18.946 - 00:01:40.554, Speaker A: So what is pool balance? Let's take a look. When I search pull balance, there are four places that it is used. The first place is it is declared as a state variable. The next place is when we deposit the damn valuable token. It updates the pull balance. And the last place is inside the flash loan. It checks that the pool balance is equal to the balance before.
00:01:40.554 - 00:02:25.900, Speaker A: Okay, let's move on. Let's see what the rest of the code for flash loan does. So after it checks that the pool balance is equal to balance before, then it transfers the damn valuable token to message sender for the borrow melt and then calls a callback for flash loan. And after the flash loan is completed, it checks that the balance after is greater than or equal to the balance before. Pause the video here if you want to try out this challenge on your own. Okay, so let's go over how to hack this contract. Disable the flash loan there are four places that this function can fail, but let's assume that the damn valuable token is bug free.
00:02:25.900 - 00:02:55.006, Speaker A: There are no bugs inside it. It works as expected. So that probably means that we should ignore these requires. There isn't much we can exploit here either. So the only place that we can do an exploit is over here. Is there a condition where the pool balance is not equal to the actual balance of the token. Well, recall that the pool balance only changes when a user deposits the token.
00:02:55.006 - 00:03:39.514, Speaker A: But how else can we change the balance of the token? Well, we can do that by simply sending the token directly to this contract without calling the deposit token. When we do that, balance before will be greater than pool balance and the flash loan is disabled. So let's write the exploit for this contract. So I'm going to open tests, scroll down, click on unstoppable, and then open unstoppable challenges. Scroll down, and we write our exploit inside here. The way to disable the flash loan was to directly send the token to the flash loan contract. So we'll do that here by calling token transfer to the flash loan pool.
00:03:39.514 - 00:04:05.638, Speaker A: And it doesn't matter how much we transfer to the flash loan, as long as the pool balance is not equal to the actual balance of the token inside the pool. Let's see if our exploit works. I've opened the terminal and I'm going to type NPM. Run unstoppable. We passed the first challenge. Congratulations, you're now a defi hacker. Thanks for watching.
00:04:05.638 - 00:04:06.572, Speaker A: See you in the bye. Next challenge.
