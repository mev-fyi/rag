00:00:00.650 - 00:00:42.090, Speaker A: In this video I'm going to show you how block that timestamp can be a vulnerability in your smart contract. The basic idea of this exploit is that miners can manipulate block that timestamp with some constraints. The first constraint is that the timestamp must come after the timestamp of the previous block. And the second constraint is that it cannot be too far in the future. So a minor can submit a timestamp for the next block within these constraints. With these two constraints in mind, let's see how a miner can fudge the timestamp around to his advantage. Let's imagine that we have a contract called roulette and it has ten ethers stored in the contract.
00:00:42.090 - 00:01:30.490, Speaker A: This contract will reward you with all of the ethers stored in the contract if you can send a transaction at a right timing. And what is the right timing to send the transaction? Well, it's calculated using block timestamp. So let's examine how to play this game. To play this game, you'll have to call the function spin. You'll have to send one ether to play, and if block timestamp is divisible by seven, then you'll win all of the ethers stored in this contract. So as a miner, what would you do if you see that there's ten ethers stored in this contract? Well, you have some freedom to submit a timestamp within the constraints that we discussed above. So here's what the miner would do to win the reward.
00:01:30.490 - 00:02:18.358, Speaker A: The miner would send a transaction to play this game by calling the function spin and then try to submit a timestamp that is divisible by seven. If the miner is lucky enough to mine the next block, then he'll win the reward. Now, as a user, we don't have much control over what the value of block that timestamp will be. So our chance of winning this game will be one out of seven. However, if you're a miner, then you have some control over what the block that timestamp will be. Furthermore, let's say that you are a powerful miner and you have a mining power of 30% of the whole network. So this will mean that you have a minimum of 30% of winning this game, which is a better chance than one out of seven.
00:02:18.358 - 00:03:08.006, Speaker A: Therefore, if you're a minor, then you have an incentive to fudge the timestamp around. That was an example of how block that timestamp can be manipulated to exploit your contract. The way to protect your contract from this exploit is to not use block that timestamp if possible. If you have to use block that timestamp inside your contract, then follow the 15 2nd rule. And what is the 15 2nd rule? Well, it states that if the scale of your time dependent event can vary by 15 seconds and maintain integrity, then it is safe to use block timestamp. And what this means is that if a contract's code does not rely on a time interval of less than 15 seconds, then it's probably safe to use block that timestamp. All right, that's all I got for this video.
00:03:08.006 - 00:03:10.580, Speaker A: Thanks for watching and have a nice day.
