00:00:00.490 - 00:00:36.360, Speaker A: Global variables store information such as blockchain, transaction, and account that call the function. I'll introduce you to some global variables that you'll be using most often. We'll create your function so that later on, after we compile the contract and then deploy it, we'll be able to see the actual value stored inside a global variable. So we'll say function. We'll name this function global, ours, and it's going to be external. Now I'm going to use a keyword that you have not seen it yet, and it is called view is like peer. It is readonly function.
00:00:36.360 - 00:01:02.960, Speaker A: Unlike peer functions, view functions can read data from state variables and global variables. I'll make another video explaining the difference between view and peer. Let's move on. For this example, we're going to be returning some values stored inside the global variable. So we'll say returns. And inside the parentheses we're going to be returning some values. The data type of these values we'll fill out later.
00:01:02.960 - 00:01:39.930, Speaker A: The first global variable that I'm going to introduce that you'll probably be seeing a lot is called message sender. This is a global variable that stores the address that called this function. For example, let's say that Alex has an account and from her account she calls this function global bars. Then message sender will be equal to her account. The data type of message sender is address. We'll return the value stored in message sender later. So we'll store it in a variable and I'll name this variable sender.
00:01:39.930 - 00:02:14.310, Speaker A: The next global variable that I will introduce here is called block timestamp. This variable stores the Unix timestamp of when this function was called. If I call this function now, then timestamp will be equal to the Unix timestamp of now. The data type of block timestamp is un. We assign it to a variable named timestamp so that we can return it later. The last global variable that I'll introduce here is called block number. This stores the current block number.
00:02:14.310 - 00:02:58.182, Speaker A: The data type for block number is unit, and we'll assign it to a variable named block num. Let's now return these variables so that we can see what the value of these variables are. So we'll say return parentheses, sender, timestamp, block num to match the data type of what we're going to be returning here. We'll type in address un for the timestamp and un for the block number. Okay, let's compile this and then deploy it. I'm going to compile this contract using the shortcut control s. Once the contract compiles, you'll see a green check over here.
00:02:58.182 - 00:03:15.620, Speaker A: So we'll deploy it, deploy the contract, expand the contract, and then call global bars the account tag. Call this function. Message sender is equal to this address over here. That's the timestamp and that's the block number.
