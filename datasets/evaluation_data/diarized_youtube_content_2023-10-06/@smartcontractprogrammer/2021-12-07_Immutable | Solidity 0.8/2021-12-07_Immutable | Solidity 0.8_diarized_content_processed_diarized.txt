00:00:00.490 - 00:00:39.346, Speaker A: Let's say that I have a state variable that I want to initialize when this contract is deployed. And once this contract is deployed, it's going to never change. Here I have a state variable named owner, and it is set to message sender. And let's imagine that inside this contract, this owner will never change. So ideally I want this state variable to be kind of like a constant, except that I can initialize it when the contract is deployed. In this case, we can declare a state variable as immutable. What this will do is we'll be able to create a state variable that is like constant, except that we can't set it only once when the contract is deployed.
00:00:39.346 - 00:01:36.326, Speaker A: And just like a constant declaring a state variable as immutable, you'll be able to save some gas. And to show you that immutable variables use less gas than state variables, I've created a function here that access the variable owner, and we're going to call this function twice, once with the immutable removed, and once when we declare this variable with the keyword immutable. So I'll compile the contract and then deploy it, and then call the function foo. When we use a regular state variable to call the function foo, it used about 45,000 gas. So let's now call the same function, except that we'll declare this state variable as immutable, compile the contract again, and then deploy the contract, and then call a function foo. So this time it used about 43,000 gas using a regular state variable. This function foo used over 45,000 gas.
00:01:36.326 - 00:02:18.966, Speaker A: However, when we declare the same variable as immutable, then it used a little over 43,000 gas. So you can see that by declaring a variable as immutable, it saved some gas. Again, remember that immutable variables can only be initialized when the contract is deployed, and you won't be able to change it later on. So you'll see some smart contracts initializing an immutable variable inside a constructor. For example, let's declare a constructor it, and inside the constructor we set the owner to message sender, and then we also remove this. So this is how you declare an immutable variable. And this is one way of initializing it.
00:02:18.966 - 00:02:25.330, Speaker A: Immutable variables are like constant, except that you can initialize it only once when the contract is deployed.
