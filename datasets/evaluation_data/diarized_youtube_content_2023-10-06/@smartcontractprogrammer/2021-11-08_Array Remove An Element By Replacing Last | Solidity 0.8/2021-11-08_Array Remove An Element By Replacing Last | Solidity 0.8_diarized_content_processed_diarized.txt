00:00:00.410 - 00:00:43.222, Speaker A: We looked at removing an array element by shifting elements to the left. So for example, here I have array with elements one to six and I call remove on index two which will be three. In this case I will shift all the elements on the right of the element that I want to remove over to the left. So I'm going to be removing four, five, six over to the left by one. After shifting each element to the left, I'll have an array that looks like this one, two, four, used to be three. We replaced it with the element on the right, five, six and then the duplicate six. We remove the last element since it is shifted to the left and we end up with an array.
00:00:43.222 - 00:01:17.330, Speaker A: 12456. As you can imagine, this is not a gas efficient way to remove element from array. So in this video I'll show you a more gas efficient way to remove element from an array. The basic idea for removing an array element more efficiently than shifting each element to the left is to replace the element that you want to remove with the last element. For example, let's say that I have array of 1234 and I want to remove the array element at index one. So that will be two. I am going to replace two with the last element which is four.
00:01:17.330 - 00:01:40.394, Speaker A: So I bring this four over to in place of two and then I remove the last element. So I will end up with an array. One, four, three. Let's take a look at another example. So continuing with this array, now I have an array, one, four, three. And now let's say that I want to remove the last element which will be at index two. So I want to remove this three.
00:01:40.394 - 00:02:09.174, Speaker A: I'm going to replace the last element with the last element. Since three is already the last element, there is no change. And then finally I pop the last element and I end up with one and four. Notice that this algorithm doesn't shift elements of the array to the left. It only requires two operation. Replacing the element to remove and then popping the last element. So you can see that this is a more efficient algorithm than this one over here.
00:02:09.174 - 00:03:02.658, Speaker A: However, as you can see, removing the element this way preserves the order of the array since we're shifting elements to the left, whereas this more efficient way of removing an array element, the order is not preserved since we're replacing the element that we want to remove with the last element. So we're shuffling around the array elements. Okay, let's now write the code for this algorithm. First we will replace the element that we want to remove with the last element. So we'll type r of index is equal to the last element, which will be r of r length minus one. After we replace the element with the last element, we need to pop the last element. So we'll do that by typing r pop and this completes the algorithm.
00:03:02.658 - 00:03:31.822, Speaker A: Let's write a test using these scenario as test cases, and then we'll execute the test in remix. I'll name this function test. It's going to be external. We'll first initialize the array to be 1234. Next, we'll remove the array element at index one. So I'll type remove one. After removing one element, we should have an array that looks like this.
00:03:31.822 - 00:04:03.350, Speaker A: So we'll assert that the length of the array is equal to three. The first element is equal to one, the second is equal to four, and the third is equal to three. Next we will write a test for this situation. If this part of the code passes, then we know that the array looks like this one, four and three. So when we call remove the second index of the array, we should have an array that looks like this one and four. I'll call remove the second index. After we remove the last element, we should have an array that looks like one and four.
00:04:03.350 - 00:04:31.370, Speaker A: The length of the array should be equal to two, the first element should be equal to one, and the second element should be equal to four. Let's compile this, deploy it, and then run the test. So I'll hit Ctrl s and then deploy a contract, scroll down, expand the contract, and then call test, and we pass the test. So in summary, a gas efficient way to remove an element from an array is to replace the element that you want to remove and then remove the last element.
