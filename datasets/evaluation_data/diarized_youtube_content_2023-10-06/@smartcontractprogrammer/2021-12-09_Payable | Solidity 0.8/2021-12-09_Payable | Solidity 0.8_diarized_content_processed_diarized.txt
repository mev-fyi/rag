00:00:00.330 - 00:00:27.266, Speaker A: The payable keyword adds functionality to send and receive ether. Here I have a function name deposit and I want this function to be able to receive ether. Then what you have to do is add the keyword payable. Now you'll be able to send ether. When you call this function, you can also make address payable. So for example, I'll create an address public, I'll name it owner. Then I'll add the keyword payable.
00:00:27.266 - 00:01:03.040, Speaker A: By declaring an address as payable, this address will now be able to send ether. How to send ether? I'll cover that in another video. Now let's say that I have a constructor and I want to initialize this owner state variable to message sender. So I'll say owner is equal to message sender. Now when you try to compile this contract, the compilation will fail because message sender is a type of address. But here the owner is a type of payable address. So what we'll have to do is cast message sender as a payable address.
00:01:03.040 - 00:01:43.280, Speaker A: Now I'll show you a demo of deposit sending ether to this contract. And to show you that this contract has received ether I'm going to create a helper function that will query the balance of ether stored in this contract. So I'll create a function, I'll name it get balance. It's going to be external view and it's going to return the balance. So it will return a unit. To get the balance of ether stored in this contract we will type return address this balance here I made a mistake. The keyword payable has to come right after the type address.
00:01:43.280 - 00:02:41.562, Speaker A: I'll compile the contract, deploy the contract, scroll down, open the contract, and we'll call deposit to send ether to this contract payable and to send ether. We'll scroll back up and say we'll send one way, scroll back down and then call deposit to get the balance of ether stored in this contract. We'll call get balance and it returns one. So there is one way of ether stored in this contract. We sent the ether by calling the function deposit and this function can receive ether because it is declared as payable. If you were to omit the keyword payable then this function will no longer be able to receive ether. And to show you this, I'll compile the contract and then redeploy contract again and we'll call the function deposit sending trying to send one ether, put in one call deposit and notice that the transaction failed.
00:02:41.562 - 00:02:46.890, Speaker A: This is because we try to send ether to a function that is not declared as payable.
