00:00:00.250 - 00:00:27.826, Speaker A: Let's learn how to write conditional statements using assembly. In solidity. We will look at how to write if statements switch statements, and then we will look at some examples. To write an if condition inside assembly, you would type if followed by some expression that evaluates to a number. If the number is greater than zero, then this condition means that it is true. If it is equal to zero, then this means that this condition is equal to false. And also inside assembly there is no else statement.
00:00:27.826 - 00:01:02.490, Speaker A: Here we have an input x and let's compare this x whether this is less than ten. So say less than. Is x less than ten? If x is less than ten, then to this variable z. Let's assign it to 99. Z is equal to 99. So what's going on here is if x is less than ten, then this part of the code will return a one, and then to the variable z we assign 99. However, if x is greater than or equal to ten, then this part of the code will evaluate to zero or false.
00:01:02.490 - 00:01:26.438, Speaker A: So we did not assign z to any value. Now notice that we don't have any else calls inside assembly. There is no else calls. If you wanted to handle the case where x is greater than or equal to ten, then we would need to write another if statement. Okay, so this is an example of an if inside assembly. The other conditional statement that we can use inside assembly is called switch. So I'll write the switch example over here.
00:01:26.438 - 00:02:06.494, Speaker A: Again, we have an input x and let's use a switch statement on this input say switch x. Let's say that if x is equal to one, say case one. Then to this variable z we assign ten. Z is equal to ten. Else, let's say if x is equal to two case two, then we assign z equal to 20. And then for the rest of the case we'll do a default, default, default z to let's say this will be equal to zero. Next, I'm going to show you some examples of if statement and switch statement using assembly.
00:02:06.494 - 00:02:42.250, Speaker A: So for example, let's write a function that will return the minimum of x and y using assembly. So I'll type assembly, and for this example I'm going to use the if statement. So inside here I'll say if less than if x is less than y, then to this output z we assign the smaller number which is x. Otherwise again there is no else statement. So first let's assign z to Y. Say z is equal to Y. So notice that here this is solidity code, and inside here, this is the code for assembly.
00:02:42.250 - 00:03:20.426, Speaker A: First we assign the output z to Y, and if x is less than y, then the output will be x. So this is an example of how to write min using assembly. Okay, next I'm going to show you an example of using the switch statement. Let's write a function that will return the maximum of x and y using assembly. So again I'll type assembly, and this time we will use the switch statement. So I'll type switch, then I'll compare x and y. Is x greater than y? If x is greater than y, then this statement over here will return a one, otherwise it will return a zero.
00:03:20.426 - 00:03:47.478, Speaker A: So the two cases that we'll need to handle are case one. So this is the case where x is greater than y. Then to the output z we'll sign x. X is the greater of x and y. Otherwise, if this part of the code returns a zero, then this means that y is greater than or equal to x. So we will assign y to the output z. Default z is equal to Y.
00:03:47.478 - 00:04:05.814, Speaker A: Okay, so that completes the function min and max. Let's try compiling this contract. I'll hit Ctrl s and the contract compiles. Let's deploy this contract. Deploy the contract, and let's call the function min and max. What is the min? One and two. Well, it's equal to one.
00:04:05.814 - 00:04:11.820, Speaker A: Okay, what is the max? Three and five. The max is fine.
