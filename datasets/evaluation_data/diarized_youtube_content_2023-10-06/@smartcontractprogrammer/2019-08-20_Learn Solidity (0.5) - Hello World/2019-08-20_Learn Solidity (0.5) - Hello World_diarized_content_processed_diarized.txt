00:00:00.170 - 00:00:11.418, Speaker A: Hey guys, I'm Taz and welcome to the very first episode of learning Solidity by example. In this video I'm going to show you how to write a basic smart contract in solidity.
00:00:11.514 - 00:00:13.054, Speaker B: I'll show you how to write your.
00:00:13.092 - 00:00:35.606, Speaker A: First smart contract, compile it, deploy it to a blockchain simulator, and finally run the contract all inside your browser. Links to the code are in the description load. So first go to remix ethereum.org. This is our online code editor and our blockchain simulator. Once the page loads, click on the.
00:00:35.628 - 00:00:39.430, Speaker B: Solidity button to create your first contract.
00:00:39.510 - 00:00:44.970, Speaker A: Go to the file Explorer and click this plus button and create a new file.
00:00:45.550 - 00:00:52.206, Speaker B: We'll name our smart contract hello world. The very first thing that you will.
00:00:52.228 - 00:01:10.226, Speaker A: Want to do in your contract is to specify the compiler version. At the moment, there seems to be a bug in remix where the compiler with version 0.5.1 and 0.5.2 do not work. So we'll specify our contract version to.
00:01:10.248 - 00:01:13.330, Speaker B: Be greater than or equal to 0.5.3.
00:01:13.400 - 00:01:19.590, Speaker A: And less than 0.6. We start with a keyword contract and.
00:01:19.660 - 00:01:21.240, Speaker B: We'Ll name it hello world.
00:01:21.770 - 00:01:24.790, Speaker A: This is actually a valid contract, but.
00:01:24.860 - 00:01:27.898, Speaker B: It does nothing at all. So let's make it a little more interesting.
00:01:27.984 - 00:01:35.980, Speaker A: By storing a greeting message, we create a string variable. Let's name it greet with our message hello World.
00:01:37.070 - 00:01:39.402, Speaker B: At the moment, this variable is only.
00:01:39.456 - 00:01:41.466, Speaker A: Accessible inside this contract.
00:01:41.578 - 00:01:43.934, Speaker B: We can make it accessible outside the.
00:01:43.972 - 00:01:46.320, Speaker A: Contract by putting the keyword public.
00:01:46.690 - 00:01:53.486, Speaker B: I'll explain more about the keyword public in another video and our contract is completed.
00:01:53.598 - 00:01:55.540, Speaker A: So now let's compile it.
00:01:55.990 - 00:02:05.090, Speaker B: Click this solidity icon. Make sure that the compiler is within our range, greater than equal to 0.5.3.
00:02:05.160 - 00:02:09.478, Speaker A: And less than 0.6. Next, click on this compile button.
00:02:09.644 - 00:02:18.140, Speaker B: If you don't see any errors or warnings here, that means you are good to go. Also, you'll see a green check here.
00:02:18.670 - 00:02:21.546, Speaker A: Next, we'll deploy our contract onto a.
00:02:21.568 - 00:02:25.302, Speaker B: Blockchain simulator running inside your browser.
00:02:25.446 - 00:02:28.330, Speaker A: So go to deploy and run transactions.
00:02:28.750 - 00:02:31.118, Speaker B: Make sure that our smart contract hello.
00:02:31.204 - 00:02:34.990, Speaker A: World soul is selected and hit deploy.
00:02:36.930 - 00:02:44.158, Speaker B: You can see that our contract is deployed here. Let's check that we can get the greeting message.
00:02:44.324 - 00:02:48.400, Speaker A: Click on the greet button and you can see here that we get our message.
00:02:50.770 - 00:02:58.162, Speaker B: So, to recap, we learned how to write our first smart contract. Set the compiler version using the keyword.
00:02:58.226 - 00:03:00.850, Speaker A: Pragma and how to create a publicly.
00:03:00.930 - 00:03:08.500, Speaker B: Accessible variable using the keyword public. Thanks for watching and see you in the next video.
