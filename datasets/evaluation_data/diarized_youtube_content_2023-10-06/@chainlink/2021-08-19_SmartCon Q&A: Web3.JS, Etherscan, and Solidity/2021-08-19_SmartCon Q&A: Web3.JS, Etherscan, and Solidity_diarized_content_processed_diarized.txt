00:00:05.450 - 00:00:41.850, Speaker A: Hello everyone, and welcome back. This is the final Q a session of the day with our last two groups of speakers here. So just remind everyone how this has been working throughout the day. If you have questions, you can shoot them to me on Twitter, you can send them in the chat. We've got all these different channels open and so we've already collected a bunch of questions from folks, but feel free to please keep the questions is going. I do want to apologize that if it's a super specific or super technical question that's only going to apply to a smaller group of people, we might end up skipping it because we want to try and make sure that all the people watching are getting lots and lots out of this. So let's go ahead and dive in.
00:00:41.850 - 00:00:52.190, Speaker A: And so one of the first questions on governance is for Kawei. So does government regulation affect any of your mental models around governance?
00:00:53.890 - 00:01:42.430, Speaker B: Yeah, this is a bit of a different subject because regulation is kind of the company is in charge, the project, the legal entity is in charge. While governance itself is more about the decentralized governance itself, it's more about the evolution of the protocol and how changes are being implemented. So definitely one thing shouldn't overlap the other you shouldn't be doing any non compliance and off the records updates to your protocol, especially regarding data management and so on. But there are two different concepts. It's good to keep in mind the regulation to the upgrades and the flow of your organization. But governance by itself is more focused. Centralized governance itself is more focused on the evolution of the protocol.
00:01:45.410 - 00:02:18.070, Speaker A: Awesome. The next question is for Greg and Wyatt. So it sounds like from your story you're doing a lot of code spellunking. You said a lot of the code is written back in 2014, which when I think more broadly about the blockchain space as a whole, that's probably not uncommon, especially as a lot of traditional web projects are being ported into the blockchain ecosystem. A lot of developers are going through the same things of migrating from legacy JavaScript up to typeScript. What have you learned? Or what advice do you have for other people that are trying to take old code and bring it into the modern era?
00:02:19.390 - 00:03:32.320, Speaker C: Yeah, that's a really good question. I would have to say that we made two really call them valiant attempts at actually rewriting the existing stack. Depending on how old we're talking, I would almost say it's always better to do a rewrite and doing an attempt at the rewrite such a way that you maintain your forward compatibility or backward compatibility for the users consuming it and then doing the plumbing in the background and changing out completely. That's probably the easiest way to do it, we found after like two, three attempts. And the main reason for that is just because depending on how old your library is, like web, three Js use the keyword arguments as a catch all for options, instead of actually defining options clearly and doing error checkings on that. So because of it, really, it just makes it awful, like living hell. So rewrite from scratch and try to match the API and then really think hard about how to make it modular because, yeah, it won't get better if you use the existing code.
00:03:34.370 - 00:03:36.754, Speaker D: Okay, if I can add something to that real quick.
00:03:36.952 - 00:03:37.762, Speaker A: Go ahead.
00:03:37.896 - 00:03:38.580, Speaker B: Sorry.
00:03:39.510 - 00:04:21.600, Speaker D: Yeah, I would say that it definitely depends how old your code is going to be, because I think you can definitely get in a situation where you can bite off more than you can chew if you just try to rewrite everything from scratch. And so that is definitely something to keep in mind. Look at your team, your resources, look at what's really important to you. Do you actually need to rewrite it? Can you rewrite certain sections? Can it be like a modular upgrade? Yeah, try to employ different strategies, because just deciding that, okay, we're going to deprecate the entire thing and start from ground zero, well, then you also lose any novel ideas that you might have come up with in the existing code and stuff. You definitely want to carry any of the innovations forward and stuff like that.
00:04:22.050 - 00:04:49.660, Speaker A: Thank you. Yeah, we as engineers always want to rewrite, and it's not always the best idea for, especially when we have lots of users. One of the questions in the chat was more for Kawaif. I think this question comes from the perspective of a lot of blockchain newbies don't necessarily understand what the power of governance is and what governance is. So how would you explain blockchain governance to a newbie, someone who'd never heard of that concept before?
00:04:51.950 - 00:05:34.242, Speaker B: Well, let's just start with tokens. What are tokens nowadays? It's not a share of the project. It's an accessible way of you investing in a company that's decentralized, and you can go there and buy twenty four seven and sell 24/7 it gives you that freedom. So plugging into that is governance. So it's basically a novel way of getting the community to participate in your project and the evolution of it. And if you compare the blockchain communities with any other one in the software development, from AI to robotics to anything, blockchain is way more engaged. It's all about the users, all about the marketing.
00:05:34.242 - 00:05:54.750, Speaker B: And users want to work for you for free because they want to make the project succeed, they want to see you pump and so on. So governance is an accessible way of giving users that chance and that feeling that they are doing something to protect their investment and to bring something new to the table.
00:05:56.930 - 00:06:10.260, Speaker A: Okay. And Kawi, I'll give you another question here, or two closely connected questions. So one is that is, how do you get your community ready for governance? Because one of the things in your presentation you said was make sure you get your community ready. How do people actually do that?
00:06:11.510 - 00:06:51.786, Speaker B: Sure. So first of all, build up active community. Not only people there doing price talk and talk about when pump, right? They're actually going in there and talking, actually questioning your development team and saying, oh, where's the delivery? And so on. And that can be done in multiple ways, like telegram. It's the usual way. But I particularly like way more discord. And since we're talking about Discord, Discord also gives you some options to get your community engaged in governance in a very off chain way, like you can do voting directly with reactions from Discord.
00:06:51.786 - 00:07:16.470, Speaker B: It's a good first step, zero step, zero implementation time. You can just plug it in and start actually getting that sense from the community that they are helping and they are actually moving things forward with you. And then you can move on to all the other suggestions that I brought, like snapshot.org or even implementing something on chain.
00:07:18.330 - 00:07:32.800, Speaker A: Okay. And there's a very closely related question which I think is all about the question of can you actually get enough participation? It says, what can be done in next gen governance models to increase community participation such that decisions are representative of the sufficiently big community.
00:07:34.770 - 00:08:14.182, Speaker B: Sure. So first of all, decrease costs. This is a very big topic in this conversation of onchain governance. And we have some options. There are some good layer two technologies that are coming out there and also above all, ux. It's not that friendly for users to go into sign a transaction and send or go to ether scan to directly interacting there. If you can do something that even your grandma would know how it works and it's just about clicking here and confirming there, then it actually can bring away more adoption.
00:08:14.182 - 00:08:26.160, Speaker B: So I think those are the two main topics. First of all, making more democratic and less costly and then making it more accessible. And thank you for the question. It's a very good one.
00:08:27.490 - 00:08:47.540, Speaker A: Okay. And back to Greg and Wyatt. The question came, when is version four coming out? You pitched it very well. It sounds very exciting. Modern typescript new APIs, better APIs, less fragile code. I think developers want that.
00:08:49.110 - 00:08:50.050, Speaker C: Wyatt.
00:08:52.470 - 00:09:39.818, Speaker D: Yeah, of course the journey has been interesting for sure. We're now getting new help. Chances acquired node factory so now we have additional developers to put add on to the effort. And so I want to say soon TM we're hoping what we're going to do is the RPC wrappers. So like the Web three e packages is kind of like getting closer to its finalization stage. And so we're probably going to kick out like a beta release for that pretty quickly, I would hope in the next week or so, maybe two. And then we're going to be working on the rewrite of the web three ETH contracts package, as well as we're going with a different strategy for wallets and stuff with the web three ETH accounts rewrite.
00:09:39.818 - 00:09:54.300, Speaker D: So that one kind of has to come in tandem with the contracts and stuff. And so that one will be coming shortly. So definitely I would hope for it like in the next month or something like that relatively soon.
00:09:57.230 - 00:10:19.250, Speaker A: And someone sent me a joke that said maybe they should have called it web four Js. All right, back to Kawei. Let's say you have an on chain governance model, but you want to move to a cross chain governance model. Do you have any tips for making the migration?
00:10:21.750 - 00:11:05.918, Speaker B: Well, at Jigstack we already started off with a more cross chain governance approach, but depends on what your current status is. You could wrap your token, for instance, to do something with more freedom moving across chains. And yeah, the regular tip stays the same. Try to do things modular and avoid big migrations. Right. If you can do things by step and bring something new little by little, it's probably best. And try to keep in mind that no one likes big migrations and having to deposit tokens somewhere to mint new tokens and do all that stuff.
00:11:05.918 - 00:11:27.830, Speaker B: So if you want to do a big migration, do it at once and a lot of planning and thought put into it, or you can just put out some more modular contracts out there that your users can interact little by little to try to get to this paradigm of cross chain governance.
00:11:31.290 - 00:11:49.740, Speaker A: Awesome. And then question for the web three team, are there any audacious features that are in your roadmap that you haven't started working on, like support for other chains or anything like that?
00:11:52.920 - 00:12:46.090, Speaker C: Good question. That's why we're building a plugin system, so that people can just throw it in. So once that kind of whole system gets worked out, I'd highly encourage everybody, anybody that wants a specific chain, toss up an issue, we can put it, triage it, but can't guarantee that we'll get to it right away. But at least there'll be a really clean way of getting access to it. And the nice thing with the plugin system is you'll be able to basically inherit all the goodies that come with web three Js without worrying about mutating any other namespaces or polluting them. Because we'll basically just be using the node event emitter to effectively communicate things from the parent. So something changes, like the network or whatever, you can just directly funnel that back down and you can handle it in your plugin however you want.
00:12:48.540 - 00:12:49.144, Speaker A: Awesome.
00:12:49.262 - 00:12:53.384, Speaker C: But that would be the audacious thing, getting that.
00:12:53.502 - 00:13:11.020, Speaker A: Yeah, no, anytime I see a plugin system where developers care about actually enabling people to build plugins, it's very healthy and good to see. Next question is back for Kawei. Can chain link oracles be integrated into governance protocols?
00:13:11.920 - 00:14:02.380, Speaker B: 100%. This is what we were talking about, cross chain governance using oracles. So this is a good way to unify the way that your token is interacting with data as a whole and bring it all down into one single governance module that's running somewhere. Doesn't really matter where. But if you can get that sort of standardization on where the data is actually coming from and how the token is interacting with it, and what's the weight of it, then you're good to also bring up a new, maybe novel cross chain governance system. Currently there are not many examples. People are usually getting into more embedding data into the token or giving the token some special functionalities that enable cross chain.
00:14:02.380 - 00:14:32.200, Speaker B: But I think this is not a growing trend. I think that with the great work that chainlink is doing and how oracle systems are becoming more and more performatic, and a lot of projects are subsidizing it as well. So once costs go down and features go up regarding oracles, which is what's currently happening, we can start seeing way more oracles being involved in the cross chain governance.
00:14:35.020 - 00:14:52.400, Speaker A: Awesome. And let me just try and sneak in one last question for you, Kawei. You mentioned in your talk that testing and monitoring are important, but how do you guarantee or how do you ensure that testing and monitoring is happening with the decentralized governance?
00:14:55.940 - 00:15:53.664, Speaker B: Like I was mentioning, monitoring is a bit of a guaranteeing that monitoring is happening, something that's more up to the team to do and ask for the community to help out as well, and making it also public. And you can almost be sure that there will be somewhere, somewhere in the world that is going to be looking at your code and how it's performing alongside you and your depth. But now regarding the testing, we're not talking about hard hat tests or truffle tests. It's actually on chain tests that are running in the same block that you're actually redeploying or upgrading your contract. So it's a deterministic way of assuring that the test is happening. And for that you can look at the USDC V two upgrade post that I linked in my presentation and it's a very good example of that. So it's deterministic.
00:15:53.664 - 00:16:06.710, Speaker B: The tests are actually happening. You're asserting everything that needs to be asserted so you have an extra layer of security and safety from your side that the rollout to succeed it.
00:16:08.840 - 00:16:25.480, Speaker A: Awesome. All right, well, I want to thank all of our speakers here from this last block. These were fantastic talks. Thank you so much for the Q and A. That's.
