00:00:00.570 - 00:01:00.090, Speaker A: Welcome to Chainlink Research Reports, a YouTube series featuring research across the web, three industry and academic fields with scholarship that expands our understanding of decentralized technologies. I'm Dr. Andy Boyen from Chainlink Labs, and today I'll be joined by Dr. Sharam Destar, an IEEE Fellow and full professor at the Technical University at Vienna in Austria, and his coauthors from the University of Sevilla, professors Pablo Fernandez, Jose Maria Garcia and Antonio Ruiz Cortez. Elastic smart contracts and blockchains proposes a reference architecture for smart contract computation that facilitates a multi chain and highly complex world of off chain data, such as those found in Internet of things or IoT based ecosystems. There's a challenge in designing smart contracts to react to various levels of data abstraction, for example, numeric data versus narrative data. Thus, elasticity is proposed as a reference architecture to enable smart contracts to trigger from analytics based on a complex web of off chain sensors, data and multiple blockchain environments.
00:01:00.090 - 00:01:09.010, Speaker A: Professor Destar will present the paper, followed by A-Q-A session led by Chainlink Labs researcher Dr. Jason Anastasopoulos and all of the paper's co authors.
00:01:14.630 - 00:02:20.694, Speaker B: Welcome to this talk on an elasticity framework for smart contracts. My name is Shahram Dustar from the Technical University of Vienna in Austria. What are smart contracts? So, smart contracts have been developed some eight years ago. They provide computation facilities to blockchains, so to enable automatic analysis and complex transactions. So however, there is a problem when there is information flow that depends on such variables such as time, quality or resources. Therefore, we introduce the idea of elastic smart contracts to actually address that problem of having such variables such as time, quality, resources, cost and others in order to, depending on those criteria, trigger different aspects of the blockchain. What is elasticity to begin with? So we have started like ten years ago to focus on elasticity as one of the resilience building blocks.
00:02:20.694 - 00:02:38.202, Speaker B: Elasticity is a property from physics which says something about a property of returning to an initial form or a state following some deformation. So this means that when you put stress on a material, it stretches, and when you take it away, it shrinks back when the stress is removed.
00:02:38.346 - 00:02:40.830, Speaker C: Similarly, the idea that we follow is.
00:02:40.900 - 00:03:45.858, Speaker B: Inelastic computing to create a system which is able to address, depending on the elasticity constraints defining in a three dimensional space, how many resources you would need. What are the quality attributes like data input and output, quality of the data, granularity, et cetera, resolution, and what are the cost requirements. So within this three dimensional space, then we can actually create a system and define a system which is able to react and adapt the application accordingly. Now, we want to apply this idea of elasticity within this three dimensional space to the domain of blockchain. So, these elasticity dimensions we look at like resources, quality and cost are the following. So the resources basically range from the information provider that can correspond with things. So for example, sensor data is coming in, or that can be software services.
00:03:45.858 - 00:04:47.400, Speaker B: So for example, a government information system, or can be even going back to people. So for example, an approval from a stakeholder in the system. Depending on the type of the resource, a taxonomy of the quality aspects can be defined, such as the resolution of sensor data, or the availability of government information, or the readiness of a stakeholder. Thirdly, the costs involved in the process can also be structured in terms of the resource type. So for example, the energy cost of the sensor, or the infrastructure cost of the information system, or the personnel cost. So in these three dimensions, we can define different ways of how the blockchain can actually evolve depending on the resources we define, the quality or the costs that we define. And this adds a very important aspect to the smart contracts, as we will discuss an example here.
00:04:47.400 - 00:05:25.890, Speaker B: So, I have picked a very simple motivating scenario here, namely a street and a crossing of a street. So, two streets essentially. Just imagine that we have a street equipped with sensors which can detect how many cars are going. So we can predict the flow. And when we come to a crossing, we would like to adapt the traffic lights and we would like to adapt basically to that very simple setting. In a smart city. We can imagine such a setting having different layers.
00:05:25.890 - 00:06:19.698, Speaker B: So the first layer basically looks at simply the street elastic smart contract. But on the another layer down in the picture, we can also look at the management of the intersection taking into account weather information. So the weather service taking into account how many cars come there, their speed, et cetera, et cetera. So this is a very simple scenario. But you can imagine an arbitrary, complex scenario in a smart city, not just within one domain, but actually going across domains. So now we have sensors equipped on the streets, deployed on the street, which provide information on the incoming cars, essentially. So the layer one then would be that these street sensors in street sections provide data in different time resolutions.
00:06:19.698 - 00:07:50.046, Speaker B: And the analytics then developed by street ESC would periodically perform an analysis over the sensors data to calculate a traffic flow estimation in that particular section of the street. This analytical information would then be used to provide aggregated information to the next layer, which was in the picture, one layer down. It could also be used for local decisions in the same layer, such as to actuate an adaptable street lights in the street section that switches on in the presence of cars. So to dynamically adapt the switch off latency to the actual estimations of the traffic, the next layer, namely the layer of the intersection, could be to incorporate the presence prediction of different sections calculated in layer one in order to create an estimation of the traffic flow in the whole street. In this layer, we could also include weather forecast as off chain data. So the intersection elastic smart contract could calculate an estimation of the congestion risk in order to optimize the stoplight rules for the given intersection. And we can add arbitrary layers, namely here layer n, that could leverage advanced use cases such as new generation contracts for waste management service that regulates the actual resource alignment algorithm based on the data harvested by the sensors.
00:07:50.046 - 00:09:04.730, Speaker B: This could then be implemented by a combination of elastic smart contracts using the analytics gathered and calculating the actual bills automatically providing a completely transparent and non tampered with management procedures. So this elastic smart contract example, both elastic smart contracts could have a policy to constraint the maximum number of gas. So the gas is the accounting mechanism in some blockchain networks such as Ethereum used in the execution of such an analytics. So we have developed a elastic smart contract architecture which we highlight in this paper. It is basically comprising of an elastic smart contract orchestrator and the elasticsmart contract agent as depicted in this picture, and I'm going to discuss what these individual building blocks actually do. So our elasticsmart contract framework provides reference implementation for these components which offer concrete hooks. These are the dark gray boxes in the figure to define the domain specific analytics to be performed.
00:09:04.730 - 00:10:26.610, Speaker B: Let's look at the individual components. The elastic smart contract orchestrator manages the execution of the blockchain system by doing a couple of things. Firstly to monitor the elasticity dimensions, then calling the appropriate smart contracts according to the time and the performance constraints in the particular scenario. These constraints then are specified as elasticity rules with both the harvest and the result manager have to provide. So they have to define the lower and the upper bounds admissible for the duration of the analysis execution, as well as the initial values for the amount of resources to be used, among other parameters. The elasticsmart contract agent is deployed in the blockchain network and it contains a set of generic smart contracts that are responsible for monitoring the elasticity properties and then evaluating the performance of the domain specific analytics smart contract that the client has to provide to the system. The domain specific harvesting manager is responsible for managing the acquisition of the input data.
00:10:26.610 - 00:12:05.954, Speaker B: So for example, in this example from the set of sensors that we have deployed or any data source in general, and updating the data stored in the blockchain that will actually be used to perform the appropriate analytics. This component then must periodically obtain, according to the elasticity rules defined, a set of data of input data and update the blockchain assets to store that data. In order to do so, the orchestrator then submits a transaction to the elastics smart contract agent smart contract responsible for the data update, which registers the newly acquired data within the data asset that will serve as the input for the domain specific analysis smart contract while removing the old data according to the elasticity rules defined in the harvest manager. There are two different kinds of data for input for this analytics. The first one is that the blockchain provides a persistent, immutable and nontampered way to store a set of transactions within the chain. Second, the digital assets stored in the blockchain can themselves provide current data comprised of dynamic sets of values that can be used for performing analytics as well. The elasticsmart contract orchestrator performs the elasticity operation function by evaluating the current status of the system with respect to the specified elasticity rules, taking into consideration the average duration of the analysis execution.
00:12:05.954 - 00:14:08.810, Speaker B: The elasticity operation periodically evaluates whether the elasticity parameters should be changed to improve the expected performance of the elastic smart contract. This evaluation is performed by the elasticsmart contract agent via the internal smart contract so that the evolution of the elasticity dimensions is registered and timestamped in the blockchain ledger. Domain specific result manager then, this component focuses on executing the actual analytics of the specific scenario supported by the blockchain, which has to be provided as the domain specific analytics contract into the elasticsmart contract agent. Thus, the result manager is responsible for executing periodically the analytics contract which uses the data asset updated by the harvest manager as its input and stores the analysis results in other results asset located within the elasticsmart contract agent. The results from these executions are also collected by the elasticsmart contract orchestrator, which then aggregates both the results and the compute performance statistics, including the analysis duration for the elasticity operation of the overall system. More on the evaluation details can be seen in this paper, which is a forthcoming journal paper in the IEEE CAA Journal of Automatica Sinica, where we provide also the data of the performance measurements of the elastic smart contract and also you can find this paper as a preprint version on my homepage. If you google it, you can find it under my publication section and we have provided an open source implementation of everything that I was describing here, which you can download and experiment with and with this.
00:14:08.810 - 00:14:17.840, Speaker B: I want to thank you very much for your attention, and I would be happy to answer any questions which you sent me by email. Thank you very much.
00:14:19.090 - 00:14:30.900, Speaker D: Thank you so much for that fascinating presentation and for this really interesting paper. If you wouldn't mind introducing yourselves, everyone would really like to get to know you.
00:14:32.550 - 00:14:43.640, Speaker C: Yeah. So maybe I start. I'm Sharon Dustar. I'm from the technical university in Vienna in Austria, and I'm a professor of computer science and heading the distributed systems group there.
00:14:44.650 - 00:14:52.490, Speaker E: I'm Paolo Fernandez. I'm an associate professor at the University of Sevilla in the line of service governance.
00:14:53.230 - 00:15:02.734, Speaker F: Hi, I'm Jose Maria Garcia. I'm also associate professor here in the University of Sevilla and also working on this software engineering and services.
00:15:02.932 - 00:15:10.240, Speaker E: Yes, I'm Antonio Ruiz, also professor at the University of Seville, heading the research software engineering group.
00:15:11.810 - 00:15:37.430, Speaker D: Thank you very much. So I have a couple of questions for you, which range from kind of more general to more specific. So, starting with the first one, for background, can you discuss why fine scale and core scale data, or really any scale of data is not interoperable? So, for example, why don't statistical smoothing or aggregation methods work on these different data types?
00:15:43.550 - 00:15:44.860, Speaker E: That's a good one.
00:15:48.030 - 00:15:49.290, Speaker D: Thank you, Claire.
00:15:51.090 - 00:17:11.800, Speaker E: Well, I guess if I understood correctly, the need for different coarse grain analytics and data is something that is present in most of realistic scenarios. And most of the time they are performing in different flavors, and it is very difficult to mix them together, typically, in the specific case of the scenarios that we present into the paper where we have, like for example, in smart city environment, you are all the time thinking about different kinds of analysis from more tactical decisions, or for more strategic decisions in the long term or tactical in the short term. And that fine grain is one of the aspects that are really fundamental for the different types of analysis. So you need a framework that responds to those differences, because if the framework is not aware of the granularity, then it's very easy to saturate or overuse the network or the computational environment that you're using. I'm not sure if that answered your question.
00:17:12.570 - 00:17:37.390, Speaker D: Yeah, that's perfect. Thank you. This is kind of a bigger picture question. So are elasticsmart contracts building complex adaptive systems models to represent complex adaptive systems at all? And if so, are we introducing new locations for error to be introduced into the system and make it less useful than relying on more discrete elements within complex systems?
00:17:39.490 - 00:18:08.982, Speaker C: Yeah, in a sense, yes. Because what you want to do is to involve multiple stakeholders with multiple different interests in asking the system the questions basically, or the analysis what they are interested in. And in that sense, I think this is one vehicle to decrease the complexity in analyzing the system properties, if that makes sense.
00:18:09.116 - 00:18:11.160, Speaker D: Yeah, absolutely.
00:18:13.130 - 00:18:53.190, Speaker E: And I would add that normally, this complexity of the systems are typically based on simple parts. The complexity arises from the aggregation of these simple parts. And I would say that to have a transparent layer where you could put these simple parts in terms of elastic smart contracts, allows to model collaboratively this complexity in a much more transparent way. I would definitely agree with that. It helps that complexity.
00:18:54.730 - 00:18:55.814, Speaker B: Thank you.
00:18:56.012 - 00:19:17.582, Speaker D: Related to this, would you say that data quality and variation across sensors in smart cities, would you say they're kind of accounted for in the elastic smart contract framework? And if so, how does that question make sense?
00:19:17.716 - 00:20:19.330, Speaker F: Yes, sure. We actually talk about a lot about the different quality of the analysis that you want to perform in these type of systems. And the other is that if you have several, well, as the previous question was talking about the coarse grain and the fine grain of the data, if you have several types of sensors, several type of data, in the end that will come from this smart city scenario, then I think that you will actually end up on having to think about the trade off between the quality of the analytics in the end and the amount and the diversity of the data that you want to use in this type of analysis. So in that sense, I think that our framework basically takes that into account and tries to provide a way to define this trade off, this balance that you want to achieve.
00:20:21.510 - 00:20:22.420, Speaker B: Thank you.
00:20:23.030 - 00:20:48.650, Speaker D: So this is kind of another big picture question and something that I think is always a big concern. So what would you say are some of the security risks inherent in smart city infrastructures, and do you think that the elastic smart contracts that you propose can address some of these concerns?
00:20:52.990 - 00:22:31.166, Speaker E: Go for it. I would say that, of course, in any public scenario like the smart CD one, the transparency, the dangers of having manipulation of the data, and the risks of not having transparency are quite hard, actually. The more automation we put into the picture, the more sensitive it becomes, the security aspects, because we can have a high impact if some of the decisions that we are having are compromised because of security reasons. So the shift towards an elastic smart contract, or a smart contract in general, when you put the non tampering mechanism into play, will allow an increase on the security. Of course, it all depends on the security configuration of the chain itself and how the nodes that are involved in that chain are properly secure. But it definitely adds a security layer on the top of a traditional it infrastructure that doesn't take into account this kind of non tampering mechanism. So I think summarizing smart cities in particular is really an scenario where you should take less risks and you should address the potential security risks for sure.
00:22:31.166 - 00:22:43.230, Speaker E: And if you put the blockchain technologies and elastic smart contracts into play, helps to reduce in that, as long as it is properly configured.
00:22:45.430 - 00:22:48.340, Speaker D: So what are some of the next steps for this research?
00:22:51.990 - 00:22:53.490, Speaker F: We were discussing this before.
00:22:53.560 - 00:22:55.650, Speaker E: Yeah, who knows?
00:22:56.490 - 00:23:05.698, Speaker C: Well, we are just in the middle of actually discussing exactly this. That's why we are together today, to discuss the next steps.
00:23:05.794 - 00:23:06.246, Speaker E: Really?
00:23:06.348 - 00:23:11.394, Speaker C: So not really very much that we can talk about it immediately.
00:23:11.442 - 00:23:12.360, Speaker B: Or maybe.
00:23:14.250 - 00:23:54.438, Speaker F: We were thinking on actually raising the level of generalization in our framework, because in the end, the work that we did was applied to a concrete scenario and we make some effort to have the framework as general as possible. And I would say that that's actually something to take into account also for the long term, to improve the generalization generalization of the framework and try to apply it into different scenarios also.
00:23:54.524 - 00:24:04.486, Speaker C: That's right, because we are not interested in solving one particular use case, but we really want to provide the community with a generalizable approach to.
00:24:04.588 - 00:24:05.240, Speaker B: Exactly.
00:24:05.690 - 00:24:14.270, Speaker D: Well, that's all the questions I have. I'm Jason Anastasopoulos for Chainlink research reports. Please subscribe to our YouTube channel. Thank you very much.
00:24:14.420 - 00:24:15.214, Speaker C: Thank you very much.
00:24:15.252 - 00:24:15.898, Speaker F: Thank you. Bye.
