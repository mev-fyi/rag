00:00:01.520 - 00:00:34.876, Speaker A: You. Hello everyone. How are you? Today we are almost finishing our bootcamp, our really amazing bootcamp. And so I'd like to say that I'm so proud of you. We built amazing content. I'm sure that you learned a lot. And today you be the functions day and I will do two concepts with you.
00:00:34.876 - 00:01:32.732, Speaker A: One, you'll be from the documentation the getting started. Remember that it's a bootcamp for beginners. So let's do something with the documentation as well, because in this way you can do the same with the other products. And also we are doing a different content that I'm preparing and I almost finish it. So probably I will explain to you and finish it live. Okay, let's go to our pet session nine. You here we are so sharing the pet with you.
00:01:32.732 - 00:02:48.640, Speaker A: And it's so interesting because a lot of people was waiting in the pet, so amazing. And I missed you. Adding more information over there from the previous sessions interchanges. I think I have some time at the end to help you with you. Okay. And okay, we have a niche club. Remember that we have also the official support the bootcamp channel on the discord.
00:02:48.640 - 00:03:43.300, Speaker A: And it's interesting that we can try others as well. It's up to you. I didn't edit the tasks today, so I may add in a few minutes. So wait the task form and remember that we have the exercises here. I will share my screen now. Let's share my screen it. Here we are.
00:03:43.300 - 00:04:39.080, Speaker A: So I add all the information in the pet. If you add more default, I'd like to change the network that I have here. Probably you change it. Okay, what's more, one more thing. The faucet password for now, get it only if you need it. I know that most of like if I got in the beginning, in the first day, I don't need more than two. Now we have all the information over there.
00:04:39.080 - 00:04:56.794, Speaker A: Let's talk about functions. Let's understand functions. And probably change the network, including in the middle. Okay, let's do it. Sharing my screen. I still have vrf here. I have two remix here.
00:04:56.794 - 00:05:41.742, Speaker A: One go to the other screen now it's good. How good here session nine. Okay, tomorrow. One of the points is exactly to talk about this. How can you work after the boot camp? How can you learn more and some tips and tricks to be hired? And you talk about some training services that I didn't explain yet. So let's go. Imagine that.
00:05:41.742 - 00:06:45.606, Speaker A: What if you could run any code you wrote and its execution is decentralized and the result is cryptographically verifiable. Via the OCR that you are going to get tomorrow. More about this but the point is it will be on blockchain. This is chain link functions. So we can call any API, external API, run any computation of chain with consensus of a group of nodes that is getting the information in that API, getting the consensus and bring to blockchain, bring it to your smart content. This is our goal today and why we need to have this. You know that it is a big challenge.
00:06:45.606 - 00:07:39.460, Speaker A: Challenge because we have the blockchains, we have the isolated network. Even if you have different blockchains, they are two isolated networks. To solve this we have CCIP. But how to solve the connection with the real world, the external word that is not on chain. This is the point with functions you can have any kind of connections because when we use the Chainlink data feed, you are depending on the chainlink to list some information, to list some data feed. Imagine that you'd like to get a quote of some coin that is not listed by chain link, but you know that you have three or four sources of that information. You can use the functions to get it.
00:07:39.460 - 00:08:33.310, Speaker A: And I'm commenting related to this because Cheninki didn't list all the cryptocurrencies, all the tokens in the world. It has some requirements like the volume, the amount of searches that you can get the information. So maybe you would like to use some tokens, some cryptocurrency that is not listed by chain link in the data feeds using functions you can create your own. Another point is that we have a lot of external sites, external APIs and it's a bit impossible to chain link manage by ourselves the information to all of them. But we are enable you to do this. So you have the power to do this. This is chaining functions.
00:08:33.310 - 00:09:40.946, Speaker A: We are giving the power to get the information that you need. Doesn't matter if the site, the API is centralized because the consensus to get the information you be decentralized and then you be saved in the smart context. And when we talk about functions this is so interesting for you. Sorry that the phones are too small, but it was hard to put everything in the same picture because you are only take care of this Mao part, only you account, you use some smart content. That's the consumer of functions. We are creating this today and the consumer are requesting data including using some automation. I'm not using automation today and after this the contact the consumer, you send the request to the chaining function.
00:09:40.946 - 00:11:28.420, Speaker A: So out of this part you don't need to worry about it. And when your contact your consumer send you the request to the chaining functions, your request is going to the dawn to the decentralized oracle network from functions and each of these nodes you do a sandbox execution and then an API request to the API that you'd like to get the information. And we have more than one node doing this process and bringing the execution the result back to the dawn. Create the consensus of this transmitting to the chaining functions howte and then you are paying for this and this will be registered and the result will be handled to the fulfill function in your smart content. So you are only take care of this, create your content only this and all the other big part is made by chaining. Here you can see for example that you create a custom code like a node JS API, a helper library in the way that lets you do okay then with the request configuration you can use this API. Even if you have arguments, even if you have secrets passwords, it's possible to use this and your consumer, your client is much content.
00:11:28.420 - 00:12:42.530, Speaker A: You have the execute request and the fulfill request is this. We got the four functions, we got the external adapters and they are being deprecated to use functions because functions is easy to use. But then I'm only doing explanation until now. I promise that I will be slow in the hangs on part. Okay, so let's start this and this is only an example. We are doing this in the hang zone part in a few minutes, but this is an example and you are seeing this code in a few minutes as well. I'm not doing this code and if this is a bit small, we can sing the order in the search code in a few minutes.
00:12:42.530 - 00:13:47.080, Speaker A: Okay, so here you can see for example that I'd like to get the current flight status from the aviation stack API. And this API has secrets. It means that you must create an account, generate a key in order to do this. So how can I do this? You can get the secrets part like this is JavaScript code, okay, you can get the arguments that you need to use. This in this case is the airline code and the flight number. And then here we are doing a flight request. This is really a JavaScript request and get the response here.
00:13:47.080 - 00:14:14.078, Speaker A: So this is a custom JavaScript code. Call any API, have a decentralized execution with consensus. And also we have the playground. I prefer to do this later. I'd like to show that code to you. Okay, let's fix this. Vandana, I have a suggestion for you.
00:14:14.078 - 00:14:55.530, Speaker A: If you have your secrets, your backup phrase the twelve rewards. You can remove metamask. Okay. And try to really go to the puzzle here. Manage extensions, remove a metamask and install it again. But before that I got another idea. If you change the network, do you have the same problem in each problem do you have probably you are on avalanche Fuji.
00:14:55.530 - 00:15:23.910, Speaker A: Try to change the network and see if you can work in other network first. Okay, let me know. Yes. So change it to other network and let me know if the transaction is painting. Okay, great. I told you that I like to do this live. So let's get one of these.
00:15:23.910 - 00:16:03.290, Speaker A: Yes, this is what we are doing now. Let's update this. Oh, we have a lot of questions over there. Let's go here. Use itchainincfunctions.com I have it here and we have a lot of examples. Different APIs from Pokemon, latest news from some API news.
00:16:03.290 - 00:16:49.970, Speaker A: This is the what is this news articles, asteroid data from NASA. Uninstall metamask and install it again. And what more I have here. Imagine that you'd like to get a balance of some token, but in different networks. I have this down in some place. This is what I need to now I show it to you. So let's go to this.
00:16:49.970 - 00:17:26.752, Speaker A: Okay, it's big. So this is the secrets part. The arguments that you can have. Like I show you before here I'm doing the flight request to the URL and the request. This is the API from the aviation stack and you can have the orders as well. If I go back. We was here, but we have this.
00:17:26.752 - 00:18:18.290, Speaker A: I like this. We have the same token and different chains. Imagine the link token. We have a link token now on avalanche, Fuji, on Sepolia and on Mumbai. Imagine that we'd like to get to aggregate the balance of them in three of this. Okay, imagine to defi to find the best decentralized trade for some asset pair. And here we are using paraswap, getting the fetch result from soccer match using sports IO last year.
00:18:18.290 - 00:19:11.080, Speaker A: Wow. It's a long time ago in 2022 from the soccer World Cup. I did an NFT using this, not this API, but another API to get the results as well from the World cup. Look at this. I remember that in some moment the people was asking me not related to AI, but it was related to other points to physical devices. But here you can prompt AI for a response and save this inside your content and read cross chain information and likenetshot.org vote.
00:19:11.080 - 00:19:42.964, Speaker A: And you can see that this is submitted from different people. So if you create one, you can submit here to have your example here as well. There are a lot prices like uniswap, Twitter account verification with an ethereum address. It's really amazing. A lot of ideas for you. Price information from multiple sources. This is what I told you.
00:19:42.964 - 00:20:25.284, Speaker A: Imagine that you'd like to get some code. This is not listed on chainlink data feed, so try to get yourself the code. And this is a big idea for you, a big overview. So I'm closing this now to go forward on my presentation, because the next point that I have here is the playground. So let's go to the playground. Where is my playground? I really had a lot of things opening at the same time. I think this is not a link now.
00:20:25.284 - 00:21:08.770, Speaker A: It's a link, but I prefer to have it here. Let's go to the playground now and understand a bit what we have. It is the playground. And this is what I'd like to do if you late and sometimes I have problems to create a new code. It was like today happened this 2 hours to discover that I forgot to add this part. The response type on my code. Yes, thank you, Andre and Morgan, that you helped me on this.
00:21:08.770 - 00:21:53.360, Speaker A: These guys was with me like some time ago. But this is not our code. Today our code will be this. The basic probably you have this, you have some different codes, the Star wars characters. Okay, so get the Star wars character. And here I am. So what I have here to you understand, I'm doing a request to this Uri.
00:21:53.360 - 00:22:43.800, Speaker A: So this is what I'm doing. So I must say, what is the character id? For example, I like to do this to the number one. And you can execute this directly to understand what happened. So this is the one, the Luki Skywalker, if I go to the two, is the C three po, and I'm only doing. Oh, this is so small for you. Wait. Yes, now you can see the two C, three po.
00:22:43.800 - 00:23:37.900, Speaker A: The people one was Lucas Kyoker. Some examples for you like say add two here and you go in here to the two and you can see the others. It's only to you like to put your hand on these kind of things. Okay, but let's use this on functions playground, because one of the most problems that we have is that you have a JavaScript called code that's not working. And you try to use it chain link functions to cow this code. And it's not working. So in order to be sure that your code is working, try to run your code here first.
00:23:37.900 - 00:24:31.626, Speaker A: This is not a guarantee that you work on functions, but you have a better chance, because this is a simulation environment, so this is important to you. Okay, so this is a demo simulation and can have imminent difference. Okay, but it's so useful. This is mouth for you as well. Better now. Okay, so fill with the example code. I did this and get the stars worse characters here star was characters, here you are.
00:24:31.626 - 00:25:14.358, Speaker A: And here you can see a bit more related to this that I'm getting this. If I get ejor, I have this message, if not, I get the information. And because the information is a JSon, you know what's a JSon? But I may concatenate all the json information in a string. This is what the string phi function do. This is JavaScript. And then I may return in only the naming. I could do more, but I'd like to return the name on the console log I have everything and I'm returning the name.
00:25:14.358 - 00:25:50.420, Speaker A: Let's try this argument. One, we know that the sky looks Skywalker running. Here we are. The kind of output was a string. This is the Luke Skywalker. And on the console log that is just the console log, I have all the information, the same information that I have here. So the hen is all of this like you can see here, but from all this information, this is the data.
00:25:50.420 - 00:26:29.816, Speaker A: Because here the data is the API response. I'm getting only the naming that is here. Okay, perfect, great. So you can try another. Let's try the tree now, who is the tree? The R, what's the four? The dash radiate. Okay. And this is a base for you.
00:26:29.816 - 00:27:08.390, Speaker A: You can use the other codes here. I will share my code here in a few minutes. What I'm trying to do. But for now we are using this same code in different environments. So we try here in playground. Let's go to the documentation, to the chain link documentation with this where I have this before that. This is amazing article that I like to share with you like here in the beginning because you have eleven ways to use chain link functions in our decentralized application.
00:27:08.390 - 00:28:38.364, Speaker A: A lot of ideas for you connecting with meta and some examples doing this and then links protocol is a decentralized network as well. And then Amazon AWS, cloud systems and IoT and integration with Google, Google cloud, bigquery analytics, chain analysis on chain financing the graph that index blockchain. It's so useful to have this and the weather data for parametric insurrency. To have a decentralized insurrency. And you know that you have a lot of ideas, a lot of examples here. Okay, I didn't prepare this on this boot camp but maybe we can try to do this. Let's see how is tomorrow I must check out the content that I'd like to see the point is that I must change where we are doing this not directly on YouTube but maybe I find a way to do this I will try.
00:28:38.364 - 00:29:45.432, Speaker A: Okay. And this is URL have these eleven ways to use the functions you use chaining functions I closed them. Yes I close it use the chain link functions no. Yes let's maintain this shoe here for you as well. And now let me go into the documentation docs chain link or first of all go to the dev chain link on functions because we have more resources for you. Functions resources here we are and I'm adding all the resources here. So what I have to functions related to functions I have a quick start a showcase a lot of guides because with functions we did advanced classes last year.
00:29:45.432 - 00:30:10.610, Speaker A: So to you continue your study to be good. We have the start. We have the master class and a lot of documentation and block. Let me go directly to the documentation and chaining functionals as well. And here we are. I am in the documentation. Let's share this with you.
00:30:10.610 - 00:30:59.620, Speaker A: And here I am in Portuguese because it was one of the class yesterday. So if I'm going to getting started we already tested the playground. We already did the Star Wars API. So we used the playground. Now it's time to create our account on changing functions. So we must go here now and let's try to do this. The example on the documentation is on Mumbai.
00:30:59.620 - 00:32:09.620, Speaker A: Okay but we are doing on Avax create a sub description so connect your wallet and create a subscription. So first task today add here your name and subscription id. Here we are. I must go well I must go here. Okay. Chaining functions connect your wallet and before that before or after metamask let's maintain on Fuji. Remember that it must be on Fuji create a description and I think I'm not because I was doing on Polygon.
00:32:09.620 - 00:33:13.180, Speaker A: So I may close this NOW and do from zero with you. Change it to Fuji here I am on Fuji here I am on Fuji over there as well. WOW. So strange. I hope that I change this NOW otherwise I discover my PRoblem. So network Fuji let's create subscription and here you must give your email because this is a beta product and so we are still developing here. And if you have some information critical for you you are reach out to you by mail.
00:33:13.180 - 00:33:52.014, Speaker A: You can add the name chain link it's optional but chain link bootcank bank rank four. So you must add your email and you can use this. IT's Optional, but let's do it. And Fuji this. Fuji over there. Constantinus. Okay.
00:33:52.014 - 00:35:03.420, Speaker A: Agree and correct description. Accept the terms of service confirming the transaction and wait this. Okay, don't close this now. Now that you accept the terms of Celsius, you are approving the subscription creation and yes, you can write your own custom function from other APIs is this. And I must sign a message as well here to save the name and the email address. Sign it. So I think I'm doing it.
00:35:03.420 - 00:35:43.060, Speaker A: Yes, it's created. So this is my transaction itself add fund. So let's see if I need to send something to you now. Let's add five links. Ten links should be shared. Okay. So then go over there it front.
00:35:43.060 - 00:36:39.040, Speaker A: Approve it. Okay. Close. Oh, I could wait because if you have wait probably it will day step three. Can I go to the step three fundraiser? Okay, let's wait because I not to do the step three now add a consumer. Not add a consumer down. Okay.
00:36:39.040 - 00:37:27.706, Speaker A: So I will do it later. I it. So let's clicking iodo later. And this is my subscription. Here you can see your subscription Id. So is this that I need from you add a consumer Constantino check my screen because if you check step by step, you are asking things that it's on the screen on the pad. So why you do it later? Exactly.
00:37:27.706 - 00:38:01.708, Speaker A: Kyle, is this okay? Great. A lot of it's better if you'd like to put directly this the link. It's better. I like like we did in the others. It's good. Wait some minutes to you. No.
00:38:01.708 - 00:38:33.930, Speaker A: Vandana, take this off. Yes, we know that this is a testnet, but it's only our testnet funds. And do you need some here? I know. Fuji. You don't have it? Let's send some here if you need it. You can see that I don't have more. It's finishing.
00:38:33.930 - 00:39:30.054, Speaker A: I ask you to help your colleagues if you need more than this. And how much link is not too bad. Link not a vax now. And so in a few minutes you will have some link. Some of us here. Here we are not a big amount of people now. And the request was ten link and we are sending everything here.
00:39:30.054 - 00:39:53.900, Speaker A: Okay. Are you asking if you didn't yet? Yes. Five. Exactly. Blue bulb actions. Exactly. Actions or done.
00:39:53.900 - 00:40:21.382, Speaker A: So here we are. We have our subscription. So good. The point now I'm getting the code from here. But I'm not doing this on Mumbai. Okay. I like to use this on Avax because I don't have so much tokens on Mumbai to send to you.
00:40:21.382 - 00:41:39.658, Speaker A: So you put both options here. If you don't have in one network doing the other. So create remix. Now again go to remix. We are here and because you change the network and you do this live, are you not to do like it's so easy. If you come here and open your remix it will open a new version of remix. Like I have one remix instance here, another here with all the examples, all the samples and here is the getting start functions consumer.
00:41:39.658 - 00:42:22.736, Speaker A: But I will copy this for me and change the network. And you learn how to change this. Okay, so I have two instances of hemix now. One is the bootcamp and before sharing few I must change this updated. Yes, I can trust myself in the paste code. Alice, don't worry about it and wait for me to change this life. I may explain and then change.
00:42:22.736 - 00:43:29.140, Speaker A: So what I have here, I'm using the chain link function services. So I must have the client I can use the confirm owner to only my account ask to use my function to use my contact. And this is the library to get the format of the request. Then here is the context function client confirm it owner. I'm using the functions request and I'm saving some variables important like the last request ID, the last response and the last ehore. Because when I do a request ID I will get one of these or write response or if not you get an ahor. Okay, I'd like to get both information and if I don't came into this point I have here to another kind of ahor.
00:43:29.140 - 00:43:59.110, Speaker A: I'm creating an event to log the responses like the heat question iD. And this is the same Star wars example. So it's the character and the response here. Here we are. We are not on Mumbai. So I change this in another way. Hard code to Mumbai.
00:43:59.110 - 00:44:43.680, Speaker A: Let's do a hard code for Fuji. And I have the outer address so I must go here to get the supported networks. Here we are. Let's edit this for you as well and including add some information here. So we are on the supported networks to change it to Fuji. This is the outer that I must use it. And here.
00:44:43.680 - 00:45:40.270, Speaker A: So I'm changing the outer supported network here. Outer and I'm organizing this in another way. Let's add the search code down to put our information related to the related to the outer. Together I'd like to have the don Id. So Ub had code that you fish as well the don Id. Let's go here and check don Id here. So it's here this is the don Id.
00:45:40.270 - 00:46:25.710, Speaker A: Okay. And to be sure that to not be wrong, deploy on Fuji area. So I organized the code in a different way. This is the Kaubek gas limited. When I received the response this is the search code. So this is exactly the same code that you saw on the playground. I mean look in the playground here, no here.
00:46:25.710 - 00:47:07.242, Speaker A: So this is the same code that you have here I'm using inside the remix. So I may create a string without the code and I'd like to receive the response later. So this is the response that I'd like to use. Hey arsen. No problem, you can check. I just add more in the faucet but if you can get in the faucet just now or use another network it's not a problem. I just teach you how to change the network.
00:47:07.242 - 00:48:10.210, Speaker A: So change it to the network that you have some funds. You can do this on Sepolia, Mumbai or Fuji. Okay. And here in the constructor I have the outer and this is only to be sure that only the owner can cow this conflict. And this is the send the request here I meet sending the request to the functions service. So to the network when I'm doing this I must tell my subscription id and if I have some arguments, you know that I have the argument here. One argument that will be the character id and if I have the arguments I'm checking here the size of the arguments and get it.
00:48:10.210 - 00:49:14.950, Speaker A: After this I'm sending the request to the outer with the request encoded on this way my subscription id, the guest limit and the dom id and you get the last request id on this way. Okay. After this I must wait a bit because the functions network you execute my code and bring me back the result. But it's not like in the same second you must wait a bit and when the chaining function network is done it will have a callback function to my contract to do the fulfill request. So if your contract doesn't have a fulfill request function you are not able to receive the response. Okay. It's so important it's required to you to have your function with this name.
00:49:14.950 - 00:50:07.164, Speaker A: And here we are. When I receive the response, I have the request ID and I have both. I have response if this is good this will be empty. If I have the response will be empty. Okay I'm getting so the request Id and you can do only once per timing. And here I'm updating the variables, the state variables inside my content like the left response converting it to a string to have the character name because this is in bytes. And I have the horror here as well and emitted the response.
00:50:07.164 - 00:50:23.450, Speaker A: It's only this. Okay. I think it's time to deploy it. So you will deploy this on Fuji. Oh no. I didn't copy you. Sorry guys.
00:50:23.450 - 00:51:04.236, Speaker A: Now you can deploy it. Deploy and add here. Your getting started. Your naming and getting started. Functions consumer address let's do mining now. Who is the person that cuts the code? Who is the green person? Let's do mining now. I am on Fuji.
00:51:04.236 - 00:51:27.460, Speaker A: No, I am on the remix Vm yet. Yes. Now I am in the right place. Custom. The network is right as well. Okay, I can do this now. Confirming.
00:51:27.460 - 00:52:09.180, Speaker A: So this is my contact. Hey, don't cut the code. Where are you? This is mine. Wait a bit. For you. The code was. Cut it again.
00:52:09.180 - 00:53:04.920, Speaker A: I think it's here. But are you pasting mine again? Okay. Because if it's something wrong, let's be sure that it's the right code. I didn't update the GitHub yet during the class. And one thing that is so good to you to learn is that when we got codes from our documentation they have a lot of comments like you saw here. They are well documented so you can see step by step all the explanations here. So this is an amazing service as well.
00:53:04.920 - 00:54:02.552, Speaker A: And let's see how are you? Yes, we have a lot. So now go to your other playground. Go to your subscription and add a consumer. So this is equal to add your getting started. Functions consumer Lucas. Thank you. Welcome here.
00:54:02.552 - 00:54:55.076, Speaker A: Thank you for your help. Okay, let's do it. I copied the address of my content. Went to the functions function site and here add consumer consumer address and add. Let's wait on refresh. Whatever. Okay, it's here.
00:54:55.076 - 00:55:28.310, Speaker A: Now I have my consumer. This is mine. You can see that I created this description funded consumer added. Great. After this, go to remix explain. No, go to your subscription here. If you are connected, you have your subscription.
00:55:28.310 - 00:56:35.116, Speaker A: The ad consumer. Here is the consumer address. No Id now. Now on remix. Expand this and let's go to send the request on send the request what we are doing here? Send request here subscription id and arcs the arguments subscription id so er. Subscription iD and Arcs will be on this way. Because this is an array of arguments.
00:56:35.116 - 00:57:33.780, Speaker A: You can have more than one. We are having only one now. So this is the same chukao. This is the same off how that functions playground chukao here. Let's do this copy again. Copy from remix. Be sure that you don't have s three space here.
00:57:33.780 - 00:58:23.650, Speaker A: And here we are. Expand and send the request expand as well and then transact you. Let's go. My subscription id. What is this? It's 3010 arguments. Remember that this is an array, so we need the brackets and the argument is one. And then transact.
00:58:23.650 - 00:58:57.160, Speaker A: Is this going to. I did something wrong. Let's discover what. Yes, here. It's not my subscription ID, you know? Yes, okay. Yes, thank you. Confirming.
00:58:57.160 - 00:59:42.450, Speaker A: And I love my students that pay attention, including my aholes. Yes, thank you so much, Akandyang. Perfect. I did the request, so now I have a request Id like this, probably. I don't have a character yet have a response. So if I have a response, I don't have your neighbor. Okay, so if I have a response, I have a character now.
00:59:42.450 - 01:00:21.870, Speaker A: Yo, look, Sky Walker is here. Amazing. And if you'd like to get this, let's see if I have this in another. I close it or no? Yeah, I close it. I'd like to share a useful tool with you. Binges to string. Oh, idea.
01:00:21.870 - 01:01:28.956, Speaker A: It wasn't amazing a few minutes ago. Let's see if it was. This can be good. So I shared this with you as well, because result, the results will be first, last ahor, must be nothing more. Last response, it will be this. And this is like crazy to us. So if you go here, it's in bytes and you put the input, you can see the output.
01:01:28.956 - 01:02:03.270, Speaker A: Luke Skywalker. Oh, this site has a lot of. I don't like this. Let's see if I can see another better. Yeah, I didn't find a better, I was using these. This was so good. I don't like this.
01:02:03.270 - 01:02:36.290, Speaker A: Let's go here. This is better here. Okay, let's add this here. This is a clean site and you can see the. Look Skywalker over there. So if you have some ahole, use this to convert the ahole and try to discover what's happened. Okay, exactly.
01:02:36.290 - 01:03:21.072, Speaker A: We are saving the data from the API. In your smart context. This is amazing. And if you go to the character is the string of the response. So the character is Luke Skywalker. So this is our first example today, our first contract. And I know that I didn't add all of this in the tasks for me.
01:03:21.072 - 01:03:42.250, Speaker A: So let's add the tasks now, because you have two tasks. This is one and the other. We are starting now. Cool. So I'm adding the task in 1 minute. Let's connect it. I am on the other computer now.
01:03:42.250 - 01:05:26.728, Speaker A: First I'd like to know your functions ID service section nine. And we are using functions chain link. Yes. So first task, it's over there. Now, second task, I like to know the what's the name of this content? The getting started address functions. The getting started functions consumer it. And we have three tasks today.
01:05:26.728 - 01:06:20.388, Speaker A: Okay. The third, we are doing the third now. We didn't start yet. We will have. What's the name of my other contact? We have the weather functions, weather address. Weather contact address here. Almost done the tasks from today.
01:06:20.388 - 01:07:01.150, Speaker A: This is from session nine. This is from session nine. So if you go to the form now, if you refresh the form, you already have the tasks today. No, the last request. No, this is not real. No, it's like a code. It's an ID.
01:07:01.150 - 01:07:59.010, Speaker A: I think it's session 90 now. I would. The tasks are in the form now. And let's come back here. I give you some time a tip of where sub description where let's have you whether it's much contact address. I found something wrong here because I may asking in the description. They run in more than one.
01:07:59.010 - 01:08:39.410, Speaker A: Okay. Here and here is Martin counted. Okay. I think now it's good. Yes, Rema, I fixed this now. Thank you for letting me know. Try to refresh, see if it's good now.
01:08:39.410 - 01:09:30.664, Speaker A: And this is our first content. Let's go to the next. And I must finish the next live with you. So our next content. Ub on mix and create the weather functions. So. And the weight that I'm creating the content now is not done.
01:09:30.664 - 01:09:51.410, Speaker A: In fact, I didn't test. So now we have a part that you are only watching me coding. And then I will share with you. Okay. Is the challenge part now. And you can help me if I do something wrong. I really appreciate it.
01:09:51.410 - 01:10:21.144, Speaker A: So let's go. Here we are. Create new file weather functions. And I started the code in another window, but it's not done yet. Let me explain to you what I'm doing and then we can change together. Deploy on Fuji. This is the first point.
01:10:21.144 - 01:10:53.204, Speaker A: I'd like to go to Fuji again. I have this information here. This is good. But this is one of the points that I'd like to change because in this way we got that ahor. If you have more than this, if it's not the last. But I'd like to have more than one. So I manage this in another way, in the way that we do with.
01:10:53.204 - 01:11:37.160, Speaker A: For example, the runners remember that we can run from different characters. So I must get the runners to solve with this. It's better to have a request status. So related to the request it. I'd like to have a request status. And then we know when is fulfilled or not, if it exists or not. And I'd like to have it for each status both of this.
01:11:37.160 - 01:12:35.012, Speaker A: I'd like to know the last response and the last ahor and why I can do this. Okay, why this is wrong. This is not an integer as well. This is bytes 32 so request ID go to the request status. But I still didn't find my error. What am I doing wrong? I cannot have a bytes here. Do you know I can do it? This is nice string.
01:12:35.012 - 01:13:11.018, Speaker A: It's not a problem. Ah, no, public is. Thank you, Eric. Yeah, so nice to live code with you guys. So this is the request status that you like to use. So go down. I have the event in the same way it was for Mumbai iu changed to Fuji.
01:13:11.018 - 01:14:03.050, Speaker A: So let's copy from here from Fuji. This is on Fuji now back gas limit is the same the JavaScript code. So let me let you know what I'm getting now. This is and including before that we are using this. And for example, I'd like to see Paulo is in this way, okay? Because you know that I'm on fire here. Literally on fire. Look this.
01:14:03.050 - 01:14:33.668, Speaker A: And if you'd like to see, I remove my screen. I'm on file. Okay, so let's add my screen again. And probably you cannot see this. So this is what happened. Now, you just saw this, okay? And I'd like to create a content to Gary, the temperature of all of your cities. You can create your content as well.
01:14:33.668 - 01:15:21.008, Speaker A: But I delight to you to interact with my comfort and add your city inside my comfort. This is my goal now. So let's do this. So come back here to you understand some example. And this is the weather. Our second concept will be here then. And this is what I must do now.
01:15:21.008 - 01:15:43.130, Speaker A: Let's come back because now you understand my code. This is my code. I share this code on playground. I have this on playground in some of my lot of playgrounds. Wait, Najees, Najis, Najis. I have another playground here. No.
01:15:43.130 - 01:16:22.984, Speaker A: So let's share this on playground with you because I can share the code here. It's so cool. So I'm cleaning this and use my code and I will get my code from here. Let's try mine first. Okay. The argument now will be Sao Paulo. Let's see if it is the console.
01:16:22.984 - 01:16:44.390, Speaker A: I don't have the console log part now, but look at this. I can share this with you. This code. Share code. And I'm so dumb to do this. It's so hard to be human. Let's see if I can find the heads.
01:16:44.390 - 01:17:29.630, Speaker A: Oh, why? I got it. So this is the link. And try it out on playground. Playground. Here, try this yourself. Okay, so wait, I will finish the code and test it. Okay, let's come back here.
01:17:29.630 - 01:17:54.310, Speaker A: Okay, come back here. You already know my code. And I did the last city and like the last temperature. Good. And now I have a problem here. Last you have a problem. Okay.
01:17:54.310 - 01:18:45.328, Speaker A: Yes. I didn't come here yet. So let's go where I was. So we have the code here and here, because I like to have not only the left, I like to have all the temperatures of you, my students. I was creating a structure, so I have this city structure where I have the name of the city and the temperature, and I create an array of structs. And I was managing this when we was starting the class. First of all, for each naming, I like to see where is this on the array.
01:18:45.328 - 01:19:25.650, Speaker A: So this is the index of the array. If another person here already added the temperature from that city, I will not create a new entrance, but I like to update it. So I like to see if the city is already inside here. And then we must manage the request. So when I do the request, I'm doing a request related to one city. When I receive the response, I must update that city and not another in the way that we did with the runners. Okay.
01:19:25.650 - 01:20:25.990, Speaker A: And I'd like to add an argument here because we are using the same, you can use like my content now, so I don't need to add like we did here. And to each request you send it a subscription id. You deploy to my subscription id directly. So let's get it. So let's add something else here. Iu edit is here because it's related your function subscription id, it's here. And then in the constructor, I'd like to know the subscription id.
01:20:25.990 - 01:21:00.390, Speaker A: You know that I'm coding this live. Wait. And here is the subscription id. Initializing the outer, initializing the subscription id. So good. So where I'm using this, I have the get temperature and I'm not getting the subscription id here anymore. So here I must use the order.
01:21:00.390 - 01:21:54.776, Speaker A: Okay, in the get temperature you are saying the city that you like to get it, and I must convert the city in that arguments form that we are using inside here. And here we are. So I'm creating the request with these arguments. And this is the last request, the last city and adding the request in my mapping to map the request with that city. So this is the request part, get temperature. So let's fix the fulfill request because I didn't finish yet. Probably here I have some errors.
01:21:54.776 - 01:22:16.434, Speaker A: I'm receiving the request ID. The response to the error. Let's see. I don't need this now. What I must do is like we do in the runners. Let's open the runners. Then you can see how I'm doing this.
01:22:16.434 - 01:22:42.780, Speaker A: Run fulfill request. So I must have that request. That request must exist. So this part must be done now and not this. So I colored s request. I don't know. This is different.
01:22:42.780 - 01:23:07.540, Speaker A: Okay. And I colored sequest. I don't remember. Do you know sequests? Okay, this is good. So now I'm managing that I only can do this for a request that we did on this content. Great. So good now.
01:23:07.540 - 01:23:41.898, Speaker A: And the next step. Update the contacts variable. Let's see if I don't have an out of gas problem. Let's see. The last response is this last temperature is this. So I'm getting the city because with that request ID directly, I can know the city if the city exists. So it means that the city exists.
01:23:41.898 - 01:24:32.800, Speaker A: If this is true, let's go different. If this is not true, the city will be exist. I will add the structure with the city and the temperature. And I like to put in the index of series here. Okay. If already exists, already exists, I can know probably here. Let's come hacking here to understand my logic again here.
01:24:32.800 - 01:25:46.890, Speaker A: If I go to the city, I can know the index of this and predict the city stretch like to do it. So if I know, I you get it the city. This is the city index. So I will get the series on this index and update the temperature. Less temperature. How about you guys? Are you seeing something wrong in my code or I am right or no? Let's edit this first. If I could not do in this complex way, you get only the last.
01:25:46.890 - 01:26:33.874, Speaker A: But otherwise I hope that this is working. And here I'd like to get the last temperature. Good luck for me. I will test this first and then share with you. First of all, I must deploy with my subscription ID confirming. Oh, I'd like to add you one more point. I could add the timing.
01:26:33.874 - 01:27:04.520, Speaker A: No, it's good. Let's not be complex. So I have in my content here. Let's add on my subscription. If it is working, I share with you. If it's not, I use simplify this because maybe I have problems with gas limit and you not solve the gas limit problems. Life.
01:27:04.520 - 01:27:30.140, Speaker A: Yes, both are here now. I could not wait a bit. I'm so anxious now. Let's try mini first Sao Paulo. Oh, I just. I just. I must add.
01:27:30.140 - 01:27:52.680, Speaker A: Okay, we have here. But when I share with you, I'd like to add one more function here. Okay, wait a minute. Get the imperator. Let's see, because now I'm testing the function part. So let's request ID. Not yet.
01:27:52.680 - 01:28:17.120, Speaker A: Really? That I didn't update the last hikrash ID supposed to be here? No. Now yes. Let's see. Cross Ed is done. No way her until now. No headphones. You must wait a bit more.
01:28:17.120 - 01:28:52.420, Speaker A: No headphones, no euro, no headphones. I should see the log. Okay, but let's do in this way. It. It's still waiting. Oh, I consider se request as well. Remember that I created this.
01:28:52.420 - 01:29:31.890, Speaker A: Fulfill it still false. So we are still waiting to come here. Oh, it's so long now. Maybe I broke my code. If I broke my code, I read preparing an order. Okay, let's prepare one simple for you. Because I did the simple version and it was working.
01:29:31.890 - 01:30:06.030, Speaker A: Let's have the temperature functions come back here. Test again. It's too fast, guys. The other seven, eight minutes. The other. It was fast, but okay, we must wait. Are you create another? That is simple because it will not fit work.
01:30:06.030 - 01:30:46.528, Speaker A: How to do the simple version of this? Not all the array part. The simple version with ub. Like only I do not get the status because I like to only get the list. The response is not a character, it's a painter tool. I should fix this here as well. Okay. And it had coded.
01:30:46.528 - 01:31:20.840, Speaker A: It's my subscription idea. You maintain here the search code is the same and you get only this. So I would not use this part on the simple version. Okay, get temperature is exactly the same. Not exactly the same because I don't have this part as well. And let's see again, still false. If our first did in the same time.
01:31:20.840 - 01:31:57.130, Speaker A: Maybe I can see here if emulating something. Oh, I have a fulfillment here. Not yet. This is the consumer, the history. Oh, I got a Nehru here and it's a nehor that doesn't come to me. So I will share with you the simple version and fix the ahor later. It's too long to fix it now.
01:31:57.130 - 01:32:24.370, Speaker A: So the simple version. You use this. You use this with the last request only. Okay, let's use the last request. And tomorrow I share this with you. The last is the same. It's good.
01:32:24.370 - 01:32:42.010, Speaker A: So the last response is good. The last temperature is good as well. Maybe I have out of gas. Ehore. I must check this. So this is the simple version that we have only the last. Okay, this should be work.
01:32:42.010 - 01:33:11.690, Speaker A: I'm sharing this with you. I'd like to change the name here. So we are not creating the weather now. We are creating the temperature now. But I still needed to test it. Wait a bit more. Let's deploy this as well.
01:33:11.690 - 01:33:48.550, Speaker A: Deploy a new 130. Ten. And here we are at consumer. This is the fast mode now, because it's only to you. Watch this part, not follow me now. Okay, done. I'm pretty sure that is done.
01:33:48.550 - 01:34:14.312, Speaker A: Go to remix San Paolo. Confirming. Okay, I have the. Let's see. Not temperature yet. Let's request less. Ehor, not yet.
01:34:14.312 - 01:34:47.440, Speaker A: Less hairspunks. Let's go here. Painting at least is now if it's five notes. Let's come back here again. Yes, let's see my temperature now. And it's in Fahrenheit. So the temperature here in Fahrenheit is this.
01:34:47.440 - 01:35:19.760, Speaker A: So hot here. Let's share this code with you. Thank you. And it's time to you to do the same. So deploy. Remember that the parameter is your subscription ID. Then share here with me.
01:35:19.760 - 01:36:25.484, Speaker A: Share with me your name and temperature essentials address. This is mine. You saw. And then let's see this part first. In fact, I add another here. Then you call getur to your city and add here. Your naming and the content is upstairs.
01:36:25.484 - 01:38:09.790, Speaker A: This is the order like I have in mine. Mine, you remember that was this add consumer? Yes, thank you, Kisford at consumer. And I must convert to Fahrenheit. To Celsius. Let's see if it is not so crazy. Okay, this is good. And if you like me, must convert it.
01:38:09.790 - 01:39:26.260, Speaker A: And eight, six. What is this? Like we saw here. Put what is better for you're it. Let's see, how are you? Nowhere. You have at least at the end of January. Okay, maybe more. But for now, the deadline you be 31 of January.
01:39:26.260 - 01:41:05.780, Speaker A: It's interesting, Philippi, because for me I wish to have in St. Tigradus, but appear on Fahrenheit. I'm not sure, because imagine that if it is the node operator running could be different. If someone has anka here is to convert it. If you'd like to convert. This means that I think that you are not connected on remix in the ejected provider. Because you cannot create it.
01:41:05.780 - 01:42:26.410, Speaker A: Yes. Be sure that you are here on injected provider. Okay, who are you? What's your name here? Who is this greenhouse? Another point. Check your sub description ID on deploy NBGs as well. It is two points. Okay, so amazing. And like, if I come back, not this, but to the documentation on functions.
01:42:26.410 - 01:43:04.390, Speaker A: Let's talk a bit more with you. Not only related to getting started, but also how the service is working. What happened here with the code, how we manage the secrets. This is a beginner section, so I will not do nothing with secrets. Okay, but you have something here. I saw a message related to the billing. How is the cost? You can get the cost here the simulation.
01:43:04.390 - 01:44:16.254, Speaker A: We have a lot of guides how to do a simple computation to cow an API like we are doing. Return custom data, post to APIs, use the secrets based on dawn, use the secrets saved on gists, use other kind multiple data sources like that with the markets, encode, put together automation and functions with time based with custom logic, using imports. So the guides are really amazing for you. Let's see, how are you? Yeah, I think you are good. And yes, you can. Yes, now. Yes.
01:44:16.254 - 01:45:23.858, Speaker A: Submitted the temperatory functions because let's update it for you, because it's not the order, I could not do it. Temperatory functions. Temperature functions is much complicated. It's updated. Bye. So, Andre, are you deleted this? We don't need this in mind anymore. Yes, this is interesting.
01:45:23.858 - 01:46:25.990, Speaker A: We can try to convert. Probably this will be not so easy because you are receiving a text like this. So you must get this part of the text to convert. And I know that some people don't have talkings anymore. Are you saying a bit more and asking side to get ten more? Oh, I don't have ten. How much I have? I only have four now. Yeah, two for you.
01:46:25.990 - 01:47:25.134, Speaker A: And I think link here can send a bit more. Not too much, but I must get to the next session. Okay, how is this wrong? It okay, I think you can get something now. I try to get more with me later. And let's see how is this? Because you can see that this was success. This not. I can try to discover this later.
01:47:25.134 - 01:48:13.800, Speaker A: I do this in fact. So I'll go here. I think you are finishing now. Nikki. If you didn't have a mainnet account, I commend that you create another account. It means another CD phrase on metamask and use this to your real funds and to our badges later. Don't do the same that we are doing the testnets because the idea is to have this in our real account.
01:48:13.800 - 01:50:19.704, Speaker A: Because it's an achievement to you. Okay. And I think we are done today. Let's see if I forgot some slides because when I come here, I didn't finish the slides. So we did this. Oh, this is advanced set. Okay, I put this over there, but this is advanced set including that I must add this and let's make this right and like this is adjivenset for developers so if you are already a dev you can use any pm package with no problem but this is not for beginners okay and also we can have this as well the deep dive on chaining functions this is in the developer portal you saw over there because here I have only the care code and we did this so thank you today and tomorrow is our last day this is amazing how was for you to stay connected and to really work hard during two weeks almost 2 hours every day I'm so proud of all of you and if you'd like remember to share in the social networks the chain link bootcamp this is our hashtag share how was this for you? And if you didn't the session yet I know that you create some group coordinate with your friends I miss you.
01:50:19.704 - 01:50:27.250, Speaker A: Try to solve the problem with the discord okay and see you tomorrow model.
