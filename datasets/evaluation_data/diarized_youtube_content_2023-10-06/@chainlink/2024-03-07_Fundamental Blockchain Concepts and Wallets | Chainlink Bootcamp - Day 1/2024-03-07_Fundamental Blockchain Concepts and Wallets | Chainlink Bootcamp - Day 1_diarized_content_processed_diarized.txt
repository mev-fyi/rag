00:00:03.000 - 00:00:25.626, Speaker A: All right, I think we're live, Roberto, while we wait to make sure the stream is live and everything is good, people already doing it. They're saying hello from Spain, Nigeria, Indonesia. That's what I was going to ask. People could drop in the chat where they're from. That would be awesome. I always wait for people to come in GM to everybody. Good time of day, too, wherever you may be.
00:00:25.626 - 00:00:47.402, Speaker A: And, yeah, I'm excited to kick off this boot camp, starting with Roberto here. So I am Richard Galliber. I'm one of the developer advocates here at Chainlink Labs, and I'm just here to help out Roberto with this amazing bootcamp kickoff that he's going to be running. So, yeah, Roberto, if you want to introduce yourself, say hello to everybody. That'd be awesome.
00:00:47.458 - 00:01:17.294, Speaker B: Yes. Hi, everyone. My name is Roberto iturralde. I'm so happy to be here. Very grateful for the opportunity, and it's incredible to see all these comments from all over the world. Kenya, Germany, Romania, Turkey, berlin, so many places, Peru, everybody globally coming in here at once to learn this amazing technology. So, yeah, I'm very grateful to be kicking this off with you, Richard.
00:01:17.294 - 00:01:25.414, Speaker B: Hi, Darby. I see you in the chat. And, yes, hashtag chainlink bootcamp 2024. We're ready to rock it.
00:01:26.874 - 00:01:44.330, Speaker A: No, that's awesome. I just popped over. There's like almost 600 people watching this, too, right now, which is pretty cool. And it just. Every time, I feel like I'm a broken record every time I do one of these things with Chainlink. But it's ridiculous that we have basically every continent represented here on this live stream, which is really cool. It just blows my mind.
00:01:44.330 - 00:01:53.254, Speaker A: Anyway, man, we got Nepal, Pakistan, Kenya. I saw somebody from Turkey in there. Bahamas, man, that sounds like Bahamas. I'd go there.
00:01:53.914 - 00:01:54.694, Speaker B: Yeah.
00:01:55.074 - 00:02:07.690, Speaker A: So, yeah, I don't know. Robert, do you want to share your screen and kick this thing off? And we'll introduce people to. To the world of blockchain development and all the fun stuff that goes along with that.
00:02:07.802 - 00:02:08.490, Speaker B: Texas.
00:02:08.602 - 00:02:11.234, Speaker A: Texas. Representing there with Jonathan. That's right, Texas here.
00:02:11.274 - 00:02:12.542, Speaker B: I'm from Texas, too.
00:02:12.698 - 00:02:14.990, Speaker A: Oh, man. Text is all up in here.
00:02:15.182 - 00:02:22.142, Speaker B: Yes. Hello, Juan. I see you in the chat, too. All right, let's kick this off. So let me share my screen and.
00:02:22.158 - 00:02:29.994, Speaker A: I will say thank you, Richard. If you have questions as we're going along, if you want to pop them in the chat, we'll do our best to answer them as we go.
00:02:32.534 - 00:02:56.764, Speaker B: Sounds good. Thank you, Richard. Can you see my screen? I've begun sharing it. Perfect. Let's hide this. Begin the slideshow. All right, everyone, once again, welcome to the Chainlink Bootcamp 2024 April edition.
00:02:56.764 - 00:03:52.436, Speaker B: I'm very grateful to be here today. My name is Roberto Toralde and I'm here with Richard Garlberg. And now we are ready to teach you all about this amazing industry. Now, this bootcamp is tailored to give you so much knowledge, not only about the blockchain fundamentals and web3 and wallets, but in the later presentations, we're going to teach you all about smart contracts and oracle services and so much more. If you are a complete beginner, this is the perfect place to start. It doesn't matter what background you come from, this is the place to be if you want to learn all about this industry. Likewise, if you are already some kind of mid to advanced developer, then this session especially is going to be an awesome refresher about this technology that is really underlines this entire industry.
00:03:52.436 - 00:05:07.114, Speaker B: It's really important to know how everything is built before you can build it and start interacting with it. Before we begin, I'm going to give you a little more of an introduction of myself. My name is Roberto Toralde. Once more, I'm a developer expert and I helped Chainlink produce educational content and bring into you the community so that you may learn more about this awesome industry. I've been learning about blockchains and smart contracts and oracles and web3 for more than two years now, and I absolutely love this industry, especially the potential that it has to fix so many problems that we are currently facing in our world and in our society. So once I learned, once I began teaching myself how to code and seeing the potential of what you can create with just your computer and access to the Internet, I was completely hooked in. So I'm very grateful now to be standing in this position where I can share with you all the knowledge that I have accumulated over the years so that you may learn about it and you can create your own products and applications and make this world a better place.
00:05:07.114 - 00:05:54.924, Speaker B: So if you want to get in contact with me, I have a twitter ancient veil and I also have a LinkedIn Roberto ituralde. So if you ever have any questions want to interact with me, go ahead and hit me up. We also have a if you have issues with this bootcamp, feel free to ask questions or ask for help in the chat. We are here to help you out. Me and Richard will try to help you out and see your questions. We also have some community leaders and developer advocates and developer experts in the chat that are here ready to help you out for any problems that you have throughout the presentation. If for some reason your question doesn't get answered, we also have a discord that you can pop in and ask your question at change.
00:05:54.924 - 00:06:24.046, Speaker B: Link Discord. So remember that we are here to help you out. So, with that being said, before we actually start the official presentation, I want to introduce you to this webpage that we're going to be using to interact with each other. This is called webpad. So I'm going to show you how it looks like. So it looks like this, and I'm going to share the links right now. Yeah.
00:06:24.046 - 00:06:44.764, Speaker B: There we go. Thank you. We have it on the screen. This pad is where we can all interact with each other. So if I type something out like hello, you'll be able to see it and, you know, interact with it. This is where I'm going to be posting all the links and resources. So what I want you to do is join this link that is up on the video.
00:06:44.764 - 00:07:13.510, Speaker B: Thank you for who's ever doing the division for me. And what I want you to do is write your name and the city where you are watching this live stream from. So, for example, my name is Roberto, and I am streaming from El Paso, Texas. So let's see who is here. And this is an awesome way to see who is interacting with us so we can keep track of this and just, you know. Yeah. Have a much more interactive bootcamp.
00:07:13.510 - 00:07:16.518, Speaker B: So there we go. Already we started getting.
00:07:16.686 - 00:07:39.504, Speaker A: Sorry. Yeah, I was gonna say Roberto, as we. As we get into this pad, you're all probably gonna. There's like, a thousand people in the live stream now. So we're probably gonna get into the problem where people are taking up the same line with each other. So something to help with that. If you go to these stars here, and I see people adding stars, but if you go to these stars and you just do a couple blank lines and then type your name, you should be able to get your own individual line.
00:07:39.504 - 00:07:43.504, Speaker A: A little crazy. With a ton of people in there.
00:07:44.484 - 00:08:10.848, Speaker B: We have a lot of people here. This is amazing. This is fantastic. All right, I'm going to try to make some kind of division here. Okay. All right, I'm going to just put it down here at the bottom, and this will stabilize. Once everybody puts their name in, this will stabilize, and it'll be a much better experience.
00:08:10.848 - 00:08:37.492, Speaker B: But just because we have so many people right now, it's a little. It's a little chaotic. But we're going to let this cook for a little bit, but I'm so glad to see so many people from all over the place. Florida, Mexico, Malaysia, Turkey, Berlin. Oh, man, this is amazing. Everybody's here to learn about this awesome technology, so we're just gonna let it sit there. Thank you all for participating and putting your name.
00:08:37.492 - 00:09:28.424, Speaker B: This is the path that we're gonna be sharing our resources and links. So if you want to follow along with me, especially when we do some demo interactions, that is the place to be. That's where I'm going to be posting the links. Okay, now we can officially begin. We have already shown you the pad, so let me speak about the agenda of what we're going to be talking about today. So I gave you a brief introduction already of who I am, but allow me to give you an introduction also of what blockchain is. We're going to be talking about what state machines are, blockchain fundamentals, cryptography, distributed networks, game theory, what is web3? And then we're going to finish off this presentation by installing metamask and then transferring the tokens from one account to the other using metamask.
00:09:28.424 - 00:09:31.744, Speaker B: So, with that being said, let's get started.
00:09:34.084 - 00:09:38.744, Speaker A: So, as we get started here, Roberto, I do see there's a couple questions in here.
00:09:39.284 - 00:09:39.708, Speaker B: Shoot.
00:09:39.756 - 00:09:51.924, Speaker A: Asking about how long the session will be and stuff like that. So this will be about a two hour session. Each of these sessions is supposed to be about 2 hours long. They may be a little bit shorter than that, but overall, shooting for about the two hour mark. Yeah.
00:09:53.184 - 00:10:30.972, Speaker B: Awesome. Thank you, Richard. Okay, so let's start off with defining what is a blockchain. There are many ways to answer this, so let me give you my simple explanation, and then we'll dig very deep into it. So, a blockchain is a distributed ledger that maintains a continuously growing list of ordered records called blocks, that are linked together and secured using cryptography. Now, if you're a complete beginner, this might seem a little daunting, and this sentence might carry a lot of weight to it. But don't worry, because we are going to break down all of these parts.
00:10:30.972 - 00:11:02.108, Speaker B: What is a distributed ledger? What are blocks? What is cryptography? So, if you didn't understand this completely right now, don't worry about it. We are going to solve it. So, starting off with defining what is a block in a blockchain. So, blocks are data containers where data is permanently recorded on a blockchain. And this data container, this block records all sorts of data. It records the transactions that are occurring at the network. It records a timestamp of when the block was created.
00:11:02.108 - 00:11:39.654, Speaker B: It records a hash of the previous block, and it records a nonce. Now, for now, you don't need to understand what a nonce is, but just know that it is a random number that is used when mining or creating a new block. Much more on this once we get to the consensus mechanism portion of this presentation. So let's actually take a look at how this process works, because I'm a visual learner, so through examples, that is the best way that I can truly grasp what's happening with this concept. So let's start off with just looking at an empty block. Block number one. Well, this block isn't really empty.
00:11:39.654 - 00:12:31.172, Speaker B: These blocks start off with a timestamp and a hash of the previous block. Now, the hash, if you don't know what a hash is for, now, you can think of it as the digital fingerprints. It's the string of fixed length that represents some original type of data. So this hash represents the data that exists within block zero, the block before this one. What other things does the block contain? Well, it contains a list of transactions. It will start collecting all the transactions that happened in the network until this block gets full, because each block has a memory limit, so it can only take in so many transactions. Once it hits that memory limit, then the block will stop validating and mining the block, which will produce what, in this case, is the hash of a proof of work.
00:12:31.172 - 00:13:19.000, Speaker B: And proof of work is just a mechanism that the network uses to reach consensus. Much more on that later. Once this block gets full, validated and mined, then this block is finalized and we can initiate the process of a new block. So, once again, what, what is the process that this block number two is going to go through? It's going to start with the timestamp of creation as well as the hash of its previous block. Once again, it starts. It's going to start collecting transactions until it gets full, and then it will get validated and mined until a new block will be produced, and so on and so forth. So you can start seeing that these blocks are chained together by the hash of the previous block.
00:13:19.000 - 00:14:18.914, Speaker B: Now, this is extremely powerful. If you follow the hashes all the way back, block by block, you will eventually reach what we call the genesis block, which is the very first block of the network. And each of these blocks have all of the transaction that has ever occurred in the network. So this makes blockchain extremely transparent, and it makes it easy for us to track any transaction that has happened in the network chronologically. So you can already start to see the power of blockchain, how immutable it is, transparent, verifiable, just by learning about what blocks are and how they are chained together. Now, to truly understand, though, how blocks work, we need to talk about how state machines work. Now, I feel like most of us intuitively know how state machines work, but I'm going to give you the formal definition of it, and then show you some examples and let you know how this ties in to blockchains.
00:14:18.914 - 00:15:03.480, Speaker B: So this is the formal definition of a state machine. A state machine is a behavior model. It consists of a finite number of states, and is therefore also called a finite state machine. Based on the current state and a given input, the machine performs state transitions and produced as outputs. Okay, so that sounds a little complicated, but in essence, it basically states that a machine will remain in a state until there is an external input, and then the state of the machine will change and will make it produce a different output. So let's take a look at an example, a very trivial one to start. Let's start off with a traffic light.
00:15:03.480 - 00:15:52.088, Speaker B: So, a traffic light starts with a state one where it's displaying the color red, and it can stay in this state forever unless there is an external input applied on it. For example, 30 seconds that have passed. So after 30 seconds, the machine, the state of the machine will change into now displaying a traffic light with a green color. Once again, this state will change once 30 seconds have passed. And now we're in the third stage where is displaying the color yellow. Similarly, we can give you another example. Let's say you have a system that holds accounts, and you have in the beginning state, you have a balance of ten and information a.
00:15:52.088 - 00:16:37.470, Speaker B: But then you decide to send some of your balance to another user and change the information of your account. When you do so, then the network will have changed from state one to state two, where your balance has reduced by five and your information is something different. Okay, so you may what you might be wondering? Okay, I kind of get this. This is essentially how computers work and everything works. So how does this relate to blockchains and blogs? So allow me to show you. So, in the blockchain network, we'll start off in a singular state. Let's say that certain accounts have certain balances in them, and you start creating and making transactions.
00:16:37.470 - 00:17:33.859, Speaker B: So the block will go through its process of, you know, collecting all these transactions, validating and mining the block. But it is only when the block gets finishes validating and mining the block or producing the block, that is when the state of the blockchain network changes. So you can be in an example in world state two and you can send a transaction to somebody else and they can receive the transactions and get the funds or whatever that transaction may be. That does not entail that the state of the network has changed. The state of the network will only change once the block is validated and mined. So this introduces a security vector that you need to keep in mind, which we will not talk about in this presentation. But if you're interested, you should definitely look up what double spending is.
00:17:33.859 - 00:18:09.344, Speaker B: It totally relates to this problem and it will really explain to you how the states in the network, how, since you have to wait until the block gets finished, validated and mined, it could introduce some problems. But the blockchain has been working on how to solve some of these problems. But yes, definitely look up double spending. It's very interesting. Very interesting technology right there. So awesome. Now you learn about what blocks are data containers that hold transactions and hashes of the previous block.
00:18:09.344 - 00:18:23.124, Speaker B: Timestamps, proof of work hashes. And now you learn how state machines are and how they work. So now we can start with botching fundamentals. Maybe I can grab a question or two as I sift this.
00:18:24.584 - 00:18:53.464, Speaker A: Yeah, I was looking through the questions that came in and I think you answered most of them as you were talking because there were some questions about double spend and stuff like that. I will say it looks like we have some people kind of griefing us a bit in the rise up pad. So we'll just ignore that for now. And any links that you all need information like that, we'll put in the chat for this. So you can get that information there. Because somebody's going through and deleting everything. So just ignore the rise up pad and we'll deal with not having it.
00:18:53.464 - 00:19:07.224, Speaker A: When it comes to there's a bunch of people asking questions about if this would be recorded and available later. Like, yes, it'll be available on YouTube right after this. So it's being live streamed to YouTube. And then we finish. It's going to be on YouTube. So we're there.
00:19:09.354 - 00:19:13.634, Speaker B: Awesome. Awesome. Thank you, Richard. There is Richard holding it down for you.
00:19:13.714 - 00:19:17.214, Speaker A: Roberto, why is the block size limited?
00:19:19.194 - 00:19:22.974, Speaker B: Very good question. As you can. Do you know the answer to this, Richard?
00:19:23.874 - 00:19:36.472, Speaker A: I don't know. From a technical standpoint, my thought would be that it's limited just because you're trying to have all these computers within blockchain come to consensus. So if it was unlimited, then that would be a problem. There there.
00:19:36.648 - 00:20:03.724, Speaker B: Yeah, that's what I would think. I don't have the technical answer either, but that's what I would guess. Just like if you have a block within with a huge memory size, then it could just take a while not to be as efficient. I remember when the blockchain protocol, it increased its block memory size from two megabytes to four megabytes. That was a really big deal. You should look into that because that's where you'll find your answer as to why. Cause there was a lot of people against it.
00:20:03.724 - 00:20:06.404, Speaker B: But yes, that would be my answer.
00:20:06.784 - 00:20:11.364, Speaker A: And then there is a question about what is proof of work.
00:20:12.584 - 00:20:33.578, Speaker B: Great question. We are going to get into that once we get into the consensus mechanism. So just hold on for now. Just know that it's a way for the network to reach consensus on what is the current state of the network, what is the truth. But yes, we will talk much deeper into that right here on our blockchain fundamentals. So without further ado, let's get started.
00:20:33.626 - 00:20:35.154, Speaker A: Yeah, let's get into it.
00:20:35.314 - 00:21:19.522, Speaker B: So let's look at some of these main elements that make up the fundamentals of blockchains. We're going to be talking about cryptography, distributed systems and game theory. So let's start off with cryptography. Now, cryptography stands for. Cryptos means for hidden, and graph means written in Greek. It's just hidden writing, and it's just the process of using algorithm and code to transform some original piece of data into an unreadable one. But it's only unreadable to the audience that is not intended to hold that piece of information, meaning that the intended recipient will be able to decrypt the information if they know the secret key.
00:21:19.522 - 00:22:13.422, Speaker B: So this is actually a branch of mathematics. And let me show you an example of how it works. If you are already a developer or starting to become a developer, one of the entry projects that you're going to be doing is a CSEr cipher. And this is a basic form of encryption where you're presented with an Alphabet that is in order, and you will, in order to encrypt it, you are going to shift some of the letters of the Alphabet forward or backwards, certain amount of spaces. So, for example, you have this message right here that is 3d impossible. So let's say you wanted to encrypt it, and in this example, we are encrypting it by shifting the Alphabet forwards three times. So the letter t will then now be converted to w.
00:22:13.422 - 00:23:13.804, Speaker B: So if you have a t, here you go, three spaces t, w, three spaces. The t becomes the w, the r becomes the u, the e becomes an h, etcetera. So, for somebody who just looks at this bottom word that has been encrypted, it just seems like seemingly just gibberish. You can't really decode what's happening, but if you are the recipient and you know that the message has been encoded by shifting the Alphabet forwards three times, then you're just going to have to shift each letter in the Alphabet backwards three times to decode the message. So this is how basic encryption works. But let's take a look at some of the tools of cryptography that blockchain specifically uses. These three tools that blockchain uses are hash functions, which we talked about briefly in the blocks presentation, public and private keys and merkle trees.
00:23:13.804 - 00:24:15.004, Speaker B: So let's start off with a hash function. So, as I mentioned before, a hash is the string of fixed length that represents some original type of data. A hash function is just an algorithm that maps this variable length data to fixed length data. So what does that mean? So let's say you have a document and you want to get its hash. How do you do it? You will pass this document onto a hashing function, where it will produce a hash which is once again a string of fixed length that are made up of seemingly random letters and numbers. But let's take a look at some properties regarding this hash. Each hash is deterministic, meaning that if you input the same documents 50 times in a row, you will always get the same hash 50 times in a row.
00:24:15.004 - 00:24:56.892, Speaker B: They are extremely fast, but they are a one way ticket, meaning that if you take a document and you get a hash out of it, it doesn't mean that you can put in a hash and get a whole document out of it. That does not work that way. It's just a one way ticket. Any small change in the input, like in the original document, will generate a completely different hash. Even if it's just an extra blank space, the resulting hash will be totally different. It is also collision resistant, meaning that no two documents will generate the same hash. This is true for the most part.
00:24:56.892 - 00:25:25.904, Speaker B: There are some hash algorithms that work a little differently, but for our intents and purposes, just know that no two documents will generate the same hash. Now, once again, I'm more of a visual learner, and I learn more through example. So let's go ahead and actually try this if you want to follow along. If not, just watch what I'm about to do. We're going to head over to this andersprotworth.com slash blockchain slash hash website. Thank you.
00:25:25.904 - 00:25:49.188, Speaker B: And let's actually take a look at how this works. So make sure I can see my screen. Make it nice, make it neat. Great. So this is the SHA 256 hashing function. This is actually the hash function that bitcoin uses. So right now, even where is the data field is blank.
00:25:49.188 - 00:26:35.954, Speaker B: We are already getting a hash. But if we put any type of information in it, the hashing function will automatically hash whatever data I put in and it will produce out this hash. Ok, that's great. You might be wondering, ok, I know how this works now, but what are some practical benefits of this water? How can we use it? Let me give you a practical example. Let's say I created a document and I want to send this document to my friend. But my friend wants to verify that in the time that it went from my computer to their computer, this data wasn't tampered with. How can we prove that with hashes? So I'm actually going to give you a sample document.
00:26:35.954 - 00:27:13.158, Speaker B: This is just one graph of the webpage. So let's say that this is my document, right? And we have a hash that starts with CFF 50 and ends in zero, three eb. So, great. Now I have the hash that represents my document. So I go ahead and I send it to my friend. My friend receives the contents of my document and wants to verify that he hasn't been tampered with. So what are they going to do? They're going to use the same hashing function that I did.
00:27:13.158 - 00:27:49.194, Speaker B: They're going to copy the message contents, they're going to paste it, and then they're going to check the hashes. If the hashes are the same, then they can they verified that the content has not been tampered with. If, for example, I added an extra space or something, they will notice that the hash is completely different. And then they can verify that this document has been tampered with and that they cannot trust the data of this document. So this is the power of hashes. It just represents some original piece of data. It's a digital fingerprint.
00:27:49.194 - 00:27:54.046, Speaker B: So, back to the presentation now. Thank you. For those who followed.
00:27:54.110 - 00:28:02.154, Speaker A: Yes, Roberto, there's a question here. Would it theoretically be impossible for two datas to create the same hash? Are they really infinite hashes?
00:28:03.534 - 00:28:22.034, Speaker B: There are some hashing algorithms that can produce the same hash, but I would say it's extremely hard for the shot 256 hashing algorithm hashing function, at least to produce the same output given to two separate documents.
00:28:22.694 - 00:28:52.320, Speaker A: Yeah. So to answer that question, I think the easiest way to answer this is technically, it is possible. The odds of it happening are like, statistically, the odds of it happening are like, it will never happen statistically. But technically, it is possible when it comes to. So they call that collision when two things make the same hash. And when it comes to having a collision like that, it wouldn't be something like they changed the document like we were talking about there. You wanted to verify that what you sent was what you sent.
00:28:52.320 - 00:29:02.824, Speaker A: It wouldn't be like you could change a sentence and it would be the same. So, yeah, absolutely feasibly, it's impossible. Technically, it is possible.
00:29:04.324 - 00:29:39.330, Speaker B: Great answer. Okay, so now you learn about hashes and, you know, the, how powerful they are, but we're not done. Now we're talking about public and private keys. Now, if you've interacted with web3 wallets before, this is probably something that you have heard of before. But now let's actually take a very deep look into how they work. So, when it comes to cryptography, you have two different ways to encrypt information using keys. You can use symmetric encryption, which uses a single key to encrypt and decrypt stuff.
00:29:39.330 - 00:30:20.602, Speaker B: And you have asymmetric encryption, where you have a pair of keys, the public and private key, to encrypt and decrypt stuff. Asymmetric encryption is the, the method that is used in blockchain technology. So let's actually take a look at how it works. Now. Let's say that you have a message and you want to encrypt it, you have the option to encrypt it with either your public or your private key. But the moment that you decide, let's say you decide you want to encrypt this message with the public key automatically, only your private key can decrypt that message. So, and this can be switched again.
00:30:20.602 - 00:30:55.862, Speaker B: If you want to encrypt this message using your private key, then only the public key can be used to decrypt this message. When private and public keys are created together in pairs, they are mathematically linked. So that means that if you encrypt a message with your public key, only your private key can open it, not the private key of another user. Let's see how this is used in the blockchain. Now, I'm going to explain to you as simply as I can right here. But for me, it's hard to understand when I'm just reading a bunch of words. I like examples.
00:30:55.862 - 00:32:08.004, Speaker B: So after this I'm going to show you a great example of how it works, but for now, just hold on with me. So when you want to send a message in the blockchain, and you want to make sure that only the recipient is able to access this message, you are going to encrypt the message using the recipient's public key. That way, when the recipient receives the message and see that it's encrypted using their public key, only they can decrypt it using their private key. Public and private keys also allow the potential or the ability to authenticate who sent the message. This is done through something called digital signatures, which is essentially when the sender is about to send the message, it sends along with it the digital signature, which is just the hash of the message content that has been encrypted using the private key. So when the recipient receives the digital signature, they can decrypt it using the sender's public key, therefore proving that it was indeed the sender who sent that message. So let's take a look at how this happens in action.
00:32:08.004 - 00:32:35.900, Speaker B: Let's start with Dos, just sending a message. We have Bob and Alice. Let's say Bob wants to send Alice a message. Bob will start creating the message, and he only wants Alice to be the only recipient, only for her to be able to open this message. So he's going to encrypt this message using Alice's public key. Alice will receive this message. Notice that it's encrypted using her public key.
00:32:35.900 - 00:33:30.234, Speaker B: So she will decrypt it using her private key, and then she will get access to her message. But how can now she authenticate that it was indeed Bob who sent that message? Enter digital signatures. So let's start again from the beginning. Bob creates his message, but before he sends it, he is going to sign it to prove that it was him that sent it. The way that this is done is that he is going to grab the content of his message. He's going to pass it through a hashing function that will result in the hash, and then he is going to encrypt this hash using his own private key. This encryption of the message hash using the private key is what is called, or what is known as the digital signature.
00:33:30.234 - 00:34:18.386, Speaker B: So he's going to send the message along with this digital signature to Alice, and she's going to receive it. She's going to open the contents of the message, and she's going to notice the digital signature. So this is the moment that she can prove that it was indeed Bob who sent this message. Since she knows that digital signatures are encrypted using the sender's private key, she's going to use Bob's public key to decrypt it. And the moment that happens, she has successfully verified that it was indeed Bob, the sender of the message. And to go a step further, now that she has access to the hash, she can take the messages content, put it through the same hashing function, get her own hash, and then compare to see if they're the same. They're the same.
00:34:18.386 - 00:34:56.146, Speaker B: Then, once again, she has proven that the content has not been tampered with. So this is the amazing power that you get when you combine hashes and public and private key cryptography. It's great. Having said this, however, I'm going to give you a short warning before we actually get involved with web3 wallets, to never give your private key away. Since we learned how they work. Now, you know that other users can decrypt your messages and sign transactions in your name. In essence, they'll just have full access to your funds and wallet and be able to do what they want.
00:34:56.146 - 00:34:58.746, Speaker B: So never give your private key away.
00:34:58.930 - 00:35:20.070, Speaker A: I'm just gonna say that again. If. If everybody wants to type in the chat, just to make sure we're, we're all paying attention, because this is super important. Just go ahead in the chat. Just say, I won't give away my private keys. Type it in the chat. I think it'll help people remember it because private keys are probably the most sensitive thing in this entire space.
00:35:20.070 - 00:35:32.822, Speaker A: Like, I know here in the United States, we have Social Security numbers. With a Social Security number, you can get a lot of information to access people. I'm sure there's other identification numbers like that around the world. Private keys are like that, but even more so.
00:35:32.838 - 00:35:32.990, Speaker B: Yeah.
00:35:33.022 - 00:35:45.294, Speaker A: I love this. I won't give away my private keys. Fantastic. If anyone ever asks you for your private keys, you say, no, thank you, and you walk away. No one ever needs your private keys. They're your private keys. Like the name implies, the private.
00:35:45.294 - 00:35:47.814, Speaker A: Fantastic. I love seeing it in the chat.
00:35:48.314 - 00:35:48.698, Speaker B: Yeah.
00:35:48.746 - 00:36:02.854, Speaker A: Remind you about this? Probably several times. Because private keys are very risky, and one, they're very powerful. With that power comes a lot of responsibility. As one Uncle Ben told Spider man, great power, great responsibility.
00:36:03.514 - 00:36:18.278, Speaker B: Absolutely. So glad. So many comments. So many comments saying that they won't share the private key. And I see a question here. I can't pull it up, but it's from AJ. She, they ask, will she, Alice, will Alice be able to see Bob's private key.
00:36:18.278 - 00:36:46.228, Speaker B: No, she won't. Alice will only know that the digital signature is encrypted using Bob's private key. But she won't know exactly the value of the private key. Good question. Okay, let's move on now to merkle trees. So what is a Merkle tree? A merkle tree is a binary hash tree. It's a data structure for storing information in large data sets.
00:36:46.228 - 00:37:13.552, Speaker B: And it makes the verification of this dataset super efficient. It's an anti fraud mechanism. So a good way to understand what they are is to read this quote from Andres M. Antonopoulos. He is the author of the bitcoin protocol and mastering Ethereum. Fantastic books. If you want to delve much deeper into how the blockchain works, you should totally check it out.
00:37:13.552 - 00:38:01.920, Speaker B: So he says, merkle trees are used to summarize all the transactions in a block, producing an overall digital fingerprint of the entire set of transactions, providing a very efficient process to verify whether a transaction is included in a block. So let's take a look at how exactly this works. So here, let's just say that we are looking at all the transactions that are in a block. You have transaction a, transaction b, C D E f G h. So the Merkle tree will initially start getting the hash of every single one of these transactions. Transaction a will be put into a hashing function and will result in hash eight. Same for the rest of the transactions.
00:38:01.920 - 00:38:34.298, Speaker B: Don't worry about the color changes in here. Just focus on that. Each transaction is getting its own hash. Once all the hashes of the transactions are gotten, then we are going to start combining these hashes together. So hash A and hash B will be put into a hash function to produce the singular hash ab, similar with hash C and hash D. They will be combined together to make one hash CD. And this process will go on and on.
00:38:34.298 - 00:39:36.578, Speaker B: So we're going to simplify this even more. Now we have less hashes together, but more combined hashes until we reach what we call the root hash. So if somebody wanted to verify that a transaction was in a block, they would have to do this exact same process of getting all these hashes together until they find a root hash, and then compare the hash that they got versus the hash that is presented. And if it's the same, then they can verify that all the transactions have indeed been included in the block. This is another way to look at this by just showing you that this root hash of the transactions will also be collected by the block. And this is just to show you that this tool is not inherently just used in blockchain. You can use this tool in others parts with just getting hashes of text documents or images or documents.
00:39:36.578 - 00:39:54.178, Speaker B: It's just an example to tell you that it's not only used in blockchain technology, technology. So, having said that, we have officially ended the first element of what makes a blockchain, which is cryptography. Now we can move on to distributed networks.
00:39:54.306 - 00:40:49.260, Speaker A: And Roberto, before we go on, just to kind of talk about merkle trees too, real quick, add a little bit of flavor to that. One thing that's really useful about merkle trees is in order to get that root. So the weird thing about merkle trees is they're called trees, but they're kind of upside down, right? Because the thing at the top is called the root. And then the things as you go down at the very bottom are called leaves. So if you think about them, like, as a tree that you flipped upside down, it makes a little more sense. It's weird that they're upside down, but that's just kind of how it is. One thing that's really interesting is given that root, if anything, anywhere in the merkle tree changes, the root becomes invalid, right? Because we talked about how with a hash, like, if you change a tiny bit, then the hash changes, right? So when you, like, if you go two slides forward to your one that has, like, hello text in it.
00:40:49.260 - 00:41:33.224, Speaker A: So if I changed one character in hello text, the hash for hello text is going to be wrong. So then hash ab is going to be wrong. So then hash ABCD is going to be wrong, right? So, like, one tiny change will change that root hash. And that's how you can know that, like, nothing in this massive amount of data has changed, which is really powerful. Also, if you wanted to check and make sure that something was part of this merkle tree, like, say you took cute dog PnG and you wanted to make sure that was part of the merkle tree. You don't need every hash in the tree, right? This is a pretty small tree, but you don't need every hash in this tree. You just need, like, hash ABCD, hash CD, hash c, and then the cute dog picture.
00:41:33.224 - 00:41:54.444, Speaker A: And you can check and make sure it's in there because you can hash all those things together. So you just kind of need the branches leading down to the leaf in the tree that you need. So it's really powerful because you can ensure that something is inside a merkle tree. And, like, all you really need is a few pieces of data to get to that piece of information instead of the entire thing. So it's really powerful.
00:41:56.244 - 00:42:01.308, Speaker B: Wow, that's fantastic. That's something. I didn't know that you could just go down the branches. That makes so much sense.
00:42:01.356 - 00:42:08.344, Speaker A: Yeah, yeah. That's why merkle trees are really, really powerful as far as keeping track of data too, and ensuring that something is in there.
00:42:09.404 - 00:42:13.024, Speaker B: Awesome. Thank you. I'm even learning on this boot camp.
00:42:13.364 - 00:42:14.584, Speaker A: No, it's all good.
00:42:15.324 - 00:42:53.902, Speaker B: This is amazing. Okay, now we can talk about distributed networks, which is the second element of what makes up the fundamentals of blockchains. So we tend to talk about blockchains. People tend to say that blockchains are decentralized. This is partly true, but there's more to it. So let's start talking about what a centralized network is first. So a centralized network is a network where there is a single point that mainly runs all of the critical functions of the network and resources and information.
00:42:53.902 - 00:44:00.344, Speaker B: The problem with this, that if this central point were to go down, then the entire network is compromised. And unfortunately, this is how a lot of our traditional institutions are currently being run at with centralized networks. So this is something that we would like to change. So the next step above this is decentralized networks, where you remove the single point of failure and introduce a little more privacy within the users of the network. But the problem is that sometimes within these decentralized networks, each one of these circles, we can just call them nodes. Some of these nodes hold very critical and special functions and information that if they go down, it doesn't mean that the entire network will go down, but the network will lose some of these critical functions and information because the one node that held this information went down. So the network will still be up, but it will still be affected.
00:44:00.344 - 00:44:41.338, Speaker B: So what's a better network that we can have? And that's the distributed network. This is what blockchains do. So in a distributed network, all nodes communicate with each other, share resources, and even do functions. So in case one of these nodes were to go down, it's okay because the rest of the nodes will have the same information, the same resources, and they could share the same functions. So the integrity of the networks remains the same. It is much more fault tolerant. And yeah, it's better than a centralized or decentralized network.
00:44:41.338 - 00:45:27.344, Speaker B: And distributed networks are what blockchains are. If you remember the simple definition of what that I gave you, what a blockchain was, it was a distributed ledger. So let's take a look at how that looks a little bit. So if we looked at the ledger of states that are distributed, you can think of each one of these blocks as nodes in a blockchain network. And each one of these nodes holds a ledger, holds the history of the transactions that have occurred on the network. So if one of these nodes were to go down, that's completely okay, because we have like nine others that have the same information and have the same ability to compute whatever they need to compute. So this is the power of distributed networks.
00:45:27.344 - 00:46:01.194, Speaker B: And that was it for the second element of blockchain fundamentals. And we can start talking about the last element, which is game theory. So let's talk about general game theory and then how it applies to blockchains. So, general game theory is the study of decision making between individuals. The outcome of each individual depends on the decisions of the others. And there's a kind of like a game like interdependence, the probability in the decision making. Let's see how this applies to blockchain technology.
00:46:01.194 - 00:46:46.974, Speaker B: In essence, it's kind of the same. It's just the interaction that happens between participants in the blockchain ecosystem and what are their incentives to behave honestly. So, let me introduce to you a very popular game theory problem. So here is called the bicentennial problem. You have four generals and a city in the middle. The point of this is that all armies must attack together to win, otherwise they will lose. But the problem is that these generals are all far apart, and they can only communicate with each other through messages.
00:46:46.974 - 00:47:37.534, Speaker B: But these messages can be intercepted, or sometimes the generals can just plain old disagree. Dishonest. So how the real question becomes, how do decentralized parties agree on consensus without a trusted, centralized party? And let me introduce you now to consensus mechanisms, because they solve this very problem. So, a consensus mechanism, it works to ensure that all parties agree that a certain state of the system is correct. Essentially, what is the truth in the network? Consensus mechanisms are based on game theory. We have multiple consensus mechanisms that are being applied today. We have bitcoin using proof of work.
00:47:37.534 - 00:48:17.912, Speaker B: We have Ethereum using proof of stake. And then we have some very specific blockchains using something called proof of authority. And there are many more, but those are the main three that we are going to be talking about. So let's start off with talking about proof of work. So this is a concept that has actually been in our industry since 1992. It was a concept by Cynthia Dwork and Manny Noir, and it showed up in the paper pricing via processing or combating junk mail, advanced system cryptology. However, proof of work was formerly named by Marcus Jacobson and Ari Jules in 1999.
00:48:17.912 - 00:49:31.984, Speaker B: In the paper, proof of works and bread pudding protocols, there's a special asymmetry when it comes with a proof of work consensus mechanism, specifically that it requires a significant amount of computational effort to solve a puzzle or perform a certain task. But verifying the work has been done is relatively simple and quick. So, let's delve deeper into this. So, the point of proof of work is to ensure that participants in the network agree on the state of the ledger, such as the order and validity of transactions, through a process that involves solving complex cryptographic puzzles. People who solve these cryptographic puzzles are known as miners. They are the ones that do mathematical calculations on their computers to verify that the transactions are valid. But what is mining? Mining is the process of trial and error, of finding a nonce, which is a random number that satisfies the degree of difficulty of the network.
00:49:31.984 - 00:50:27.544, Speaker B: Now, why do we need a difficulty? Why does the network impose a difficulty for the blocks to be mined? Wouldn't we just want it to be easy so that everybody can mine a block? Well, not really, because the difficulty ensures that the process of adding new blocks to the blockchain requires a significant amount of computational work. And this makes it economically infeasible for malicious actors to manipulate the blockchain. So it's a way to protect itself against actors who making just fake accounts to try to game the system. Like always, I learn much more when I actually work through an example. So, if you want to follow along, we are going to do a very small demo and go ahead and follow this website. It's going to be posted in the. On the YouTube.
00:50:27.544 - 00:51:10.572, Speaker B: There you go. It's right here. So, if we navigate to the website, we are going to be introduced with this block mining simulator. We're going to have start off with block number one. We're already going to be given a nonce, which, remember, is just a random number, an empty data field, and we already have a hash. So the way that this works is that this hashing function is going to take in the nonce and whatever data we put in. And the goal of this game is to find a hash that starts with four leading zeros.
00:51:10.572 - 00:51:40.356, Speaker B: This is the degree of difficulty that this specific network has imposed. So, let's try it out. Let's say I am. I'm a block, and I have a bunch of transactions. Transaction one, transaction two, we got a timestamp. These are all things that blocks collect. So we know that if we combine this data with this nonce that we have right now, it's going to produce this hash, but it doesn't have any leading zeros.
00:51:40.356 - 00:52:14.908, Speaker B: And remember, the way to beat this puzzle is to find the correct nonce, the correct random number that, when combined with this data, will produce the hash with four linear zeros. So now we can just do manually, like one, two, three, changing the nonce up until infinity, until we find that hash with four learning zeros. So I'm not going to do this manually. I'm going to make my computer do it. I'm going to click on the mine button and have it do it. All this work for me. So now it's mining.
00:52:14.908 - 00:52:52.824, Speaker B: And voila. We were at block three, and it found out that the number 14,507 was the correct number that would, combine with this data, produce the hash, four leading zeros. This is essentially what proof of work miners do. They solve cryptographic puzzles to find the right nuns, that, when combined with the blocks data, will satisfy the degree of difficulty that that specific network has imposed. So that's fantastic. We can do another example. We can just put more information.
00:52:52.824 - 00:53:36.074, Speaker B: And so imagine this is now a new block. I'm going to hit mine, and it's going to start solving the puzzle again. So this time it was 26,443. So you can see how sometimes these numbers can be very, very big, and it takes a lot of computational processes to find it. And that's. That satisfies the degree of difficulty that the networking poses. And it also protects against malicious actors who just want to make fake accounts to mine blocks, because it doesn't matter how many accounts you make, each account will have to go through the rigorous process of using computational power to find these nuns.
00:53:36.074 - 00:53:43.094, Speaker B: Great. That was essentially proof of work. But there's one. Yes, go ahead.
00:53:43.134 - 00:54:09.414, Speaker A: When it comes to back to your game theory, proof of work makes it expensive to be a bad actor in that you're spending those computation cycles if you wanted to be that bad actor. So that's kind of how proof of work ensures that people are acting fairly good, being good actors within the network. Right. Because if you're doing things that are unsavory with your mining, it's costing you energy.
00:54:10.874 - 00:54:48.520, Speaker B: Absolutely costs you a lot of energy. So this actually brings me to my next point. So it's great that we have this because it can be very secure. The problem is that you have hundreds of computers racing with one another to solve this one puzzle. And it is the winner that manages to find these nuns first that gets to mine the block and get rewarded for it. That's great for that one winner. But for the rest of the miners, all the electricity and computing power that they use can be seen as a little wasteful, and it definitely impacts the environment.
00:54:48.520 - 00:55:48.798, Speaker B: So there is now another option that people can use, which is proof of stake. This is another type of consensus mechanism where you don't have miners anymore. Here you have what is called validators. This is known as proof of participation. To participate in the validation, the amount of coins that the valor that the validator has is used instead of the computational power. So, for example, validators go ahead and they stake a lot of their funds, their coins, their tokens, in order for them to be, to get a chance of validating a new block. So if they are selected to validate a new block, they have an incentive to remain honest, because if they behave dishonestly, then they will get their token slash, meaning that they're going to lose a lot of money if they try to behave dishonestly.
00:55:48.798 - 00:56:52.774, Speaker B: But if they behave honestly, then they're going to get rewarded with some of the native blocks rewards. So this is also ties into that game theory of their incentives, that these validators have to behave honestly. Now, the problem with a proof of stake is that the more tokens and funds and coins you put in, the greater the chance of you being chosen to validate some of these blocks. So there's like a little unbalance that whales or people who with large coin hold coin holdings can be chosen to be validated more than other people who don't have as many coins. But it's always a take and give, and there's always works around this to make this more balanced. So this is proof of stake, and it differs from proof of work where you don't use a lot of economic computational power. Instead, you use economical power, you use finance to incentivize people to behave correctly and not dishonestly.
00:56:52.774 - 00:57:42.874, Speaker B: So now we can move on to proof of authority. And this is used in permissioned blockchains. This is a very interested keyword for the most, like blockchain, like bitcoin and ethereum. Blockchains are permission less, meaning that you can interact with it as long as you have the means to do so. But there are some permission blockchains that, if I'm correct, you need special permission to use them and interact with them. So in permission blockchains that use proof of authority, you have a group of specific nodes that are defined and authorized to create new blocks in a chain. These nodes need approval from most of the other nodes of the block to be created, and this is mainly used in some private Ethereum networks.
00:57:42.874 - 00:58:18.644, Speaker B: But, yeah, for the most part, like, I'm more. I use more permission less blockchains, like Ethereum on bitcoin. But there are some permission blockchains for very specific use cases that use this consensus mechanism. Whoo. Okay. Having said that, we have finished the fundamentals of what make up a blockchain. So far, we have covered what are blocks, what are state machines, how cryptography plays into this with the hashing function, public and private keys and Merkel trees.
00:58:18.644 - 00:59:00.692, Speaker B: We have looked at distributed networks and how blockchain is not really decentralized. It is a distributed network. And we have taken a look at game theories where you learn about the bicentennial problem and you learn about the consensus mechanisms of proof of work, proof of stake, and now proof of authority. You right now should be head and shoulders above where you started because that was a lot of great information. And if you missed some of it, don't worry about it, because this is going to be recorded, I believe, and you can always go back and rewatch it on your own leisure pace, take notes, take breaks. Don't worry about it, because now we're going to be talking about what web3 is.
00:59:00.868 - 00:59:06.484, Speaker A: Before we dive into that, Roberto, I just want to say, like, I'm watching the chat here. There's a lot of questions in there.
00:59:06.644 - 00:59:07.188, Speaker B: Okay.
00:59:07.276 - 00:59:21.064, Speaker A: There's quite a few people, though, who are answering the questions, and I was going to give a shout out to them, like, y'all are doing a fantastic job of having a conversation in the chat and answering those questions. So thank you. If you're one of those people answering questions for doing that in the chat, you guys are doing awesome.
00:59:22.524 - 00:59:37.984, Speaker B: Absolutely. Yes. Thank you so much. It's always great to see other people helping each other out, and now we're all in this together to learn this. So it's always very nice shout out to everybody who's helping out. And thank you, Richard, for letting me know.
00:59:38.144 - 00:59:41.544, Speaker A: Yeah, this is great. It's going great. You're doing a fantastic job, too.
00:59:41.704 - 01:00:05.136, Speaker B: Thank you. Thank you. All right, so let's talk about Web three. And the way I like to talk about Web three is to first start off with Web one, so that way we can see how we got here. So with Web one, you can think of it, you know, it was very rough, static web pages. Think of Wikipedia. But even more basic, everything was linked through hyperlinks.
01:00:05.136 - 01:00:55.034, Speaker B: And consumers or users like you and I were mainly only able to consume content. To produce content, you had to be somebody who had a lot of resources to actually uploaded to the Internet. So on web one, people were mainly just consuming content. It wasn't until web two, where there was kind of like a revolution in the web, where things started to change fast. Websites became much more interactive, much more faster, much more responsive. And now users like you and I know only we're able to consume content, but to produce content. The only problem with this, though, is that this content was mainly held in centralized institutions.
01:00:55.034 - 01:02:12.220, Speaker B: And we know the risks of having a centralized institution that has a centralized network with that one critical point of failure. But in addition to this, many of these institutions were not transparent, and they made paper based promises, meaning that they will tell you, yeah, we'll take care of your data. Yeah, we won't sell your data, we'll protect you, everything's going to be all right. But then, under the table, they did exactly the opposite. And we, who's the one who suffers in these conditions? It is us, the users, and it's very hard to do something about it. So this is the main problem, or web two, which we're currently at. So how does web3 fix this? Well, web3 introduces now the idea of decentralization and distribution, and while keeping the core aspect of web two that make web two great, such as production of content and interaction with other users, you introduce now this blockchain ledger where everything is transparent, where you own your digital assets, where you own your information, where promises are no longer just paper based promises.
01:02:12.220 - 01:02:36.776, Speaker B: They are cryptographic guarantees that are enforced through smart contracts, through math and physics. So we have much more power when we are using web3 as a user to produce and consume content and own our digital data. So we actually already have some web3 applications that we use. I mean, bitcoin. Yes, Richard, I was going to say.
01:02:36.800 - 01:03:28.224, Speaker A: Too, there's some questions in the chat about web3 using AI. And web3 is kind of a overloaded term slightly, because back when web two was defined, web3 was predefined as being the semantic web, which involved that AI. And then the blockchain space kind of came out and blockchain became a thing and became web3 as well. So that's probably why there's some confusion about the term web3, because it was, like, already defined as one thing and then kind of turned into meaning something else in this space. Definitely people refer to it as web3. I've started calling it just like blockchain instead of web3, just to be more clear about it personally. But, yeah, just to kind of clarify those questions around, like, does it involve AI?
01:03:29.744 - 01:04:13.350, Speaker B: Yes, absolutely. I mean, that's a good way to put it, to just say blockchain. You know, just get right to the point. I mean, as I was saying, we have bitcoin here is a blockchain that revolutionized finance and ethereum platform that allows for the creation of a smart contract, these digital agreements that are enforced by math and physics. And you obviously have chaining services, Oracle services, that connect a blockchain world to the real world and vice versa. And all of these technologies that are presented here is something that are already being created and used, and they're just growing more and more. And one of these is metamask, which is a web3 wallet creator, which we are about to get into right now.
01:04:13.350 - 01:05:02.934, Speaker B: I'm going to present this one more slide, and then I'll leave it to you, Richard, to show the community how to install this web3 wallet. So what is a web3 wallet? A web3 wallet is just a key manager used to manage your cryptocurrencies, or tokens. They authorize transactions, and they interact with web pages or decentralized applications. They can subscribe to messages, so they can demonstrate that you own a wallet address. It is a way to interact with blockchains, to interact with other accounts, other web3 wallets, and to even interact with some smart contracts. So, having said that, I'm going to go ahead and pass it over to Richard, who is going to explain to you how to install metamask so that you may interact with some of these blockchain apps.
01:05:04.834 - 01:05:21.022, Speaker A: Thanks. I think my screen's there now. I think we're good. Yeah. So when it comes to wallets, there's a bunch of different wallets out there. Metamask is probably the most widely used currently. So that's what we'll go through today.
01:05:21.022 - 01:06:07.062, Speaker A: We'll drop a link in the chat to Metamask IO. I will say this space, when it comes to private keys, we mentioned earlier, Uncle Ben from Spider man, great power comes great responsibility because you are in control of your private keys. That's called self custody. When you are in control of it, you are self custodying your keys and everything like that. That means that you have the potential for something to happen to your keys. And if somebody gets your private keys, then they control everything that's in your wallet. So, not to scare anybody, but just to let you know that you need to take, you know, security kind of seriously when it comes to metamask, metamask IO is the URL.
01:06:07.062 - 01:06:44.712, Speaker A: You can see it up here in my URL bar. Make sure you're going to the right metamask, first of all, and ensuring that you are installing the correct plugin for chrome or whatever browser you're doing. So we head to metamask IO, we go ahead and click download, and then we can install metamask. So I'm in chrome doing this fresh here. We'll add it to chrome if you're following along. So we're adding the metamask extension to Chrome. And if we go to our extensions here, you'll probably want to pin it.
01:06:44.712 - 01:07:17.526, Speaker A: So in your extensions, you click the little pin button and then metamask. The happy little fox will be there, and we get this fun little fox who follow your cursor around. In just a minute, you're going to type a password. He's going to watch you type your password. That always freaked me out a little bit, because it feels weird to have somebody watching me type my password. But we'll get there in a second, so we'll agree to our terms of service and we'll create a new wallet. Metamask has done a very good job of kind of explaining how wallets work as well and what they do and do not do.
01:07:17.526 - 01:07:39.742, Speaker A: So we'll agree to this, and then we'll type our password in. Oh, the fox isn't here. It's when you log back in, you'll see him watch you type your password. So this password is just to access your wallet. This has nothing to do with your private key, your public key. This is just to get you access to your wallet. It's like an extra layer of security.
01:07:39.742 - 01:08:07.606, Speaker A: So you want to make sure that you type a very secure password. I'm going to do some things that are not best practices here because I'm going to throw this wallet away. So you'll notice my password is weak. Your password should be strong. You want to make a good password and make sure that's secure. So for my purposes here, since this is just demonstration, I'm keeping it easy on myself. But you want to make sure that your password is strong and you're going to acknowledge that metamask can't recover this password.
01:08:07.606 - 01:08:23.142, Speaker A: This is important. Like a lot of times there are scams and stuff like that where people say, hey, it looks like something's wrong with your wallet. Just give us your private keys and we'll help you out. And what did we all type earlier? Do you remember Roberto, what everybody typed.
01:08:23.158 - 01:08:26.918, Speaker B: In the chat, absolutely. But you will not share your private keys.
01:08:27.046 - 01:08:53.564, Speaker A: That's right, we will not share our private keys. So if anyone ever asks you for your private keys, you say, no, they're my private keys. So we understand metamask can't help us out and we'll create a new wallet. Now, metamask has this awesome video here. You can watch it on your own if you like. Explains what is going on with your recovery phrase. And recovery phrase is going to be a twelve word phrase.
01:08:53.564 - 01:09:28.214, Speaker A: That's the, as they call it, master key to your wallet. So basically, these twelve words get hashed together to create your private key. So these twelve words get hashed together to create your private key. So these twelve words are your private key. So we want to make sure that we protect these twelve words and it explains to you here what to do about them. And I know I'm harping on this, you know, making sure that you secure your private key. Make sure you secure this recovery phrase because it is your private key.
01:09:28.214 - 01:10:06.964, Speaker A: They explain here what you can do with it. You can save it in a password manager, store it in a safety deposit box, write it down and store it in multiple secret places because these twelve words, they turn into your private key. So we'll click secure my wallet and then I'm going to do something that you should never do. I'm going to let you see my twelve words because like I said, I'm going to throw this wallet away as soon as I let this go out on stream. This, you, wallet is no longer private. It's kind of like, you know, if everybody watching the stream, I just opened up my wallet and I was like, yeah, this is my wallet. And suddenly everybody has access to my wallet now.
01:10:06.964 - 01:10:40.514, Speaker A: So do not share your recovery phrase or your private key. I'm going to just to let you know how to do this, how it works. So we reveal our recovery phrase and there are my amazing twelve words. So these twelve words turn into my private key. I'm going to copy them to the clipboard and I'm going to go and save these real quick because we'll need to verify these in just a moment. So I'm going to just put these somewhere I can see them on another screen. So you'll need to write these down.
01:10:40.514 - 01:11:19.524, Speaker A: You'll need to store these in a safe place. Some people, depending on how much you're going to do with this wallet, I would suggest this wallet be like a testing wallet, right? This is your experimental wallet. We're going to talk about test nets which are a place for you to learn and practice. And we'll get funds, we'll get money on the testnet. I like to call those testnet funds monopoly money because they're not worth anything. And so I have a wallet that I do all the stuff like this, workshops and stuff like that in, and that is separate from anything that I actually have in anything of financial value in. So we have these twelve words.
01:11:19.524 - 01:11:56.776, Speaker A: You write them down, you store them somewhere safe, we'll click next, and then it's going to ask you to verify a few of them just to make sure that you actually wrote them down. Because if you didn't write them down correctly, you can't recover your wallet. Like, if something were to happen to my metamask, if I were to delete this extension, my wallet will be gone. But if I have these twelve words, I can get it back, which is really cool. And we'll paste this in here and I can confirm. And hey, I copied and pasted my words correctly. I can copy paste like the best of them.
01:11:56.776 - 01:12:23.436, Speaker A: Let's see, I'm gonna look real quick. I think there's some questions. Ah, this is a great point. Yes. So when we say that there is a private key. Thanks for pointing this out, you can actually create multiple private keys in your wallet. So you can have different accounts, if you will, within your wallet that all come from this set of recovery phrases.
01:12:23.436 - 01:12:44.016, Speaker A: So that's a really good point. Thanks for pointing that out. The words are probably even more precious and need to be secured more than just your private key. That's a great point. Okay, so we've got our wallet created and we can click. Got it. And it'll explain how metamask works.
01:12:44.016 - 01:13:14.408, Speaker A: Hey, it tells us to pin metamask to our browser. We already did that, right? We clicked the little pin button. So little fox is always up there. And then it says, hey, metamask. Is this little fox up here in the corner? And now for some reason, because I've said little fox so many times, I'm trying to remember what the fox says, but I won't go there. So this is our metamask wallet. We're here, right? We've got a whole zero ETH worth $0 in our wallet.
01:13:14.408 - 01:13:33.134, Speaker A: It's a brand new wallet. It's like you went to the store and bought a wallet and it's empty. We do have our private key, which is cool. We have our public key, and that's what this thing is right here. So this is our public key. It's kind of shortened because it's got some dots in the middle of it. If we copy it, and we were to just paste it up here so you can see.
01:13:33.134 - 01:14:09.128, Speaker A: So this is what our public key looks like. This is our wallet address, if you will, which is really cool. Like this is really hard to remember because it's a bunch of garbly goop. I like to think about this like an IP address, right? Does anybody know in the chat what the IP address is for google.com dot? Somebody might, but I know their DNS is one dot, one dot, one dot one, which is really easy to remember. That's the only reason I know that. But normally IP addresses are pretty complicated.
01:14:09.128 - 01:14:33.454, Speaker A: They're like a series of four different three digit numbers. And that's basically what this is. It's an address for your wallet, similar to how we have DNS service, which lets you type in google.com and then resolves it to that IP address. We have Ethereum enS. So the Ethereum name service, which will let you do a similar thing with wallet addresses. We're not getting into that there.
01:14:33.454 - 01:15:07.536, Speaker A: I'm kind of going off down a rabbit trail. So we'll let the fox take care of that rabbit and come back. But this is your wallet address, it's your unique public key. So we have our wallet set up now, a few things to talk about, and we didn't really talk about this much so far. First thing is, you see here in the top left hand corner, it says Ethereum Mainnet. We've got other networks that we can use. So the first thing that we're going to do is we're going to click on Ethereum mainnet and we have this little button here, toggle.
01:15:07.536 - 01:15:36.054, Speaker A: This is show test networks. So like I mentioned, we're going to be operating on test networks. It's a place to learn, it's a place to practice, test things out. The first test network that we'll talk about is Sepolia, and Sepolia is the test network for Ethereum. So we have Ethereum mainnet. That's like production, that's where things actually have real value. The test network for Ethereum is Sepolia.
01:15:36.054 - 01:16:12.394, Speaker A: So we'll turn on test networks and we can even switch over to Sepolia. So see, now that we are on the sepolia test network again, we have zero Sepolia ETH. It's gone ahead and told us that Sepolia ETH, because it's different than Ethereum A. So we're on a completely different blockchain now, Sepolia is a test network for Ethereum. So it's set up just like Ethereum. It's a great place to practice test anything that's going to be on Ethereum itself, because it's basically like a mirror of Ethereum. As far as how it works.
01:16:12.394 - 01:16:55.086, Speaker A: There are some questions I see some people throwing around, some what could be crazy words if you've never seen it before, like go early. Suppoli is a pretty weird word, too. Go early was another test network. So Ethereum test networks, they have a very short lifecycle, and part of the reason that they have such a short life cycle is to help ensure that they don't start accruing real value. If you are on the Ethereum main nets, you have that ledger that we talked about where you have all those blocks and you have all this history. And because of that, that's why things start to have real value on Ethereum, because they're going to be there forever with the test networks. They don't want things to accrue real value.
01:16:55.086 - 01:17:38.460, Speaker A: So one of the ways to prevent that from happening is saying, hey, this is only going to be around for a little bit and it's going to go away. There's been quite a few different test networks in the Ethereum space over time, but that short lifespan helps keep them to be actual test networks, because functionally they're the same as the main net, right? So functionally they're the same thing. This is your wallet. We have our public address, like we mentioned when we talked about those seed phrases and the different accounts that you could have. You can have different accounts here, but we're just going to stick with the one account for now. I don't want to give you all too much information and overload you a little bit, because this can be kind of overwhelming when you're first getting into the space. And I don't think I've been kind of keeping an eye on the chat.
01:17:38.460 - 01:18:10.460, Speaker A: I don't think there's a lot of questions. If there are questions and I haven't answered them, if you want to go and pop them back in the chat, I'll try to keep an eye on it again. It's hard to, like, you know, dual screen. I don't have like the crazy split eyes yet for being a streamer. So we have zero Sepolia ETH. We want to probably add a couple other networks to our wallet that we'll be using throughout this boot camp. If we, if you have trouble following along with this part, don't worry, we'll talk through this as we need them to add them to your wallet.
01:18:10.460 - 01:18:33.728, Speaker A: But there's this awesome website called chainlist.org. If we could add that to the chat too, that'd be awesome. So chainlist.org comma, what it will do is allow you to add other blockchains to your wallet. So there's two other blockchains that we want to add. The first is going to be avalanche Fuji. It's a test network and the second is Polygon Mumbai.
01:18:33.728 - 01:19:31.816, Speaker A: So we'll click this include testnets button here and then we can just search for Fuji and we'll see here the avalanche Fuji test network. If we click Connect wallet, maybe it's probably not working because I have to go through all these little clicky bits. Hmm. We'll give this a refresh and see if Connect wallet works. Then there we go. If we click Connect wallet, it's going to ask us, first of all, maybe it's going to ask us saying, hey, do you want to connect your wallet to this webpage? What does that mean? When we click next, it'll give you some information on what the page itself will be able to get from your wallet. So it'll be able to see your public addresses, your account balance, your activity, and it'll be able to then suggest transactions for you to approve.
01:19:31.816 - 01:19:55.132, Speaker A: So that seems okay. We'll click connect. And now this web page has access to that plugin. So we are looking for the Fuji test network. We'll click add to metamask and then Metamask will say, hey, here's all the information we're going to add to your wallet. So we've got the network name a URL. This network URL is what actually allows you to communicate with the network.
01:19:55.132 - 01:20:14.144, Speaker A: It's kind of like your on ramp into that blockchain. The blockchain id and the currency symbol. So ethereum has ETH, avalanche has avax. So we'll say approve. And then it asks us if we want to switch to that network for what we're doing right now. You can either switch or not. It's okay.
01:20:14.144 - 01:20:55.012, Speaker A: And then the second one was Mumbai. This is from Polygon. So we'll add this as well and we'll go ahead and improve this. Oop, it didn't like it. What happened? Is it already in there? Hmm. Not sure why it's not liking this.
01:20:55.148 - 01:21:02.112, Speaker B: I think it might be with the RPC URL. I think it had this issue last week, bootcamp. And it was something with the RPC URL.
01:21:02.288 - 01:21:48.462, Speaker A: Okay, let's see here. We'll just do this the other way. So, the other way that you can add a wallet or a network to your wallet is. I don't want to do this metamask. If you go to your metamask and you come to your network tab here and select network, you can click add network here at the bottom. And I'm curious if the test nets aren't there. So we can click at the very bottom here.
01:21:48.462 - 01:22:12.764, Speaker A: You can't see it. Or actually, you can. No, you can't, because the streamyard thing. We'll add a network manually, and then we can just type in the information. So it's Mumbai. The RPC URL is. So you're saying Roberto didn't like this URL?
01:22:13.824 - 01:22:18.524, Speaker B: Yeah, I'm pretty sure that was the issue last time. Let's see if it works this time, though.
01:22:20.104 - 01:22:47.654, Speaker A: So, 8001 and then crunchyrolysmatic. Yeah, it's RPC URL. It doesn't like it. Well, let's just do this. We'll do it live. So let me get rid of these screenshots. Nope.
01:22:50.354 - 01:22:54.214, Speaker B: Barrett shared the RPC. Okay, you got it? I think.
01:22:54.914 - 01:23:18.340, Speaker A: Yeah. So this is Polygon. So Mumbai is Polygon's test network. This is Polymogon's documentation here. I'll go ahead and just pop this in the chat as well real quick so everyone can follow along. And, yes, they are deprecating Mumbai soon, but we'll be using it for this. Yeah.
01:23:18.340 - 01:24:01.124, Speaker A: So if you go to Mumbai dot polygonscan.com, all the way down at the bottom, there's an add Polygon Mumbai network button here for metamask. That's the same URL. Interesting. We'll use a different RPC node, and that should get us there. If you could add that to the chat as well. So, this is basically just saying a different place to get into the network.
01:24:01.124 - 01:24:38.934, Speaker A: So add that node, and then now we have Mumbai added as well. So we went to metamask just to kind of go through this again. Went here, went to add a network, did the manual add, filled in the information here, and that's how we added it again. If this went too fast, we will cover this when you need it for this hands on sessions later on. Okay, so our metamask is set up. We have a wallet. Our wallet has nothing in it on any of our test networks.
01:24:38.934 - 01:25:13.654, Speaker A: How do we get some funds? Well, if you head to faucets chain link, you can get funds here. You'll need to connect your wallet. First of all, accept and say which wallet you're going to be using. Why is this not liking me today? This is the best part of doing things like this live.
01:25:19.634 - 01:25:21.346, Speaker B: There's a quick question here.
01:25:21.490 - 01:25:28.650, Speaker A: I think it's because I hadn't reloaded the page since I had installed metamask. What's the question, Roberto?
01:25:28.842 - 01:25:37.334, Speaker B: I can't highlight it, but it is by APFL. It says, can I add this testnet on my official wallet or should I create a different wallet for it?
01:25:38.114 - 01:26:12.018, Speaker A: So I would say if you have a wallet with anything of actual value in it, make a separate wallet for playing around with just that way to separate your concerns there, right. Just in case you end up doing something that could be slightly risky. That would probably be the best, best practice in my opinion. I don't do anything for development work with my real wallets. I'll just kind of throw that out there. That's kind of how I approach it. Yeah.
01:26:12.018 - 01:26:30.340, Speaker A: I mean, it's your wallets, you are responsible for it. You have great power and great responsibility. But yeah, more wallets. Yeah, nothing hurts with more wallets. So we go to faucets, chain link, we connect our wallets. We'll see. This is our public address, right.
01:26:30.340 - 01:27:07.796, Speaker A: We can get some link tokens, which we'll talk about those later, but you might want to go ahead and do that. We can also get some testnet ETH as well. And then you're going to notice here that you're going to need a GitHub account. And the reason for this is to verify that you're human, because people, I really don't understand this, but people like to hoard test neth they will go and drain. This is called a faucet, right? So faucets drip a little bit sometimes this gives you a little bit of ETH so that you can do things on the testnet. People will drain these faucets with bots to hoard testnet ETH. I don't understand it.
01:27:07.796 - 01:28:14.052, Speaker A: It has no real value. But yeah, so we'll need to verify that we're human as well as we've got a cloudflare thing in here to verify that as well. So we'll need to log in via GitHub if you don't have a GitHub in future things where you'll need to actually have these funds. So this today's workshop, we're just kind of setting everything up, setting the stage for future workshops. In the future ones, we'll have another way for you to get funds. If you don't have a GitHub account so you can log in with your username and email address to GitHub. I'll go ahead and do that on the side real quick if you give me one moment and bear with me 1 second.
01:28:14.052 - 01:28:54.550, Speaker A: Almost there. All right. And we're back. So we will say that we want some ETH and then we'll send our request. And then what's happening now is the faucet is actually sending this request like we're sending requests to the faucet, which is a smart contract, and we're going to get that value back. So we're waiting for our transaction to go through. So this is actually sending a transaction on the block chain.
01:28:54.550 - 01:29:16.014, Speaker A: In just a moment, you should see this value here will increase. So I don't know, Roberto, have you noticed any questions about wallets or anything like that? I don't think there have been.
01:29:17.194 - 01:29:26.294, Speaker B: My bad, sorry, there have been some questions, but they've been mainly answered by other community members and community managers. So that's amazing.
01:29:26.944 - 01:30:01.168, Speaker A: Okay, awesome. So sometimes too, transactions do take a moment in the blockchain space, because if you remember when Roberto talked about how this all works, like, you have to go out and then they have to be verified by all these nodes and then they show up. So sometimes it does take a little bit. But again, if you have problems with GitHub and setting that up, don't worry, we have a way for you to get funds in the future when it comes to these workshops. So yeah, that's your wallets. That'll get some funds in your wallets. You can do the same thing for.
01:30:01.168 - 01:30:16.324, Speaker A: So this is on Ethereum, Sepolia. We also talked about avalanche, Fuji and Polygon Mumbai. So you can do the same thing on those as well to get some funds. And that should have you set up with a wallet.
01:30:18.304 - 01:30:24.164, Speaker B: Awesome. Thank you. We have a couple more questions in the chat, if you want.
01:30:24.584 - 01:30:28.776, Speaker A: Sure. What questions do we have when we.
01:30:28.800 - 01:30:34.204, Speaker B: Connect blockchain networks to metamask? Is the connection approval done on chain?
01:30:35.464 - 01:31:01.830, Speaker A: No. So when you're connecting a your wallet to metamask. So like, here's the, this kind of interesting cool thing. So this wallet address, any EVM chain, that's Ethereum virtual machine, EVM. So those are chains that work like Ethereum. They're going to have the same mechanism for wallets. So your wallet address on Ethereum and your private key and your public key.
01:31:01.830 - 01:31:25.330, Speaker A: So that combination works on Ethereum. It works on Ethereum. Sepolia, Fuji or avalanche is also EVM compatible. So Fuji works as well. So your public and private key there, same thing with polygon, same thing with like a host of other chains as well. They all work the same way. So that's really cool.
01:31:25.330 - 01:32:09.596, Speaker A: So your one address works across all these different chains. That doesn't mean that your funds just go between chains, just means that, like, how you identify yourself on those chains is consistent. So then, sorry, your question was asking, like, when I add a wallet or add a network to my wallets, is that done on chain and. No. So this metamask, metamask just lives on your computer, and then your RPC URL is like how you interact with the chain. And so that's like metamask is set up and lives just on your computer, and then you use your private key to sign transactions on the chain. Hopefully that makes sense.
01:32:09.596 - 01:32:31.964, Speaker A: And I love this, I love this comment right here. I'm testnet rich. All right, that means somebody got some funds and they can start following along in future workshops here with us as we start deploying things on chain. So you've got your monopoly money, you've got those hundreds, like, sitting pretty on park place. Any other questions?
01:32:36.784 - 01:32:51.164, Speaker B: Let me see. No, it looks, it looks good. I see one more, which is, do we have other options for wallets?
01:32:52.184 - 01:33:17.196, Speaker A: So there are a bunch of other options for wallets. I don't know. Metamask for this boot camp is probably best to go with just that you can follow along. I don't know that I would give any personal recommendations just because, you know, make sure I cover my own self there. But yes, there's a lot of different wallets for sure. In this space, too. There will be things like hardware wallets.
01:33:17.196 - 01:33:32.856, Speaker A: So, like, I have a couple here. I don't know if you can see these on the tiny little, tiny little screen. That is me. Right? But we have like a trezor, we have a ledger. These are hardware wallets. What does that mean? So metamask is a software wallet. What that means is, like, everything lives here on your computer.
01:33:32.856 - 01:34:15.448, Speaker A: Your private key, your public key, they're all stored in metamask on your computer. When it comes to hardware wallets like these, and there's other ones than this, I just have these two sitting right in front of me. When it comes to these examples, your private key lives on this device. So when you actually sign a transaction with your private key, it doesn't happen on your computer, it's done with this device. So that kind of helps keep your private key separate from your device, which is just like another layer of security. If somebody were to get onto this computer, they could get the metamask private key, possibly, and then they have access to everything, whereas these devices keep that completely separate. So this is what a hardware wallet is functionally like.
01:34:15.448 - 01:34:22.124, Speaker A: How it works with the blockchain is the same. It's just that these do the actual signing for you. These store your private key.
01:34:24.464 - 01:34:33.404, Speaker B: Awesome. And Richard, for those who did use the faucet to get also link tokens, how do you import those tokens to metamask?
01:34:35.064 - 01:35:00.694, Speaker A: That's a great question. Is it not here on this page? It's not, man. It should be. Make a note of that. So if we go to the documentation docs chain link, you're gonna get real familiar with that throughout this bootcamp. Down here at the bottom of the faucet, there's a link to it right here. And let's see how fast I can actually get there.
01:35:00.694 - 01:35:47.742, Speaker A: I'm just gonna go to data feeds, which is one of our products. You'll learn more about this in the future. Down here at the bottom on the left is a resources tab and it talks about link token contract. Let's see here. I think I can clean this up and just share this in the chat super quick. So the easiest way to do it, if you go here and then whichever network you're looking for. So like sepolia testnet, there's a little button here to just add it to your wallet and we can add the token and that'll add this information.
01:35:47.742 - 01:36:22.374, Speaker A: So it's basically adding what the chain id is, what the address is, what the name of the token is, what the symbol is, how many decimals there are. That's weird. We'll learn more about decimals probably tomorrow in the solidity fundamentals course, but just a little tiny preview. Solidity, the programming language that smart contracts are often written in, doesn't understand the concept of a decimal place. So when you have something like, you know, 1.03, we have to like artificially inflate that. But I'm getting ahead of ourselves.
01:36:22.374 - 01:36:43.750, Speaker A: And then, yeah, so for each chain, you can kind of find them here. So polygon, we added that one. So Mumbai is here. So we can switch our network and add it to our wallet there. And then avalanche is here with Fuji as well. So you can do that all here from the documentation. It's a great question though, because, yeah, without that, then it doesn't even show up in your wallet.
01:36:43.750 - 01:37:15.134, Speaker A: If you open your metamask again and go to tokens, then you can see it here. Any other questions? Just a reminder, quick, why do we need link tokens? Link tokens are how we basically incentivize the. I'm gonna use a bunch of words that you'll learn more about. Oracle nodes. So, these are the things that Chainlink is. It's a collection of oracle nodes. It's how we pay for them.
01:37:15.134 - 01:37:24.814, Speaker A: Basically, we incentivize them to do work for us. But you'll learn more about that in the future. That's just a teaser. Sorry about that. You were going to say?
01:37:24.974 - 01:37:37.674, Speaker B: No, I just wanted to remind people, because I still see some questions. This will be recorded, so in case you missed something, you can always check back. And it will be posted in this channel, I believe. Correct, Richard?
01:37:39.454 - 01:37:40.274, Speaker A: Yes.
01:37:40.744 - 01:37:41.564, Speaker B: Awesome.
01:37:45.144 - 01:37:49.884, Speaker A: All right, I think that's all we got for wallets and setting up Mazda.
01:37:50.824 - 01:38:00.884, Speaker B: Okay. The only thing I just need to go over now is just the block explorer, and then we will transfer some cryptos from one count to the next, and that will be it for this presentation.
01:38:03.144 - 01:38:07.864, Speaker A: All right, I'll share your screen back up there.
01:38:08.564 - 01:38:37.756, Speaker B: Yes. Thank you. All right, everyone. So now most of you here have set up your metamask wallets. If you have issues setting them up, please let us know in the chat. We are more than willing to help you. But for those of you that did already create your chat, what I want you to do is it seems that the pad now has stabilized, and we have a lot of people in here still.
01:38:37.756 - 01:38:48.064, Speaker B: What I want you to do at the bottom, I have made a section. I would like for you to put your name and then the address of your metamask account that you have created.
01:38:51.604 - 01:38:55.420, Speaker A: And you might want to show. Roberto just had a copy of that address again.
01:38:55.532 - 01:39:14.524, Speaker B: Oh, yes. You are so right. So, in order to copy your address, what you would do is open up your metamask. And right below the account title, you will see your public address. Just go ahead and click it, and it should automatically be copied. And then you can just paste it here in the pad.
01:39:16.504 - 01:39:37.964, Speaker A: And then just to a couple of housekeeping, keeping items around the pad, like the pad is definitely a. We're trusting you all to be on good behavior. Like, there was some grief going on earlier in there. It seems to have stabilized. It's totally possible to delete everything in this pad. So be very careful when you're deleting things. It's a resource that we can use to share with you all.
01:39:37.964 - 01:40:12.822, Speaker A: So just kind of keep that in mind. And, yeah, it does get kind of crazy in here when it comes to having, you know, there's like 300 people in here right now. Right? So 300 people all typing in one document can get kind of crazy. So, yeah, just, y'all are doing a great job making new lines, putting your name in there. If you realize you're on the line with somebody else, like maybe just hop off it, go to a new line, let them clean up that line so you don't get into some sort of crazy deleting, you know, confusion with them. Yeah, it looks like, looks like we're doing a great job. If so, it's at the bottom here.
01:40:12.822 - 01:40:27.434, Speaker A: You'll see where everybody's pasting in. If you want to go down to the bottom of the pad, that's what we're doing. And as we go through and use the pad, you always want to make sure you're adding to the very bottom of the pad, like notes and stuff. And previous things will be up towards the top. You'll be adding to the bottom.
01:40:29.934 - 01:41:09.394, Speaker B: Absolutely. We got so many people in here. This is amazing. We're an hour and. Okay, everyone, go ahead and post your address here, if you haven't so already, because we are going to move on. And I want to explain to you a little bit on what are block explorers? Because we have talked so much now in regards to the blockchain and it being a distributed ledger, but we actually haven't even seen, like, you know, how the ledger looks like and all of these transactions. So in order to do that, we are going to go through Sepolias block Explorer.
01:41:09.394 - 01:41:59.954, Speaker B: Now, most of these main networks, like Ethereum main networks, Sepolia, Testnet, all of them have their own block explorer. So you can check out the ledger and see what's going on with all the transactions. So we're going to head over to the sepolia etherscan IO, which will take you to this website right here. This is the block explorer. And you can already see a bunch of things that we have already learned. All of these on the left hand side here, we have all these blocks that have been finalized already, and then we have on the right all these latest transactions that are occurring. So how do we find, let's say, for example, our wallet? Well, you will go up to metamask and you would copy your public address and you would paste it here on the search bar.
01:41:59.954 - 01:42:22.330, Speaker B: When you click on search, your wallet will pop up. And this is my wallet right here. It shows that I have a balance of 0.25 e. But remember, this is in the sepolia testnet. So it's test tokens. And then I did this 38 hours ago to make sure that everything was going to go smoothly today.
01:42:22.330 - 01:43:07.564, Speaker B: So you should have something very similar. But except of being 38 hours ago, it's probably just a couple of minutes ago. And what we show here is starting from the left, we see that in this transaction hash, in this very transaction, on this block, at this timestamp, I received from this recipient 0.25 ETH tokens. And this is amazing because this allows you to track your transactions and see what's going on with your wallet and just track the blocks as well. So if we open up this transaction hash, which is on the left here, it's going to open this up and we're going to get a lot more information of it. And it's just so amazing.
01:43:07.564 - 01:43:47.516, Speaker B: Look, this transaction that gave me 0.25 e happened on this block number. Since then, we have gotten 11,401 more blocks, basically making this more secure, allowing for this transaction to be extremely verified. That, yes, this happened so long ago and so many blocks have been built from this block that this is like, you know, the power of the blockchain makes it very, very secure. And then we have some more information here. But this is going to be mainly covered on the next presentation when you talk about solidity fundamentals. And this involves the transaction fees and the gas fees.
01:43:47.516 - 01:44:20.762, Speaker B: So. All right, let's, we're going to go back to this primary webpage where it shows my account on the block explorer. And now we're going to do the final thing, which is we are going to transfer tokens from one account to the next. So we have to create a new account on metamask. How do we do that? Well, if you notice on the top where it says your account number, you will go ahead and click it. Now, mine says hidden account. Don't worry about that.
01:44:20.762 - 01:44:57.000, Speaker B: That's just the account that I'm using. You're going to click on add account or hardware wallet. It's going to give you three options, and you're going to click on add new account, and you can name it whatever you want. I'm going to leave it as account three. Awesome. Now, we have a brand new account that has its own public key and its own individual private key. So in order to send tokens from one account to the next, and if you remember my public and private key presentation, we're going to be sending a message to this recipient.
01:44:57.000 - 01:45:29.318, Speaker B: So we're going to need their public key. So go ahead and copy the public key for your account minus account three. Yours should be account two. Go back to your main account, which minus account one versus hidden for some reason. And you're going to click on the send button here. You will post the public key address of your second account that we just copied. And this time we're only going to send 0.01
01:45:29.318 - 01:45:59.702, Speaker B: Sepolia ETH tokens we're going to hit on next. And now this is the last page before we actually send the message to the account number two. And it'll show you the estimated fee. And this is gas fee, which just think of it right now as a transaction fee. You're going to go much more deeper into water, gases and fees in the next presentation. So go ahead and click on confirm. And now we wait.
01:45:59.702 - 01:46:55.778, Speaker B: I'm actually going to move to account, the receiving account and just wait to see how long it takes to get there. And it happened right now. And just, I just want to point out that even though this was extremely simple, sending some tokens from account one to account two, so much happened behind the scenes. All of the concepts that we covered from the block, getting the transactions, to cryptographically verifying it, to maintaining a secure, and all these consensus mechanisms, everything worked together to make this very simple action happen. And so it's just incredible that all of these things are working in conjunction to make this possible. With that being said, I want to say congratulations, you've made it. This was, this was it.
01:46:55.778 - 01:47:44.904, Speaker B: You have learned so much from blogs to state machines, to game theory and cryptography and distributed networks, all the way to consensus mechanisms. Proof of work, proof of stake. You set up your first web3 wallet with Metamask. You understand now what is web3 and how it differs from web one and web two. You have come such a long way, and I just want to say congratulations and thank you for sticking around if you did, the last thing that I want you to do is on our metamask when that transaction happened. And if you go down to the activity tab, you will receive this receipt which says that you have received 0.01 sepulchia ETH tokens.
01:47:44.904 - 01:48:25.196, Speaker B: When you click on it, you're going to get a more detailed receipt about the things in regards to this transaction. You're going to have a button right next to the status tab that says view on block Explorer. Go ahead and click it. It's going to send you here once again to the block explorer, and it's going to show you everything that happened in this transaction. The last thing that I want you to do is to copy this transaction that you have from the sending one account tokens from one account to the next. And then once again we're just going to copy here in the pad. Whoa, so many.
01:48:25.196 - 01:48:48.474, Speaker B: That's awesome. So we're going to send name and transaction hash. So Roberto and my transaction hash was that. And then maybe we can check some of these out on the block explorer. Here we go. We're already starting to get some. Let's see, let's see.
01:48:48.474 - 01:48:53.890, Speaker B: Finn, let's check this transaction out.
01:48:54.042 - 01:48:57.494, Speaker A: Can you go through that again one more time after you check this transaction showing how to get that?
01:48:57.874 - 01:49:34.724, Speaker B: Oh, yes, absolutely. So in case you missed it on your recipient account or on your senders, on the activity one you will get a little receipt that says receive. If you click on it, you will get a much more detailed transaction and then you will click on view block Explorer and it will take you to the Sepoya block Explorer website. And from here you can get the transaction hash. Oh, hello, Solange. Solange has joined us.
01:49:36.944 - 01:50:22.054, Speaker C: Yes, yes, I'm so happy with this amount of students that we have. Congrats everyone, that here now if you are really change your life, starting to learn blockchain, start to learn all the fundamentals. And yes, we are starting from zero to you. So be patient if you already know something. Tomorrow we are creating our first smart contract, really, really basic. And on the day three on Wednesday, we are starting to use chaining. You are learning about oracles and I'm so happy to be here with you again.
01:50:22.054 - 01:50:47.710, Speaker C: But this time I will not do 6 hours per day during two weeks. So I have a lot of new instructors. We have other developers advocate from chaining labs as well. We have a lot of developers experts that we invite and prepare them to be here with you. And I'm sure that this bootcamp will be amazing. And is this. Don't worry.
01:50:47.710 - 01:51:18.758, Speaker C: If you could not do everything now, you know that you can see this later. It's in your tool. You can do again step by step. And like the other, we have tasks, we have the form with the tasks. Are you sharing the fun? Probably tomorrow. And what about these tasks? Like today, what you did today, you create your new wallet, your testnet wallet, you using this bootcamp. Amazing.
01:51:18.758 - 01:51:57.264, Speaker C: This is your first step task. Task number two, create a second account. You already did that. And task number three, you will share this transaction hash that you are doing now in the pet. And also you know that the pet in the beginning is like a mess until the people understand how this working. But we saw now that the pad is great and this is an amazing tool to us to work together and to feel like we are together. What doesn't matter where we are in the world, we are here together with you.
01:52:05.164 - 01:52:23.504, Speaker B: Absolutely. Thank you. Solange. Aside from this. Yes. I just want to thank you once again for making it this far and you learned so much. If you are a complete beginner or if you are an advanced developer that just wanted a very good and in depth refresher, this was it.
01:52:23.504 - 01:52:47.118, Speaker B: I hope that this was incredible. If you still have more questions, obviously pop them in the chat and in case we don't get to them, we'll have the discord. Exactly. Thank you that you can pop in there and ask any questions that you might have from me. I just want to say thank you. Thank you to the Chainlink Labs team for making this possible. Thank you for the community for showing up and committing yourself to learning this.
01:52:47.118 - 01:52:53.426, Speaker B: And thank you, Richard, for helping me out with this presentation as well. It's been amazing. You want to say a couple of words?
01:52:53.450 - 01:53:20.524, Speaker A: Absolutely. Absolutely. Yeah. Just to reiterate, on Twitter LinkedIn, using the hashtag chainlinkbootcamp 2024, if you want to share how things are going, questions, comments, I think that's kind of a great way for you all too, as a community to share what you're learning. Share questions, things like that with each other and help each other out. You guys have been fantastic as, as an audience here in the chat, like helping out, answering questions, asking really good questions. I really appreciate that.
01:53:20.524 - 01:53:45.714, Speaker A: Like, that sort of interaction makes it a lot more enjoyable as a presenter. Just being honest instead of just talking to my camera or just talking just to Roberto, you know, he's amazing. But you know, having the interaction from, from the audience is fantastic. So thank you all for that. If you have questions too, my Twitter is right there, my DM's are open. Feel free to message me on Twitter and I'll do my best to answer any questions and stuff like that. That you have.
01:53:45.714 - 01:54:18.454, Speaker A: Yeah. And tomorrow, same time, same place, Solange, we'll be going through solidity fundamentals. So I saw somebody ask a question what programming language we'll be using for smart contracts. It's solidity. It's kind of like JavaScript, but different. But it'll feel familiar if you're familiar with JavaScript, if you have no experience programming at all, Solange is like the master of bringing new people into the space, so you're in for a treat there. But yeah, same time tomorrow, same place, and it's going to be awesome.
01:54:20.314 - 01:54:35.274, Speaker C: Thank you. Hitchhike. Thank you, everyone. And this is interesting, like, he told that, oh, solidity is like JavaScript. Like, I came from c hash, so for me, solidity is like c sharp. So depends is up to you.
01:54:41.814 - 01:54:55.034, Speaker A: Yeah, it's pretty friendly overall, so. Yeah, well, I guess with that, we'll call it a workshop and we'll see everybody tomorrow.
01:54:56.134 - 01:54:57.314, Speaker C: See you tomorrow.
01:54:58.174 - 01:54:59.710, Speaker A: All right. All right, see you all tomorrow.
01:54:59.782 - 01:55:06.594, Speaker B: Thank you, guys. Bye. Thank you. Bye.
