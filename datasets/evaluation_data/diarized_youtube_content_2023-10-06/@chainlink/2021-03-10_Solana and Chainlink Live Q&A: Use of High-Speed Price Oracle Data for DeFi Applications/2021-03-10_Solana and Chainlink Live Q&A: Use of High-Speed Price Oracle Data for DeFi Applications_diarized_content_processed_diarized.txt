00:00:03.770 - 00:00:28.360, Speaker A: And we're live. So welcome, everyone. Thank you all for joining us here today. Thank you for the Chainlink and Solana communities, for joining us in this live stream here on. I'm really, really excited to have here with us today Anatoly Yakovanko, the co founder and CEO of Solana. Anatoli, thank you so much for joining us here today.
00:00:28.730 - 00:00:31.320, Speaker B: Thank you for having me. It's great to be here.
00:00:32.650 - 00:01:23.266, Speaker A: Awesome. So I just want to give an overview for everyone who's tuning in right now. So the agenda and what to expect for this particular live stream. So the objective of this Q A is really to allow the communities, both of our communities, to learn more about integration between both of our projects, both of our teams, and really explore a little bit more about what is unique and what is beneficial to both of our projects and really the users of our platforms and our products. So the agenda is really going to be 20 to 30 minutes, kind of a free flow Q and a question and answer structure that I will be asking Anatoli. And then obviously, we will go into the live chat as well and try to take some questions from the audience. And with that, I'd like to start this off with you, Anatoli.
00:01:23.266 - 00:01:33.210, Speaker A: Perhaps maybe you could give us an, a brief introduction of yourself and a little bit about your background and why you're excited about using Chainlink Oracles for Solana.
00:01:33.870 - 00:02:12.310, Speaker B: Yeah, so my background, I'm an engineer. I was still an engineer. But basically, if you guys ever heard of this company called Qualcomm, that's where I spent most of my career. They built hardware and firmware for everything mobile. So if you have a cell phone, there's probably something in there that I worked on. And primarily I worked on optimizations, performance, that kind of thing. I started with these Dinky two megabit phones, and the last project, my team led the development of augmented reality on a phone.
00:02:12.310 - 00:03:28.686, Speaker B: So in like ten years, we went through this crazy evolution of hardware and performance on mobile networks. That's really what has been kind of the primary design that I keep in my mind when building Solana and kind of building this new kind of operating system, this universal computer. So where Chainlink comes in is that even at the foundation of Solana, I had these cheesy slides that Solana is blockchain at Nasdaq speed. And what I was talking about was that the primary use case for especially proof of stake networks for these censorship resistant universal computers is price discovery. So how do we get to this theoretical, magical result where some newsworthy event happens, let's say, in Hong Kong or Singapore, that news has to travel at speed of light through fiber. Our goal for Solana is for the state transition, representing that event, to also propagate at speed of light through fiber. So when a trader at, like, a terminal in New York City looks at that market at New York Stock Exchange and the market running in Solana, they already see that news affected in the price.
00:03:28.686 - 00:04:01.190, Speaker B: So Chainlink is an oracle. Right? A ton of the use cases around Chainlink are related to price discovery. So it's kind of a natural partnership for us. We really want to take the stuff that you see on Ethereum, where Chainlink is providing price feeds for synthetic assets, for risk engines and things like that. And we want to pour napalm on it, because we can do this at 400 millisecond intervals. Right. Like, we can send a price right now, basically, at every block in Salana.
00:04:01.190 - 00:04:18.160, Speaker B: And that means those risk engines can be tighter. The synthetic assets can track the real prices much, much closer. You reduce the overall risk in the system. Capital efficiency goes up. All the good things that you see in finance actually just get better and better from that.
00:04:20.930 - 00:04:35.362, Speaker A: Awesome. And I wanted to dig a little bit deeper as well, into, I guess, the history of Solana. And perhaps the one thing that I was wondering as well is the name. Right? So what does Solana stand for? And how did you come about with that?
00:04:35.416 - 00:05:16.562, Speaker B: Yeah, so Solana actually is based on Solana beach, which is in San Diego county. San Diego is where Qualcomm is based. So a couple of the co founders are also former Qualcomm folks. And all of us actually used to live in would, you know, our daily routine was we'd wake up, go surfing, bike to work, bike home, go surfing again, and sometimes we'd go play underwater hockey. So that was really, like, our early career. Life was focused around the beach and having fun in San Diego, but know, working hard. So we kind of have fond memories of that time.
00:05:16.562 - 00:05:24.660, Speaker B: And there's a bunch of companies named, famous companies named after places in California. We thought we could be one of those two.
00:05:26.790 - 00:05:54.190, Speaker A: Really nice. Yeah. Thanks for sharing that bit of history. Elegant name there. And speaking of the history, as well, of Solana and kind of how you guys were thinking about and how you were really thinking about building it, could you tell us, and I guess the audience who may not be aware of what is really the importance of the decentralized clock and how that fits into the decentralized systems, because I think this is something that is really quite unique. And Solana's offering.
00:05:55.010 - 00:06:56.770, Speaker B: Yeah, this was something that, again, probably because we all worked at Qualcomm for so long, you work with wireless protocols for such a long time, it kind of gets absorbed into your brain through osmosis. So the first thing people discovered, radio, right? They put up radio towers, and they noticed that when two radio towers transmit at the same time over the same frequency, you get noise, right? So you have to somehow coordinate these towers to transmit. And this coordination problem is the leader election problem, very similar to consensus. And this was 100 years ago, before PBFT paper, before any of this research, they came up with a really clever hack. Why don't we give each tower a clock? Those clocks are synchronized, and they rotate by time. So if you have an accurate clock between a bunch of participants, they can take turns without interference. And that used to be like, incredibly coarse, like by day, then by hour, then by minute.
00:06:56.770 - 00:08:21.130, Speaker B: And 2G cellular networks had very accurate clocks where they could rotate every 20 milliseconds, if I recall correctly. And that meant that millions of users, millions of phones and towers could coordinate, because the phones themselves are kind of like miniature towers. They also transmit that don't just receive. So when I was actually in 2017, building this really kind of side project, small thing, with a friend of mine who's a co founder, we wanted to take gpus, put them in a colocations place, and rent them out for deep learning. But while we didn't have any customers, they would earn crypto in the background. And this is when I started really getting into proof of work, like trying to understand why is this mining even necessary? How does it connect with rewards, with security, and the actual consensus synchronization part? And I started going deeper down the rabbit hole, and I had like two coffees and a beer, and I was up till four in the morning, and I had this kind of eureka moment that instead of measuring entropy or thermodynamic energy, that goes into securing a block, you can actually measure another physical constant, which is time. You could change the puzzle to be recursive and sequential, and generate a data structure that represents time.
00:08:21.130 - 00:08:51.320, Speaker B: And that was such a big deal to me because of all my time spent at Qualcomm. I realized, okay, once we have time, we can actually construct the same TDMA that was used in 2g phones, and therefore scale blockchain, basically at the level of 2g, which is 1000 times faster than anything else. So that's really what prompted me to quit my job, go be a startup, eat glass for two years.
00:08:54.010 - 00:09:11.758, Speaker A: Yeah, that's a great story. Thanks for sharing that. And I'd also, I guess, want to know, those of us who want to know as well, what exactly or how would you define proof of history and how did you come up with the idea? I guess it's quite related to what you were just kind of alluding to there.
00:09:11.924 - 00:10:01.182, Speaker B: Yeah. So proof of history is what's technically called a verifiable delay function. And most of the papers about VDfs actually came out in 2018. So in 2017, it was lucky for me that I didn't see there's a bunch of Stanford folks working on this stuff because it probably would have given up. But it turns out that our approach is a very rudimentary, kind of like the most brute force way you can build it. But after talking to Dan Bonet and a bunch of folks working in the research space there, we actually have a solution that is probably the best way to commercialize right now, because that research is moving at like every six months. The previous work is invalidated and they have new results coming out.
00:10:01.182 - 00:11:01.614, Speaker B: But this recursive shot to 56 approach is kind of the gold standard in security and accuracy because we have very good guarantees about shot to 56 and how long it takes to run on silicon. And we have really great understanding of how to deal with trustless setups for shout to 56 that there isn't like some cryptographic angle that an attacker can take and outrun the system. So this puzzle that this VDF generates, it's a piece of data that somebody can go generate in the dark, not connected to the Internet. And when they transmit it to you, you can basically verify that data structure in sublinear time. So for us, because we're using shot of 56, it actually takes the same amount of compute or cpu time to verify. But we heavily parallelize that process. So it's sublinear to the number of cores that you have.
00:11:01.614 - 00:12:38.522, Speaker B: So technically not sublinear, but the speed up is to the number of cores that you have. So why that's good enough is because modern day chips like intel with AVX 512 or GPU cards, like the 30 80 Ti card that Nvidia shipped, that thing is 10,000 cores, right? AVx twelve effectively runs, I think, at over 300 cores, 320 or something like that. So you can get like a second worth of data and verify it in one over 320th of time. And that speed up is good enough for a very large network for effectively 100,000 machines can basically synchronize using with just cpu acceleration so once you have this source of time outside of consensus, you can do this TDMA dance where we have slots, we partition the time into periods, and only a single block producer can produce during that time. And that effectively solves the consensus problem the same way that it was solved with radio towers. Because in these blockchain networks, what happens when you have two block producers produce a block at the same time? The network is again in a noisy state, because you now have a fork, and you now have to figure out which fork do I pick? Do I pick block producer a or block producer b? But if you could enforce that, no block producers ever produce a block at the same time, you basically never have to deal with that. And the network effectively runs.
00:12:38.522 - 00:13:15.318, Speaker B: The average case becomes the best case, like the best effort case. And the reason why you can't. If you know anything about ethereum or proof of work, bitcoin has a ten minute block time. Ethereum is twelve and a half seconds. That's probably the fastest you can make a proof of work system stable and decentralized. If you squeeze that block time down any lower, you start running into a bunch of different effects where you have more forking. Each node is to process more data, and that has cascading effects.
00:13:15.318 - 00:13:53.030, Speaker B: That kind of breaks the security assumptions around POW. Our block times right now are 400 milliseconds, and there isn't any limit to how low we can go. Our goal is to keep improving the processing time, the actual execution time of smart contracts, until we can get it down to 200 milliseconds. Then probably every ten milliseconds is going to be blood sput and tears, and eventually to that theoretical limit where it's just how long it takes to go halfway around the world for photon through fiber.
00:13:54.890 - 00:14:18.478, Speaker A: Yeah. Wow. That certainly is quite an elegant solution, because I was going to ask as well as a follow up there, where would you see, or what kind of use cases could you see that really applied? Right. And I think with that kind of speed, that would be applicable in any kind of thing in terms of defi as well. Right? Yeah, trading and all that.
00:14:18.644 - 00:15:10.218, Speaker B: DFI is like the thing that has product market fit now, but I almost think of it as search engines in the clearly there is stuff on the Internet and we need to search it, so these things should exist. And I think clearly there is blockchains that guarantee settlement, that can guarantee execution. And that means that we can start building financial applications and software and things like Chainlink provide a really important driver of those things. Right? Like we can get prices of assets that are not settled on any chains. We can get access to weather feeds or whatever, and start building risk engines on top of those. I think all that stuff is obvious. What I think is less obvious is kind of like what we saw in the brief flashes during DeFi summer.
00:15:10.218 - 00:15:51.600, Speaker B: What to me was really cool, wasn't so much the DeFi parts of it, but how rapidly tens of thousands of people could form into networks and deploy capital in an organized way. Right? This was like social networking meets financial applications, and that was really like 10,000 people. 10,000, 20,000 people. Like, how many people were participating in yams and stuff like that? It seemed like that was the most important thing for that day. But it wasn't 100,000 people. It wasn't even a million, right? And a social network that's a million people wouldn't even be on Facebook's radar as a competitor. They wouldn't even be worried about crushing it.
00:15:51.600 - 00:16:54.480, Speaker B: But if we take what we have right now in DeFi and we scale that organization, that governance, right, like, to a million people, I think we'll start seeing really interesting effects and applications that are probably going to blow everything away out of the water that we see today. So I'm really excited about folks that kind of look beyond the space, beyond launching a token that gets 10,000 metamask users to go ape into it. I'm looking for the hardest thing to find in the space are founders that have vision that, okay, if we build this and we scale it out to a million people, we don't care where we get them, then we will start seeing effects that are basically unpredictable and have tremendous upside potential for creating value in the world. So those kinds of applications, I think are like, what should be the next wave? What really should be driving the next bull market.
00:16:56.050 - 00:17:10.520, Speaker A: Absolutely agree. In fact, I'm curious about the kinds of products, or let's say projects, platforms that are being built on Solana right now. Are there any that kind of jump out at you.
00:17:19.630 - 00:18:06.994, Speaker B: If you go look through our hackathon, it's only been like less than a year since we launched. We had a hackathon over the fall with about 1000 registrations, and a bunch of people launched, started a bunch of little projects. Some of them ended up kind of getting funding. This hackathon just was 3000 registrations, and there were nearly, I think, over 90 projects that probably could have won the last hackathon. So a lot of those applications are still primarily focused around DFI. And the interesting thing about them is that because of serum. We have a new component in DeFi that's just not available on Ethereum.
00:18:06.994 - 00:19:13.002, Speaker B: It's a central limit order book, which is being actively, dynamically market made. Like an order book is on binance or FTX. So folks are using that Defi primitive and the infra already that's built up around it to build their own application. So what kind of sub with radium was that? It's an Amm style interface. Liquidity providers lps can go deposit tokens in there and earn a return, but it's not a constant function market maker. It actually uses the serum order books to dynamically update prices and move those positions around, which is a totally different kind of approach than what you see in uniswap, because liquidity is now shared between radium and serum. And the intelligence that the market makers like Jump and Alameda put into managing those books is benefiting the lps that are providing liquidity in this.
00:19:13.002 - 00:20:27.718, Speaker B: Like, why are amms not found on Nasdaq? Well, Nasdaq handles half a million messages per second because it has active market makers that constantly absorb external information. Like stuff that you guys provide, right? Like they look at every price in the world and compile it down into, like, do I need to move my price up or down by 0.2% or some small amount? And that risk management is what allows those market makers to avoid impermanent loss. And to me, this is kind of like the future, right? Like, can we have these folks that are like jump elementers of the world that are doing the synthesis of risk management and price discovery and all this other stuff, provide this information into a market where you have passive participants that want to earn these passive returns, actually take advantage of that. So that to me was super cool. And during this hackathon, we had folks building the next generation, like options, lending, et cetera. And now we're seeing things that are more like urine, like where you have products that manage between those applications and are able to manage funds between them.
00:20:27.718 - 00:21:02.810, Speaker B: So that's been pretty exciting. And this was like, we launched like in March. It's not solidity, right? It's not a vm. People have to go learn new tooling. I was really worried that it's going to be a really long slog for us to get developers to actually go look at the code, understand it. But this was never like a problem in my career. It's not like when Android launched, I was upset that it was in Java because I was a C developer all my life, right? You kind of forget that most engineers don't care about languages.
00:21:02.810 - 00:21:33.180, Speaker B: They're like, okay, this is a new platform. What can it do? Whatever language it is, I'll just go solve problems in. So that was really pleasant to discover that most engineers are really language and platform agnostic and can solve problems in any environment. We just have to give them something that is critical to their particular product vision. And for us, that's performance, that's speed, that's the cost of transactions, that's finality. So we're pretty excited that proved out.
00:21:34.830 - 00:21:49.098, Speaker A: That's great. And I guess if the community wants to learn more about these other projects and where to find them, the best place to go would, I guess, be the hackathon website, or I guess to the Solana website that has a compilation.
00:21:49.194 - 00:22:21.900, Speaker B: Yeah, Solana.com, or like, slash Defi. And if you're a developer engineer, the Defi link has kind of, we compile, like a bunch of resources. If you're one of those folks that loves reading docs and this is how you start building, we'll give you a grant. If you compile all the stuff in how you feel docs should look like. Because we're a bunch of engineers that learn by failure, right? We go try and fail and then go get help. So there's just two different kinds of people.
00:22:21.900 - 00:22:45.610, Speaker B: So we're mostly like the build first, ask questions later. Khan. We'd love to find folks that are more like, we need a nice synthesized book that kind of demonstrates all the right pieces of information in the right order. That's a really hard problem. So definitely looking for those folks as well. You don't have to go build a Defi product. You can simply be like, okay, I know what docs should look like.
00:22:45.610 - 00:22:47.460, Speaker B: I have vision around that.
00:22:49.830 - 00:23:17.500, Speaker A: Absolutely. Cool. And speaking of use cases, right? And jumping back into kind of the relationship with Chainlink and how we're working together, do you see perhaps any other use cases where Chainlink could help Solana in terms of really your vision, right. And the mission of really building a fast, secure, censorship resistant blockchain that can scale to really worldwide global adoption. Where else do you see these use cases? How we can work together?
00:23:18.670 - 00:24:45.622, Speaker B: Yeah. The oracle problem is really the eyes of the network, right? It's kind of foundational to a bunch of stuff that people are really enjoying in crypto right now. One is just trading and prices, but you can extrapolate that to nfts, to insurance, to a bunch of things, right? If I have an oracle that guarantees that this single piece of art hasn't been duplicated by the artist and can give me at a station and things like that, it actually gives that piece of art more value. So there's interesting ways we can start expanding things. We have a bridge between two networks for moving assets around, but it's a much harder problem to build a bridge that moves arbitrary information between Ethereum and Solana. So where Chainlink can come in is simply like, here's a computation around an ethereum, here's the result of it, and put it in Solana, right? And that kind of very simple observing state between these two networks, that's a really cool function to build and run through an oracle because building that in a totally full style, consensus verifying, IBC style path, that's like two year timeline. And I think the oracle path will always be faster and should probably be the default and have the trustless thing as a fallback to kind of keep both of them in check.
00:24:45.622 - 00:24:55.900, Speaker B: So I'm excited to kind of just move fast and ship product, and the Oracle solution is just a really fast way to get things done.
00:24:59.550 - 00:25:14.290, Speaker A: I'm just looking at some of the questions here from the audience. So there's a few coming in, and the first one I want to read out here is a question about, is Salana currently leveraging IPV six for the Salana network infrastructure?
00:25:15.990 - 00:25:34.440, Speaker B: Not yet. One of our validators wants to build that out. There's some performance improvements we can do with IPV six and some security improvements as well. So if this is your jam, jump into our discord, and we'd love to work with you and help add support for it.
00:25:36.570 - 00:25:44.010, Speaker A: He actually just typed in a follow up on that. So he says, I-P-V six only or dual stack.
00:25:45.870 - 00:26:48.110, Speaker B: So I-P-V six adds kind of like a bunch of possibilities for building a much more secure network where we can leverage the size of the address space in IPV six to make it much harder for attackers to eclipse any of the nodes. I don't know if we'd need to be dual stack, because our particular network is kind of like there's no free lunch. How do you build a really fast network? Well, the way we do it is we spend more on hardware. Those are the trade offs in Salana, is you have to have beefier hardware, you have to have a deployment at a colocation spot with high available bandwidth. So those deployments typically have IPV six support, so we could actually turn off IPV four. But that's always kind of scares me because having it as a fallback is kind of like guarantees that you have Internet everywhere.
00:26:52.610 - 00:27:04.370, Speaker A: And another question coming in. I want to develop a gambling game on Solana. Is there any way to get secure randomness in a Solana smart contract? Kind of like Chainlink VRF.
00:27:05.590 - 00:27:08.020, Speaker B: Chain link VRF. Just go.
00:27:08.710 - 00:27:29.450, Speaker A: Yeah, there you. Perfect. And so there's another question. Is there a page that shows current or future list of applications on the ecosystem? So I think you kind of mentioned this earlier when I had asked. It's all on the Solana.com website, is that right? If people need to access that. Perfect.
00:27:29.520 - 00:27:51.540, Speaker B: And, like, follow our Twitter. When we do hackathons and stuff, we often ask the community to go to vote on their favorite projects and help us crowdsource the review process. I think this is linked on our website. There's this huge air table with 100 projects that ship the product. So please go look through all of them.
00:27:52.230 - 00:27:57.400, Speaker A: That's great. Speaking of hackathons, are you guys having one planned this year?
00:27:58.090 - 00:28:22.430, Speaker B: Yeah, we want to basically have as many as we can kind of support. It takes more than just launching the hackathon because we really want to work with the teams that put in all this time and effort into building things and see what is the nudge that they need to go quit their day jobs and live the glorious life of a startup CEO.
00:28:24.930 - 00:28:35.230, Speaker A: Absolutely. One other question here. Is any anonymous features? Is there anonymity in Solana?
00:28:38.310 - 00:28:51.640, Speaker B: There isn't anything like sapling virtual machine, but that's something, again, like, if you want to go compile sapling and deploy it on Solana, that's something we'd love to work with you.
00:28:55.210 - 00:29:17.360, Speaker A: Cool. And so just jumping back into some of the questions that we had for you, Anatoly, what else could you share? Or what is perhaps next on the roadmap for Salana? And what are you guys working on? Currently focusing on really for 2021. Is there anything you can share, kind of talk about on a high level?
00:29:18.690 - 00:29:52.460, Speaker B: Yeah, blockchains. It's almost like hardware. We had like a one year release cycle in hardware where you had to get your design in before it was taped out. Blockchains are a little faster than that, so we're trying to iterate as fast as we can. So if you follow our releases, there's probably a patch release every three days, which means that we do a lot of incremental updates. That's kind of like the best way for us to build so incrementally. We're inching towards that.
00:29:52.460 - 00:31:01.440, Speaker B: Let's reduce block times to 200 milliseconds, which means we need to handle more messages, which means that the I O stack needs to be faster, the signature verification stack needs to be faster, all those latencies need to get better, and we are kind of like slowly but surely chipping away at all those problems. One cool thing that you can play around right now is we have a jit to x 86. So smart contracts actually execute at native x 86 speed. I think we're the first blockchain to actually even consider that yet alone deploy it. If you want to do r and D, what's cool about our bytecode is you can actually compile it to spear five and execute on gpus. So again, if this is your jab and you want to kind of like eat glass for six months trying to make that work, we'd love to work with you because that would be super cool for us to hit by the end of the year. Can we actually get smart contracts offloaded to gpus for some of the application?
00:31:04.150 - 00:31:15.090, Speaker A: Cool. So we have one final question here from the audience. Is Solana running in bare metal hardware, or is there a virtual machine like Ethereum?
00:31:16.570 - 00:32:09.986, Speaker B: It's the VM is called Berkeley packet filter. So it's a virtual machine that was built for the Linux kernel. So it has the same security requirements as a Linux kernel driver that runs in this monolithic kind of kernel space and what's typically called ring zero. And that requirement is really high, right? It means that if you're running inside ring zero, you can totally modify memory in any part of the system. So we really like that virtual machine because of its really high strict security guarantees and the fact that the Linux kernel folks have already built a jit. So compile specs 86, they will never add any features that break the security guarantees or the performance guarantees. So we kind of have like this really nice base to build upon.
00:32:09.986 - 00:32:45.642, Speaker B: So we built a rust tool chain that goes through Lovm. So it's rust. LlvM spits out Berkeley packet filter shared objects, and that's what executes on Solana. But you can add support for C C. Both of those actually work pretty well right now. But more languages with more sophisticated runtimes that have garbage collection like go, that would take some work to go build and make that work. And there's a project to take solidity and compile it through LLVM to beat Berkeley back and Filter.
00:32:45.642 - 00:32:53.700, Speaker B: If you're like Lovm compiler geek, also, please reach out to us. We'd love more help there, but that's moving along pretty quickly.
00:32:56.890 - 00:33:08.790, Speaker A: And final question here, I guess just to kind of wrap up the AMA. Where can the audience, anatoly, follow you and Solana for progress or if they want to interact and engage?
00:33:10.890 - 00:33:50.680, Speaker B: Yeah, Twitter. Like, if you just want to passively follow, Twitter is a good place if you want to be active and talk to our devs and myself, I'm on discord all the time, so that's where we kind of do synchronous communication. Twitter is asynchronous. Please come and join our community. I think between all the channels, telegram, et cetera, there's close to a million folks already. There's a really active russian validator group on Telegram that's very tech focused. So if you're russian speaking like myself, that's a fun group to be a part of.
00:33:50.680 - 00:33:55.110, Speaker B: Although my Russian is pretty bad, so I need practice.
00:33:57.130 - 00:34:05.994, Speaker A: Cool. And on Twitter, they can follow you as well. Right? In addition to the Solana Twitter. So on Twitter, what is your handle? Maybe we can add this here.
00:34:06.112 - 00:34:08.410, Speaker B: Yeah. Ae yakovanko.
00:34:09.550 - 00:34:09.866, Speaker A: Okay.
00:34:09.888 - 00:34:14.400, Speaker B: I mostly tweet about censorship, resistance, boring, geeky stuff.
00:34:16.530 - 00:34:29.486, Speaker A: That's perfect for all of us. This is what we believe in the community. That's awesome. That's amazing. Thank you, everyone, for joining us. That really wraps up the q. A great questions from the community.
00:34:29.486 - 00:34:38.920, Speaker A: Really appreciate you guys all joining us today. Thank you again, of course, Anna Toli, for joining us and spending time with the community. Really appreciate it.
00:34:39.690 - 00:34:40.980, Speaker B: Thank you. This was great.
