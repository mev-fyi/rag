00:00:02.650 - 00:00:26.120, Speaker A: Gm Gm everyone. Hello hello. I hope you are all having an amazing week. Welcome to one more constellation workshop. Today I'm joined by Nikolf Chang. He's a strategy analyst and Tencent Cloud and he will do an introduction to Tencent Cloud services. Follow by a demo.
00:00:26.120 - 00:00:51.520, Speaker A: We will have a short q a sessions for any questions you may have and then we will have our own developer advocate Frank Kong joining us to do a demo on how you can use chainlink functions with Tencent Cloud so that you are able to build something amazing with Tencent. So sank. Whenever you're ready, feel free to take it away and introduce yourself.
00:00:53.170 - 00:01:48.480, Speaker B: Hello. Thank you for Sophie's opening. Maybe I introduce myself a little bit. I'm Nicholson, I'm the strategy analyst in Tencent Cloud. To begin with, I would like to express the gratitude to chennai lab for the invitation to become the exclusive cloud sponsor of Constellation Hackathon and Tencent Cloud is a referring friendly cloud service provider. We look forward to see the hacking teams to leverage our cloud infrastructure to build some innovative projects to address the shortcoming of the referee ecosystem. In this part of the workshop you will get note to tencent cloud infrastructure capability, our product offering, as well as to realize Tencent Cloud how to enable web free company to run their application using our cutting edge cloud product.
00:01:48.480 - 00:02:37.178, Speaker B: Okay, now I will start the first session just to go through the first session workshop rundown. Firstly I will go through our hex phone sponsored content. Then we will talk about the overview of Tencent Cloud. After that we will take a look on Tencent Cloud enablement for web free and finally we will take a look on how to build with Tencent Cloud. I will briefly go through Tencent Cloud sponsorship content to let you clear on the resource you could leverage in this hackathon. We will provide 100 USD free credit to the hacking team for hackathon usage. You can see there are two kirokok.
00:02:37.178 - 00:03:33.430, Speaker B: You can scan the left one to visit Tencent Cloud landing page for the instruction to open an account and claim the credit. You're also encouraged to scan another curl cook to follow our official Telegram channel. We have the dedicated experts to support you along the journey for any telecom inquiry related to our cloud product account opening issue and credit claiming issue. So feel free to take a photo on this page and you can scan the QR code. Also, you may be concerned about the price. In this tech form, we will contribute a 200,000 USD cloud credit price pool for the 20 winning teams. Every winning team could obtain 10,000 cloud credits to continue developing the project and grow from ideation.
00:03:33.430 - 00:04:41.846, Speaker B: For our judging criteria, we will judge the project based on three dimensions. Firstly the project value, innovativeness and quality. Secondly, the project sustainability. We will appreciate to the project building to have a long term development and turn the project to a real solution and thirdly, we will also take account on Tencent cloud product usage. Tencent Cloud actually has many ready to use functionality and SDK which could let you shorten your development time especially in a very tight hackathon period. We eager to see the project leverage our solution and in the later on session I will introduce more on our product and solution which I'll recommend for the hackathon. After going through the hackathon's event information, I will move on to talk about the topic of Tencent Cloud web free introduction to start with, Tencent Cloud is the largest leased chinese company by market valuation.
00:04:41.846 - 00:05:56.130, Speaker B: We have popular products like WeChat, QQ, Tencent video and a diverse type of game with tremendous traffic. Tencent Cloud is the backbone to support Tencent ecosystem which enable the largest application running on the cloud. Of course, apart from Tencent ecosystem, there are numerous biggest global applications also run on Tencent cloud so we are performance proof with the ability supporting application running in the most challenging and complicated telecom scenario. Now lettuce has a glaze at Tencent Cloud's infrastructure setting. We invest infrastructure in 26 region and 70 availability zone covering Asian Pacific, Middle East, Europe and northern and southern America. We also have a global CDN presence with more than 2000 nodes in mainland China and more than 800 nodes outside of mainland China. The nodes are distributed in more than 70 countries with gigantic bandwidth reaching 160 Tbps.
00:05:56.130 - 00:07:05.830, Speaker B: With the heavy investment in hardware infrastructure, Tencent Cloud is very confident to provide cloud service to users with the highest performance level. Our cloud infrastructure and products are well recognized globally. We receive a great amount of certification to verify that Tencent Cloud has leading cloud service performance and follows the industry standard for the solution and product offering. We were then going to unfair tension cloud enablement for referee, application and industry as a leader in cloud computing, Tencent Cloud has identified three key pillars to enable your referee success. The first pillar will be user engagement. We can help you build immersive metaverse experience through metaverse in the boss solution and media surface SDK. They contain the functionalities of virtual scenes, construction, video, audio and real time communication.
00:07:05.830 - 00:07:54.660, Speaker B: We also have the push notification service that can keep your user engaged in a global scale as they could receive the most updated information from your company. The second pillar will be compliance and security. We offer ekyc service to power powered by AI which can easily onboard your user. We also have a product called Tencent Cloud Edge one to provide all in one security solution which protects your from threats. This solution includes WAF, NTDos and CDN. Another tool for compliance and security is risk control engine. It could safeguard your business from different scenarios like registration, login campaign and payment.
00:07:54.660 - 00:08:35.380, Speaker B: The last pillar will be cloud infrastructure. Our robust eye solution will provide the computational power and reliability to scale. This includes virtual machine, Kubernetes surface and our blockchain RPC surface. The blockchain RPC as our first web free native product. We will later on go deep to introduce it. TensorCloud is one of the most web free friendly cloud service provider. We continuously put effort into leveraging our cloud infrastructure to facilitate web free ecosystem building.
00:08:35.380 - 00:09:37.054, Speaker B: Here are some big name companies and foundations using Tencent Cloud or partnering with Tencent Cloud including chain Link Lab, our blockchain RPC strategy partner anchor as well as some of the trending layer one and layer two blockchains. Now we will take a look into the real world case to recognize how Tencent cloud empower the web free business with real success. In this case, the company provides metaverse entertainment dedicated to serving celebrities, artists and brands. It utilized gaming and NFT elements to provide immersive experience. However, it faced two challenges. The first challenge is to expand market coverage in Asian and Europe and the second challenge is to transform an existing game to add new elements such as NFT and token. So, regarding to the challenge, tension cloud provides following solutions.
00:09:37.054 - 00:10:54.678, Speaker B: We provide VM machine and database deployed in multiple global regions to set up and expand geographic coverage for the application to reach more audience. For the second challenge, our blockchain RPC is used to help application connect to the selected blockchain for blockchain element integration. Moreover, we also provide Tencent real time communication solution and game media engine to enhance the in game experience. By leveraging Tencent Cloud solution, the company achieved following results including the optimization in cost efficiency, the comprehension of gaming suit, establish better user experience and also building better customer connection. After introducing Tencent Cloud referee abilities and our client case. Now let's take a look to explore how Tencent Cloud, Blockchain RPC and other products can be used to empower your hackathon project and referee business. We understand that web free application consists of two crucial parts, the onchain part and the off chain part.
00:10:54.678 - 00:11:48.470, Speaker B: The onchain part primarily deals with asset and core data which are reside on blockchain. However, the offchain session is equally important as equal support the application to have the advanced functionalities that may be limited by inherent constraint of the blockchain. Here are the products we provide for the onchain part, we provide a high performance blockchain RPC surface. It allowed seamless connection to the blockchain and enable interaction with smart contracts. This surface can ensure efficient and reliable communication between the referee application and the underlying blockchain infrastructure. And moving to the offchain part, we have the cloud virtual machine. It could offload the computationally heavy task from blockchain to the off chain environment.
00:11:48.470 - 00:12:57.786, Speaker B: This approach will strike a balance between decentralization and the overall application cost. Another valuable product for the Hackathon project is the cloud storage solution. So no matter you need to store the file content for your NFT or other media content for your website, our cloud storage will provide scalable and secure storage option to meet your requirements. Furthermore, our database service can also empower your application with analysis and querying capabilities. It ensures your application to have better user experience with the offchain application data and the blockchain indexing data. Blockchain RPC as our newly launched web free native project, it is essential component for every web free application. I will go through more detail on it now for those familiar with blockchain development, you may be well acquired with blockchain RPC.
00:12:57.786 - 00:13:56.960, Speaker B: It provides developer with convenient interface to query blockchain data and submit transaction. To start with the reason why we launched the blockchain RPC service we hope Webfree Company can focus on building Webfree application without worrying about the complexity of node management. That's why we have partnered with Anchor, one of the biggest node surface provider to develop our blockchain RPC product. Based on Anchor's blockchain RPC service, they have the experience of developing and maintaining the RPC service. It can ensure that we offer a robust and reliable service that can meet the need from Webfree business. Our blockchain RPC service currently supports four popular blockchain and we have the plan to expand our support to include even more blockchain. In the near future.
00:13:56.960 - 00:14:56.830, Speaker B: Our blockchain RPC will have two surface mode apart from the public mode. We will also have the private mode. The private mode could tailor for enterprise need. It comes with customizable surface level agreement to allow enterprise to have their greater control and flexibility over their own blockchain infrastructure. At Tencent Cloud, our blockchain RPC service will offer several distinct advantages that set us apart from other provider in the market. Firstly, we have extremely low latency. By leveraging test and cloud optimized network infrastructure, we ensure the main latency of our blockchain RPC remains below 15 millisecond and in addition to the low latency, our premium plan offer high throughput capability to handle the traffic growth of your decentralized application.
00:14:56.830 - 00:15:54.768, Speaker B: We have the rate limit of up to 1800 query per second. We surpass other mainstream RPC service provider to ensure a smooth and uninterrupt operation even during peak usage periods. Lastly, we understand the importance of cost efficiency. That's why we offer very generous free trial offering allowing you to explore our blockchain, our PC surface at no cost. The free trial version allow user having a rate limit of 1800 requests per minute. Without the hard limitation on the request quota, it could already cater most of the web free application RPC demand. Actually our free trial version already surpassed the surface plan of many mainstream no surface provider and for the premium plan we provide flexible and cost effective pricing plan.
00:15:54.768 - 00:16:42.624, Speaker B: You have the option to purchase the package with a specific number of API units and then the API unit will remain valid for one year starting at 50 USD. It ensures substantial cost saving compared to a monthly subscription model. You will no longer face the problem of not enough request quota in the peak usage month and wasting the request quota in the slack month. Now I will show the demo to have my colleague flying demonstrate our blockchain RPC project so that you can know more on its usage scenario and also learn more about how to integrate to your devs project. So may I have Sophia you put.
00:16:42.742 - 00:17:31.240, Speaker C: The video onto that stagecloud.com, then click the thank you Nick. To begin we go to Tensoncloud international station tensoncloud.com then click the Product tab scrolling down and find industry applications. You can see blockchain service then click sanskring Cloud blockchain RPC and click Get Start button. It will jump to login page. You can sign in with an existing account or sign up a new account.
00:17:31.240 - 00:19:00.780, Speaker C: After sign in we can see the terminal view to functionality project isolation and usage statistics separation we introduce the concept of an application which must be created beforehand. Each application corresponds to a unique API key. Click the new application button build in name and description. Now you can see the new application in the list, click View key. We can see that we support several of the most widely used chains such as Ethereum, Polygon, BSc and Scroll. We both support mainnet and Testnet general different URL prefix that can be assessed directly resolved additional approval. We also can click view details in detail we can see the basic details and different network endpoints.
00:19:00.780 - 00:20:31.340, Speaker C: We also provide Websocket link and granular security config content website wide it and IP address wide it. Below the application list you can see overview content unit balance, unit usage per day and per week public free plane limit is 1800 requests per minute. We can also click top up button to purchase more units and upgrade plane to premium. Premium plane rate limit can up to 1800 requests per second. In statistic page you can choose each application chain network to see total requests, average request per second and unit usage within the special time. The wallet served as the primary interface connecting users and blockchain network and a stable and high performance RPC network enhance the user experience, especially in hot event scenarios. Take for example the rush by NFT.
00:20:31.340 - 00:21:43.084, Speaker C: We found a token that we really like. Stable RPC service will give us a higher probability of success purchase, so we need to configure the wallet network. First we copied the URL and passed in the metamask network setting and fill into the corresponding network meters. After that, switch to the corresponding network and verify your account balance. Once confirmed, you can click buy now button and sign the transaction. Click Confirmed okay, the transaction will send fast by our RPC endpoint. After that you can see the transfer status.
00:21:43.084 - 00:22:00.872, Speaker C: We provide two convenient boilerplates for developers to better integrate our RPC service. One for contract builders is hard hat boilerplate. The other one for full onchain game.
00:22:00.926 - 00:22:01.800, Speaker D: Builder.
00:22:04.300 - 00:23:18.530, Speaker C: Is merged boilerplate. You need to following steps in the Readmin file. If you want to deploy to public chain with Tencent RPC. In hard Hat network config file you need to replace the API key where you can get terminal, select chain and network copied and replace the test account private key to deploy contracts after deploy success, you can run the front end like this view. You can see the token amount reach from on chain and you can try to transfer one token to reception address. When you click transfer and click Confirm wait for the transactions. After that you can see the token amount change.
00:23:18.530 - 00:24:04.860, Speaker C: When you click the wallet you can see the transaction status. Go back to the terminal. You can click statistics page and select your token chain and network. You can see the request detail. Mother boilerplate are the same step as hard header demo. You should replace the network configs with your API key and your private key. More details can be found on our GitHub repository.
00:24:21.900 - 00:25:11.370, Speaker B: The video I'll already show and this video I'm flying mainly showing us how to using our RPC endpoint to put to the metamask and then letting you to connect to the devs with very stable and reliable environment and also flying also mentioned on how to integrate the endpoint into the development framework hard. So in case if you would like to learn more on how to using the RPC, feel free to review this workshop content on the YouTube. I see there is some questions being asked. I will try to have a Q a session to answer these questions.
00:25:12.480 - 00:25:25.200, Speaker A: Yes, thank you Nicholson let's go through the first question from Leo. What is the edge of using Tencent over another key players in cloud services provider?
00:25:26.820 - 00:26:30.690, Speaker B: For this question I try to answer it. Tencent has its own infrastructure. We have many data center built in worldwide and compared to other cloud service provider we are very referring. We're actively building our connection with many foundations and many projects. We have our own startup program to connect to different startup and company and for the project we will support them using our cloud resource to grow from ideation to launch their product. So as a referee supportive company we have bigger ecosystem compared to other cloud service provider in the decentralization application development and also web free space. Is the answer of this question.
00:26:32.920 - 00:26:57.580, Speaker A: Yes Leo let us know. And he also has another question. Since web three is all about truth over trust, where are the key features that makes Tencent a great cloud provider over other known service providers? What is the decentralization aspect of Tencent?
00:26:59.760 - 00:28:16.390, Speaker B: For us we are mainly providing the infrastructure for the web three developers like the blockchain RPC we mentioned. So we have just as I mentioned before, we have the distributed service so we have better performance. When you need to provide content like to deliver content to the audience worldwide and also web free application, they will have the on chain part and the off chain part. And for the off chain part like Tensorcloud have many experience. Like if you want to build a metaverse application, you may have the blockchain to support your assets and tokens. However, you also need the cloud rendering for the virtual world and Tencent Cloud have many industry experience in development application and have the SDK for cloud rendering for audio for real time communication. This experience could provide us the experience to provide the best service to support the web free ecosystem and the business and the functionalities required by the company.
00:28:21.160 - 00:28:43.420, Speaker A: Thank you Nicholson Leo, let us know if this is okay for you. If you have any other questions, I hope you're doing well since we last saw each other on Smartcon and if all good then we have a couple other questions that I can go through. Can I use Tencent Cloud blockchain RPC throughout my hackathon at Chainlink?
00:28:44.160 - 00:29:17.880, Speaker B: Yeah, sure. We actually provide the mainnet and testnet for our blockchain RPC. So we have the generous free tier I have mentioned in the presentation. We have the ray limit for the free tier reaching 1800 request quota per minute. So you can feel free to use the RPC in your project. It could support you to develop the blockchain RPC to develop the depths.
00:29:21.420 - 00:29:41.680, Speaker A: I'm also seeing a question about the usage of Chainlink functions in the chat right after this. Our developer advocate Frank will actually do a demo on the usage of chainlink functions within this topic. So I'm sure he will be able to answer your question. And the next one is will it support avalanche or arbitrum?
00:29:43.620 - 00:30:12.860, Speaker B: Yes, these two blockchain actually are very famous blockchain. They are the trending blockchain and we plan to support, expand our blockchain support. Currently we are supporting four blockchain and I think in the late December we will have around ten blockchain being covered and these two trending blockchain will of course being covered in our later development period.
00:30:15.200 - 00:30:41.030, Speaker A: Amazing. Thank you very much, Nicholson. If there's any other questions, feel free to drop them in the chat. We'll just give it one more minute and if there's not any other questions then. Nicholson, thank you very much for your presentation. Is there anything else that you would like to add?
00:30:42.840 - 00:31:08.030, Speaker B: Thank you, Sophia. Thank you everyone to sit here to listen to tencent Cloud introduction on web free. Hope this sharing can make you learn more on tencent cloud so I may pass the time to Sophie and Frank to continue having the session to have some introduction on how to connect devs to tencent cloud with training function.
00:31:09.600 - 00:31:14.716, Speaker A: Thank you very much, Nicholson, and we hope to see you soon. Have a nice day.
00:31:14.898 - 00:31:15.950, Speaker B: Have a nice.
00:31:20.950 - 00:31:22.050, Speaker A: Hey Frank.
00:31:22.470 - 00:31:23.540, Speaker D: Hello everyone.
00:31:26.230 - 00:31:40.440, Speaker A: So Frank will show us a demo on how you can utilize chainlink functions with pentant cloud. So Frank, whenever you're ready, feel free to take it.
00:31:42.590 - 00:32:47.090, Speaker D: Yeah, really excited to be here and thank you very much. Thanks Shaktia and thanks everyone for coming to this workshop. I'm Frank and I am a developer advocate from Chainlink Debris team. And in today's workshop, in the first session, Nicholson just gave a very detailed and full introduction to the Tencent cloud products. And after that, I'm going to give you a very brief demo to just show how we can connect our smart contract to the Tencent cloud database. And in the process, I'm going to use a product called Serverless cloud function, which is a function provided by Tencent Cloud to allow the developers to just expose an interface from the database to the outside user. So with this product, we can just make an API call and get the data that we saved on the database, and then we fetch this data in a very decentralized manner with the help of the chaining functions.
00:32:47.090 - 00:34:01.586, Speaker D: And then we can just save this data and fulfill this data back to our smart contract and we can do whatever we want them to do. Okay, so let me just share my screenplay. I will first just give some theoretical part of the training functions and what we are going to do within our demo. And next, I'm going to do the demo. And if you have your laptop in your hands, I strongly encourage all of you can just code with me and you can learn how to use Tencent cloud, how to use the chaining functions. Okay, cool. So in my workshop or in my part, there are going to be two sessions in the session.
00:34:01.586 - 00:34:56.710, Speaker D: Number one, I'm going to give a brief introduction of the chain functions. And I'm sure that one of my colleagues, Zubi, gave very detailed and deep dive introduction about the chain functions. So for those who didn't attend that workshop in yesterday, I just give a brief introduction about what is chain functions and what role chain functions plays in this industry and what we can do with the chain functions. And after that, I'm going to give 20 or 25 minutes demo to show how we can use chain functions to fetch the data from the Tencent cloud with a product called a Tencent service cloud function. Okay, cool. Let's start. So why do we need chaining functions for our web three decentralized application? Well, as you can see, that with the growth of the ecosystem is web three.
00:34:56.710 - 00:35:47.190, Speaker D: Keep growing and we will see a lot of the business logics and a lot of the web three version applications. On the smart contract. For example, we can just build a web three version of the insurance, like weather, flight delay insurance. So if someone just buy your insurance and hate the client of your insurance, maybe the flight is delayed or the weather is bad. Or we can just offer some payouts to the clients. So compared to the web two application on the web three, well, the blockchain is a decentralized system and whatever written in the smart contract will be executed by a lot of the nodes onto the network. So if the flight is delayed, the client of this protocol will be 100% offer the payout.
00:35:47.190 - 00:37:22.614, Speaker D: But there is a very important point in this web three version insurance is that we have to know if the flight is delayed or not. If the weather is good or not. So all of this kind of data will become, will be from some web two API point. So for example, we can get it the data from our database, we can get the data from some traditional data providers, we can get it whatever we want with the help of the chain function. And also in order to apply more business logic to the web three ecosystem, we can just use this tool or use this technology to just grant our smart contractor more flexibility to the data we want. So for the web two apps has today all the features web two app has today we can use out of these features in the web three application, for example, we can just get the data, the greenhouse gas emission data on chain and create some carbon asset. Or if you want to build a gaming or you want to build a dynamic NFT, you definitely get some data from your server because maybe you cannot apply all the business logic, all the server functions in the smart contract, right? Because of latency and the high gas fees, right? Okay, so for the chaining functions, what we do with Oracle is that we have a decentralized oracle network here.
00:37:22.614 - 00:38:22.066, Speaker D: So compared to the single node or single server you set up in the off chain and get some data from your data source and fulfill the data to the smart contract, we kind of mimics the trust, minimize the feature or this mechanism from the decentralized network to the chaining decentralized oracle network. So in the doN, in this decentralized oracle network, we can just apply this feature in the data delivery layer. So you can just leverage on the don and get the data from whatever you want in a very decentralized manner. And for the chaining functions, as you can see here, this is the workflow of the chaining functions. We have the don here, the decentralized oracle network. And except for that we will have two smart contracts. First one is a user smart contract, or we can call it the consumer smart contract.
00:38:22.066 - 00:39:27.434, Speaker D: And as an end user, the developer can send a request to the consumer smart contract and then the smart contract will just wrap your request and send it to the chaining function smart contract, which is deployed by the chaining. And in this smart contract your request will be written into an event and this event will be emitted by the functions. After that it could be detected by the dun, maybe one node in this network. And if your request is detected, every different node on this network will just execute whatever you ask them to do. Maybe just do some accommodations or get some data from the outside API. And after this data is fetched from the API and every different node under the network will just talk to each other and do aggregation. It's like every different answers in the different node will be get together and then a final report will be generated and submitted to the chainx function smart contract.
00:39:27.434 - 00:40:28.962, Speaker D: And after some necessary verification from the chainx function smart contract, the aggregated result will be fulfilled to the user smart contract. So from the perspective of the end user, the end user just write whatever they want the chain function node to do and write it in the JS code and send it to the consumer smart contract. In this smart contract, after several seconds or after like several blocks, you will get a result and this result is actually fetched from the API result in a very decentralized manner with the leverage of the chaining functions. Okay cool. So as a developer it's actually very easy for you to use chaining functions. So for you one step, one is just create your consumer smart contract and you will have two functions within your smart contract. One is called execute request or send request, whatever you want to name it.
00:40:28.962 - 00:41:17.902, Speaker D: But the aim of this function is to create a function request and send it to the Oracle smart contract. And under this smart contract your request will be transferred to the build registry and then imaged to the event log and it could be detected by the DOM. But actually you don't need to worry about any smart contract deployment or server setup or any configuration. The beauty of this is that we provide a serverless platform. What you only need to do is create a smart contract for your consumer and write these two functions. Under this smart contract, send request and receive the request. So after you send this request and after the execution of the DOM, the aggregated result will be fulfilled to your smart contract.
00:41:17.902 - 00:42:08.370, Speaker D: Okay, so this is what you need to do for the chaining function to send any request to any API outside the blockchain. Okay cool. And if you want to see more use cases from the chains functions, we actually have a website called usechainingsfunctions.com. So please feel free to head to this website to check more use cases like get some data from the AWS data exchange. I think after the workshop I will add some use cases for the transition cloud and also you can use Twilio to send some text or emails to the users if the user finds your identification on chain. Or you can use Google Cloud or some other cloud provider to send requests and get the data. Okay cool.
00:42:08.370 - 00:43:31.862, Speaker D: So next is a simple demo. So in the demo what we want to do is that we want to get some data from our business logic, which is in the off chain server. So usually when you want to build a web three version of the project, we don't just apply all the business logic in the blockchain and write all of them into the smart contract, because that will make your smart contract very huge. And every time, if you want to cause functions, every time you want to deploy the functions or even you want to upgrade your function from lower version to the higher version, it will cost a lot of the resources, including the time and the money. So usually we will have some business logic off chain and maybe we will have some asset or some very important governance and business logic on the blockchain in your consumer smart contract. So in this scenario, what we can do is that we can use the chaining functions as an intermediary. So we send the request from our smart contract of the consumer and also write some JS code to describe what we want our chain function to do and send it to the chain of functions.
00:43:31.862 - 00:44:38.100, Speaker D: And the functions will just send this request to every node and the node will execute what is described in the proposal or in the request and fetch the data from the business logic and then feed it back to the consumer smart contract. So this is a role of the chain functions placed in this scenario. And for here for today, we are going to use tencent cloud project to save our data. And also we will actually create something called a service cloud function provided by Chainlink to just expose the interface or the access to the cloud database to a API gateway. So within the API gateway we can just call it with some restful URL and get the data and fetch what we want from the database and then write it back to the consumer smart contract. So we are going to do this in our following demo. Okay, so let's start.
00:44:38.100 - 00:45:11.060, Speaker D: So first thing, let me see if there are any questions. Yeah, I think that is an answer from another member from ten Philippines. Fly. Thank you. Fly and cannot say it. We Chong Pong. What do you mean you cannot say it? You cannot see my screen or what kind of stuff you cannot say.
00:45:11.060 - 00:46:03.102, Speaker D: Okay, please let me know. Yeah, let's start. So first of all, we are going to the Tencent cloud, the tensorcloud.com and go to the console. I think how to register and get a poem from the tensorcloud has been already introduced by Nicholson and if you have any questions please drop your question in the chat box or maybe leave your question in our discord channel and the members from Tencent team will answer all your questions for me. I have already created a Tencent cloud account. And in the tensor cloud account go to the console and you can see here there are a lot of the products under the tensor cloud, right? So the first thing I want to do is go to the database.
00:46:03.102 - 00:46:40.110, Speaker D: So you can see here, let me see if I can zoom in. It is not displayed correctly. So for here, here is a relational database. So under this tab you can see there are a lot of the databases. And for this use case I'm going to click this button, the Tencent DB for MySQL. Actually you can choose another database like a SQL server, PostgreSQL or TDSQ C. But for me, for this example, I'm going to create a table in the mySQL.
00:46:40.110 - 00:47:38.580, Speaker D: So under the MySQL database you can see I have already created a database server and it is running. If you do not have the database server, you can click this button, create and then you can just, what is that? Never mind. You can create a new server by click this button. And please make sure you can get some voters from the Tencent team in this hackathon before you do any transactions, before you create any servers in the Tencent cloud. Okay, if I click my server, actually I can see all the details of my server, the name and instance and the private network address and a public network address. And I can just log in to my database server. And in my database server I can use SQL statement to create a table to add some record or update the record.
00:47:38.580 - 00:48:37.344, Speaker D: Yeah, in the interface I can log in. Okay cool. So in the tensor database I can see here for the SQL window and here is a terminal for me to execute any SQL statement to create a table or do anything like that. So for me let me just create a table called maybe players. So let's just mainly if I have a table with two columns, for the first column that is username. And for the second column it's like a score or some points of this user and create a table. We will give it a two column.
00:48:37.344 - 00:49:42.010, Speaker D: So for the column number one is Id and I can give it a variable character 255. And in the second one is called maybe score and make it like integer. And let me just create this table, you can see this executed. So this table is create. And let me refresh the database listed. And you can see here it's a table of the players and the columns and index. And after that I want to just add some data into the table players and let me see, insert into players like first one Addie and next one add a score and values, maybe give it a name like Bret and give it a score like maybe 20.
00:49:42.010 - 00:50:28.008, Speaker D: And I also want to insert another record. Next one will be someone whose name is Nicholson. How to spell that? Nicholson. And give it a score like 30. And I just need to insert these two records into my database and execute. That's okay. So I guess these two referees have already been added to my table.
00:50:28.008 - 00:51:05.140, Speaker D: And let me check if that is added successfully. Last bar from layers to that. And yeah, you can see here in the table here we have two columns. The column number one is Id. I have two person. The first person is a frank and the second person is Nicholson. And the second column is a score.
00:51:05.140 - 00:51:59.764, Speaker D: This is the score of the frank. That is 30 is a score of the Nicholson. And after that, if I want to get the data from this table, what I can do is that I can build a back end, use some server and build some functions to fetch the data from the database. Or I can use something like a Tencent product called serverless function, the serverless club function here. If I click this one, this serverless function is kind of the products to allow the developers to just create an interface for the database, for some other data storage data. And if I click this, the function service, you can see I have already created the service cloud function for this hexam. And that is called a chaining hexam.
00:51:59.764 - 00:53:11.200, Speaker D: If I click that from the UI, actually here are some different tags here. And in the function code you can actually create whatever you want in Python or I think in the JS code it is also okay. And if you have any questions about how to use these two different products, maybe just go to the Tencent documentation to check the documented. There are a lot of instructors for you to get to know how to use this product in this index, Python. Actually this is a program to create an interface and just get some data from the database and whatever you want. And you can create some functions to help you to get connected to the specific table and get a specific data. So for the main handler, you can see here.
00:53:11.200 - 00:54:08.636, Speaker D: And the first step is to parse the path. If you just make a restful API, you will have a path. And we have two regular expressions here, the first regex and the second regex to just parse the path to find what is the resource. And based on the different resource, I can just connect to the different table from the Tencent database. And for now, if I want to get a table, I want to get a player table to just fetch some data. I can go to my cloud service function and create a new function. It will be similar as a function in the sample code, maybe like this one, I just copy that and update to the get players to get the data from the players table.
00:54:08.636 - 00:55:39.816, Speaker D: And the first part is just get connected to the table and nothing need to be changed. And the second one is that I need to create a SQL statement, select far from users and maybe I want to change that to the players. And then I will use this cursor to execute the SQL and then fetch all of the data of this result and then return that. And after I added this function, the get players and I can just add a resource to direct to this function one. Okay, so if the resource is players, I mean if you send a resource with a Uri and you have a players this keyword, your request will be redirected to this one and it will cause jack players. Okay, and let me just update the name to the players, copy that, update this one and update this one. So for the players we create a function here, get players and then we have a path to just redirect to this function and get the data from the player table.
00:55:39.816 - 00:56:35.488, Speaker D: Okay, so after these two functions and two snips added to our program, we can deploy this line for deployment chaining have done successfully deployed. So for now we actually have an interface to call the data we just save within this table. Okay, so how we can call that. So here is a tag called a function Uri. So click this one and you will find here the access path. This one. So copy that one.
00:56:35.488 - 00:57:53.350, Speaker D: Maybe you can try it from your browser and going to copy that URL here and just type the players and give it a get request. Oops. So for now that is because I return an adjacent file. So maybe I cannot directly say it from the browser. But if I use something called Postman HTML platform and go to this one, I just want to show the result what kind of the data we can get from this service function and launch postman. This is just a proxy to help us to send any restful API request to any data provider. And this one I think go to my workspace and I can create a new tab and paste the address here in the slash players yank.
00:57:53.350 - 00:58:53.190, Speaker D: Here you can see these two records was returned in a json format. And we can see the Frank here and Nicholson here. The score of Frank is 20 and the score of Nicholson is 30. And for now the way to get the data from a tensor cloud is done. And in the second session I'm going to show you how to use the chaining functions to just push this data to the smart contract. Actually, let's just assume that we want to get the person with a high score in the table. So how we can do that, I just want to just use a decentralized oracle network to get this data from the tencent and then choose the one with the higher score and save this person's name in our smart contract.
00:58:53.190 - 01:00:07.138, Speaker D: So how we can do that? Okay, the simplest way is to just open the dots chain link and we provide some sample code for the chaining functions. And if you go to the documentation of the chain link and go to the functions here and read the docs and in the getting started we actually provide a smart contract. Sample smart contract. Let me see, where is that? Yeah, this one, the deploy a functions consumer contract on the polygon Mumbai. So let me just open that in remix for the clinic functions. So what the sample code does here is to call an API from the outside of the blockchain. And the source code they want the Dom to do is written here.
01:00:07.138 - 01:00:59.762, Speaker D: As you can see that the API response is to wait for the HTTP request. And this one is API the sample code wants to call. But actually in our use case we want to call the API we saved on the tensor cloud and we can copy this one here, paste it, copy that, switch back to the remix and paste it here. And for now we have the UrI and the URI is directed to this API we just created on the tensor clause. And after we get that we will have the response in the data. The data is actually this json file. So if we want to get a username with a hide score in our request, I need to do some sorting, right.
01:00:59.762 - 01:01:58.098, Speaker D: So in the data sort, this is a JS code, right sort and we give it a function, one, two. So if you don't understand, what does it do? Maybe just check how to sort in the JavaScript and it will have a lot. And then return a B score minus a score. Don't forget to double quote that. Add a semicolon here. So we just add this line to just sorting this json file to make the person with a higher score in the first element. Okay, so back to the remix and then we want to return the name of this element.
01:01:58.098 - 01:02:33.422, Speaker D: But in the database the name is called Id because in the return file here with the id name is Nicholson. Actually this is a name. So we use the column name id in our JavaScript code. So in the remix we complete our source code and then we can check another two functions. I just introduced in the slides. So the first one is the send request. This function is used to send this function request to the don and the next question is called a fulfill request.
01:02:33.422 - 01:03:33.750, Speaker D: This function is used to just receive the result back from the chaining function do n and after we receive this response, actually this response contain all the data we required in our request and then we will just save this request in the response. And also we just use this data type conversion and then change that to the string. We will see the character here should be, let me see, should be Nicholson, right? Because Nicholson with a higher score than Frank. So if everything works good, after we send requests we will see the character name is nicholson. And actually that is a winner maybe in your game or that is a winner in your ruffle. Anything you want. You can use the tensor clock to save your data and use chiming functions to fetch this data in the centralized manner and fulfill this data back to your smart contract.
01:03:33.750 - 01:04:05.950, Speaker D: Okay cool. Let's just compile this smart contract. And there is one error, I think that is the issue of the compiler version. Let me change that to the. .8.19 well let me compile that again when you see the little green checkmark here. That means a smart contract is compiled successfully.
01:04:05.950 - 01:04:57.446, Speaker D: And let me go to the deployment tab and switch the environment from the remix VM to the injected provider. And as we can see here in the sample code, the configuration is hard coded for mungbai. So I need to change my network from any test end to the polygon Mumbai. Oh great, my metamask. In my metamask polygon Mumbai is already configured so I can deploy that one. Right. Deploy that metamask, pop up and click confirm is deployed.
01:04:57.446 - 01:05:37.120, Speaker D: Right. And if we want to send a request, actually I need to input two parameters within this function. The first one is a subscription Id and the second one is the argument. Actually in our use case we don't use any argument. And in the subscription id is that the subscription receive of a balance to allow this smart contractor to make use of the use of that of it. Yeah, let me just create a subscription for the chaining functions. So go to the function chain link.
01:05:37.120 - 01:07:03.060, Speaker D: Yeah, in the function click this bucket, let me zoom in. So create a subscription and the UI will read the address from your metamask and maybe add your email here. So if there is something wrong, you will receive an email from the chain functions, check this one and then create a subscription and confirm it. Let me check if you have questions. Yeah, any questions about a tensorcloud? Actually Nicholson is still here. And after this demo, Nicholson will answer your questions about a tensorcloud. And after the subscription created, I can add fonts here, maybe I will give it three link tokens and add fonts.
01:07:03.060 - 01:08:32.044, Speaker D: Metamask, pop up and confirm to add funds to the chain function subscription it. And the next one is add a consumer. A consumer is a smart contract to which you want your balance to be used. So we have already deployed our contract. So we copy the address of our contract and add it here and add consumer again. Click confirm. Yeah, the subscription is created successfully and the consumer added successfully.
01:08:32.044 - 01:09:18.240, Speaker D: Let me just view this sub. Yeah, as you can see here, this subscription has a number, the iD, I'm sorry, the 731. And there is one consumer under this subscription of the chain link. And this is a history of this subscription created that founded that and added the consumer. And after that we can actually send our request. So first we give it an ID of our function that is 731731. And because we don't need any arguments, so we give it empty array.
01:09:18.240 - 01:10:33.124, Speaker D: So let's just transact and confirm. And we are using the remix to send a request to the chainx function with the logics we have over here. And actually for now, the average Jeffrey node under the functions will execute this snippet of this code and just call this API and get a result and do the sorting and then encode the result into a string and send it back to the smart contract. Okay, since this request is sent successfully. So if we go to the functions and refresh the page, we will see the functions will be showing here, maybe, yeah, it's already success. So the chinix functions receive our request and the function does what we ask them to do with the JS code and it returns a result back to the smart contract. And this is the status of the request in the recent fulfillments.
01:10:33.124 - 01:12:00.730, Speaker D: So for now, if we check the counter here, we can see, oops, there is nothing test response. Oh, it looks like there are some error happens. Let me check it. Remove that's what do we. Let me check if I can get it from the browser again. Yeah, we can get it. Score interimix return B drop score minus B trunk.
01:12:00.730 - 01:13:25.530, Speaker D: It fulfills a request. Yeah, there's nothing wrong. Number is 731 that is cracked. Let me send it again for this time. Let me see if the request is detected. Yeah, and the functions detected this request and the status of the request is displayed here it is success. Let me check that again.
01:13:25.530 - 01:15:09.110, Speaker D: Let it. Okay, the data is actually not returned to the smart contract. It I can see nothing wrong it okay anyway because of the issue of the time we have only 1 hour and it's already 60 minutes over. So I will just let Nicholson to answer some questions and actually I will check this code and to post that correct one under the stream maybe after the workshop. Yeah I think we don't need to waste the time on this and I will check that and to post answer under the stream. Yeah Nicholas, do you want to answer some questions maybe from the chat box?
01:15:13.720 - 01:16:06.950, Speaker B: Hi. Hello everyone. I saw there are some question regarding the telegram problem. This just some technical issue and we will enable the messaging sending functionalities for the telegram channel. So no worries on it. I think for tomorrow it will be message sending able. And also another question is whether Tencent Cloud have the server in Europe, right? Sure Tencent Cloud have the server in Europe and I remember it's in Francisco, it is in Franfoot for Tencent Cloud server in Europe.
01:16:06.950 - 01:16:23.180, Speaker B: Any other question I can answer? Yes, I think I covered the two questions being asked. Thank you for your question.
01:16:25.550 - 01:17:36.636, Speaker D: Okay yeah, so if you have any question, maybe join our discord to just ask questions related to Tencent cloud in the Tencent cloud channel or maybe in the telegram. Yeah, and I think we are good here and I will leave like 1 minute to everyone if they want to ask questions. And actually when you were speaking Nicholson, I actually saw a question here, maybe skipped if you want to answer this one. How to use chain functions with mud? Oh maybe that is from my side in mud. Actually the usage of the function is to relate the data from the web two to the web three, and mud is like a framework. I'm sorry I'm not expert of the mud. I guess that is a framework to the onchain game which means the data is on chain.
01:17:36.636 - 01:18:33.116, Speaker D: The business logic is on chain. So it's not like a mechanism. We save the business logic on the off chain server and save our smart contract for the asset for some important governance on the blockchain. So in this case, actually I think only way to use the chain functions with the mud is that if you have some data you want to fetch from the gaming API in the web two, you can use chain functions to create your consumer smart contract to send a request and get the data from the off chain API. Yes. Yeah Nicholson I think we are good here and thanks everyone. Thank you for coming to this workshop and thank you for your time and good luck to your hackathon.
01:18:33.308 - 01:18:38.028, Speaker B: Yes, thank you everyone. Good luck for your hackathon. Bye.
