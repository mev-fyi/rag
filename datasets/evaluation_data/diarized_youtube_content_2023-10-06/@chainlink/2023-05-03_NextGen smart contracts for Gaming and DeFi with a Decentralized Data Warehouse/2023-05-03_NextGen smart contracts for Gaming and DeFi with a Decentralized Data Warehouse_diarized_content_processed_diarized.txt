00:00:01.450 - 00:00:21.200, Speaker A: Okay, we are live. Are we seeing. I'm not seeing anybody. Hey, Sophia. Anybody in the. Just anybody in the live streaming right now. I'm not sure if I'm seeing anybody.
00:00:21.200 - 00:00:37.318, Speaker A: Hello. Okay. All right, so I'm seeing some people. Hi, Evan. Hi, Consumptin. Hello, everyone. You're going to get started in a bit, so I'm going to give a couple of.
00:00:37.318 - 00:00:56.240, Speaker A: Hi, Channing is here. Great. Okay, let's give just maybe 30 seconds and. Wow, there's so many people. How many people are there? I cannot see any people. 19 people. Okay, great.
00:00:56.240 - 00:01:14.740, Speaker A: All right, let's do this. I'm going to start. Hello, Emine. Thank you guys for tuning in. I'm going to start very quickly, in a bit. All right. Okay.
00:01:14.740 - 00:01:33.034, Speaker A: Should I go ahead and get it going? You're waiting? Okay, perfect. Oh, that's awesome. From Argentina. That's amazing. All right, everyone, I'm going to start. We are already 1 minute into the workshop. Thank you for tuning in.
00:01:33.034 - 00:02:08.498, Speaker A: I'm very excited to be here. My name is Abrah Engwall and I'm head of ecosystem at space and time. And today I'm going to show you what space and time is and then what you can do with chaining in space and time together. So very excited to be here. I'm going to explain and do a demo. And at the end, please just ask your questions at the end. And it can be about presentation, it can be about the demo or functions demo that I'm going to showcase.
00:02:08.498 - 00:02:30.682, Speaker A: But before that, let me tell you who I am again. Abraham Engwall, head of ecosystem. What that means is that I lead the partnership at integrations. I've been in the web three industry for almost, I think four years, maybe even more. I work with a lot of validators. I love working with validators. I work with a lot of DAP developers and a lot of partners.
00:02:30.682 - 00:02:54.306, Speaker A: Wallets, bridges, you name it. Prior to that, I was a principal software engineer at Oracle. Big data engineer. Not the Oracle like chaining Oracles, but actual web two, Oracle, which is a centralized database. Space and time is a couple of my favorite things. All in one place. It's web three, decentralized and also data.
00:02:54.306 - 00:03:21.814, Speaker A: I love all three. So let's get it going. And I'm just going to start my presentation. And let's please ask your questions at the end. So let's start with what space and time is. Can you see my screen? Hopefully you're seeing it. All right, so what is space and time? Space and time is a decentralized data warehouse that basically lets smart contracts execute SQL queries.
00:03:21.814 - 00:04:11.926, Speaker A: What I mean by that is like space and time allows DAP developers and offers on chain as well as off chain data in a single platform. And you can execute SQL queries in tamper proof, decentralized and trust minimized way. So a couple of things that I want to mention, but before that, if you're already in the web three and a developer in the web three space, you already know that smart contracts a lot of limited capabilities, right? There's lack of capabilities. So it doesn't have access to off chain data, which is fixed by chain link. You can bring in price feeds and all the data that you want. You cannot put terabytes of data, it's expensive. You cannot execute a lot of aggregations, a lot of complex analytics and queries in smart contracts.
00:04:11.926 - 00:05:00.910, Speaker A: So all you can do is that you need to do it off chain. So what space and time brings into the picture with the chain link is that you can ask the questions that you cannot ask smart contracts. So what I mean by that, we index all the major blockchain data, which means that not only the smart contract specifically to yours, but we also index blocks transactions. We also index like NFT wallet balances. We index NFT transfers, token balances, you name it. And you can query on top of this big terabytes of terabytes of data. And then you can ask questions like give me all my assets across all the blockchains in polygon and avalanche in a single query.
00:05:00.910 - 00:05:45.430, Speaker A: And space and time is also transactional and analytical processing. I'm going to go in a little bit more what this means. But in general, whenever you're developing something and then developer application with a UI, you want low latency. Or you can just like for instance, you go to NFT marketplace, you want to see all the nfts that your wallet owns. So this kind of query needs to come back in a split second. Nobody wants to wait 10 seconds to get this query right. So it is an OLTP processing where you can ask questions like what is my wallet balances? And in a specific time you can ask complex queries.
00:05:45.430 - 00:06:56.718, Speaker A: So with space and time, you can ask both of the questions in a single platform. Another thing is that you can do is the familiar SQL tools. Like a lot of people know SQL, a lot of people know rest APIs. With space and time, you can just like it's a data platform and a decentralized data platform that you can easily use, execute any SQL queries and load not only the smart contract executing SQL queries, but also load terabytes and terabytes of data into this platform. So you can just load off chain data that you want, weather data, you can just like stocks, you can put game telemetry, you name it. And final thing is that, okay, this is decentralized and how am I going to make sure that this data is secure? So space and time also came up with this novel cryptography called Proof of SQL, which ensures that whatever you're executing through smart contracts and chain link the data source. Like the data sources being space and time, the data is temper proof, which means that the novel cryptography called that proof of SQL.
00:06:56.718 - 00:07:33.646, Speaker A: So it generates the proofs, ZK proofs, and ensures that the data that is ingested into data warehouse is not manipulated. And also it's temper proof. So I'm going to go into the next slide. So what space and time is accomplishing in general. So I told you guys, I'm a developer and also I was a big data engineer. So I talked to a lot of DAP developers that had kind of the similar journey, especially web two, going into the web three, space. First you just figure out what blockchain that you want your application to be on.
00:07:33.646 - 00:08:15.302, Speaker A: Then you figure out the RPC and poem provider, the full node or archive node. Then maybe you need to index some data. Then you figure out the indexing solution or you just want to manipulate the data. You write a custom ETL, you try to bring your off chain data and you try to figure out, okay, how am I going to put all this data into one place? And then also, as I mentioned, OLTP and all up, right, like analytical query or low latency queries. So you just always figure out, okay, what is my engine, what kind of data pipeline that I need to implement. So what we offer at space and time is that just don't worry about it. Let us be your data engineer.
00:08:15.302 - 00:09:15.322, Speaker A: Let us figure out all that for you. If you want to ingest off chain data, you can use Kafka connectors or rest API, you can plug in your DAP, or you can smart contract directly to space and time and then just basically remove that friction of what you need to just implement. Or am I going to just spin up postgres clusters or am I going to spin up like click house or snowflake? So it just removes that friction so that you can be onboarded into space and time easily. All right, let's go into the next slide. This is very important for me. This is one of the things that I love about space and time is that hybrid transactional analytical processing system. So normally what exai mentioned, if you want to ask a question to a database, like think that low latency, if you ask a question like, hey, give me all my Twitter followers.
00:09:15.322 - 00:10:07.262, Speaker A: It's a transactional query. It's very easy. It has to come back very quickly. But if you want to ask a question, like, give me all my Twitter followers who follows Elon Musk and liked his tweet in the last seven days about Deutsche coin also has an ENS that this wallet address has more than 100 Deutsche coin. So this question can be answered. I know that it's a lot, but this analytical query, complex query, can be asked on space and time in one single select query, and then space and time understands which query is transactional and low latency which query is analytical, and then processes it based on your needs so that you don't have to maintain two different engines for your application. All right, so I'm going to demo in a bit.
00:10:07.262 - 00:10:43.610, Speaker A: Please just bear with me. I'm almost done. So space and time is. This is the architecture. So how are we decentralized? Right? So do you already have a lot of information that are out there? There's snowflake, you know, bigquery. How is space and time difference? And then how is more powerful? Right? Where is this power coming from for the decentralization space and time? In the middle, as you can see, there's a decentralized API gateway and data warehouse clusters. So there are two layer network decentralized API, and all of these are operated by node operators.
00:10:43.610 - 00:11:45.354, Speaker A: The validator layer decentralized API gateway is consisting of the data ingestion streaming with Kafka, and also this is where you connect to Oracle's and chainlink to your smart contract. And what happens is that you ingest the data in the blockchain nodes on the left side over here, these are RPC archival nodes or full nodes that we are ingesting data in. And then the databases. This can be a game telemetry. This can be your data that is living in a server, the terabytes of data that you want to combine your blockchain with your off chain data, or better data or Twitter data. So all this data can be streamed in to space and time with Kafka. Or you can ingest data with rest API, and then a decentralized API gateway ingests the data into data warehouse clusters, replicates the data, and at the end it's stored in the ipfs for the latest replication.
00:11:45.354 - 00:12:35.120, Speaker A: As with and also the smart contract connection with the Oracles also connects through the decentralized API gateway. It executes a rest API and you have your access. You can have a JDBC connection, you can connect to Tableau, just very similar to what you're handling with the existing data warehouses. You can create analytics dashboard. I'm going to show you a very cute dashboard structure that you can create with and then you can plug into AI models and then you can extract to another databases and streaming another pipeline. Last one. All right, so this is my last slide and I'm going to go into start the application demoing later on.
00:12:35.120 - 00:13:02.498, Speaker A: So the industry use cases. There are two use cases that I want to cover today. One of them is gaming, which I'm going to show you today. It's going to be like a full end to end demo that I'm going to showcase the gaming. Basically, think about it. You're playing a game and they are game telemetry. Game telemetry, meaning that, okay, you started the game, you level up, you have it gone, you shut a person, you killed the boss.
00:13:02.498 - 00:14:07.142, Speaker A: Like all these game telemetry that lives in the gaming server and also space and timing, just all the blockchain data. So you have NFT staking information, NFT ownership and everything that you want to, I don't know, you want to give exclusive rewards to basi owners, you name it. You can just write any kind of complex analytics. What you can do is that you can ingest with the Kafka or rest API, you can ingest off chain data, this game telemetry data into space and time. And what happens is that with chaining keepers on automation, you can automate executing this data and ask questions like, hey, give me all the leaderboard in my game and I want to send them exclusive rewards and distribute the rewards. So you can easily request this data through chain link and to space and time. Space and time creates proofs and then ensures that this data is not manipulated and tamper proof and then returns tamper proof query results to smart contracts.
00:14:07.142 - 00:15:02.090, Speaker A: Now you can just like at the end let your users and the leaderboard mint nfts. So financial services, this is like a little bit more complicated. You can execute. Think that a global investment banking, they want to tokenize some securities. I don't know, there's some financial, you can grab some enterprise grade data warehouse like terabytes and terabytes of data into space and time. And at the end it can be option prices that are calculated off chain and you name it, you just can put all this financial data into space and time and terabytes of data aggregated and prepared for chainlink oracles to feed into smart contracts. You can load log files, kafka, just API inserts.
00:15:02.090 - 00:15:31.814, Speaker A: Stephen is just talking. Hi Stephen. All right, so I'm going to showcase you before I go into the demo. I want to mention how to get access. Please, just for the presentation at the end, please feel free to ask the questions. And what you can do is go to chain and Kakaton. You're going to see like there's only one readme over here just to give you some little bit of information to get you started right.
00:15:31.814 - 00:16:18.966, Speaker A: What you can do is you can go and see the supported blockchains, Ethereum, polygon avalanche and BNB chain. You can see the network access over here to access beta. So what you do over here, you provide your email, you say that you write chain in Hecaton and you're my favorite project. And then submit it and give us a couple of hours and we will get you access. Okay, so we have a separate environment for the hecaton, so feel free to. It's going to be self onboarding later on, but for now it's isolated environment for the hackathon just for you to test it out. We have bounties worth of them.
00:16:18.966 - 00:16:48.778, Speaker A: Is the best application built on space and time with chain link. Hopefully this is going to be the grand prize. It's going to be very exciting. Best partnership integration. This can be a very interesting use case that you can do with space and time and chain link. Also five k will be distributed across all the creative builds on top of space and time. And also we are going to just, we are in beta as you know, and make sure that if you just file a bug and it's going to be in the same CXT community chain in Kakaton Repo.
00:16:48.778 - 00:17:25.850, Speaker A: Go to here if you find a bug or if you want to give a feedback or new insights that we can improve and what we can do, create a new issue and then this will be considered in the bug, sorry Bunty process. All right, so I'm not going to go into demo, but I want to mention the docs again, I'm so excited to show the demo. So sorry. So you can see in the docs spacentime IO getting started. It's a very good guideline. You can start after you get the access. Create your user and just run your first query.
00:17:25.850 - 00:17:57.074, Speaker A: Follow the videos. They are very easy to follow videos that you can just run your first rest API queries and et cetera. What you can do. Also, I definitely recommend JDBC connection. It makes implementation very easy. And for this hecaton we also have two integrations with Chainlink, direct request integration as well as the functions integration. I love functions.
00:17:57.074 - 00:18:31.562, Speaker A: I'm going to showcase functions today, not the direct request, but the difference between the architecture of direct request and functions is as follows. It's very similar, I guess. So for the on chain information, you have your smart contract. You ask chaining operator contract for a query and this operator contract emits an event node operator job. This is the chain link node. Operator jobs basically executes this query on top of space and time. It's an external adapter and feeds the data back into smart contract.
00:18:31.562 - 00:19:08.410, Speaker A: Again, user smart contract. This is I believe like more centralized approach where functions run on chain link dawns, right? So what the difference is, I understand is that chain link dawn executes rest APIs like five times and then comes to consensus space. End time is decentralized, tamper proof. Chain link done is decentralized and it just feeds the correct results back to the user consumer. So today I'm going to show you the functions. All right, so let's see. Now I want to show you the actual daP.
00:19:08.410 - 00:19:40.482, Speaker A: I'm very excited about this. And then as you can see, it's pink. The reason it's pink is our background is like that I uploaded. You can customize your background as much as you want. It can be purple. And then css that you create for your dashboards if you want to or just play around with the CSS can be changed based on just whatever the background that you put, you can create these kind of sweet dashboards, beautiful dashboards. And then based on the SQL query results.
00:19:40.482 - 00:20:45.834, Speaker A: But how am I going to, okay, Brew, like just show me, how am I going to use it? I mentioned to you that we are just indexing all the blockchain data. What I mean by it, it's really all the blockchain data. So you can come and see over here, there's a transaction, there are logs, like everything that you see in the Etherscan or Polyscan or BNB scan over here in the block explorers, there's like wallet balances. And you can even ask a question like what is my wallet balance in a specific time? Not now, but you can just go back in time. And because we have all the data, you can ask SQl queries like, oh, I want to see the balance of a specific person at a specific time. And then there's logs and blocks and contract information, ERC 721, fungible and non fungible token transfers and everything, like whatever you want to create. Then I'm just going to come over here.
00:20:45.834 - 00:21:33.402, Speaker A: Sorry. All right, so the other thing I want to mention, I logged out from the other one. So we also index all the decentralized exchanges and then deFi protocols, Uniswap. You can just come over here and see it's already indexed all the Uniswap data. So if you want to ask questions from the know the transfers and everything, or if you want to play around with Aave data, which is like maybe just you want to see the lending, like who is lending, who is just using the Aave platform. So you can ask those kind of questions, or DYDX. And then you can see all the tables and the smart contracts that are just deployed by the DYDX, right.
00:21:33.402 - 00:22:23.500, Speaker A: Or any other exchanges. So you can ask a lot of queries. All right, let's execute a query, shall we? So I can just write very straightforward queries just like hey, select star from Ethereum transactions and you can just ask this question. Normally, of course this is a lot of data, but it limits to 2000 because it's a very big table and it returns in a couple of seconds. As you can see, everything related to the transactions. You can just even ask a question. And in the same SQL select statement, you can ask like maybe Avalanche and Polygon and union the stated, but you can do even better.
00:22:23.500 - 00:22:52.706, Speaker A: So I'm going to show you what I mean by it. So you can say that. Show me all Ethereum balances. Ethereum wallets with a balance greater than 100. So when you execute this command, it understood. I made a typo, but it got it. Look at that.
00:22:52.706 - 00:23:37.202, Speaker A: So it's basically we integrate it with Chat GPT. So nobody wants to run SQl, right? Like nobody wants to learn SQl. I love SQl, but you don't have to. So instead you can ask questions like show me all Ethereum wallets, show me the transactions, show me the top dexes, or just whatever the question that you want to ask based on the data model, OpenAI understands which SQl query to execute and it just runs the query result for you. And then one more thing is that there's a query visualization. What you can do is that based on the query that returns, it offers you. Like, hey, either it can be this charts, beautiful charts, or block number.
00:23:37.202 - 00:24:19.178, Speaker A: But yeah, just this is not what I want, Abraham. Like, okay, I can go in and then you can customize your chart. You can do a line chart and block number. So these are of course not for your rest API or others, but you can just see if you're just minting an NFT, you can see the weekly performance of your NFT, right? Or if you have a smart contract, you can see the transaction volume. Like you can just do all this analysis in a one single platform. So we are not only providing the rest APIs, but you can create beautiful dashboards. So I want to create this chart and beautiful chart.
00:24:19.178 - 00:24:57.658, Speaker A: All right? And then I'm going to just put this as test. You can save this chart to use it later. And then remember in the beginning I showed you guys dashboard. What you can do is you can create a new dashboard. All right? So what I'm going to do is I'm going to create a new dashboard, whatever the visualization that I have is over here. I just created this a minute ago. So you can put a header, you can create new charts and then create this beautiful, whatever the dashboard that you want for your own smart contracts or on chain or off chain data.
00:24:57.658 - 00:25:44.540, Speaker A: So I'm going to also, what you can do is that you can upload a specific image and then it will understand which css that works with this background and then create beautiful visualizations. Okay? So these are like fun, beautiful things. What else can you do? There's specific pipelines that you can set up. As I mentioned in my presentation, you can easily plug it into Kafka streams, and now you can ingest data off chain data by yourself, not by yourself. We will help you out. But you can ingest the data in and you can manipulate the data and then you can feed the data into a new table at the end. So that's one of the pipelines, right? What else can you do? I'm going to show you in a.
00:25:44.540 - 00:26:27.374, Speaker A: Okay, abrupt. What if I want to just query my own smart contract? I don't want to deal with all this big data like the logs and everything. So I have this notion page over here. So for me to help with the demo, because I have a lot of things to cover, I'm going to go and say that, hey, give me all the events and structure in my smart contract, specifically in the Ethereum. So what this smart contract utility does, I enter the smart contract, it goes and checks the etoscan. Do I have my smart contract binary interface. It checks the interface, it understands all the events.
00:26:27.374 - 00:27:13.446, Speaker A: Right? Then I'm going to submit this. This is example for Sushiswap. I just provided the sushi swap MasterChef smart contract live on Ethereum mainnet. And then it basically said that hey, these are the events included in the smart contract. And then I'm just going to send it to the indexing. So what you can do is you can index your own smart contract. How am I going to just put the data into chainlink? Remember I mentioned it's like one shot, you just plug into your DAP and you use the rest API and you also feed the data that you want.
00:27:13.446 - 00:27:51.726, Speaker A: The smart contract. All right, so I have this query that I'm executing. This data is just an example. You can execute any data you want. I'm just going to go faster. I just created this query and then what in the bottom says that hey, whatever the SQL query that you're executing and now you want to feed with chain link functions or direct request to your smart contract, the data is going to look like this. So either you can send an integer byte string and 2d array, I think it's like JSON blah.
00:27:51.726 - 00:28:28.254, Speaker A: But you need to manipulate the contract. Or if you want, out of the box, we already have smart contract examples for you so that you can just feed bytes or integer and string and easily publish your data to an existing smart contract or deploy your own new contract with the UI. All right, so I think I covered it all. We talked about AI, we talked about the ETL. We talked about pipelines and dashboards. We covered the chain link functions and direct requests. So it's time for me to do the functions and chain link demo.
00:28:28.254 - 00:29:08.582, Speaker A: What you can do with space and time and Chainlink. All right, so what I want to do is that it's very straightforward. I want to show you a dynamic NFT with space and time and chain link. I wanted to keep it very simple because with so much data, it can get very complicated. So what I mentioned is the game telemetry. What happens with the game telemetry? Game starts, you attack, you defense, you kill a king or a boss, and then you collect some items. So what I did with this game telemetry data, every time you do something, you retrieve points based on the characters.
00:29:08.582 - 00:29:37.090, Speaker A: For instance, I killed the king. I got 100 points. I got the collectible items, portion a or portion B. Very simple, right? What you're going to see is that based on my gaming performance, I want my NFT to change. So I'm a game developer. I want to create dynamic NFT based on the gamer performance. So the idea is this, everybody starts with a standard sword.
00:29:37.090 - 00:30:17.438, Speaker A: You have a sword, I have a sword. Whenever we start the game, it's simple standard sword that anybody uses, but maybe like I'm so accomplished and then my sword can be in katana or excalibur based on my performance. So everybody is going to start with the basic sword. And then based on your performance, either your NFT dynamic NFT can be katana or it can be Excalibur based on the game telemetry. So let's see how it's going to look like. So thank you mid journey for creating beautiful images. So I generated this image for basic sword.
00:30:17.438 - 00:30:48.890, Speaker A: So I created already a table and then an NFT. I minted it and I have a basic sword. I started the game and I want to just dynamically change this Nft in the opensea based on my game telemetry. So first of all, what I'm going to do is that I want to show you this right before I just go into the functions. Functions have the hard hat repository. You can go through the documentation. It's very straightforward and love functions, so easy to integrate.
00:30:48.890 - 00:31:10.558, Speaker A: But before that you need to log in. Right. So first of all I'm going to log in and then I have an access token. So in the functions demo, the code that you're going to interacting with. Right. I'm just going to clear this out. And then first of all I'm just going to set an environment variable.
00:31:10.558 - 00:32:06.770, Speaker A: So chaining also makes it very easy. Instead of m like just open up a specific environment variable table, they have this repository and then library that you can use so you can set access token so everything would be encrypted so you can enter this once and then so that you have access to space and time with your code. All right, so I'm ready. Now I want to have a game telemetry auto table. So here I'm going to showcase you like JDBc connection which I was mentioning, it's easy to integrate. We use D beaver, you can always go in, just create this connection with the hecaton space and time username and password and you just need the JDbC driver properties. You can download it from our documentation portal.
00:32:06.770 - 00:32:37.440, Speaker A: And then what I'm going to show you is creating a table, right? So I'm going to create this, I think I didn't create this table. Did I create it? Sorry. Let me connect one more time, right, so that I'm not looked out. Let's see if I created this table earlier. Oh, you're not seeing what I'm doing. All right, sorry. Why it's not working.
00:32:37.440 - 00:33:32.750, Speaker A: All right, let me see. Presentation stop screen. Sorry about that you guys, I didn't realize. Share screen share screen window debiver, can you see it now? 1 second present share screen entire screen shoot all right, so let me go through that one more time. I'm so sorry, I didn't realize. Sorry about that. I'm just like, all right, so what I did is over here, I'm just like basically this is my CXT CLI.
00:33:32.750 - 00:34:18.506, Speaker A: First of all, do you see it now? Perfect. So what I did is that I authenticate by using the CLI and it returns an access token. My apologies. All right, so I'm going to go in and then what I'm just going to do is that I set the environment variables and this envenc set I'm not going to show you, but you can just do an Mpx env and now you can see environment variables. So this is just a way to encrypt access token. So I'm just going to enter my access token. So this repository is basically like functions hard hat.
00:34:18.506 - 00:35:04.318, Speaker A: If you interacted with chaining functions, there are a couple of things that you need to pay attention over here, functions consumer, which is the smart contract that is very straightforward. I'm using ERC 721 for this demo. And then basically it has to have functions, clients and execute requests as well as the fulfill request to interact with the chaining. Chaining is done. All right, so the other thing that you need to pay attention is here is the select statement. So I have a specific game telemetry. You didn't even see the data, so I'm going to show you the data in a bit.
00:35:04.318 - 00:35:44.570, Speaker A: So the select statement and then you need to pay attention to access token over here and then the return data type. And then the last one is the Javascript code. So functions let you execute JavaScript code and it's super fun, I love that. And access token. So this access token are encrypted. So even though you just provide the access token to access space and time, chain link has a way to encrypt that. And then nobody in the blockchain can see the specific access token is encrypted in the blockchain and then it executes the data rest API on top of space and time and then returns the result with this Javascript.
00:35:44.570 - 00:36:48.282, Speaker A: All right, so I set the environment variable, I have an access token, so I want to feed the data, right. So I'm going to create the table game telemetry arter wait 1 second, did I session out? All right, let me do this one more time. Did I so source, source already exit. Perfect. I already created my table. So let's see what's in my table. All right, so my game is started and what I'm going to do is I'm going to insert some data and I have my standard sword and I'm going to check like, oh my gosh, am I still in the sword one? Yes, because I have 111 points and then I have to have more than 150 points to get into the level two and then upgrade my NFT.
00:36:48.282 - 00:37:16.210, Speaker A: So what I do is that I'm going to go in and I'm going to insert a little bit more data, right? I'm adding more data to my game. Telemetry, Archer table. So let's see, I kill the king. Let's see, how much points do I have? Can I upgrade my. Yes. Now I'm ready to upgrade my NFT so I don't have to do it as an user, end user. This can be automated by a game developer or a developer with a cron job or automation.
00:37:16.210 - 00:38:04.230, Speaker A: Right? So with the keeper's job, like as a developer, you can put this in easily and automate it. All right, so this is the CLI. So let's go to the function demo and I'm going to execute the simulation. 1 second simulation. All right, so this simulation tries to figure out, okay, I'm going to execute the rest API and this Javascript code, is it going to return correct results? Yes, I upgraded, it's returned my sword. Also what you can do is that you can also execute a rest API, right. What I want to do is I want to execute a curl command with my access token.
00:38:04.230 - 00:38:34.158, Speaker A: So I'm going to go into CXT Cli, I'm going to go take the access token. I want to see exactly the same result with executing a rest API. This can be plugged into a DAP, right? This can be just, it can be your back ends, whatever you want to. So I'm going to run this curl command. It exactly, return the same result. I execute the same query. So let's do we simulated simulation runs? Correct.
00:38:34.158 - 00:39:08.762, Speaker A: I check my rest API, I check my JDBC connection, all of the above. Okay, now it's time to feed the data to smart contract. All right, so let's do the request. What was the thing, what was the function request pulled on Mumbai? All right, there you go. All right, so what I'm doing here is function request network Mumbai. I deploy my contract on Mumbai. My contract is specifically this.
00:39:08.762 - 00:39:43.426, Speaker A: I didn't create the subscription just for this demo, but just assume that you already know what subscription is. It's basically just feeding your smart contract with link tokens and creating a subscription to feed the data into smart contract. So I'm going to request this data and the SQL query to return into smart contract. The data return, correct the sword two. And it's basically just wait for a second. It's executing the transaction. Harrison.
00:39:43.426 - 00:40:09.902, Speaker A: I have so much excitement. Do you have so much excitement or do I have so much excitement? All right, so I deployed the data and published the data to smart contract. So let's go and see my basic sward and just. I'm just going to refresh now. It's katana. I upgraded my NSD is now katana based on my game telemetry. All right, let's do add little bit more.
00:40:09.902 - 00:40:30.626, Speaker A: I want Excalibur, you guys. I need to attack more, collect more potions. Let me see my game telemetry in arter. I have more and more data. So let's see what sword I have now. I got a good portion, so I upgraded to sword three. So think that as a game developer.
00:40:30.626 - 00:40:54.990, Speaker A: Sorry about that. I am going back and forward, but it's a lot of stuff. All right, so I'm going to request one more time. You can automate this with the keepers, right? And you can just feed the smart contract. Now you have sword three. Right? And let's do the publish. I want Excalibur.
00:40:54.990 - 00:41:23.110, Speaker A: All right. Request is sent. It's fulfilled. What it does is that it's chaining dawn execute rest API, and then space and time returns. The result, chaining dawn comes to consensus, feeds the data back into smart contract, and now at the end, I have Excalibur. All right. This is my demo and I finalized.
00:41:23.110 - 00:41:59.198, Speaker A: All right. I hope it was good. All right, so I'm going to stop sharing my screen. All right, there you go. Hello. This is so interesting that I'm just, like, talking by myself. All right, do we have any questions? Is this the question? Oh, my gosh.
00:41:59.198 - 00:42:30.140, Speaker A: Sophia, are you there? Maybe like, okay, so, so much. Is this the question? Yeah. You're moreno? Yes. So this is one of the questions that we have on the chat. So I will just start seeing them then on the screen so that it's easy for you to see. Amazing. Everyone feel free to drop your questions on the chat and igu will be happy to answer to them.
00:42:30.140 - 00:43:06.886, Speaker A: High impact project like this to improve the web three ecosystem. I don't know, just use everything. It's visit time specifically. There's so many opportunities I guess in the web, three space. Prior to that, you were not able to do a lot of complex analysis like that, right? So there's like a dynamic nfts. You can do a lot of off chain, I don't know, stock options. You can bring off chain data into space and time.
00:43:06.886 - 00:44:16.362, Speaker A: You can, I don't know, collect it, just combine the data from on chain and off chain, create some very complex analytical queries and then feed the data back to smart contracts. I think if you just can just do all of that, that doesn't exist before which we are bringing it with the space and time, I think you're good because there's a lot of opportunity and a lot of developers have been struggling with bringing new use cases into smart contracts and blockchain. So now you can do it. Think about it. You can do a lot of like you can build your own Twitter, right? Decentralized Twitter. I mean there are already solutions out there, but fully decentralized. Not only the transactions going into decentralized blockchains, but you can also your analytical engine, I don't know, leaderboards or the queries that you're running don't have to be on the centralized environment.
00:44:16.362 - 00:44:57.066, Speaker A: So to biggest impact to make your application fully decentralized. All right. And another question. Do you have diagram for this specific data flow? Sure. Yeah. So if you go to the docs page, are you talking about the event data ingestion or the architecture? So you can go in and check the architecture diagram and then it will show you how the data flows into space and time. All right, another question.
00:44:57.066 - 00:45:26.500, Speaker A: How do we get better access to space and time again? So you go to spaceandime IO and let me see, let me just put it over here. Okay. Yeah, I will just send you guys very quick. 1 second. I cannot write it here. Comments private chat can you send this to everyone? Sophia, if you don't mind, I cannot send anything. Yeah, there you go.
00:45:26.500 - 00:46:08.226, Speaker A: So as you can see in the last comment, you can see the onboarding info access beta docs like everything. So that to get access to better and then chain Linkathon, chain and Kakathon is isolated environment, it is free to use. You don't have to pay the subscription. Anybody in the hecaton can use it. And if you sign up, you will see the dynamic NFT demo example with the email. Yeah, I can send you the repo of the game. Just sign up and then let's do this.
00:46:08.226 - 00:46:22.934, Speaker A: Go to discord. I will send it over there like with the public repo. Okay. All right. I also want Excalibur. Can I store my whole back end DB in space and time, including using. Yes.
00:46:22.934 - 00:47:11.134, Speaker A: Is it affordable compared to Snowflake, bigquery and all these data platforms? Yes, it's way cheaper. Yes, I know that Theo was just saying the monthly subscription fee, but again, when you think about it like a data pipeline and entire, if you're just going to store this data into Snowflake, your off chain data. Right. And it comes with five terabytes free storage, so you can ingest any data and blockchain data is there, like you're not paying for the blockchain data? Blockchain data is for everyone. So you're just using the platform to execute queries. Okay. Any other.
00:47:11.134 - 00:48:03.818, Speaker A: In the case of Europe, are you confident your transaction querying are a good question? I wish Stephen was here. Is Stephen here? I know, yes, but somebody asked this question and then the answer was yes, but I just don't know the details very well. I'm so sorry for it. But I'm happy to just follow up with our team and get you a correct answer. Is that okay? But as I know, I'm confident, but I need to get more information from our team. I'm mostly an engineer. All right, can I send arbitrary post requests from dynamic origins to space and time and use it for analysis? Yes, correct.
00:48:03.818 - 00:48:44.492, Speaker A: Yeah, you can just put any data into space and time and. Can I see the question one more time? There you go. Can send. Yes, exactly. You can just use the rest API or again, stream data and you can ingest any data into space and time and do analysis on top of it. Yes, correct. The question is, can I query real time on chain data with subscription? Yes, real time on chain data.
00:48:44.492 - 00:49:29.200, Speaker A: So we are indexing real time and then basically you can start querying, I think, 5 seconds after block finality into space and time. We are indexing all the real time data, like all the blocks, all the transactions, all the smart contract decoding and events and logs and everything. All right, any other question? And I'm so sorry that it's just such a bummer for a couple of minutes. I hope it was not like I didn't miss anything because a couple of minutes like you guys didn't have a chance to see what was going on. I realized it very late. Sorry about that. I hope it was okay.
00:49:29.200 - 00:49:52.966, Speaker A: All right, no more questions. Okay, thank you so much. Yeah, absolutely. I'm going to be in the Discord channel in the chainlink server. What is that? Space and time channel? And our team is going to be there. Ping me if you have any questions. I think the repository for the dynamic NFT is not public yet.
00:49:52.966 - 00:50:13.946, Speaker A: I'm going to make it public and send it over to discord and pin it for you guys to use it. Okay. But you can just start with the better access and go through the documentation. We will help you with some cool stuff. All right. I cannot wait for you for just seeing all the cool projects. And I'm going to be one of the judges.
00:50:13.946 - 00:50:23.274, Speaker A: And I'll see you after judging. Hopefully we will work together. Thank you, guys. Bye.
