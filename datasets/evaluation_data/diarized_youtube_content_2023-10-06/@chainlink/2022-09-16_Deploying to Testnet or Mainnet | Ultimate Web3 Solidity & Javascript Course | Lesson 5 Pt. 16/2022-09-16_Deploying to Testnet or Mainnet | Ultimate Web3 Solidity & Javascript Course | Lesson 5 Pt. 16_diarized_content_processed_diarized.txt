00:00:10.410 - 00:00:56.122, Speaker A: The last thing that we're going to do is we're going to deploy this to a testnet and interact with this on a testnet. We're going to use the Rinkbeat testnet, but be sure to use whatever recommended Testnet, the GitHub repository for this course recommends. Now, looking at our code, you might already have a good idea of how to actually make this slight change. Based off of our last section, we know that all we need is an RPCRL and a private key, and we can begin making transactions on a blockchain. So we're probably going to need a Rinkby RPCrL and a Rinkbee private key. Where can we find both of those? If you want to do everything on your own in a full, decentralized context, we could run a Rinkbee version of Geth. We could run it locally and then just connect to our geth node.
00:00:56.122 - 00:01:22.594, Speaker A: We're not going to be showing how to do this here. However, this is 100% something that you could do. Instead, we're going to use a third party RPC URL in the GitHub repo associated with this course. Go to lesson five. We can scroll down to get a link for alchemy. Alchemy has a node as a service and allows us to connect to any blockchain that they have support for. Some alternates might be quicknode, morales, or inferior.
00:01:22.594 - 00:01:51.550, Speaker A: These all have node as a service options, but we're going to work with Alchemy because it's the one that I like the best. We can go ahead and get started for free or log in or create a new account. I'm going to go ahead and sign up with our hardhat freecodecamp user and we're going to select the Ethereum blockchain ecosystem. Let's go ahead and create our first app. This is going to be. We'll call it free Codecamp hard hat. Our app name will be ethers simple storage FCC.
00:01:51.550 - 00:02:15.430, Speaker A: And the network is where we're going to choose Rinkby. But you can see in here, we can actually choose more than just rinkby. We can choose Gorilli Coven, Rinkby Robston, and L2s like Arbitrum and optimism. We're going to be using Rinkbee. So let's go ahead and create this app. We're going to choose the free plan and hit continue. We're going to skip adding payments.
00:02:15.430 - 00:03:05.730, Speaker A: If you want to tweet your referral code, feel free to tweet your referral code. We're going to skip for now and we're going to keep it at capped capacity. Since we don't have a key in here, then how did you hear about us? Go ahead and give me that shout out at Patrick and Freecodecamp and then hit let's go. Now we get to the alchemy dashboard where we can see a ton of information about our node and different ways to connect to the nodes and stuff like that. This is going to be really similar to this RPC server endpoint of Ganache, except it's going to be a connection except it's going to be a connection to a real testnet or a real mainnet. What we can do now is we can select our app that we just made and we can hit view key and we can see here we get an API key, we get an HTTP endpoint, and we also get a websocket. We're only concerned with the HTTP endpoint.
00:03:05.730 - 00:03:59.462, Speaker A: This is going to be our RPCRl that connects to Rinkbee. So what we can do now is we can copy this, we can come over to our visual studio code, and in our env we can substitute these out for their actual testnet values. So for RPCRl we're going to delete this and replace it with our Rinkbe RPCRL. And now how do we get a private key for an actual testnet that has actual rinkby on it? Well, here is where we can use our metamasks. So back in your browser, go over to your metamask, select the three dots, go to account details, export private key and this is where you can export your private key. Type in your password, and boom, you now have your private key for your account on Metamask. Now remember, please, please don't continue with a metamask that has actual money in it.
00:03:59.462 - 00:04:38.702, Speaker A: A quick way to check is by going to your networks tab and seeing if on any of the main nets or the networks with actual money in it, you see any money? I don't have any money in this, so I know I'm good to go. If you have testnet money, that's fine because that's fake money anyways. And again, most browsers have a profile mechanism where you can create a new profile for you to use. But here, now that I've copied my private key, we can come back to our visual studio code, paste the key in here. And now I have a private key that has actual rinkby in it. Awesome. And remember, if you ever get low, just come over to faucets, chain link slash rinkby, get some test eth.
00:04:38.702 - 00:05:09.534, Speaker A: I'm not a robot. We'll send the request. Now that we have our private key and our Rinkbee in here, we can now try to run this on an actual testnet. We look at our code, we see we're grabbing an RPCRL, which is going to be from our env. We're grabbing a private key, which is going to be from our env, which points to our Rinkbee metamask and our Rinkbee blockchain. So let's just add a console log under our contract deployment so that we know what address it's at. So we'll do console log.
00:05:09.534 - 00:05:33.010, Speaker A: We'll do some string interpolation. Contract address, contract address. All right, great. And now let's go ahead and run this. So we'll do node deploy JS deploying. Please wait. You'll notice this takes a lot longer because we're deploying to a testnet instead of our own fake local blockchain.
00:05:33.010 - 00:06:16.550, Speaker A: Testnets and real networks often will take a little bit longer because they need to wait for the blocks to propagate the transaction to go through, et cetera. But after a brief delay, we will indeed see that we get a contract address here and we have a current favorite number. And it's being a little slow again because we're waiting for our next transaction to go through to update the number, and boom, it looks like we've successfully updated it. Now, something that's important to know, if ever you run a command and you want to kill it, you can do control c, and that will stop it. So any command in the terminal that you want to just abort, control C is your get out of jail free card, and that will kill it. That will stop it wherever it is. So we'll use control C a lot in the future.
00:06:16.550 - 00:06:43.500, Speaker A: So now let's grab this contract address and go over to Rinkbe Etherscan and paste it in. We can see our two transactions here. We can see we have a contract creation, and we can also see we call a store function. This is awesome. We've successfully deployed a contract to the Rinkbee chain using our own code. Congratulations. This is massive.
