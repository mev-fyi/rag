00:00:03.690 - 00:00:24.806, Speaker A: Hello, everybody. Thank you for coming. The chain link functions launch. We're so excited to have you here today. My name is Lauren Halstead, chain Link Lab. Now, everybody in the crowd can have everybody on, but if you had heard about the chain link function launch today, please raise your hand. Love to hear it.
00:00:24.806 - 00:00:38.870, Speaker A: Love to hear it. All right, we have a bunch of great panelists for you today. So we're going to start it off with Patrick Collins. Patrick Collins has been working with Chainlink Labs since the very beginning on Neapi. We're so excited to have him. I'm going to turn it off to him. Hello, Patrick.
00:00:42.410 - 00:01:13.490, Speaker B: Am I working? Can you guys hear me all right? All right, cool. So I'm just doing a quick opener here. I don't have any slides. I don't have anything up here. But, yeah, as Lauren said, I've been working with the Chainlink project for quite some time now since data feeds were launched way back in the dinosaur ages of 2019. So, so long ago. And back then, data feeds used this thing called any API, and the setup was as such, you have a chainlink node that connects to a data feed, dumps that on chain.
00:01:13.490 - 00:01:57.154, Speaker B: Obviously, a single chain link node and a single data feed is a horrible thing because it is a very centralized. So what the chainlink team did is they had many chainlink nodes. Many data providers do this process. All these chainlink nodes, they're reading an API, deleting all the bad data, grabbing the good stuff, sticking it on chain, and on chain, there's a contract that would aggregate all this data, and that would be your price feed. Over time, we realized that this aggregation process on chain is incredibly expensive. You have to spend gas. If you have 30 nodes dumping on chain, that's 30 additional transactions that you need to do data.
00:01:57.154 - 00:02:29.178, Speaker B: So eventually, the data feed model shifted to OCR, which was this massive, massive breakthrough, reducing gas costs by over 90%. And this process took this data aggregation and kept it off chain. And that is the data feeds model that we know today. We have this off chain aggregation. It's called the OCR, or the off chain reporting model, and it is wonderful. So developers at many hackathons, many hackathons that I judged said, wow, this is so cool. I can get any data that I want.
00:02:29.178 - 00:03:03.174, Speaker B: I can put it on chain. This is amazing. And when they went to go and try building their own data feed, they realized the process was very time consuming and very difficult. It's why the Chainlink team does such an amazing job spinning these up and making them configurable in such a way that all this off chain reporting or excuse me, all this off chain aggregation happens, but it only really works with numerical data. You have to get everything right. There's a lot of contracts you need to do. So a lot of developers we had kind of stumped and they would go back to this, any API methodology, which was great because it's really simple, you can get any data.
00:03:03.174 - 00:03:56.530, Speaker B: However, when you go to go to production, you again need 30 nodes, you need many data providers and a lot of them would go, hey, I have this cool MVP. But they wouldn't be able to launch mainnet because the gas fees just wouldn't be sustainable. And that's how it was for quite some time. And so at all these hackathons we would have these amazing projects with these brilliant, brilliant ideas come through, oh, I'm going to do this crazy thing with this API. And then they would go to launch and it would be a little bit tricky for them. So Chainlink Labs obviously said, okay, we want to enable developers to use their unlimited creativity and this is a blocking point. We want to enable developers to take these smart contracts and allow you to do whatever you want with them because right now smart contracts still are this isolated system on chain.
00:03:56.530 - 00:04:55.018, Speaker B: There's not a lot of real world application. And something that I believe, and I know a lot of the Chainlink labs folks believe, is that smart contracts are fundamentally cool but kind of uninteresting if they can't affect our real world lives in a meaningful way. And in order to affect our lives in a meaningful way, we need to connect to the real world in a meaningful way. So Chainlink Labs looked at this problem and they said we can solve this. And that was the birth of the idea of Chainlink functions where you can have all this data aggregation off chain, you get all the benefits of a data feed. You can request an entire chain like dawn or decentralized oracle network for your data. And now you can get all your, customize all your creativity, everything that you want to do, but in a gas efficient way.
00:04:55.018 - 00:05:41.450, Speaker B: And to me this is incredibly exciting because all these brilliant ideas that all these developers have of how to change the world and use smart contracts to do so can finally come to life in a very easy interface. So I'm incredibly excited that Chainlink functions has launched. I'm incredibly excited to see what all the developers build on it. And I'm incredibly excited for you to see the rest of the panel here, who are going to be talking about it more, who are going to be showing you what it looks like. And I am beyond thrilled for the future of what, to me, seems to be the decentralized cloud. We have cloud computing in a decentralized manner, and I am beyond thrilled. So with that, I'm going to turn it over to our next speaker.
00:05:41.450 - 00:05:45.210, Speaker B: Who is our next speaker?
00:05:45.950 - 00:05:49.290, Speaker A: Our head of product at Chainlink Lab. Thanks. Patrick.
00:05:55.650 - 00:06:46.294, Speaker C: Can you hear me okay? Yeah, cool. Thank you. Thank you, Patrick. It's a real treat for me to be here today to represent the work of so many people and to drop something that is so significant, so massive, because when you look at it, it's been really this missing piece that Patrick talked about, this huge missing piece. And we believe this is going to be an amazing unlock for the whole ecosystem, for Chainlink, of course, but for all web3 ecosystem. Got it. Okay, so I'm speaking to the choir if I say that web3 is this huge opportunity.
00:06:46.294 - 00:07:30.110, Speaker C: Right. You can now write these contracts that are provably fair, that can't be shut down, that nobody can tamper with, that can carry this massive amount of value. And it's really you, the builders, who are going to drive this revolution. This is why these kinds of events are so important, because we want to empower you, we want to listen to you, we want to understand what you're trying to do. We want to make you successful. But there's a big missing piece, a big missing link, pun intended, in building web3. If you want web3 to have real world impact, there's something missing.
00:07:30.110 - 00:07:59.118, Speaker C: And that is connecting to web two APIs. We've seen what happened when we just connected smart contracts with crypto prices. The whole DFI field appeared, $7 trillion of transaction enabled on chain link last year only. That's incredible. That's mind blowing. But there's just so much more data out there. So much more data out there.
00:07:59.118 - 00:08:50.714, Speaker C: And that's just about the data. Think about all the fields that are seeing this massive breakthroughs. Think about AI. Everything is happening in AI, and it's not accessible to smart contracts because this connection does not exist. And that's a huge deal because, well, let's say there's roughly 30,000 active developers in web3 who are limited because their smart contract can't leverage the power of those web two APIs. There are 30 million developers out there, 30 million who are building amazing things as well, who are inspired by the promise of Web three, and they don't know how to get started. They don't want to reinvent the wheel.
00:08:50.714 - 00:09:29.466, Speaker C: They have the things that they're building with, they don't want to throw it away. So it's a big deal for them as well. So what is this missing link? Well, it turns out it's not exactly like you haven't been calling our attention to it. Four hackathon winners out of five have been using any API. Okay, so we got a clue there, and any API kind of worked. But to what Patrick was saying earlier, it was just a lot, a lot of work. It was single source and ultimately it just took way too much time.
00:09:29.466 - 00:10:44.186, Speaker C: And a platform is about enabling developers, giving them superpowers, making it easy for them, and that wasn't doing just that. So you've been asking us to fix it, and we've listened. And so it's my absolute pleasure to introduce chainlink function to you today. I think it's worth the classic for the first time, you're going to be able to connect in minutes your smart contract to any API you'd like, whether it's data, compute, anything. And that's why we believe this is going to be such a huge unlock for Chainlink, of course. But for the whole industry, the way this works is that we give you this platform essentially with extensive connectivity. You hit up any API you'd like, you run any kind of compute you'd like, it's fully trust minimized, so your whole app stays trust minimized.
00:10:44.186 - 00:11:49.320, Speaker C: It's self service in minutes. You don't have to think about a node or dawn ever. And it's 40 serverless, which is a model that has proven super effective in web two. All you need to do is write your JavaScript and we'll run it for you. And it's powered by the Chainlink platform. So that battle tested software, OCR two, that has secured enabled $7 trillion of value last year, that's running on the same infrastructure, same software, it's using the same node operators who are reputable, who are reliable, who are geographically distributed, and it's blockchain agnostic. And so the way this works is your smart contract makes a call to the Chainlink function smart contract and sends it to, sends it to JavaScript that it would like it to run.
00:11:49.320 - 00:12:41.020, Speaker C: Then this contract sends it to the dawn, and every node in a dawn just makes its own API call, gets results, comes to consensus with a CR two, and feeds back the result to your smart contract. But the beauty of all of this is you don't have to care about any of that. All you do is you write your JavaScript code and it runs and you get the result and you connect it to any API you'd like. And I couldn't be more thrilled, honored to be launching this with such amazing launch partners. We got devs, we got startups, we got big names. And stick around, you'll see amazing demos, you'll hear from them at the panel. And what they're doing with it is just mind blowing.
00:12:41.020 - 00:13:12.996, Speaker C: You'll hear about it from them. It's mind blowing. And this is all about what we're doing. We want to unleash your creativity. This is how ecosystem thrive. When you can give developers those superpowers and then they go figure out some crazy new idea and they go make it work. And this is what this is about, by the way, this is also for web two people, because for the first time, their web two APIs can help building those apps.
00:13:12.996 - 00:13:46.508, Speaker C: So tell your web two friends, right, tell them now you can join the web3 revolution. So what's next? What's next? Well, you can sign up for the beta. You could also go on usechainlinkfunctions.com to see the incredible idea that's already been submitted and submit yours. This is really about tinkering. Sorry, I think I'm too close to this. This is about tinkering, trying against its creativity.
00:13:46.508 - 00:14:11.530, Speaker C: I started playing with chain link functions, and I don't know if you know this about me, but I'm a bit of a big fan of. I thought, what could we do with Chainlink functions with AI? And so I decided to hit up a friend who's an AI lead at Google, Lawrence Moroney. And actually, let's hear it from him.
00:14:15.340 - 00:14:54.420, Speaker D: Hello, Chainlink friends. So when Kamal told me about Chainlink functions, I really got excited about this. And it got me to thinking about all of the interesting use cases that could be enabled when AI meets web3. So we got together and we thought AI has become really great at generative art with things like stable diffusion and web3. Developers need unique art for things such as in game assets or NFTs. So let's see if we could put these two together and make a smart contract, generate some art. So I put together a very simple application that wraps stable diffusion to generate some art if you give it a prompt and a seed, and I hooked up a smart contract to it.
00:14:54.420 - 00:15:20.696, Speaker D: So let's take a look at what that looks like. So here's a very simple front end. It's a website which has a backend of an AI image generator, and that backend exposes an API that we can call and one of the nice things, of course, is we can call it from the chain link. The first thing I'm going to have to do is connect my wallet. So I've done that and connected my wallet there. And you can see I have a metamask wallet, and we can see the details of my wallet and a few things that I ran earlier in it. So what I'm going to do next, of course, is to try and generate an image.
00:15:20.696 - 00:15:58.764, Speaker D: So I'm going to type in some text. And they said the community loves things about hackers eating burgers, and we wanted some frogs and some UFOs. So I put a prompt in with that. But I've also been doing a lot of prompt work to just do something to make it a little bit nicer, make it a little bit more interesting, and then you can have a seed value. So when you have a combination of a prompt and a seed, you'll always get the same image. So, for example, if I use this prompt and I type in the seed 1234-1234 and hit generate, then metamask is going to go off and do its thing. And we can see now it's setting up and it's asking me, do I want to confirm this transaction on the chain? And I'll say, yes, I will, I'm going to confirm that.
00:15:58.764 - 00:16:23.600, Speaker D: And now it's off and working. So we'll see in the background, it's starting to call that back end. And that back end is spinning up some GPUs and those GPUs. And we can see a contract interaction just happened. Those GPUs will start rendering my graphics on the back end. I can look at my contract, I can view it on the block explorer, for example, and polygon scan. And if I go in and I take a look at the logs, we can see that stuff is happening.
00:16:23.600 - 00:16:40.628, Speaker D: If I scroll down a little bit, we should see my prompt on the logs. There it is. I wanted a photograph. So we have the prompt happening. The back end is doing its thing. The back end is generating that image for us. It's created an ID associated with that image that we can use as a static URL for that image.
00:16:40.628 - 00:17:03.840, Speaker D: So you could maybe store that URL on the chain if you so wanted. And what's happening now is sometimes when you run this, it should take about ten to 15 seconds. Sometimes it will take a little bit longer because it's got to spin up the GPUs. But now we see that it's actually done. And it's created this image of a hacker eating a burger for us. The frog looks very concerned. We got some UFOs in the background with a beautiful bouquet effect.
00:17:03.840 - 00:17:25.800, Speaker D: And she looks more like she's about to throw the burger into her mouth. And I really love her glasses, which are merged into her head. I want a pair of glasses like that myself. So that's it. Pretty cool stuff. I love how we've been able to tie the blockchain together with a traditional web backend to be able to do some cool stuff. And now, just like that, a smart contract can leverage AI to generate art.
00:17:25.800 - 00:17:48.800, Speaker D: And I've got to say that was super easy to put together and it was also a lot of fun to do. I'm personally really blown away at the possibilities that this creates. And there's so much development happening in AI and now it's accessible to web3 developers too. I think it's going to unlock a lot of innovation for web3 developers as well as AI developers. So right back to you, Kamal.
00:17:59.140 - 00:19:06.756, Speaker C: Pretty cool, right? And obviously this is just a demo, but you can start thinking about now what happens when you can connect those smart contract with something as powerful as predictive AI or generative AI. All these incredible advances are happening in this field and other fields are now accessible to smart contracts. Okay, so we're excited to be here. Please stick around for these lightning demos and then an awesome panel where guests from AWS meta Polygon blocks goals participate in our hackathon. We have $10,000 in bounties using function. There's a deep dive on Saturday with none other than Steve Ellis, Brian Joer, who's the PM, lead on function and a demo from Google, and then just come and visit us at a chaining booth. So look, this is really a new superpower which I really believe is going to unlock so much innovation, so many new use cases.
00:19:06.756 - 00:19:46.870, Speaker C: This is really what we believe was the missing piece, the missing link. And so we're really excited to see what you're going to do with this. I've seen this in other ecosystems, I've seen this in messaging, I've seen this in AI. When things become composable like this and when developers can build on top of what other developers have done, this is really when things start really taking off. And this is why we believe this is going to be a huge chapter, new chapter for chain link, but also for web3. So can't wait to see what you're going to build and let's link the world.
00:19:54.040 - 00:20:39.332, Speaker A: Link the world. All right, now we have a few demos coming up. We have Kira Nightingale from third web, you can come up here and I'll help you set it all up. Thank you again, Kamal. Super excited. Link the world. Guys, is that working?
00:20:39.466 - 00:21:20.212, Speaker E: Is the mic on? Hello. It's working. Okay. Hi, everyone. I'm Kira and I'm a developer relations engineer at third web, and I am super excited to be showing you guys a demo of functions. So I'm going to be sort of highlighting the two main things that you can do using chainlink functions, and that makes it so, so special. So the first thing is that you can make API requests super quickly and then you can also, am I standing right in front of it? You can also then do complex computations using that returned data.
00:21:20.212 - 00:22:02.892, Speaker E: So the example that I'm going to be doing is actually a gaming example. So I'm going to be using a chess API to retrieve two player data, two people's data. So I'm going to be requesting their ratings, and then using those ratings, I am going to calculate their updated rating based on whether the player wins or loses. Now, that sounds a little bit abstract at the moment, but I'll dive into it. I just want to do two sort of housekeeping points to start with. Number one, I'm going to be ratling through this pretty quickly just because I don't have too much time. And then the second thing is, I am probably not going to be doing any live transactions.
00:22:02.892 - 00:22:42.232, Speaker E: I will show you what you will need to do, but I don't trust the demo gods. Just this is not going to happen. So the first thing that we're going to do is I would recommend that you use the third web chainlink functions. Repo. Oh, I forgot to mention, I'm also going to be using third web to deploy the smart contracts and then also interact with those smart contracts and set up a subscription. So the way that Chainlink functions worked is it's the same as VRS, so it's using the subscription method. So you have one overarching subscription to fund multiple consumer contracts.
00:22:42.232 - 00:23:22.668, Speaker E: So you can think of it as a bit like a top up card when you're traveling, where you can pay for multiple sort of journeys, only topping up one card. It's the same kind of thing. So I am going to initially just deploy the contract, but I do have a local version, Azure. I should probably zoom in a little bit. Definitely a little bit more than that. But you would need to create a local instance of my GitHub repository so that you have the contracts and all of the source code. So the way you could do that is with the command mpx third web create template and then the name of the template that you're using.
00:23:22.668 - 00:24:04.456, Speaker E: But luckily I did this earlier. So I'm going to be deploying this functions consumer contract. I'm not going to dive into the code because no one wants to see code, but essentially it just conforms to the functions interface. So it is functions compatible. And then to deploy this contract I will use the command mpx third web deploy. And what this means is it will deploy on the client side and that means that I don't have to use any private keys, I don't have to have a env, it will use your browser wallet to deploy the contract, making it super easy. We do all of the hard work and the heavy lifting for you and you don't have to worry about it.
00:24:04.456 - 00:24:42.804, Speaker E: You can just use a user interface to deploy your contract. So if I enter that command, it will detect the framework that you are using. So we support both hard hat and foundry and then it will compile your contract and then ask you which one you want to deploy. So I'm going to select functions consumer. It's really difficult to see this, I apologize. And then hopefully it will pop up a browser window where you'll be able to input the contract parameters. So you now need to input the Oracle address corresponding to the network that you are working on.
00:24:42.804 - 00:25:17.020, Speaker E: I'm going to be working on Polygon, Mumbai Testnet, but in the readme I have a list of all of the different addresses. We are going to be importing some contracts. So anything that you will need will be here. But I'm going to copy the functions Oracle network address and then I would click deploy now, but I'm not going to. And that would trigger two transactions, well kind of one transaction and then a second, which is where you sign a message and the transaction is actually free. It's gasless. So the transaction is actually relayed.
00:25:17.020 - 00:25:52.392, Speaker E: We pay for the gas fees for you, so it will add your contract to your dashboard. Now what is a dashboard? So here's one that I did earlier. This is just a way for you to interact with your contract using a front end. So we can also see that. So I'll go into this a little bit more, but you can copy the contract address because we'll be using this in a second. But now what we need to do is we need to create a subscription in order to be able to make requests to the oracle network. So to do that we need to import the functions billing registry contract.
00:25:52.392 - 00:26:28.324, Speaker E: So to do that we will just simply search any contract address that you possibly have. You can search in third web and then import that contract to your dashboard so you can interact with it. With my front end. So I have done this earlier and I would call the function so you can head to the Explorer tab. There are the read and write functions. In the write function says create subscription. So I would execute this function, then I would head over to the events tab and then I would find the event subscription created and then I would find what the subscription id is.
00:26:28.324 - 00:26:42.044, Speaker E: So in this case it's 132. Now the next thing I need to do is I need to add my recently deployed contract, my consumer contract to that subscription so that it can make requests. So I'm going to head.
00:26:42.162 - 00:26:46.892, Speaker A: Heck, we'd really appreciate it if you quiet down. So everybody's trying to listen in the front. Thank you.
00:26:47.026 - 00:27:02.752, Speaker E: Thank you. I'm then going to add my contract to that subscription. So I will enter this subscription ID and then I'll paste in. Oops. Paste in, not with the V at the front. Thank you. Paste in the consumer contract address.
00:27:02.752 - 00:27:36.264, Speaker E: I would then execute that transaction and it will have added it. Now the final piece of sort of admin that we need to do is we need to fund our subscription. So the way that we can do that is by importing the Chainlink token contract. Again, all of the addresses are in the readme. You could just search the address, add it to your dashboard, and then we are going to do a transfer and call. So the address is going to be the functions billing registry. The value is the amount of links that you want to send to your subscription.
00:27:36.264 - 00:28:19.064, Speaker E: And that is measured in joules. So it's going to be times ten to the 18, so five with 18 zeros. And then for data you need an ABI encoded version of your subscription id. Now the way to do that, I am going to just use cast, so cast ABI encode and then you need the function signature which is you int 256 and then your subscription id. And then that will give you what the ABI encoded version is. And then I would just execute this transaction and then it would successfully transfer that link to the subscription. Great.
00:28:19.064 - 00:29:05.560, Speaker E: Now I'm actually going to try and do a live request. So what I'm going to do is I'm going to head back over to my source code in function js. I'm just going to copy all of the source code. And all that this code is doing is it's making an HTTP request to get two players usernames. And then it is doing a second HTTP request to get their current rating and then it will calculate what the probability is of each one winning. And then depending on who wins it will calculate the new Elo rating. Elo rating is essentially just a method for calculating the relative skill levels of players in zero sum to player games.
00:29:05.560 - 00:29:27.612, Speaker E: So that is all that it does. So I'll just paste in the source code. You can use secrets. So if your API requires an API key then you can use secrets. But in this case I actually don't need one. That is an O button. The secrets location is just zero for inline and then number one for remote.
00:29:27.612 - 00:30:03.376, Speaker E: But I don't have it so I don't need to worry. And then the arguments. So my first argument is going to be the player, the index of the player that I want to read the rating of. So I'm going to read the first player and then whether they won or lost. So if they won that is donated with number one like a boolean, and then if they lost it's donated with a zero. So like let's say that they won and then I'm going to add the subscription ID and a gas limit. Now the only complexity here is that I need to provide a custom gas limit.
00:30:03.376 - 00:30:39.928, Speaker E: So I'm just going to show you very quickly in metamask how you can do that. And just to make sure that it goes through, I'm just going to put 500,000 just to make sure that it has enough gas to go through. And then what's happening is this JavaScript code is being sent to the Oracle network. Each node in the oracle network is going to be running my custom JavaScript. Then they will come to consensus on the result. The result will be sent back to the contract via the callback function and any other custom functionality that you want to be run alongside. That will happen.
00:30:39.928 - 00:31:18.800, Speaker E: And then the contract will then have that data. The off chain data will be now provided on chain for you to use in your projects. So you can see here that the request was sent and the request was fulfilled. And if we look there, then you can see this data here, the results. And then if I head back to the explorer tab and then head to the read functions, I can actually read the latest response. Now that doesn't really seem to mean anything, can't really see here, but it says 2625. So we have successfully calculated the updated rating.
00:31:18.800 - 00:31:59.392, Speaker E: Now this is super, super cool because we can have examples such as dynamic metadata for NFTs where the metadata updates with your rating. Now if you combined functions with automation, you could automatically update this NFT metadata. And then you can do things with these NFTs in in game, such as token gate. Certain aspects of your game as just one really cool example. So you can see that even though this doesn't look really pretty and super fancy, but it's so, so powerful. And I think I've gone a little bit over time. But thank you all so much for having me.
00:31:59.392 - 00:32:05.090, Speaker E: And I will be at the booth tomorrow and the next day if you have any questions. Thank you.
00:32:05.540 - 00:32:06.320, Speaker A: You did great.
00:32:06.390 - 00:32:06.928, Speaker E: Thank you.
00:32:07.014 - 00:32:28.250, Speaker A: All right, everybody in the back again. We just really need you guys to be quiet. I know a lot of you, too, are like Chainlink Labs team, so please quiet down the back. Next up, we have cherry from music. As many of you know, the most important thing to me in my life is music. So go for it. Thank you for having us so much.
00:32:29.360 - 00:32:30.444, Speaker C: Can you guys hear me?
00:32:30.482 - 00:32:30.972, Speaker F: Hello.
00:32:31.106 - 00:32:55.520, Speaker G: How are you guys doing tonight? Let's go. So today we are going to make music history. And let me get this plugged in right now. Cool. So first off, I'd like to say thank you, chainlink, for inviting us here. I represent music and my name for you guys that don't know me is cherry. A little bit about me.
00:32:55.520 - 00:33:23.052, Speaker G: I am from pittsburgh and I moved to LA a couple years ago. Music has been a passion my whole life. And this right here, this is leah Culver. If you guys could all give a round for leah. Thank you guys so much. She is an incredible artist and somebody that we could be using this functionality for to change the entirety of music itself in the industry. So let's start off right here.
00:33:23.052 - 00:34:15.272, Speaker G: This is like how I got into music. And as a web3 label and company, we are a whole world trying to encompass artists and give them a new outlet where they can get funds and fund themselves and take control of their music and give it to the fans, too. So right here, what we did was basically a little funnel and we took a song of mine, we segmented it up into 14 pieces, and we gave my fans this sold out in a couple of hours. And you guys can see here we have a secondary market, a bid to earn functionality, which is pretty cool. We don't have Internet. Okay, so then also, this was really cool because we wanted to integrate TikTok to this, too. So we made each piece 15 seconds long and our fans could then post it on TikTok.
00:34:15.272 - 00:34:36.230, Speaker G: And then they had that original. Oh, thank you. They had that original sound bite that we could then make a campaign with. So let's get into how functions can kind of really change the entire game right now. Okay, let's see. So let's just start with how did this all happen? In the start to this story.
00:34:38.120 - 00:34:38.676, Speaker H: Music.
00:34:38.778 - 00:35:17.904, Speaker G: Originally won the chain link grand prize in 2021 because of creating bonds. And there's a little bit of a background story to bonds. There is something known as Bowie Bonds. And what he did was he used a bond to basically buy his entire catalog, and then the royalties of that music could then pay off that bond. So you guys can read a little bit about this right here. And this was really the start of this story. And that works so well for artists that have years of a financial model to kind of give us a way to.
00:35:17.904 - 00:36:08.496, Speaker G: Okay, let's pay off this bond, but what about the emerging artists? So right now, we're just going to go over a couple of websites that we're going to be using the API with functions to now integrate into web3. So right here we have a superstar. This is Sam Smith. And these websites give us all the analytics to the songs. Then we have my song stats, which is showing, okay, I'm an emerging artist, so I might not be ready for the bonds yet, but I will be getting into how we can really change that game for emerging artists. And then we also have Leah over here, who's accumulated hundreds of millions of plays with marshmallow. If you guys are into electronic music, definitely check out her music.
00:36:08.496 - 00:37:02.272, Speaker G: So, guys, let's get into how we can take this API and bring it into a web3 land where we can really start to take control and start paying artists in a decentralized way. So what I'm going to do right now is show you guys some of the code. But what we're going to do right here is take. So right now, I have one of my songs, I'm going to comment it out, and then we're going to bring in Leah's song Fly, which has hundreds of millions of plays. Let's now show you guys really quickly what functions can do. So we're going to be taking the API of that song, of those three websites, and we're going to be bringing it in. So you guys can see here that we do have the song up here and it's showing the numbers.
00:37:02.272 - 00:38:05.364, Speaker G: So what can we do with these numbers? This is where we're going to change the game of the music industry. Here we go. What we're introducing is something called NFT notes. And the difference between notes and a bond is very important because bonds need to be paid back in a singular amount of time notes allows us to give the investors, whether it's fans or it's the label, 50% of the royalties, no matter how long it takes. So this allows us to really open up the portal for any artist to give away, for fans to connect to the artists and give them something that they can hold on to, where you can make money as a fan or a label can make money off of the streams and give a low investment option to really start to give support. So we're going to do this right now, right here, and upload one of our financial statements. I have one of my songs up right now.
00:38:05.364 - 00:38:39.170, Speaker G: So what we have here is all of my songs and you can see a couple of them are eligible. So we're going to take is my love enough? And here we go. So right now, functions is going to be bringing us the Spotify streams. This may be just problematic because I'm not connected to the Wi Fi. Let's see if we can run this through. Here we go. So we're going to upload one of my songs going to use is my love enough? And now there we have it.
00:38:39.170 - 00:39:33.052, Speaker G: We're using functions to pull the API of these song stats and we can now see the streams on YouTube and the streams on Spotify. We're going to continue here and just create a name. My love enough. So just so you guys can see what's next for this too, this is going to be chain linked into distrokid and any platform that can allow us to basically distribute our music so we can then put in is my love enough? Okay, here we go. And this is a really cool page now because we have the amount of money that we're going to be raising with this NFT note. And here we have how many sections we can split it up. So let's say we want to make this 20 sections.
00:39:33.052 - 00:40:23.292, Speaker G: We can have 20 NFTs that fans can purchase and it already shows the price. And then they're going to get a segment of 50% of those royalties as the song gains money through streaming. In this case, we're going to be just using instant liquidity, which would be in a use case, let's say a label would have the money in their liquidity pool and then they would just be able to pay this out right now. And we already have that. So we're going to be able to just do that right now and make this really easy because this is for emerging artists and there is less risk involved giving a note out. We want to really implement the promotional side of this too. So we went ahead and we looked at what kind of the algorithm would give us if we were to invest and put that note money right into TikTok.
00:40:23.292 - 00:40:55.532, Speaker G: And you guys can see here that the song would basically jump massively to like 3000 streams. And then this is cumulative, which is 9000. And this is taking in already one third of the note. And then we can add another one third into Spotify. And now you guys can see some of the growth of the song by using playlisting. So they're two very different vehicles, but both extremely necessary to get the song to the next level. And then for everyone, we're all going to win.
00:40:55.532 - 00:41:00.364, Speaker G: So here we go. We're going to continue and we're going to issue the note right now.
00:41:00.402 - 00:41:00.604, Speaker C: Okay.
00:41:00.642 - 00:41:20.832, Speaker G: We're going to connect my wallet and do this right here. Let's make sure metamask is on confirm. Cool. And I don't want to bore you guys with waiting for this to go through the transaction. So we're just going to let this go. And then I already did do this right before. So here we have on openc.
00:41:20.832 - 00:41:54.256, Speaker G: This is the NFT. And then it's pretty cool. There's a number down here that shows the streams and then. Yeah. So what is next for this all? Because this is obviously implementing web two and bringing into web3 and giving us an ability to make money off of our royalties in a system that cuts out the labels. Because I personally have had so many problems dealing with labels. And that is something Leah will speak on too, as everybody in the industry has problems between not getting their credits.
00:41:54.256 - 00:42:39.420, Speaker G: My one main mentor is literally owed three Grammy statues because the labels just decided not to put him on the credits when he put countless hours into the song. So you can imagine how frustrating this can be for artists, mix engineers, songwriters and everybody involved. So what's next? This is going to be a web3 native platform that aggregates every music song on the blockchain. And this is called music player. And I definitely would encourage you guys to all check it out up here. We have one of my songs that I created and then I actually used AI to demo it and kind of tell us what it is. You guys can't hear it because we're not connected, but it definitely has a sick drop.
00:42:39.420 - 00:42:51.250, Speaker G: Okay, cool, guys, thank you so much. I want to give 1 second to Leah and just to tell a little bit about her background and maybe how this could be beneficial to somebody like her.
00:42:52.420 - 00:42:53.744, Speaker E: I don't know if you can hear me.
00:42:53.782 - 00:43:14.232, Speaker A: Okay, I'm Leah Culver. I'm an artist in the music industry. I've had a lot of experience with the record labels. I've been screwed by the record labels, and this is so amazing. I don't know if you guys know any artists, but this is the next thing. This is how we get the rights and how we get the fans involved. And it's really beautiful.
00:43:14.232 - 00:43:15.480, Speaker A: It's really exciting.
00:43:16.620 - 00:43:21.116, Speaker G: Thank you guys so much. Appreciate it.
00:43:21.218 - 00:43:41.472, Speaker C: Thank you. So we have an awesome panel with great panelists, and we're going to be talking about connecting web3 smart contracts with web two APIs using signaling functions. So I'm going to start by asking each one of you to present them. Sure.
00:43:41.526 - 00:43:41.888, Speaker A: Thanks.
00:43:41.974 - 00:43:42.704, Speaker G: Hi, everybody.
00:43:42.822 - 00:43:56.550, Speaker I: My name is Jeff Hasselman. I am the global head of web3 at AWS. I've been there for about six years and built the business from scratch, and it's really great to be here. Looking forward to working with all the builders out there and seeing how we can support you.
00:43:57.400 - 00:44:15.580, Speaker A: Hi, everyone. GMGM or I guess, gn since it's nighttime. I'm Steph or Pillia. I am a developer relations engineer at Polygon Labs. I lead Devrel for North America and really excited to be here and also see what everyone builds with Chainlink functions over the course of this week at the hackathon.
00:44:16.240 - 00:44:32.640, Speaker H: Hey, everybody. I'm Kevin Watt from Meta. I support product marketing teams who work on business messaging products, Instagram messenger and WhatsApp. And super excited to talk to everybody about how web two and web3 converge on messaging.
00:44:34.580 - 00:44:50.570, Speaker F: Hi, everybody. My name is Amy Gashier. I'm the CEO of blockchalls. Before that, I spent 15 years of my life as a trader in investment banks and hedge funds. I'm very much looking forward and excited to see what people are building in the space.
00:44:51.180 - 00:45:09.176, Speaker C: Cool. Cool. Well, welcome. All right, so let's start with you, Jeff. So Chainlink and AWS have been working together for a long time. I believe. We had the quickstart node a couple years ago, and now we're doing something cool together with AWS data exchange.
00:45:09.176 - 00:45:11.148, Speaker C: Do you mind telling us a bit about it? Yeah.
00:45:11.234 - 00:45:48.216, Speaker I: The relationship goes way back in 2017 when Sergey was starting out, helping him get onto AWS. So it goes way back then and a few other things. So it's kind of full circle here as far as how we look at it. With the announcement with Chainlink functions and the AWS data team, we've come together to. We built a high quality data API that allows all of you to build. Oh, my God. To build together as far as it gives you the ability to reach out and, oh my God, I'm totally bombing here.
00:45:48.216 - 00:45:49.450, Speaker I: It's one of those days.
00:45:51.420 - 00:45:52.264, Speaker F: Talking all day.
00:45:52.302 - 00:45:56.536, Speaker C: Sorry. You can use AWS data now to connect it with smart contracts.
00:45:56.568 - 00:46:22.544, Speaker I: Yes, to smart contracts. And the beauty of this is when you really think about it from the smart contract perspective, the way the power of the dons and what I should say, the don and the networks behind that, this allows you to bring new quality data. You were talking earlier about web two data, different parts. So AWS data exchange has a number of pieces of data that it's out there, and we can now roll that into a web3 world. So we're bringing new developers into it. It unlocks a lot of new potential.
00:46:22.592 - 00:46:23.876, Speaker H: For a lot of builders as far.
00:46:23.898 - 00:46:28.472, Speaker I: As what they can do with that. And the beauty too, is also bringing more developers into web3.
00:46:28.606 - 00:46:38.680, Speaker C: Nice. Yeah. I mean, I would want to check out everything that's available on AWS data to come up with some new crazy ideas, what we can unlock. Cool.
00:46:38.750 - 00:46:39.624, Speaker H: For sure.
00:46:39.822 - 00:47:02.972, Speaker C: Steph. So chain link and Polygon have been working together for a long time. Polygon is often one of the first chains that chain link launches things on, and chain link function is no exception. You have worked both on web two and web3. Can you tell us how are you thinking about what chain function enables as a developer?
00:47:03.116 - 00:47:53.612, Speaker A: Yeah, so I come from a web two background. I was at actually aws before polygon labs. Out of curiosity, how many of you were at a web two company or still are? That's a lot, right? And you all have APIs that you work with every day. And most data, honestly, is not on chain, just defi stuff and anything that's been brought on for NFTs and all of that kind of stuff. But all of the real world problems that are worth solving, or a lot of them have data that comes from sources off chain. And to be able to actually bring those on chain and then do really interesting things with them or give out NFTs or reward people with tokens or maybe execute something else in another smart contract is just a huge unlock that we didn't have before this. And I love functions because it's a huge upgrade to any API.
00:47:53.612 - 00:48:48.336, Speaker A: Actually, two years ago I watched a video by Patrick Collins. I don't know if he's still here, but he was teaching how to use any API and I was just so stoked because I was like, oh, well, I can do weather stuff on chain now or something like that, which was just a small use case, but it was that first step of like, oh wow, we can take off chain data from the real world to figure things out on chain and maybe do interesting things like the raining NFTs that are controlled by the weather, or just unlocking tons of different things that weren't possible without this. So really excited about that. And at Polygon, our developers love to experiment. And so we love being one of the first chains that you support for all of your different products, whether it's like VRF or automation or now functions, because it means that our hackers get to play with all of the latest and greatest things. So if they're building games or anything on the cutting edge, they can use both Polygon and chainlink together. So that's always really exciting.
00:48:48.336 - 00:48:52.628, Speaker A: Those are some of our best hackathon projects, and they really do win a.
00:48:52.634 - 00:48:53.252, Speaker E: Lot of the time.
00:48:53.306 - 00:48:54.196, Speaker A: So it's fun to.
00:48:54.298 - 00:49:19.532, Speaker C: Nice, nice. Thank you. Cool. So, Kevin, Meta has some pretty amazing APIs out there, and I know a little bit about, and I'm thinking about Facebook, proper Instagram Messenger, WhatsApp. So you've been cooking some pretty cool stuff with chaining functions. Do you mind telling us a bit about that?
00:49:19.586 - 00:50:05.724, Speaker H: We have been cooking some pretty cool stuff with you. But first, I have to say, way back when, I was also at AWS, where Jeff was from, no joke there, but yeah, maybe just a little bit of context. I think one meta is a data company, right? Billions of people using our services every day in different ways, and messaging is no exception to that. We have hundreds of millions of businesses, like billions of people, and well over a billion interactions a day between people and businesses. And what are they trying to do? People are trying to get resolutions to problems they have. They're trying to find out about products, they're trying to buy stuff, get questions answered. And businesses are trying to reach people and ultimately serve them right.
00:50:05.724 - 00:51:23.408, Speaker H: They're trying to get appointments booked if they're small businesses or auto dealers. They're trying to sell products, whether it's socks or diamond rings. There's kind of like low consideration and consultative sales. And where we actually have built a really strong business is in facilitating that connection between people and businesses and giving them tools to build communities and own those relationships. And so I'm really excited by what the Meta and Chainlink teams have been working on together, which I think sneak preview I hope is okay, there's going to be a blog drop on Chainlink's site tomorrow to share some code and a demo of it, but it really sets up an example of how small businesses can tap into the NFT ecosystem and also tap into the power of meta and the power of Meta's APIs to do personalized and targeted NFT launches on our messaging channels and do that very natively with the help of Chainlink. So I think it's a super cool use case that just demonstrates the power of enabling marketing for, in this case small businesses and sets them up, but also demonstrates the really cool power of technology to streamline this and make it all integrated.
00:51:23.584 - 00:51:36.068, Speaker C: Yeah, I'm starting to think about building something, a smart contract on polygon, get some data from AWS Marketplace and then start sending some messages on WhatsApp.
00:51:36.164 - 00:51:36.808, Speaker H: That's right.
00:51:36.894 - 00:52:00.480, Speaker C: That's starting to form my mind. Cool. Amen. So can you tell us a bit more about blocks goals? My understanding is you're playing in the derivatives market. That is a market that's poised to be a huge market. Can you tell us about what this function enable you to do that wasn't possible for you to do for.
00:52:00.630 - 00:52:55.668, Speaker F: Absolutely. So a little bit about blockchalls. We are analytics, research and data company for crypto assets with a massive focus on derivatives. So the idea is for us, we want to build trustworthy database for crypto derivatives across the space that could be used predominantly in C five, but I am incredibly excited that now it could be used in the d five space. So that's in terms of a little bit about the company, but in terms of what everything that we've been talking about today could be deployed in the space I work on. I can tell you that in the traditional finance, some of you might not remember this, but the great financial crisis of 2008 and what caused all of it. Oddly enough, actually this, what we're talking about today, could be a solution to that in the future.
00:52:55.668 - 00:53:34.876, Speaker F: And that excites me beyond belief. The bottleneck for such a solution is how do you get, for example, derivatives data on chain in a very reliable way such that you can have a smart contract where myself and any of you, we can write options to each other, or we can take bets on anything on the market without the need of a centralized entity. And all of a sudden we got rid of all of these entities that caused the financial crisis because they are too big to fail. So that in my mind excites me tremendously and I'm very much looking forward to actually what you guys are building.
00:53:35.058 - 00:53:40.600, Speaker C: Cool. So now we have a smart contract and then it's going to get some data on AWS.
