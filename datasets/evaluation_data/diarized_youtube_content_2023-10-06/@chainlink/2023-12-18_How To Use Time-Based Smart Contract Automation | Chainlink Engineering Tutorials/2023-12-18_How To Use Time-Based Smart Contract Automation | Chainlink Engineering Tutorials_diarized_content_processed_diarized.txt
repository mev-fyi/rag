00:00:00.330 - 00:00:38.690, Speaker A: Hey, I'm Richard, one of the developer advocates here at Chainlink Labs. And today we're going to look at automation and how to create a time based automation. Now, time based automations are fantastic if you already have a contract created and you want to automate it on a timed schedule. So let's take a look at how to do that. Before we begin with the actual automation, we should take a look at a contract that we can deploy. Now, this contract is about as simple of a contract as I could come up with for something that we could automate and see it actually working. We have here is we have a basic counting contract.
00:00:38.690 - 00:00:58.922, Speaker A: On the first line of the contract, we see that we have a public un called counted. We will initialize it to zero. We have our constructor, which does nothing. And then we have a function called count, which increments counted by one. And that's all there is to this contract. We have a public variable and a function to increment that variable. So let's go ahead and get that deployed.
00:00:58.922 - 00:01:16.846, Speaker A: We'll come in here to the deploy and run tab. I will make sure my inject provider is set for my environment, and I will go ahead and click deploy. I'll confirm this transaction, and we'll wait for this contract to be deployed. All right, so we've got our contract deployed. We can see it here. We have our two functions. One will read that value counted.
00:01:16.846 - 00:01:43.270, Speaker A: It's currently zero. The other one is a function that we can call count. And if we call it, we will see that when this transaction completes, our counted value will increment by one. Our transaction has completed. Now, if we take a look at this counted value, we will see it's now one instead of zero. So if we want to automate this, how do we go about doing that? Well, the first thing we'll need to do is we'll need to go to automation chain link. We'll register a new upkeep.
00:01:43.270 - 00:02:19.254, Speaker A: We'll be selecting a time based upkeep. We'll click next. And now we'll need to enter the contract address. So we can grab that here from remix, come back in, paste in the address, click next, and it says it can't fetch our Abi. This is because we haven't verified and published this contract on Etherscan. If we don't want to do that, what we can do is go back into remix, go to our compile tab, and now at the bottom, there's a little tiny Abi button that will copy the ABI to our clipboard. The ABI is essentially a way to let other programs know how to interact with this program.
00:02:19.254 - 00:02:43.790, Speaker A: We'll paste those values in here, we'll click next and it'll say, hey, I found these functions in there. Which one do you want to call? We only have one, right? We just have that count function. So I'll say, yes, I'd like to call the count function, click next. And now we need to specify our cron expression. This is a way of providing when we want this automation to run. We have some defaults set up here. We can pick every 15 minutes.
00:02:43.790 - 00:02:59.042, Speaker A: For the sake of this tutorial, I'm going to change it down to every 1 minute. We'll click next. We need to give this a name. We'll call it time. We need to give it a starting link balance. I'll just put two in there for now. We can leave the other information as it is and register our upkeep.
00:02:59.042 - 00:03:25.406, Speaker A: So we'll do a few things here. We'll have to confirm a few transactions. First is to deploy a cron job contract. Once that is completed, we will need to request for the upkeep to be registered again. We'll confirm that transaction as well. And now we can view our upkeep. If we take a look at our upkeep, we'll see some information here, including this history which shows when our upkeep was funded, when we created it, as well as some information about the upkeep itself.
00:03:25.406 - 00:03:54.946, Speaker A: Now this upkeep won't run until 1 minute after it was created. So when we refresh this page, we can see here that in our history we have this perform upkeep. The trigger condition was met and we can see how much link it costs us and what our remaining balance is. If we back to our contract and we take a look at counted and remember we're looking at this un two, five six right here. It's currently one. If we take a look at it, it's now two. And every minute until we run out of funding in that automation, it will increment this contract.
00:03:54.946 - 00:04:10.390, Speaker A: So this is probably the simplest way to create an automation for an existing contract. You already have a contract deployed, you want to run a function within that contract on a regular interval. So thanks for watching and I'll catch you in the next one. Bye.
