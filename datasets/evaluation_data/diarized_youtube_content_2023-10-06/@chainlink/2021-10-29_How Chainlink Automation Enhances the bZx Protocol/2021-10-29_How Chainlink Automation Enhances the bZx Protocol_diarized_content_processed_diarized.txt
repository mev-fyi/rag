00:00:01.450 - 00:00:04.622, Speaker A: Chain link keepers provides the integral piece.
00:00:04.756 - 00:00:07.774, Speaker B: To any advanced contracts, but especially for.
00:00:07.812 - 00:00:11.006, Speaker A: BZX in our use cases because we.
00:00:11.028 - 00:00:13.742, Speaker B: Need a consistent upkeep of the order.
00:00:13.796 - 00:00:32.614, Speaker A: Book and obviously for liquidations, as Roman mentioned. So it's going to be integrated fairly deeply into our protocol in many different avenues. These checks occur every block, executions will happen every few blocks. This will allow for a reliable source to ensure orders that are executed in a timely manner and that the order.
00:00:32.652 - 00:00:34.360, Speaker B: Book state stays up to date.
00:00:38.090 - 00:00:56.560, Speaker A: So now let's go over the limit order architecture with chain linkeepers. So this is the architecture diagram for an execution on the chain link keeper end. The diagram shown here is a process for execution, as I've said. So the first step is a checkup keep.
00:00:57.330 - 00:01:01.422, Speaker B: This sends a transaction or call, sorry.
00:01:01.476 - 00:01:36.314, Speaker A: Not transaction, but just an off chain call to iterate through all the orders on the order book state to check them. So to run check orders, which is a call within the order book contract itself that goes through certain checks to ensure order validity. And if any of the orders are open for execution, it will return that data as a payload and chain keepers will call perform upkeep perform upkeep will call the execute order function in the order book and will either open and then run some internal checks to double check that the order is actually valid for execution. Then it will either open or close.
00:01:36.352 - 00:01:39.034, Speaker B: The position, open or close the position.
00:01:39.072 - 00:01:50.462, Speaker A: Depending on the order type, and it will pay an incentive out. This incentive will stay within the order book upkeep contract and is given to the chain link keeper job. It is converted to link and given.
00:01:50.516 - 00:01:52.750, Speaker B: So the system is self sustaining.
00:01:55.730 - 00:02:34.640, Speaker A: So let's now go over the overview of the order process. The first step of the order process is a trader places a trade on the order book. So this trader is someone, this trader is anyone who wants an order executed, so they will obviously just place on the order book. The next step of this is chain link keepers will continuously monitor the order book to check for potential executable orders. So it'll run through the whole order book state as we saw in the previous slide. And at every single order, if one of them is up for execution, the Keeper will submit a transaction that will execute the order. So it'll submit it to the execute order function.
00:02:35.650 - 00:02:38.414, Speaker B: And then the fourth step is if.
00:02:38.452 - 00:02:49.340, Speaker A: The transaction submitted by the Keeper executes order, sorry, if the keeper successfully executes order, the keeper is rewarded. So this will be paid out in link, as that's what chain link keeper jobs use.
