00:00:17.050 - 00:01:08.420, Speaker A: And we are live on YouTube. Hello. How's everybody doing? So, yeah, in this workshop, we're going to be talking about Polkadot Chainlink, some inner interoperability pieces, and basically almost a bigger piece, too, is going to be connecting chainlink to any blockchain, kind of how it works, what the ideas. And this works really well because it'll give you an idea of the architecture of how this kind of all works and how you can connect chainlink with any other blockchain. And two of our sponsors, Polkadot and Tezos, being two other blockchains. So this is a multi chain hackathon, which is really exciting and there are some big prizes there as well. So to get started, I'm going to share my screen.
00:01:08.420 - 00:01:38.250, Speaker A: Okay, great. So the layout of this workshop is going to be. Hold on. Just trying to get my YouTube chat up here. Okay. Yeah. So the layout of this workshop is going to be talking about what is Polkadot and why we want to connect as kind of the first parts.
00:01:38.250 - 00:02:13.000, Speaker A: Just giving a brief overview. We're going to have a workshop either at the end of this week or early next week. We actually haven't decided yet that's going to go even deeper on working with Polkadot and building your own substrate blockchain. But yeah, so stay tuned for that as well. We're going to go over why we should connect, how to connect any blockchain to Chainlink and then a quick demo of Chainlink and Polkadot. Is my chat working here? Yes, it is. Okay, cool.
00:02:13.000 - 00:02:46.174, Speaker A: So just to give you the brief introduction to what Polkadot is, Polkadot is a blockchain ecosystem designed around there being no one chain to rule them all. That's kind of the philosophy behind it. They believe in a world where each blockchain has its own purpose. So maybe bitcoin stays exactly as they are. It's what's called the Turing incomplete blockchain. The smart contracts are turing incomplete. They can't do a lot of things that Ethereum can.
00:02:46.174 - 00:03:36.958, Speaker A: However, this also has its advantages. So maybe they want to stay with those rules, and maybe Ethereum wants to stay with its rules. And each chain can be good for different things, and Polkadot kind of believes in that. And to go along with this, they have this main relay chain that is connected to a group of heterogeneous shards that are connected to this relay chain. Each one of these shards, or each parachain, which is one of these chains that branch off, is governed by its own set of rules and can be customized and upgraded. So if you build a blockchain and you want to be able to change the consensus protocol or you want to add some smart contract functionality or some different pieces. You can do that within the code itself.
00:03:36.958 - 00:04:25.280, Speaker A: And those all get connected back to this main relay chain, which is really cool. And so in this sense, the way that I like to think about it is that Polkadot allows for a blockchain to be connected to other blockchains, which in turn can also connect to other blockchains. And again, these are with these parachains being able to connect up. So that's kind of the super basic of it. It's more in depth than that, but some of these pieces allow for it to be really interoperable, very economic. It has really good scalability because you can keep adding these blockchains. It's really easy for blockchain innovation, which I'll get to in a second, why that's there.
00:04:25.280 - 00:05:13.402, Speaker A: And yeah, it's much easier to not have to fork because you can upgrade the code within itself. Like you writing all the rules that govern it are also part of the code that you can upgrade. And so this allows this really cool, this really powerful tool, this really powerful blockchain. So those are some of the reasons why we would want to connect. It's building this world where blockchains are connected to each other and there's no one chain to rule them all type mentality. So they're doing a lot of really cool stuff. The other bit about what I was saying about having blockchain innovation driving is they have this tool called substrate, which is basically like a ruby on rails for blockchain.
00:05:13.402 - 00:05:45.446, Speaker A: That's kind of the simplest way to kind of think about it is you can build your own blockchain shard using this framework. Building a blockchain has a lot involved, and they've kind of found that, okay, most blockchains kind of have all these main pieces, though. Let's make it module and let's allow people to add the functionality that they want. Okay, cool. You want to be able to do smart contracts. There's a palette for that. That's what they call these building blocks.
00:05:45.446 - 00:06:10.814, Speaker A: They call them pallets. There's a palette for smart contracts. There's a palette for the different consensus protocols. There's a palette for whatever you want to do. And that's how you build your blockchain almost, by stacking these pallets together. And the other cool thing is, if there isn't a palette there that you want, you can just build it. And that's actually part of how Chainlink and Polkadot are working.
00:06:10.814 - 00:06:48.202, Speaker A: So there's a Chainlink palette that you can add to your substrate blockchain to allow chainlink to be natively part of your blockchain, which is really cool and really powerful. How do I get the questions up? I can't when I'm doing share screen. Okay, cool. So, yes, that's a little bit more about Polkadot. And so why we want to connect again? So Chainlink is a blockchain agnostic technology. It's a multi chain technology. So the idea is that every, I mean, not even the idea, every blockchain on the planet.
00:06:48.202 - 00:07:48.786, Speaker A: Well, okay, not every blockchain, but every blockchain that wants to do some of these smart contracts that uses any off chain data is going to need a way to get reliable, decentralized, secure data. And a lot of them want access to the chainlink framework because the Chainlink framework is already building this network of decentralized oracles that can provide this data. So we would want to connect, and Chainlink would want to connect because it can provide this data onto these networks. And on this image we have here, there's a couple other, couple other blockchains here as well. And we have Tezos as well, who's another sponsor of this hackathon here. They're blockchains that they need access to external data to write these smart contracts, Polkadot being one as well. That's why we want to connect and that's why they would want to connect to the Chainlink framework, because they need this decentralized, reliable data to make their smart contracts work.
00:07:48.786 - 00:08:24.442, Speaker A: It's literally the same reason why Ethereum needs chainlink. These other blockchains do as well to get this data. So that's the ideology there, which from simple and a simple perspective, actually executing it is a little bit trickier. And we'll get to that in a minute. So how to connect and to learn even more about some of the tools that I'm going to be talking about, definitely want to watch a couple of the videos that we put out recently. The external adapters video is really good. Sorry, is really good.
00:08:24.442 - 00:09:01.222, Speaker A: And we're going to get into why the external adapters are so important in just a second. But also pretty much the majority of Sergey's talks that he gives are fantastic for kind of going into more detail of how this actually works and how the whole system works and how the whole system works. So if you haven't looked into that, definitely take a look, and I'm going to jump to a couple of YouTube questions here. I don't know if I can see the Zoom question. Oh, no, I can't see the zoom question, too. So a chain link palette. Interesting.
00:09:01.222 - 00:09:41.670, Speaker A: Is it a concept or can that be implemented right now? So it's actually already built and you can add your chain link palette to your substrate built blockchain. And we're going to get into a demo of that. Towards the end of the video, the demo that we're actually going to be showing is already out. It's with Jonas, who set up the integration, and it's really fantastic. And we'll get to that in a minute. So now we're going to go over how this basically works. How can chainlink be this blockchain? Agnostic technology? Right.
00:09:41.670 - 00:10:31.190, Speaker A: And this is something that's going to be really important moving forward as these other blockchains gain more traction. Ethereum has kind of been the dominant platform at the moment, but these blockchains, like Polkadot, like Tezos, as they gain adoption again, they're going to need reliable, decentralized data. So Chainlink already had the foresight to kind of see this, and the customizability of the system is fantastic. So we really only need three things to connect chainlink to any blockchain. Right. So we need an external initiator, an external adapter, and a token bridge. And before I keep going, I want to touch on this a little bit more.
00:10:31.190 - 00:11:26.070, Speaker A: This is really bleeding edge stuff. This is kind of like the latest and greatest in blockchain is doing a lot of this interoperability. Cross chain communication has been a topic for some time, and the answer is like, we don't know where it is, but now we're actually finally reaching a point where this is really possible. I went to MIT's bitcoin Expo last year, and there were a couple of talks on interoperability and cross chain communication. And the answer was like, it's at the moment, but now we're finally literally crossing this threshold. So I do want to say, and this will be on the polka dot side, too, building a smart contract is built on top of a blockchain. Building a whole blockchain itself is a little bit harder, right.
00:11:26.070 - 00:12:23.394, Speaker A: So substrates made it really easy to get spun up, but it's not going to be the same as just building a smart contract. There's a little bit more involved. So this is really bleeding edge stuff. I definitely challenge everybody here to go take a look and go check it out and go try things for yourself. But a lot of what you're going to be doing is you're going to be in uncharted waters when you're building stuff. So there's a few projects that are doing a lot of this stuff, but for the most part, it's really exciting because you get to be some of the first people who, I mean, blockchain itself is already this pioneering technology, but working on this stuff, it's even next level, right? You're taking a technology that has very few people in the world understand that's blockchain, and you're going even deeper. So I do just want to say that this is challenging stuff, but it's really fantastic.
00:12:23.394 - 00:13:11.974, Speaker A: Plus there are some fantastic prizes associated, especially with this hackathon for those of you who are bold enough to try it out. So I just wanted to say that there. So anyways, these are the three pieces that we need for Chainlink to connect to any blockchain. And this is why it's so modular and it's so customizable. And here's kind of like the image that explains how this works. So the initiators are how ChainLink listens for events and decides that it needs to go get data. So if you've listened to some of my other workshops or some of our other workshops, you'll know that the run log initiator is kind of the main job, or, excuse me, the main initiator that picks up information from the Ethereum chain.
00:13:11.974 - 00:14:16.118, Speaker A: It looks for transactions that spit out a certain job ID and a certain oracle contract address. And then the chainlink nodes are watching this, and the run log initiator says, oh, I found our job ID, let's go get that data, goes and gets the data, and then posts it back on chain with the ethx adapter, which is a core adapter of the Chainlink nodes. Now, which leads me to number two. This is why you need external adapters. External adapters are going to not only do great things for manipulating the data off chain and transforming it into whatever you want it to be, but it's also going to be what allows you to write that data back onto the chain. So you have the initiator listen for the customized initiator listen for events. The chain link node makes the request, does what it needs to do with the data, and the external adapter is what it'll use to post it back onto whatever chain, be it a substrate, a tezos or ethereum.
00:14:16.118 - 00:14:53.862, Speaker A: That's how it's going to be to get back on. And again, if there isn't an adapter for your blockchain. You can always just write an adapter, you can write an initiator and then just hook into the main chain link architecture. So those are the main pieces there. And then the third piece is really important is building a token bridge, getting the other blockchains to be able to accept the link token so that you can keep the network economically secure as well. And a couple other technical features with the link token. And we've seen a couple of blockchains already build token bridges.
00:14:53.862 - 00:15:26.210, Speaker A: This is also kind of this new cutting edge thing. But yeah, it's these three pieces that allows Chainlink to connect anywhere. If you're just spinning up kind of a test net and you want to work on the external initiators and the external adapters, that's fantastic. So that's what you need. And that's really the quick summary of how Chainlink can connect to any blockchain out there. Obviously it's more involved. And then writing the initiators and writing the adapters can be a little bit challenging.
00:15:26.210 - 00:16:13.842, Speaker A: But like I said, doing it is really cutting edge stuff. And yeah, here's just kind of like another image of the chainlink network connecting to all these blockchains and providing data. So now we're going to go into a quick demo, but before we do, maybe I should change the dimensions here. Everything for this demo can be found in this repo. So this is the chainlink Polkadot repo. It has this palette chain link. Which one of the questions in the YouTube chat was, is this a real thing or is know make believe? The code for it is right here.
00:16:13.842 - 00:16:57.146, Speaker A: So if you want to check it out, it's right me. Let me just explain the repo a little bit because there's a couple things going on. So we have the palette, the chain link palette. Here we have the substrate chain link. This is going to be just the components for running the setup of the chainlink components. So when you're going to test this out, you're going to need to have local chainlink nodes running to actually watch your substrate chain. So this folder in this repository is going to help set up your chain link nodes to be ready for the substrate.
00:16:57.146 - 00:17:34.274, Speaker A: So it'll have the external initiators, it'll have the external adapters. They'll all be in like a docker container. When you follow the instructions and you run the setup, you'll get a bunch of docker containers spun up. And while I'm on the topic external initiators, here is the repo for external initiators. Again, this is all open source. You can check all of this out and this is all the code that you need to work with it. So basically the way that it works is you'll have like a websocket URL that you'll define.
00:17:34.274 - 00:18:00.274, Speaker A: And in your blockchain or your integrations file, you'll explain. Let's even look at substrate. You'll explain basically how to read off of it. You'll explain when you should pick up events and stuff. And this is basically how it works. And again, this is really cutting edge stuff. So I super challenge everybody here.
00:18:00.274 - 00:18:24.346, Speaker A: Take a look, try to get something up, something working. Again. We're going to do a polka dot workshop either the end of this week or beginning of next week if you want to take a look at that as well. And that's going to be a substrate workout. Substrate polka dot workout workshop. And that'll show you how to get one of these substrate parachains spun up. They have some great tutorials as well.
00:18:24.346 - 00:19:09.690, Speaker A: And you can get your own really simple, own blockchain spun up in a little less than an hour, which is pretty cool because it took how many years to build bitcoin. So that's pretty cool. And they even have a demo where they show you how to build a bitcoin like blockchain, which is really cool. Back to here. Yeah, this is the palette which defines how to build everything. Then we have the substrate chain link which defines how to do all the pieces for chainlink nodes to be working. And then we have the substrate node example, which has all the code for a sample substrate node.
00:19:09.690 - 00:19:34.334, Speaker A: Does this repo create a substrate as well? It does. We're going to get to that in a second. This has all the code for spinning up the substrate node. Now, there's a couple of things to keep in mind. We'll have to install rust. There's a couple other pieces like JQ. I think this is a package of rust.
00:19:34.334 - 00:20:32.454, Speaker A: I'm not super strong with rust, but there's a couple of pieces that you're going to need to get this going. But once you do, you'll have all the pieces that you need. So I'm actually going to let Jonas go into exactly how this works and him show you exactly how to do this. One other thing to keep in mind, literally just today we added a PR to add a lock file. So if you're running into some issues, you can just pull that lock file in and run your chain with this cargo lock file, which a cargo lock file is basically like Rust, the way that Russ figures out how to do the packages. So let me go to his tutorial here. What if I do this? If you can see that.
00:20:32.454 - 00:21:07.040, Speaker A: If I do that, can you guys still see this if I'm full screen here? YouTube. Can you guys see that when I go full screen or no? YouTube? Zoom. Yeah. Okay, cool. All right, I'm going to go full screen then and let Jonas take over.
00:21:15.110 - 00:21:45.610, Speaker B: Hi, everyone. My name is Jordan Sals, and I'm an integration engineer at Chainlink. Today I'm going to demonstrate our integration with substrate, and we're going to look at how we can use Chainlink to get the ETH price written on a substrate chain. Everything that we need for this demo is included in this repository. So we are just going to want to pull that down from here. We want to run the substrate node first. We can do that by running make run chain.
00:21:45.610 - 00:22:27.290, Speaker B: This is going to compile the substrate node, which may take a while, and then it's going to start up. We know that it's running when we start seeing the blocks coming in here. The next thing we want to do is run the front end for this substrate chain. We do that by running make run front end. This is going to start up the local server so we can see everything that's going on. While that's setting up, we can run the chain link components for this demo. We do this by feeding into the substrate chain link directory from here.
00:22:27.290 - 00:23:21.594, Speaker B: All we want to do is run setup and it's going to take care of everything for us. While this is setting up, we can look at the example module that we have included in this substrate node. This module includes a function here to send a request that the chain node is going to pick up on. We see right here the parameters for this request. We have the cryptocair E, two SD URL, and we get the price here. This is sent back to our callback function, which saves this result on chain. From the UI, we can see here the chain state and we can look at the example module to get the result.
00:23:21.594 - 00:23:54.920, Speaker B: Since we haven't made any requests yet, we can create this and we'll see that it's zero. While this setup script is running, we can see that it's adding the sonal indicators to the three different chain of nodes and starting them up. We can have a quick look at one of the chain of nodes to see that setting up everything. The login for these chain link nodes are not real at Faithemail ch and the password is to change.
00:23:58.570 - 00:23:58.886, Speaker A: Here.
00:23:58.908 - 00:25:00.940, Speaker B: We can see the subscript has finished and if we go to the jobs tab we'll see a new job here. And in the definition we can see that it's using an external initiator which is our subject node, and runs it should be get parses the result, multiplies the value and then returns it back to the subset chain. At the end of the setup script it's going to tell us to thumbs, three different addresses with an amount here. So we're just going to do that quickly. These are the addresses for each of the chain nodes and these are the addresses that are going to respond back on chain. So once these are funded, we are ready to send a request. Under the clinic header here we have a button to take care of the whole request for us.
00:25:00.940 - 00:25:49.530, Speaker B: We just need to click it and it's going to send a request. And that's now included in the block. If we go back to the chain link node Gui here and head over to the runs tab, we can see a new completed job run here. We can see that it did an HTP get request and we got the response back here. It was multiplied and then sent back to the substrate chain. With this transaction hash to go back to the substrate front end we can query the result value again and we will now see that it's updated with the price that we got from the chainic node. So yeah, this concludes the demonstration on how to use chainic with substrate.
00:25:49.530 - 00:25:57.680, Speaker B: Let us know if you have any questions. Feel free to try it out yourself. And yeah, take care.
00:26:07.570 - 00:26:57.698, Speaker A: Awesome. So yeah, so that's the demo right there. You guys can't see this? Yeah, I have the chain running on my machine as well. Just going to share that real quick. What is this? So once you get. Wait, can you guys still see that sharing is pause. Bring your shared window to the front.
00:26:57.698 - 00:27:41.280, Speaker A: What does that mean? Oh, because I can't do a tab if I switch tabs. Oh, if I switch tabs it kicks me out. That kind of sucks. If I switch tabs, it doesn't let me share it anymore. That's weird. Yeah, so this will be the repo where you're going to run everything and if I switch tabs, can I just do a new share on that tab? It's really annoying, but yeah, you'll know if you're doing everything right when your substrate chain actually starts working. Hold on, I got to keep changing, adding my share.
00:27:41.280 - 00:28:24.906, Speaker A: So the front end does require yarn. So you're just going to have to do a yarn install or a yarn to pull the packages down. So I know that there's kind of a lot of information being given on this workshop here, and I see a bunch of questions popping up. So I'm going to try to address some of those now. And let me go back to. I'm just switching screens again. That's the slide anyways.
00:28:24.906 - 00:29:11.770, Speaker A: Yeah. Okay, cool. Is there any significance with XDA using ERC six seven seven, same as link? That's a question I don't know enough about, I think. Did ERC six seven had some improvements? I think if you look up, like the difference between the ERC 677 versus the ERC 20, that'll probably give you some better insight. I'm pretty sure that the ERC 677 also has the transfer and call functionality, which is a pretty big improvement that's needed actually for the chainlink node. So node operators can know how much to gas estimate or, excuse me, how much gas costs are going to be. But that's a really good question.
00:29:11.770 - 00:30:19.460, Speaker A: Somebody who knows a little bit more about the different tokens would probably be better to ask, can you speak a little more on bridges like token bridges, I'm assuming you're talking about. I can try to omni token bridge, crypto bridge, maybe I can't. This might be a better question for somebody else, but yeah, so a token bridge is basically just a way for blockchains to accept tokens from each other. I mean, that's really it in the gist. I'm not the right person to ask how they work, but if you find out, please let me know. Could you please type the password? The password is in the repo, not real at Fakeemail Ch, and the password is two chains, so it's in the repo if you need it. What if somebody does not know rust? So a lot of the substrate code and working with substrate, so this is more of a substrate question.
00:30:19.460 - 00:30:44.300, Speaker A: A lot of that code is written with rust. There are some pretty good rust tutorials out there, and rust is a really powerful language. It's a systems language. It's a really powerful language. It's good to learn if you want to build some of these substrate nodes. From my knowledge at the moment, you do need to know rust. So if you don't know rust, then you can learn.
00:30:44.300 - 00:31:26.118, Speaker A: Do you need a heavy duty machine to run all these? No, I ran this substrate on my 8GB of memory, 128GB disk space laptop. I'm running it now on my iMac. But no, you don't need a heavy duty machine to run all these it's very doable. A lot of the chain link pieces are just pretty relatively small docker images. But yeah, no, you do not need a heavy duty machine to run all these. Yes, that's right. Interesting question.
00:31:26.118 - 00:31:42.090, Speaker A: Okay. Oh, somebody posted an interesting question. RSK ETH token bridge to move ERC 20 tokens between one chain and another. There you go. I learned something new every day. Awesome. Thank you, Horatio.
00:31:42.090 - 00:32:28.102, Speaker A: So I know it's only 1230, but yeah, I'm happy to take some more questions here. I mean, that's really the gist of it. A lot of this stuff, like I said, is brand new. It's cutting edge. So doing some of this stuff is going to be really impressive, and you're kind of going to be at the forefront of running this stuff. So I definitely challenge people to do this because, again, there's some pretty cool prizes, some pretty nice prizes associated with this hackathon in particular. Plus, all these projects are ramping up more and more, but this is just kind of showing.
00:32:28.102 - 00:33:04.914, Speaker A: This is the Docker compose file for the external initiators. And I think I wanted to show this. No, that's just where I was. I wanted to show this. Yeah. Oh, I already kind of showed this, but yeah, for the external initiator, you can already see in here Tezos substrate near and a couple of other blockchains that already have external initiators built, which is really exciting. So even for your hackathon project, if there's a blockchain on here that you're like, hey, I would love to see Chainlink support for this blockchain.
00:33:04.914 - 00:33:54.786, Speaker A: You want to come in here and tackle an external initiator? That would be really cool. And you would be one of the few people on the planet who knows how to do this technology and work with this. But again, yeah, for substrate and Chainlink integration, the reason that building this kind of from the bottom is tough because you have to know a lot about how Chainlink works, a lot about how the inner working pieces of chain link works, and then a lot about how substrate works. Right. To add this palette, again, you can go through the substrate tutorials, and the tutorials are really good. I've actually been through a couple of them myself, where you can create your first blockchain in ad palettes. They're really fantastic.
00:33:54.786 - 00:35:03.510, Speaker A: You can follow along and get exactly to where you need to be. So it's a really cool place to check out and then add the challenge of building a cool, brand new, your own blockchain that can access external data with Chainlink in a decentralized fashion. When I say creativity is your only limiting factor, having kind of these tools here, just ten x, is that right? Because not only can you work with any data that you want, you can also work with any governing rules of the blockchain itself. So there's a ton of creativity that can be applied here that does come with a little bit more knowledge and a little bit more work, but it's really exciting. So why don't you tell us some more about what excites you in terms of potential? Like, how do we wire up a fire? Interesting question. But, yeah, this excites me in general. Getting the world to be more trustless, to be more secure, be more reliable, gets me really excited.
00:35:03.510 - 00:35:46.262, Speaker A: I mean, I'm excited for the day where my insurance provider is backed by a smart contract. Right? I'm excited for the day where I can go in and just know if X happens to me, I'm going to get x in return. It's just all these trustless pieces are really excited for me. I mean, everything that's happening in Defi is incredibly exciting for me. I mean, I worked at a hedge fund for two years, so anything in the financial space really gets me going. And, yeah, there's a lot that really excites me. Horatio, with another chainlink RSK integration.
00:35:46.262 - 00:36:01.066, Speaker A: MVP. Well, there you go. Awesome. I'm glad you joined. So here's a perfect example of some of those token bridges. So thank you for that. Soon integration between Chainlink and RSK.
00:36:01.066 - 00:36:18.046, Speaker A: And it's ready to use on coven. It's ready to use on coven. So if you want to test some of these token bridges out, here's one you can test out. And we can see some familiar faces here. Thomas and Jonas and Fernando as well. So this is really exciting stuff. So thank you for posting that, Horatio.
00:36:18.046 - 00:36:53.566, Speaker A: This is really cool. Do token bridges on ETH essentially make parachains with dot a bit obsolete? Oh, that's a good question. I don't know. You'd probably have to dig into a code a little bit there. I don't think it would make Dot obsolete because dot's a little bit different. It's not just for bridging tokens. It's also for making your own parachains that have their own logic to them.
00:36:53.566 - 00:37:24.070, Speaker A: So I would say probably not. Yeah, probably not at all. But that's an interesting question. That's a good question. Any other questions? And, yeah, if you have kind of a really interesting question on some of this stuff, drop it in the discord as well. Maybe some of the integration engineers who have worked on this could answer. But again, a lot of what you're going to be doing here is in uncharted waters.
00:37:24.070 - 00:38:16.026, Speaker A: And I say that in part because not to scare you, but to really challenge you and impress upon you how new this stuff is. So it's really cool. But all the fundamental pieces here, at the end of the day, this is really all you need. And then you can connect Chainlink to any blockchain. This is how it's blockchain agnostic. This is how Chainlinks is able to work with any blockchain and help every blockchain get reliable, truly secure, truly decentralized data. Can you go back to or remind us the 32nd overview of the operatings writing across chains? I'm not sure what you're talking about.
00:38:16.026 - 00:38:55.042, Speaker A: 32nd overview of operations. Are you talking about this? Maybe you're talking about this piece right here, how you need to have the external adapter to read from the chain and then the external initiator define how to read from the chain and then the. Yes, this part. Okay, cool. Yeah, so the external initiator is what reads from the chain. That's how you define. Hey, when you see x pieces of data, that's when you should pick up and start going, right? And these external initiators are going to have a websocket to a blockchain.
00:38:55.042 - 00:39:38.066, Speaker A: And this is the same thing with Ethereum. All chainlink nodes are connected to a websocket or some type of push mechanism to blockchain so that they can get the new events and read from them. Right. And so once it reads whatever metadata is needed for it to go get a node. And again, that metadata is defined in these external initiators. Whenever it reads that data, it's going to go and do whatever it needs to do as defined in the job and then it's going to post it back on chain through the external adapter. Through the external adapter, right.
00:39:38.066 - 00:40:16.682, Speaker A: And this external adapter is going to be built specific for whatever chain. So we saw in that video that the external adapter that they used was called substrate and the one for Ethereum is called ETH TX. Right. ETH transaction. So that's basically how it works in a nutshell. And at a really high level it's really simple. But getting the external initiator to be able to read the new blockchain and building external adapter to post a transaction back is a little bit more challenging but definitely doable.
00:40:16.682 - 00:40:41.000, Speaker A: And we've seen it like we just saw right there. We've already seen it for substrate. We're seeing it for more and more blockchains. So this is really an opportunity to get out and be some of the first projects to build these at a higher scale. So this is really cool stuff. Okay. We answered that question.
00:40:41.000 - 00:41:14.130, Speaker A: The demo showed. Could you share your thoughts on that chain, I. E. Hybrid chain, act smart, contract language, et cetera? I'm not sure I understand this question. Could you share your thoughts on that chain, Kadena? You're talking about Kusama. I don't think that Mo showed Kadena. Did it show Kadena? I don't think it showed Kadena.
00:41:14.130 - 00:41:45.770, Speaker A: And then even if I was totally sure what you were talking about here, I'm not sure I would be able to speak to my thoughts on that chain. But, yeah, in any case, I hope this was useful for you guys. If you want to go check out the polkadot chain link repo, I highly recommend you check it out. Like I said, it's really cutting edge stuff. And, yeah, I will see you all in the discord. Thanks. Bye.
