00:00:07.790 - 00:01:09.380, Speaker A: So what I'm going to talk about is just briefly what is data, what are we doing with chain link and how you can use it tomorrow I'm going to be talking about three ways that you can actually implement in the smart contract. So we're going to walk through an actual code tomorrow. Today I just want to make it really obvious that we do and how you can start implementing what we we have, which is blockchain data and market data. So camera data provides cryptocurrency, market data from several exchanges. We also have a bunch of details for the blockchain like transfer contract events, token price tickers, OHCB, UAP, TWAP order books, snapshot order books, and then all that stuff. We also just have several different ways of accessing that data. So if you're connecting via rest or GitHub or if you're web target, it's all the way that you traditionally do in your app today or other application.
00:01:09.380 - 00:01:50.510, Speaker A: So I just wanted to show this diagram. It makes everything very clear. If you look at us on the left, Amber data is just kind of the data API that provides market data and blockchain data via the chain linking connect. So we do this very simply. So I just want to shout out for tomorrow, 10:00 a.m. I'll be talking about contract examples. The first one is price reference contract, how you can actually access all of the price data that we have, market data and from different exchanges and full historical breadth.
00:01:50.510 - 00:02:36.430, Speaker A: I can show that in a second because there's a lot to do there, a lot of cool functionalities. Second one is going to be a gas price oracle. If you want to be providing better context for your users, gas price Oracle, which includes some normals that you're used to, maybe with the east gas station we also provide one for percentile. You can feel like, hey, if I want to just barely beat what the median is and I can provide a cheaper interaction for your users, the last one is going to be how to store multiple values. This is something that I came across when I was building things on top of chain link. It's confusing to me. So I figured maybe it's helpful advice for you guys as well if you're building contracts that need multiple data returned and then stored in your contract.
00:02:36.430 - 00:03:25.054, Speaker A: So I just want to say I'll be here for the next hour or so if you want to talk to me, talk about blockchain data that I love to talk about. We talk about market data and also just talk about chain link. I've learned a lot over the past few weeks on all the different kind of subtleties about chain link contracts and different things with chain link. So happy to talk about that as well. It'll be here. Yeah, bring code going to make some stuff happen and hopefully you walk away with your own contracts that are falling because I have a couple of other things that we can look at real quick. One is it's really easy.
00:03:25.054 - 00:04:52.220, Speaker A: If you want to use Amber data just directly, you don't have to use us via streamlink. You can actually just do a few quick steps to go to Amberdata IO. Either things if you want to use blockchain data or aggregated data. The other thing I want to show off documentation. There's a ton of documentation like, yeah, we cover market data, order book. We even have something nice where if you only know the token address within your contract, you don't have to convert between what we call the base pair full current and historical blockchains for email. They're going to watch pretty soon.
00:04:52.220 - 00:05:27.680, Speaker A: We also have stellar and XRP coming soon, so if you're interested in that, talk to me. And last thing, if you are curious, if you want to jump into it early, if you go to our Amadeus gen link testnet page, we have all the documentation here for the Java use and all that. So we'll go through that in more detail tomorrow. It should be fairly straightforward. If you have never done a chain link contract, we're going to do it. That's pretty much it. Any questions?
