00:00:10.920 - 00:00:12.350, Speaker A: Okay, ready to go?
00:00:13.360 - 00:00:31.172, Speaker B: Yep. I'll just do a quick intro. Awesome. Welcome, everyone. Yeah, really excited to have Marcus wast join us from the injective protocol team. Yeah. If you have questions throughout this, make sure to drop those into the YouTube channel and we'll be able to get those answered at the end.
00:00:31.172 - 00:00:44.548, Speaker B: We'll have a section for Q A and if anything, we have stopping points throughout. I'll make sure to drop those questions as well. Otherwise, Marcus. Yeah, really appreciate it for you joining us today, and thanks for joining.
00:00:44.724 - 00:01:40.052, Speaker A: Yeah, thank you for having me. It's great to be able to host here. And hello to everyone. I assume some people might be joining a little bit later, so I'll start slowly with who am I and what is injective, broadly? So I actually joined injective in July last year, and I used to do mostly solidity stuff, and I share also run a blog, soliditydeveloper.com. If you're interested in solidity stuff. We're not going to talk that much about solidity here, though, mostly about finance and what we're specifically doing at injective. I know finance terminology can oftentimes be overwhelming.
00:01:40.052 - 00:02:28.440, Speaker A: That's also what I felt at the beginning, but it's just because there's a lot of new terms you might have to learn. Fundamentally, though, most of the stuff is not really hard and you just have to get used to the new jargon. And I assume people here, probably most people, may not know the terminology, so don't worry, I will explain, actually, anything. I'm not going to assume people know all this stuff already. And I'll also try to make it as simple as possible to actually understand and follow. So let's get started. And what we're actually going to start with is rice and onions.
00:02:28.440 - 00:03:39.360, Speaker A: So that's how it actually also started in the finance world. So at first, the rice, it's kind of interesting to think about this, that this is like something has happened hundreds of years ago already. So what I specifically mean is something called futures. And maybe you've heard the term already. So trading futures, basically the first time this happened was already 1700 in the 1700 in Japan when people traded rice futures. And what that meant was people would lock in a specific price for rice, but then actually trade the rice at a later point in time. Back then in Japan, rice was essentially like the most popular commodity and also used as basically like a currency, and it would fluctuate in price quite a bit.
00:03:39.360 - 00:05:01.652, Speaker A: And what you could do with those kind of futures is basically you could create some kind of contract that says, okay, this is the current price of rice, but instead of selling you the rice right now, we'll lock in this price right now, but I'll deliver the rice for you six months from now. And that's basically what happened back then. And they created contracts, basically the first exchange then for futures and would store those kind of written contracts and deliver rice then at a later point for the price that was written down in the contract. And that had the advantage for both sides of this contract would benefit. Like the rice farmers would basically benefit because they could plan ahead and they knew they would definitely get this price and they wouldn't be affected by potentially the price going down. And also the buyers, they would be benefiting because they could basically lock in this price and they wouldn't be affected by prices going up. So it was basically a win win situation for both sides.
00:05:01.652 - 00:06:05.820, Speaker A: And it's the first time this kind of so called futures trading was happening in the world. So I thought that's quite fascinating to think about this already like hundreds of years ago. And yeah, since we're already talking about food, another really interesting thing that's happened was with onions. Onions trading in 1950s in Chicago, there was basically a company that sold, that bought like 90% or 98% of all the onions in Chicago. And so they basically owned 90% of all onions. And they bought also futures for those onions and they shorted the onion price. And then later, since they actually owned 98% of the onions, they flooded the market with the onions and dropped the prices and then heavily profited from their own futures.
00:06:05.820 - 00:07:02.892, Speaker A: This is like a great example for how whales manipulated the market already back then in the form of onions, which is quite interesting that this kind of stuff already happened so long ago. Obviously today in the traditional finances, stuff is like heavily regulated. So not going to be so easy to do these days. Futures are like a form of derivatives. Maybe you've heard this term also as well, derivatives, I mean, it essentially just means from the word derive, like to get something from something else. So in this sense, basically, you would get something and you would get something from the underlying price. So you would get like the futures from the underlying price of onions or the underlying price of rice.
00:07:02.892 - 00:07:59.404, Speaker A: And that's basically just what these derivatives term mean. So next time you come across it, you know what it means. And yeah, some other basic terminology. I'm not going to bore you too long with this, but some of the most important things here are like CFD contract for difference, which is basically when you create a contract. And then you decide that in the future, the person is going to pay the difference between the beginning and the end price. If it's a contract between two parties, one party is going to pay the other, depending on which direction the price moved. And then you have leverage where basically you can amplify your returns by increasing the amount of exposure that you actually get.
00:07:59.404 - 00:08:28.190, Speaker A: So, for example, you could have $100, but you get ten x. Leverage means you'd actually have $1,000 of exposure to something. So, yeah, just leveraged. And in that sense, you can do margin trading. So it's an example where you use leverage. You basically trade via leverage by providing a small percentage of the total investment as collateral. And it's also a collateral thing called the margin, basically.
00:08:28.190 - 00:09:06.600, Speaker A: And, yeah, just the two terms. So we said that, you know, this, like long and short. Long in this sense, in the margin trading would be betting on prices going up, and short would be betting on prices going down. So now let's enter, finally the crypto space, which is quite unique with perpetual swaps. Maybe you've heard of this before. Bitmax actually invented this, and it's something that only exists in the crypto space. So it's not even something that you can find in the traditional finance.
00:09:06.600 - 00:10:06.948, Speaker A: And I think it's best to go through an example. But perpetual swaps are basically like one of those contract for different CFDs that we saw before that doesn't expire, but it's peer to peer. So in the usual sense, you would trade maybe with a brokerage firm that provides you this service. And when you trade, like, the underlying price. So like rice, for example, or onion, the brokerage firm would just track the price of rice and onion and then pay you out at the end, depending on whatever the extra price is in that moment. But then you're trusting basically the centralized brokerage firm to give you the correct price, and then they also would be the ones paying you the profit if you made profit. And so that's different with the perpetual swaps.
00:10:06.948 - 00:10:54.472, Speaker A: And perpetual swaps, you actually trade directly with other traders. So it's decentralized in the sense you trade with other traders. And every time you create, like a long or short, there's an opposite position where someone else basically did the opposite, the opposite, opposing direction trade. So, for example, here we have Alice, and let's say the bitcoin price is currently $50,000. Then Alice, she can buy now exposure to one bitcoin. So she's going long on bitcoin, and she provides $5,000 as margin. And basically what that means is now she's getting a ten x leverage.
00:10:54.472 - 00:11:28.752, Speaker A: She's only providing $5,000 as margin. So like the collateral, but she's getting exposure of 50,000 bitcoin. So now you're one. Like, she does this trade, she waits for 30 days and now bitcoin goes to 100K. Now she decides, okay, that's perfect, I'm going to close my position. She's closing it. And first of all, she now gets her $5,000 back that she initially deposited plus the PNL.
00:11:28.752 - 00:12:20.740, Speaker A: So like the profit and loss, and the profit and loss in this case would basically be her one bitcoin that she bought. Basically that the profit that she made from that, which is when it went from 50,000 to 100,000. So she made 50,000 profit from that. So in total she would get back $55,000, but she made $50,000 profit. So even though she only had $5,000 in total and she only had one bitcoin, and Bitcoin went two X, she went actually like ten X on her trade. So you can see this is the power of leverage. You can make a lot of money if it goes up.
00:12:20.740 - 00:13:10.340, Speaker A: On the other hand though, you can also lose a lot of money if it goes down. And you can see now in scenario too, I actually couldn't even go that low because let's say in the next 30 days, bitcoin goes to 47K now, same as before. She gets her $55,000 back. And the profit and loss, profit and loss in this case is basically lost 3000, going from 50,000 to she's left with two K. So she lost 3000. But you can see I couldn't actually go much lower than 47K because at 44K she already would have been a negative 1000 and negative. What that means is obviously there's money lost that nobody really has right now.
00:13:10.340 - 00:14:01.720, Speaker A: Because the opposing, it's like she only provided $5,000 as margin. If the $5,000 are lost and she's actually lost more than that, well, then we have a problem. In the usual traditional senses, CFD trading, this can actually happen. And I don't know about the exact regulations in every country, but I know there are stories from people who did this and then they lost millions of dollars in a decentralized setting, though this is obviously like we have to prevent this. Like this should never happen because there's nobody to pay the money that's then left. And that's why there's something called liquidating. So whenever your margin goes too close to zero, then you just get liquidated and you lose all your money.
00:14:01.720 - 00:15:07.532, Speaker A: And you can see how this can easily happen. And yeah, this also happened to me two times I tried this, and I went and went with high leverage, and then just got liquidated after a while. So, yeah, that's the danger of this. So whenever you do this, just be aware what you're doing. And yeah, the one issue that we have now, because we're in a decentralized setting and people are trading against each other, and there's no brokerage firm that determines the underlying assets value, contract prices, and the actual price, they don't necessarily have to be in line with each other. People could trade these kind of perpetual swaps, futures at any price that they want. In a normal setting, especially in the world of crypto, people are betting on the price going up, so they all want to go long.
00:15:07.532 - 00:16:00.696, Speaker A: So there's no real incentive to go short. So there needs to be some kind of way to incentivize people also going short, because otherwise the prices of the futures, they would just go to infinite, and they have nothing to do with the underlying asset value anymore because they just trade it at whatever price they want and nobody wants to go short. So that's where something like the funding rate comes into play, and was a new invention for these kind of perpetual swaps. And it's quite fascinating. So the way this works on a high level, it's very simple. You basically keep track of the contract prices, and you compare them to the actual underlying assets value. And if the contract prices are above the underlying, you basically make all the longs pay the shorts.
00:16:00.696 - 00:17:03.676, Speaker A: And if the contract prices are below the underlying short, pay the longs. So usually you'd have the contract prices be above the underlying, and then you'd have longs paying the shorts. And here's like an example, and Bitmax, the ones who invented these kind of swaps, you calculate the funding rate. So first of all, you have an interest rate, which is basically like the result of bow and lending rates. Because if you think about it, if you're in this decentralized setting, you always are trading one asset and you're receiving another asset. So for example, when you have, you always have an underlying base currency. So, for example, you could have a pair of bitcoin and USDT, as we had an example before, then one side would be borrowing BTC and lending USD, and the other side would do the opposite.
00:17:03.676 - 00:17:41.292, Speaker A: And depending on the borrower, lending rates that are defined per the market, you have a result, final interest rate. And then on top you have the premium index, which is like basically the price difference between, they call it the impact price and the underlying. And what impact price means is basically they use 0.2 bitcoin and fill the complete ask side and the complete bit side. And then basically the prices that you would get when filling 0.2 bitcoins on both sides. That's what they call the impact price.
00:17:41.292 - 00:18:30.408, Speaker A: So you can think of it as replication or like an analysis of the order book. So if you have orders that are very low in quantity, they may not affect this too much. That's kind of the idea. And yeah, I mean, fundamentally, funding rates all work in a similar way like this. Somewhat the most extreme other way is that at this point in time, there are several exchanges, centralized exchanges, that offer this kind of service. And for example, another one would be ftx, but there's also a few other ones. Most of them follow somewhat the Bitmax style.
00:18:30.408 - 00:19:35.024, Speaker A: FDX has like a very different approach. And what they do is they calculate t wop, like the time weighted average price of the underlying price and the index price for every single trade that actually happens. So, yeah, basically you can think of it as every trade that happens, they calculate the diff between the two and do the time weighted average price. So the higher the amount of the underlying of the contract, the higher the quantity is, the more this would be impacting the result. And then they basically calculate this diff, time weighted average price diff and would apply this funding rate once per hour. That's why it's divided by 24 at the end here. And you can see here an example of our exchange where we actually had this at this point.
00:19:35.024 - 00:20:36.500, Speaker A: Like an example, it's a very low funding rate of 0.3%. Usually these funding rates are relatively low, but I mean, it all depends on the exact implementation. Fundamentally, they all just try to bring back the contract prices to the underlying price. The higher the funding rate, the more incentive there is for the prices to go back to the underlying price, and the lower, the less of incentive there is. And in our implementation, we actually use a combination of the FTX model and Bitmax model. Yeah, so, I mean, don't know if there'd be a good time if somebody has some questions for this, or we can do the questions at the end. Actually, I'll keep an eye open if questions are coming in.
00:20:36.650 - 00:20:56.748, Speaker B: It doesn't look like there's any questions now, but this is great. I don't think there's a solid video out there on the Internet that kind of breaks down. I feel like I just went through a four year university class of financial concepts. So I'm definitely going to be sharing this video with some of my friends when I'm trying to talk them through some of these defi concepts. So I think this is a great way to go about it.
00:20:56.914 - 00:21:25.304, Speaker A: Yeah, it's also, like, oftentimes unnecessarily complicated, I find online. Yeah, I agree. I had the same issue. Now we're going to go into Cosmos SDK a little bit. It's also for people who are participating in the hackathon, interesting. That are working on the injective tasks. So Cosmos SDK.
00:21:25.304 - 00:22:08.640, Speaker A: Cosmos is its own blockchain, but they also actually have a Cosmos SDK, like a framework for building your own blockchain. And it doesn't even have to do anything with cosmos itself. You can build completely your own blockchain. And what's particularly interesting about Cosmos SDK and DeFi is that they have this BFT consensus algorithm. And what's interesting about this is it's using a fixed amount of validators. And those validators, they do this mechanism here with a new round proposal, pre vote, and then pre commit. And then commit.
00:22:08.640 - 00:22:59.940, Speaker A: But once they actually reach the state of commit, then this is like an instant finality. So what that means is you don't have any forks in the blockchain. And that's particularly interesting for finance blockchains like injective, because you want to have certainty if a trade happened or not. In chains like Ethereum, you always have just probabilistic finality. So you have to wait long enough for the probability that a block is included is high enough for you. Like, enough confirmations have happened. To be sure this block is really in there, while here, all you need to do is wait for the actual commit part, and then you know, okay, this is like a set and done.
00:22:59.940 - 00:23:45.712, Speaker A: This is instant finality. So this is extremely cool for a defi blockchain. And this makes particularly sense for us to use Cosmos SDK to develop our chain. So Cosmos SDK has like an ABCI like, application blockchain interface. And that's basically the part that communicates between the Cosmos SDK itself and tenement. So tenement would be like the consensus algorithm from before that commits and actually does this consensus stuff. And in the ABCI, you would have different messages that you can send.
00:23:45.712 - 00:24:29.072, Speaker A: So, like, check TX deliver TX commit. And when you commit, like, this is the commit here that we had before. If you commit, then the stuff would actually be written to the disk and would be persisted and the transaction then are considered final and can't be changed. And then you would replay the transactions via check TX because maybe some of the transactions now would become invalid because of the change that happened in the block. And you'd also discard, that's something called transient store. You would discard that. I'll talk about that in a bit.
00:24:29.072 - 00:25:17.708, Speaker A: And you have a concept of begin and end block, which is particularly interesting because there's no concept of gas in this sense, because it's basically the nodes, like part of the consensus in a way, running code that basically runs at the beginning of every block and at the end of every block. And also think about it. Cosmos SDK itself is written and go. And you can write really performance scalable code with this. You don't have to run stuff in the eVM, so an extra abstraction so you can quite efficiently run code here. And that's actually what we're doing as well in an injective. And I'll give you an example.
00:25:17.708 - 00:26:03.180, Speaker A: We have a pretty cool concept that we're doing in the end blocker, which also shows you the power of the end blocker or begin blocker. But yeah, I'll talk about that a little bit later as an example. Then we have the app components itself. You have the debase app, which is just like the main app that brings everything together. You have a multistore, you have some encoding, you have module keepers and module managers. I'll talk about those now on the next slides. Yeah, the base app, basically bringing everything together, including the messages and the consensus.
00:26:03.180 - 00:26:47.080, Speaker A: And the multi store would be a key value store. That is where you have one time the persistent store and you have the transient store and the persistent store. It's an Iavl store. So it's a self balancing binary tree. And it allows you to very efficiently obtain subset of the data that you need, depending on the prefix, the prefix of your keys. So it allows for very efficient retrieval of data that's stored on the disk. And you also have a transient store that you only have for one block and it's never stored permanently.
00:26:47.080 - 00:28:01.970, Speaker A: So that's quite useful as well. We actually also show you how we use an example of how we use the transient store, because not everything that you want, you actually need to store forever. You may have some things that you only need to store in one block. Then the keepers, you have keepers that basically are the gatekeepers for the store that we saw before for the data and you had built like certain abstraction levels here. So like functions that basically return data from the store, you can define different functions that return different data depending on the use case that you have. And then you have the module manager, which is like the heart of usually the heart of your application where you actually do most of the logic and you would implement, well, I mean you can implement multiple modules. So like every module would have its own keeper and manager, and the manager would basically talk to the keeper to get the data that it needs and then do certain things depending on this data.
00:28:01.970 - 00:28:55.664, Speaker A: And yeah, then separately you also have to begin an end blocker. That now brings me to injective itself. So we're basically a fully decentralized exchange for those kind of perpetual swaps. I mean more generally you can also think of it as like a financial chain in general, but with focus on those kind of perpetual swaps. And even though like what we discussed before with things like Bitmax, those are decentralized in the sense that whenever you go into a trade of a long, for example, you would have an opposing side that goes into short. And in that sense it's decentralized. But not everything is decentralized because you still have like a centralized exchange.
00:28:55.664 - 00:29:45.312, Speaker A: The order book itself is completely centralized. I mean the interface, the UI is centralized. There are many centralized components here and you have to trust Bitmax basically. And injective, that's not the case anymore. Basically anybody could be hosting or even building their own front end and the order book itself is decentralized from start to end. There's no centralized component including the oracle with something like Chainlink. So where you would get the price, in this sense the oracle would be used to get the price of the underlying.
00:29:45.312 - 00:30:50.740, Speaker A: And as long as you have an oracle, you can basically trade anything you can imagine. And that's also what community owned permissionless censorship resistant implies is you can create any market you can imagine as long as you have some kind of price for an underlying asset. Your imagination is the only limiting factor here for what there's possible to create. I mean you can create all kinds of interesting things. You could create markets for gas prices or like blockchain parameters and they could have some useful use cases. Actually, you could basically reduce your risk of gas prices by buying these kind of futures on gas prices. So I mean really there's an endless amount of things you can imagine and anyone can create a market on injective.
00:30:50.740 - 00:31:38.360, Speaker A: Obviously there are some kind of restrictions on what exactly is possible, and it's like all community driven with governance. So yeah, that's the big advantage here. The main component here is the injective chain itself that you see here and on the cosmos domain. And this is really where most of the things are happening that I was talking about. We have an abstraction layer that's basically just like for the front end to have better access. It doesn't talk directly to the chain. That's what talks to a separate API.
00:31:38.360 - 00:32:33.788, Speaker A: And also, of course, we have a bridge that's at the beginning, most importantly for Ethereum. So you can bridge to Ethereum, any ERC 20 that you want. And of course also then the cosmos has this concept of an IBC. So inter blockchain communicator where it's basically also a bridge where you can trade between, which, I mean, obviously Ethereum at this point is the more important one since it's the most used blockchain. But you could imagine that also the IBC later on becomes like a really important aspect. And now I'll give you an example I was talking about, I'll give you an example of how we use the end blocker. And this example would be this batch auction model.
00:32:33.788 - 00:33:15.736, Speaker A: So I'm not going to go too much into detail about this, but this is a very interesting blog post here if you want to know the exact details about this. But I'll give you the high level description. So basically we have a model that's an auction model that's preventing front running. And the way this works is you basically, in one block, you collect all the orders that happen in one block. You store them in the transient store first. So it's not permanent yet. Right.
00:33:15.736 - 00:34:14.060, Speaker A: And then in the end blocker, the end blocker doesn't have any restrictions on what you can do. You could in theory write code that runs for 2 hours. In theory, obviously, practically you don't want to do that, but in theory you can do whatever you want. And what we basically do is we collect all the orders in one block. And in the normal case, this would be case one, you just have the people buying and the people selling. And usually there's like the bid ask spread, and there's some difference between bid and ask. And then what that means is you basically, you can't match any orders because there's nobody that's willing to pay a price that's actually acceptable for both parties.
00:34:14.060 - 00:35:02.730, Speaker A: But sometimes you'll have the case where, for example, the asks, they exceed a bit. And so this diagram is maybe a little bit difficult to understand. So I was definitely also confused by this myself. But if you understand what it actually means, it's very simple. So yeah, I tried to explain it, but just remember that this is possibly a little bit confusing, but it's only confusing because of the way how to interpret what this quantity means here. So I'll give it a try. It's for some reason hard to explain, even though it's really simple.
00:35:02.730 - 00:35:49.908, Speaker A: So this price quantity graph here, basically don't think of these squares as like two orders. That's what always confuses people, especially if you then look at the result here. This is not two orders with two quantity. What this means here is at this price level, we have one ask that is at this, we have one ask that's at this price level here. And then we go to the left here. And at all those price levels, this is here price. We have here quantity.
00:35:49.908 - 00:36:29.044, Speaker A: And you see, we go here, it's all different price levels here if we're changing, but the quantity doesn't change. So what that means is we have no new orders coming in at those price levels. We always have at this price level here, we have one quantity. And what that means is we have one quantity at this price or higher. At this price level. We have two quantity at this price or higher, and this or higher. What that means is we have one at this price here.
00:36:29.044 - 00:37:12.768, Speaker A: We have one order at this price and one order at this price. And so this is basically the aggregate quantities, if you look at the graph. So what that means is we have now one order that actually exceeds and goes into the bids. And that means we can do some matching. So we basically can now match two orders. And we would match those orders here at what price? That's actually a good question because there's no clear correct answer. Or in other words, there's actually an infinite amount of correct answers.
00:37:12.768 - 00:38:02.464, Speaker A: Because you could basically, I mean, if we think about, okay, maybe I should explain. Those are limit orders here. This one here says, I want to buy one quantity at a maximum price of this. And this sell order here would mean I want to sell one quantity at a minimum price of this. So if we don't, we have to accept those rules. Those are the conditions set by the trader. And if we have this spread that goes this deep into it, any price between here to here would satisfy those conditions.
00:38:02.464 - 00:38:59.190, Speaker A: So we could choose a price that's anywhere in between here. And what we actually did is we take into consideration the weighted prices of the limit orders, the volume weighted prices of the limit orders. I mean, the easiest way would just be to take the middle. Right. But slightly fairer is to take into consideration the volume weighted prices of all the limit orders and then go somewhere that's somewhere in between here, because you could also go just in the middle. Honestly, this is in some cases, that's good enough, but slightly fairer is to actually take into consideration. I mean, this is only the maximum and the minimum you would get here.
00:38:59.190 - 00:39:50.390, Speaker A: In this example, it's just one order, but could be hundreds of orders, in theory, that are overlapping. And then it's fairer to actually see in which direction there's a higher overlap. And, yeah, I mean, case three is basically just the other way around, reversed, where you have bids exceeding and to ask. And then you also could choose a price that's in this range. And the advantage then of basically you choose one price, I mean, one uniform price that is then chosen for all orders. So I'll let you think about what that means for a second. If you choose one price for one order, it basically means no front running because everybody just gets the same price.
00:39:50.390 - 00:41:01.372, Speaker A: And I mean, that's ultimately pretty cool and what we want. And that means it doesn't matter how quick you send your transactions or like in uniswap, where you have people exactly trying to time to be in the same block below a specific transaction to absolutely crazy things happening to be exactly at the right spot. And here everybody just gets the same fair, uniform price. And lastly, we have case four, where actually both sides go into each other. In that case, it's actually quite easy to think about what the price is, because in this case, you have to choose the middle price because only the middle price would not violate duzel. And if we look at the results after the order book, basically what you see is we're matching one order, which are basically the row here with this one order. So again, don't think of this as like 123456 order.
00:41:01.372 - 00:42:04.016, Speaker A: Think of this as one order at this price level. So it's basically like Tetris. We're moving the lowest row, we're moving the lowest row, we're removing the lowest row. And, yeah, lastly, the last aspect is our auction model, both auctions, but we're auctioning off in our exchange, all the transaction fees or trading fees that happen. All the fees that are accumulated within a given time frame, maybe two weeks are collected. And those fees could be an arbitrary amount of tokens because anybody can create a market. So those fees could be really anything, right? And after this time period of, let's say, two weeks, those fees are then auctioned off.
00:42:04.016 - 00:42:36.204, Speaker A: And you would pay INJ in the auction, and the person who bids the most inj would get all of those fees transferred to him. And the InJ that's used for the auction. What's pretty cool here is this inj is actually burned. So in a way, this is like a deflationary model. And I use this image here. It's like a meme from Justin, if you know him. He did this for Ethereum, but it perfectly basically fits what we're doing as well.
00:42:36.204 - 00:43:38.444, Speaker A: And bitcoin is. Bitcoin is considered sound money because it has a cap supply of 21 million and, well, inj on Ethereum as well after EIP 1559. But INJ as well is basically ultrasound money because it's a deflationary model. With one side note, if the fee burn is greater than the poS, you can stake inj and get new minted inj. But if the amount of, basically, if the trading fees that are accumulated in a given time period is higher than the pos issuance, it would actually be a deflationary model. So you can earn staking rewards, but the fees are actually burned, which is pretty interesting. And, yeah, lastly, I want to say we are hiring.
00:43:38.444 - 00:44:35.312, Speaker A: We're always looking for people. And so if you're working right now in the hackathon on InJ, perfect way to get to us. Or even if not, just feel free to reach out to us if you're interested in this kind of stuff. And this is definitely, I think, the future that we need. I mean, think about the Gamestop disaster that we mean. I assume most people know what happened here with GameStop, where the GameStop was mooning, was increasing in price like crazy, and then one day, the buy button was just disabled by several exchanges and, yeah, I mean, who knows what exactly happened. There's a lot of conspiracy theories around, and it's all not very transparent at all.
00:44:35.312 - 00:45:03.130, Speaker A: But you know what? Decentralized exchange is exactly the solution for this. So, yeah, definitely, if you're interested in this, I think we're only at the beginning of a very new world of finance. Honestly, this is very exciting times. All right. Yeah. If there's any questions, now would be a good time.
00:45:03.580 - 00:45:43.296, Speaker B: Awesome. Yeah. Thanks a lot, Marcus. I couldn't agree more. I was talking with some friends over the weekend, and it's just fascinating one how early we are. They're not fully involved as much as myself being working in the industry and being able to explain kind of the breaking down the concepts of what happened with the GME and the whole Robin Hood thing, but also being able to say here very soon and what you can already do is full stack blockchain development where you're not having to rely upon Amazon web servers and everything, you can use IPFs and be able to host everything completely decentralized. So exciting times ahead.
00:45:43.296 - 00:46:06.510, Speaker B: Everyone that's listening to this extremely early, and you're a step ahead listening to this. So again, really appreciate you sharing this because I don't think there's a good, clear video of breaking down some of these just financial concepts which are vitally important to the success of Defi. I see one question, but it's in German and I don't speak.
00:46:15.140 - 00:46:17.520, Speaker A: I speak German. If you would just send me the message.
00:46:17.590 - 00:46:23.940, Speaker B: Yeah, this for you, the chat.
00:46:34.940 - 00:46:59.600, Speaker A: Okay, so the question is, whereabouts from Germany are. I mean, I'm personally from Berlin. I mean, I live in New Zealand, actually, but originally I'm from Berlin, but I don't know if that was a question for me personally. I mean, the company itself is all around the world properly decentralized.
00:47:00.260 - 00:47:20.100, Speaker B: Yeah, I think is your name. I could tell you're from German. Awesome. Well, if anyone else has questions for the injective team, definitely drop them into. Hop into our YouTube, drop them into the injective channel as well. You're working on your projects. You guys need validation.
00:47:20.100 - 00:47:50.800, Speaker B: You need any help with anything that you're doing, feel free to reach out to any one of the team members. We're here to help you. And we got the midway checkpoint coming here on Thursday, so really excited to see everything that you're working on in the GitHub. Make sure to tag chain link. Just put hashtag chain link or put chain link somewhere in there so that when we can go, we just go search through GitHub and we'd love to just kind of peek and look what you're working on. Otherwise. Marcus, thanks again for joining us.
00:47:50.800 - 00:48:03.990, Speaker B: I know it's late where you are. One question that just popped in here. When can we expect main net for injective? I don't know your question.
00:48:07.560 - 00:48:14.710, Speaker A: I think Q two at some point. I don't know if we have an official date. I don't think there's an official date at this point.
00:48:15.960 - 00:48:16.420, Speaker B: Cool.
00:48:16.490 - 00:48:19.430, Speaker A: But pretty soon, let's just say pretty soon.
00:48:20.440 - 00:48:38.440, Speaker B: It's always a safe thing to do in the development. Awesome. Well, yeah. Thanks again, Marcus and the injective team mirza, for helping set all this up on your end, and Eric for presenting at the opening ceremony and appreciate everything you guys are doing. And, yeah, we'll see everyone else on the next stream.
