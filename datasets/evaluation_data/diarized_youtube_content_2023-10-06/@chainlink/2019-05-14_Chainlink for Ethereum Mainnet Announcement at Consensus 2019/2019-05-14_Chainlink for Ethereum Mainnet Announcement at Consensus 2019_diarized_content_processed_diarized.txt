00:00:00.410 - 00:01:12.658, Speaker A: Glad to announce that we've made substantial progress. We've had a lot of users come to us and start using and working with us, and today we're glad to say that we're able to launch on Ethereum Mainnet. This month. We've been able to successfully complete three security audits without any real critical issues remaining, being found or remaining. So fundamentally, from a security point of view, we feel we're in a position where we can go live on the Ethereum mainnet and the significance of this, and also in relation to this, there will be more details in an upcoming official, more detailed blog post next week. So the fundamental value of this, in our opinion, is that we'll be able to provide decentralized oracles for the existing DAPPs on Ethereum and the many, many Dapps that aren't on Ethereum yet. In our opinion, from our experience working with many decentralized application teams, a lot of the DApps that are very interesting, possibly even more complex, more interesting, a lot of them are going live this year.
00:01:12.658 - 00:02:15.320, Speaker A: And so there is a subset of applications already live on Ethereum and a certain subset that's going live here on this slide. This is a picture of some of our announced users and partners. Some of them are already live, some of them are going live, some of them are data providers. So we basically feel we've reached a point where we have a substantial enough amount of security guarantees. We have enough data providers that want to sell data directly to contracts of the type that contracts want to purchase, and we have a substantial amount of contracts that want to purchase that now or in the near future. The second really significant point about being able to go on Ethereum mainnet is that it's a significant step towards us being able to support all of the EVM solidity powered networks. So there are a lot of EVM solidity powered networks out there that use the solidity smart contract language tron us.
00:02:15.320 - 00:03:26.800, Speaker A: In our case, there's one called Naka chain. There's a whole bunch of different chains with various variations that use the solidity smart contract language, and they're able to, well, now they'll be able to consume oracle. So our goal here is initially to go to Ethereum mainnet, provide the necessary decentralized oracle capabilities there, and that will put us in a good position to be able to provide those same capabilities on all the variants of EVM salinity powered networks. Now, like I said, there will be more details in an official blog post next week. And fundamentally, I think what's useful now is to kind of look at the next steps beyond going live on Ethereum and just look at some of the goals that we hope to reach. So fundamentally, I think the right way to look at Chainlink is as a large collection of inputs and outputs. So fundamentally, what we're doing is we're making a large collection of building blocks available.
00:03:26.800 - 00:04:23.650, Speaker A: The right way to think about building blocks is the way they already exist in the web world. In the web world you have something called APIs. Those APIs get combined to build applications, data applications get built. So for example, if you wanted to build something like Uber, you would need a GPS API to tell you where the user is, an SMS API to message them, and a payments API to pay the driver, right? Without those building blocks, you couldn't build Uber. Fundamentally, that's the situation smart contract developers find themselves in today. And fundamentally that's the environment we want to take them out of. We want to take them out of the environment where they can't build their use case or their more complex contract, and into an environment where they can write their core code in a few days, spend another day or two connecting to the relevant inputs and outputs, and within a week, just like web application development, be able to launch.
00:04:23.650 - 00:05:42.074, Speaker A: Fundamentally, what this means is creating a marketplace around, whether that's an onchain marketplace or off chain marketplace, basically an evolving marketplace that allows developers to reliably and easily purchase these inputs. That means the creation of premade inputs. It means taking specific APIs, wrapping chain links around them, launching hundreds of those chain links, and providing them to those developers so that they can then combine them into the applications that provide 80% of that value that I mentioned. The next large goal that we have is the support of pretty much all the smart contracts that provide value that we can reasonably support on a reasonable timeframe. So our goal, that's what I mentioned earlier, our ability to support EVM solidity based contracts on something like the Ethereum mainnet will then allow us to support the EVM solidity based contracts on other networks, and then we'll be able to go beyond to various other networks, Hyperledger, any number of other systems. So fundamentally, the second goal that we have going forward is the ability to support multiple chains. Now there's two pieces of value here.
00:05:42.074 - 00:06:58.062, Speaker A: One piece of value is that the sellers in our network can sell to multiple chains without having to integrate with multiple chains. The second piece of value, which is rather immense, is that the enterprise users, or the users that don't want to pick a winning blockchain don't necessarily need to pick a winning blockchain. They just need to get their system compatible with blockchains in general, if they can have a middleware that connects their system to all the different blockchains, and turn their enterprise back end events into blockchain events, and then turn their blockchain events back into their enterprise back end events, they fundamentally don't need to pick a winner. They just need to get their systems to the point where they can interact with blockchains. So this is the second reason why it's particularly valuable that we're able to support the chains that both people on the public chain side and the enterprise application side would want to use. The third and possibly most important dimension on which we need to excel is the creation of the most secure oracles possible. We do this through a defense in depth approach.
00:06:58.062 - 00:08:24.762, Speaker A: Defense in depth is considered probably the best way to approach creating a secure system. It's the layering of multiple security approaches on top of each other. In our case, we layer on decentralization, trusted execution environments, and multiple other approaches, some of which are in early stages of implementation, some of which are in later stages of research and early stages of research. So, fundamentally, the goal for us is to provide a large collection of premade inputs that people can combine into great applications to support all the chains where people would want to use those inputs, and then to make sure that those inputs, as they're growing in number and as they're expanding in both what they can do and where they're offered, that they maintain their security through a security model that doesn't myopically focus on a single security approach, but combines the best security approaches into a defense in depth approach. Fundamentally, going forward around these three goals, essentially, this is how the teams in Chainlink will be structured. They'll be structured around a Chainlink growth team that will expand the number of inputs and outputs. The Chainlink integration team, which will integrate with multiple other chains, some of which we've announced, some of which are going to be announced, some of which are large enterprise chains, some of which are private, public, various chains.
00:08:24.762 - 00:09:33.634, Speaker A: So fundamentally, the integrations team. And then there's the core chain link team, which focuses on maintaining the security of the software and the security of all the approaches that we recommend people use so that all the inputs and outputs on all the various chains remain secure. Now, fundamentally, I think if we can do these three things relatively well, and we do them over the period of time, that smart contracts begin to need more and more inputs, and we are the largest source of inputs. We support the places where people want to consume those inputs and outputs, and we provide those inputs and outputs in the most secure manner. Fundamentally, we're basically risking that people don't want to consume them. So the fundamental question is, do people want and need to consume these inputs and outputs to build the contracts that we think provide 80% of value, such as the derivatives industry, insurance, trade, finance. And if we provide them these inputs and outputs, and they do want to build those contracts, then fundamentally they will have to consume them.
00:09:33.634 - 00:10:52.230, Speaker A: And from just a logical point of view, they'll want to consume the most secure ones because the whole space is based on security and reliability. So to provide slightly more context in our defense in depth approach, I'm going to talk about how we're layering on decentralization with trusted execution environments. These two trust models are usually considered mutually exclusive, so they're usually considered that you choose one or the other, but we're actually going to show how you can combine them and provide a greater degree of security for the generation of something like randomness, which can power a large and growing sector of the current blockchain ecosystem like the gaming industry. So fundamentally, to achieve this goal, for years now we've been working with IC three and Cornell and the folks that have made town prior. Last year we successfully acquired Town Crier. Town Crier is the longest running, I think probably first and so far most secure use of trusted execution environments for the delivery of data to smart contracts. It's been working in production now, I think for over two years, and it's something that we've worked on with them for years and that we're glad to include into Chainlink.
00:10:52.230 - 00:12:00.338, Speaker A: I'm just going to quickly run through what that means. So fundamentally what this means is that in addition to decentralization and a multitude of inputs on various environments, you now have the use of trusted execution environments, trusted execution environments, they lower something called the trusted computing base. They essentially create less places where people can attack your software. Fundamentally, they isolate the software from the operating system and the most common places where people get into software to create activities. Fundamentally, town prior applies this technology to the retrieval of data, the verification of data being retrieved from the right source, and the forwarding of signed data onto the relevant contract. The value of this, in our case, is that data can now be data retrieval, and computations around the data can now be protected even from node operators themselves. So this means that even Chainlink node operators within our network of chainlinks, they cannot know what they're computing, they cannot stop the proper retrieval or publishing of data.
00:12:00.338 - 00:12:59.634, Speaker A: All they can do is turn off their publishing of data, which makes them immediately disqualified as feature node operators. Likewise, it provides confidentiality so that those node operators can retrieve that data privately, compute it privately, and send it on privately, so that even the node operators providing data to your contract don't know what your contract is about. And then the management of credentials for payment, probably credentials or logins or passwords that send money, you can now house those in a more secure environment. Fundamentally, one of the first places where we see something like this, theoretically providing value, is lottery contracts. Lottery contracts and various other gaming contracts. They function on the basis of randomness, so randomness needs to be delivered to them for them to decide who wins. They're an extremely simple contract of I need one input of randomness.
00:12:59.634 - 00:14:01.770, Speaker A: That input is computed against my code, and I decide who wins, maybe millions of dollars. So that input is obviously very useful for the contract. It's also something that adversaries would want to attack to game, to acquire the data. Fundamentally, what we can do is we can run the randomness in the chain link, we can derive it in this secure environment, we can then give it to the contract. And in our case, what we can do is we can take this greater degree of security and decentralize it. So our goal, once again is to provide a greater degree of individual security, but then apply fundamental ideas about decentralization to increase the reliability of this randomness. So instead of attacking a single oracle, making it a single point of failure, even with the most secure approach, you now have multiple sources of this data, and this lottery contract is now far more secure, can hold far more value, and is therefore much more reliable.
00:14:01.770 - 00:14:51.410, Speaker A: Likewise, it'll need to pay, which is what middleware will be also very useful for. And these are the fundamental. Yeah, so this is the fundamental value we seek to provide. We seek to provide these critical inputs and outputs. We seek to make sure that they arrive securely, and we seek to provide them in the places, all the places people need to use them. We're thrilled about going live on Ethereum mainnet, and we plan to be launching on other networks and launching a multitude of different inputs and outputs, both as chain link and with the help of the community. And we're thrilled to be going forward and making this next, what we feel the next step in how our space delivers value, a tangible, real world, immediate possibility.
