00:00:05.210 - 00:00:44.780, Speaker A: Hello everybody, good evening, good morning, wherever you are. Pleasure to be here and thank you for coming. My name is Tom Brand and we also have here alon. I'm a product manager and a researcher on Starkware and currently I work on Starknet. And today we're going to share with you the greatest and latest about Starknet. First of all what it is, what we have today, and then the most interesting part is alone will demonstrate us how to actually write contracts, deploy them, interact with them, send messages between l one and l two, everything which is live today on Robston. And you can also do by yourself.
00:00:44.780 - 00:01:38.954, Speaker A: Perfect. So before I dive into my presentation, I want to first start with a story, a prologue which turns out to be a true story. So I guess most of you are familiar with Dydx. If you're not, then first of all go check them out. It's a very nice application and very nice ux, but basically what they do is that they allow perpetual trading with the synthetic assets. And like every synthetic assets you need a good, reliable professional, fast and cheap oracle prices which turn out to be in that case chain link. Now up until recently the YDX operated on l one, which meant that first of all their fees were high and sometimes depends when were very very high.
00:01:38.954 - 00:02:43.620, Speaker A: And also that they had to compromise on some of the functionality that they wanted to give to their users. And for example one of them is how frequent are Oracle updates in their system. So on l one, since it's quite expensive, Oracle updates for the synthetic asset price were done approximately every 15 minutes. Now on April 3 months ago, DyDX moved to work over Starkx. Starkx is our L2 zkolap application which allows scalability trading which is not the topic of this talk today, but it is a nice example on what Zk rollups can do. So once the YDX moved to Starkx, first of all they were able to achieve a cost reduction of between 100 to 200 x compared to l one. And not only that, they were also able to increase their margin for the trades from ten x to 25 x.
00:02:43.620 - 00:03:46.054, Speaker A: And they were able to do so because they were able to include an oracle price transaction between every trade. Meaning if before on l one the prices were being updated every 15 minutes, now the prices are updated before every trade. And what I want to share with you today on our talk and later on the demo is Starknet. And I'm very excited to talk about Starknet because Starknet will allow any developer or you or any infrastructure supplier to achieve this kind of. I don't know, amazing story to your applications. So let's dive into Starknet and try to understand how this fit was possible. Right, so Starknet, what is Starknet? Starknet is a decentralized, permissionless ZK roll up.
00:03:46.054 - 00:04:26.080, Speaker A: Well, we actually don't like the term ZK roll up because there's nothing, zero knowledge about those kind of systems. So the actual terms is validity roll up. So stockness is a validity roll up which offers an Ethereum like state which is as secure as Ethereum and as scalable as you saw in the previous story. So what does it actually mean? It means it's an l two on top of Ethereum. It means that developers are able to write smart contracts, they are able to deploy them on the system. Those contracts support general computation and they can also interact with each other, relying composability. So this is Starknet in one.
00:04:26.080 - 00:05:53.374, Speaker A: And if I want to say in one slide, why Starknet then? The beauty of Starknet is that allows us to offer scalability while still preserving the same security as l one and the same decentralization. And I want to try to explain why is that? And through that to explain what we saw with the YDX and chain link example. So first of all, the security in Zika rollup, it's very simple. State updates, or as we know them in Ethereum blocks, can only be accepted if a valid proof attesting to the validity of the state transition was also verified on l one. This simple fact gives us basically the security of l one, because an invalid transition just cannot happen because the l one verified a proof to it. Now, once we have this security, I want to explain why the scalability of darkness is so large. So as you may understand, the ability to include as many transactions as possible in one proof mean directly what is the amount of scalability that we can provide? And Starknet relies on the stock provost, which are already in production for almost two years, and they turn out to be the most powerful provost in the world.
00:05:53.374 - 00:06:57.534, Speaker A: That allows us to include the most transactions in a proof than any other competitor in the market. And the second factor that allows us to provide scalability is the second part of the scalability formula of Ezekielup. And this is our on chain data footprint. And let's try to take a look from the on chain data perspective. So if we are a DAP developer, what is the goal of the onchain data? From our perspective, the goal of it is security. We need it to be able to reconstruct the state of the system. So what data do I need in order to do that in traditional blockchains or in any other scaling solution like side chains or optimistic collapse, since every node is required to re execute the state and reexecute all the transactions, the data that I need in order to reconstruct the state is the full transactions.
00:06:57.534 - 00:07:56.290, Speaker A: Meaning every transaction that I want to include in the system also needs to be posted on l one in Zika roll up. Since we don't require anyone to re execute the state, but only to verify a very succinct proof. The only data that I need in order to reconstruct the state is the state diff. So now we understand why we are able to take all those oracle price transactions and have them generally as free transactions in the system. And this is because an oracle price transaction actually only change one storage, right? It only change the price. So the effect of one oracle price transactions or one k or ten k oracle price transactions has the same effect on the state difference at the end of block. And this minimal data leads to a much higher scale than any other scaling solution.
00:07:56.290 - 00:08:53.730, Speaker A: Now I go back and I said that why we offer scalability and why we offer security. And I want to also explain why Zker rollups are the only solution that actually provide ability for every participant in the network to verify the state. And for that I want to look from the full node perspective. So as a full node, what is my role? I want to be able to hold the state, I want to be able to keep in sync with the state as the system progress. And what does that require for me? Again, it's exactly the same argument that I made before. So if I'm required to re execute the state, the requirement for me as a full node grows linearly as the throughput of the system increase. So if I am able to keep up with the system when there is ten tps, when the system will go up to one k tps, I won't be able to keep up and I will need a much bigger machine.
00:08:53.730 - 00:10:23.470, Speaker A: But this is not the case with Zikarola, because if I only need to apply state updates, then the requirements for me as a full node are much much lower. And it actually means that even as the system, the layer or the network, sorry, grow and actually fulfill its goal of being a scalability solution, full nodes are still able to keep up with the system and the system is still decentralized. So as we said, why Starknet? Because it is scalability solution that offers, as you saw today on Mainet, between 100 to 200 x cost reduction while still maintaining the security of l one and the decentralization of l one. Okay, so I spend the last ten minutes talking about nice stories and what startnet can bring us. But what do we actually have, right? Is it a Twitter deployment? Is it Mainet? Where are we? So good that you're asking. Today we're at Starknet Alpha, and Starknet Alpha is our way of sharing the latest state of our development with the developers in the ecosystem. And Stargnet Alpha is a work in progress which is deployed on Robsten since mid June, and we constantly update it with our latest state of development.
00:10:23.470 - 00:11:43.646, Speaker A: So what can we do today with the Starknot alpha? First of all, you can write smart contracts, you can deploy them, they all live in the same state. You can send transactions to those contracts, those contracts can send messages to l one and l one contracts can send messages to the l two contracts. And the beauty is that everything in the system is proved off chain and verified on chain, meaning all the state transitions are not just some nice state and nice programming language that allows us to write contracts, but it is actually proved and verified on chain on each state update, and also the data is published on chain. Now we have a growing and expanding tooling. Currently we have a web ide, a CLI, a block explorer, and you will be able to see everything in five minutes when Alon will demonstrate it. So this is what we have today, but we also have an expanding ecosystem of external teams that work together with us to make stark into reality. So we're working with the Aragon team, the Turbogresk team, which is at least the numbers shows the most efficient full node client that Ethereum has today.
00:11:43.646 - 00:12:43.700, Speaker A: So they are working on the full node infrastructure for Starknet, and it is a pleasure to work with them. We're also working with the nethermy team. They built and are still expanding our block explorer and are also working on a compiler from EVM to Cairo. And actually, anyway, I don't want to spoil any surprises, but they made a huge achievement on that front and we'll share it once the dust till from the London fork update. We also have another team working on a compiler from a higher level language to Cairo. And lastly, we're on the verge of having open zeppelin starting to work on contract standardization to Starknet. And there are many more that hopefully we'll be able to share soon.
00:12:43.700 - 00:13:33.410, Speaker A: What's my time? I have two minutes. Okay, we're fine. And I want to say also one word about the foundations for Starknet, because Starknet is not something that starts out of thin air, but it actually lies on what we call the Stark stack. And it's a software stack that is in production for the last two years. And this is what actually allows us to write Starknet. So first of all, Cairo, Cairo is a Turing complete language that allows writing programs and then generate proofs to them. And basically every product on Mainet since July last year that we've built is written with Cairo.
00:13:33.410 - 00:14:35.300, Speaker A: And Starknet is also written in Cairo. And contracts in Starknet are also written in Cairo. The stack provers is as I've said, the most powerful provers in the world. We're able to generate proofs to hundreds of case of transactions and the way to improve them. And then there is also still many ways to improve them. And the beauty is that since we develop them in house, we can also take the technology and bring it to the limit. And lastly, Starkx, which is the technology that the YDX from our prologue uses, and Starkx first of all was our way to see and to build an actual Zeko wallet application in production and see that it scales and that it works and it was the basis for expanding it to.
00:14:35.300 - 00:15:29.990, Speaker A: Yeah, and lastly our roadmap. So we have the foundation, that's what I've said. We have the alpha, which is live for already two months and will be updated. The next update to the alpha will happen I think by the end of August, in four weeks, maybe five weeks. And what it will add is it will add contract interaction, meaning we'll be able to have composability on Starknet, which is very exciting in my opinion, because it will be the last barrier for implementing any application that we have today on Ethereum. And then we have constellations, which is the first mainnet deployment and we expect it to be on Mainet by the end of the year. This deployment will be with a single sequencer in universe, which is basically the next step, which will decentralize the sequencer layer.
00:15:29.990 - 00:16:10.190, Speaker A: We plan to have it by the mid of next year. And now you know everything that you need to know in order to proceed to the demo with alone, which will be very nice because you'll be able to see the full cycle of writing, smart contract, deploying it and using it again. Thank you very much. We'll have a short time at the end for questions and I'm waiting to see you building on Sarknet.
