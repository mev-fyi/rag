00:00:09.210 - 00:01:02.670, Speaker A: Now, the last thing that I'm going to show you before going into the typescript edition of this is test coverage. And as we progress through this course, I'm going to show you more and more tools that you can use to make sure that our simple storage contract is safe and secure, and we take all the steps we can to prevent any hacks from happening if we deploy in real life. One of those tools is a tool called Solidity coverage, and this is also a hardhat plugin that we can use for our code. Solidity coverage is a project that goes through all of our tests and sees exactly how many lines of code in our simplestore Sol are actually covered. And this can be a good tip off. If we don't cover some line of code, solidity coverage will say, hey, you don't have any tests for this line, maybe you should write some tests for it. We can add solidity coverage the same way we've been adding all of our packages NPM install save dev, or since we're using yarn, yarn add dev solidity coverage.
00:01:02.670 - 00:01:54.412, Speaker A: And we can then add this to our config the same way we've been adding everything to our config. We'll go to our config and we'll write require solidity coverage. And there are some configuration pieces we can add down here below for this, but we're just going to use the default. Now what we can do is run yarn hardhat coverage, and this is going to go through our tests and print out a file that looks like this. We'll also get a file called coverage JSON, which is basically this chart broken down a little bit more. I'll often put my coverage JSON in my get ignore, and I know we haven't actually seen git ignore do what it's supposed to do, but we will soon. We can see here that about 50% of the code, 50% of our statements in simplestorage Sol are covered, about two thirds of our functions are, and 50% of the lines.
00:01:54.412 - 00:02:28.650, Speaker A: It'll even give us exactly what lines aren't tested right now, which we can see exactly 31 and 32 of simplestores Sol aren't covered, which makes a lot of sense, because 31 and 32 is this add person function, which we didn't call and we didn't add to our tests. If you want to take this time to pause and try to make this solidity coverage be 100% across the board by writing some more tests, I highly recommend you do so. It'll be a great learning exercise. I'll also add the coverage folder, so coverage JSon and the coverage folder, which again, I'll explain what the dot get ignore folder does a little bit later.
