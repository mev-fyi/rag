00:00:07.440 - 00:01:07.480, Speaker A: Thanks for being here. I'm Matthew from Loop Ring. I was going to talk about financial market utilities and how Dexons are kind of becoming the equivalent on Ethereum, but I'm going to just kind of go through the most interesting parts because I'm sure everybody is eager to get outside and stuff like that. Of background. Loop Ring is a protocol for non custodial, high performance order book based exchanges. It used to be enough to just say a Dex protocol, but now we all know the nuances and the subtleties and the differences. So we really focus on building the infrastructure for order book kind of high performance trading where market makers and Algos come in and know go in and out, placing their limit orders quickly and cost effectively.
00:01:07.480 - 00:01:49.008, Speaker A: We've been around for two years, a bit over two years. We're mostly based in Shanghai. I'm in Montreal, but yeah, we're primarily based in Shanghai and Shenzhen. I do business stuff for Lupre. I'm one of the only non engineers on the team, but getting increasingly technical, which I enjoy, and hopefully we'll get into that towards the end. So I kind of had two points. Just I wanted to look at financial market utilities and what the hell are these things and why? I kind of have been caring about it recently.
00:01:49.008 - 00:03:06.952, Speaker A: And then I want to talk about how loop ring scales, our third version of our protocol with SnARPs, or specifically zk roll ups, FMUs, these financial market utilities are, and this is a real, pulled it from the Fed board definition, multilateral systems that provide the infrastructure for transferring, clearing and settling payments, securities and other transactions between financial institutions. Now, some of these are important, and I don't just like to say they're important, they're labeled systemically important. A disruption to them could cause widespread liquidity and credit problems throughout the US financial system. And if that is the case, they're designated systemically important and FSOC is the one that deems them as such. And I've been looking at which ones in Ethereum could be systemically important and kind of FSOC equivalent. So you have Ethereum, which is the financial system itself. So it's hard to kind of say it's an FMU on top because it's the kind of parallel financial system, in my opinion.
00:03:06.952 - 00:04:01.432, Speaker A: Then we have things like maker and uniswap compound, and to an extent, definitely chain link and hopefully loop ring that could become a systemically important kind of underlying infrastructure. So what are the ones in the legacy world? It's all these things that I don't know if any of us have necessarily heard of them. They're in the background. There's a clearing corporation, depository trust company, and the options clearing corporation, stuff like that. So we haven't necessarily see them, but they handle the bulk of all this trading or all the settlements. And these, in fact, are the eight that were deemed systemically important. So it's like too big to fail by the legislation granted under dogfront.
00:04:01.432 - 00:05:20.840, Speaker A: So these are things, and I think that Dexes are going to become the equivalent to these sorts of things where users don't really care if it's using Kyber or for margin, fulcrum or DyPX. These things are going to become systemically important. The things in brackets are who oversees them, who are the supervisory boards? The supervisory agency and the Federal Board of governors has a say in kind of all of them, if not the SEC or CFDC. So just to go through this kind of quickly, I find it interesting and a bit of some cognitive dissonance here that how they describe their terms, it's like kind of uncanny how similar the vocabulary is with certain senses. So cls is one example that deals with foreign exchange payments. And they mentioned here the CLS payment versus payment system pvp, instead of p, two p ensures that one payment leg of an Fx transaction is settled if and only if the corresponding payment lag is also settled, eliminating that risk on the other leg. We would call that like atomicity in our terms, right? Like, we do that by design.
00:05:20.840 - 00:05:37.352, Speaker A: That's not something that's like a kind of high level feature. We always offer that. Right. Ethereum based protocol. That's table safe. So this is interesting how that's similar. And actually I want to include a video because it's quite funny.
00:05:37.352 - 00:06:30.940, Speaker A: Cls has this video that looks like a 2017 era, like ICO video of all cool graphics, because I wanted to show it to you and say, which token is this? But it's actually an FMU. Systemically important, but then we also see where they steer away from the ideal espouse and build upon. So this is the depository trust company, which is like the biggest, in my opinion. I'm not sure about that, but just they're quite ubiquitous. Reduce costs and provide clearing and settlement fees by immobilizing securities and making book entry changes to ownership. I found that super interesting. Immobilizing, that's how they get their efficiency, whereas Ethereum kind of makes them supremely mobilized or kind of fluid.
00:06:30.940 - 00:07:16.190, Speaker A: And on the book entry, they're just marking their internal database, netting between companies, netting between financial institutions who have securities change hands, whereas we of course have kind of real changes of ownership. But if you kind of look back far enough, maybe an entry in Ethereum is just a change of ownership. And of course the book that everybody owns. So I found that just interesting, brings efficiency by retaining custody, more than 1.3 million security issues, $54 trillion worth in 2017. So these FMUs do their thing, and important because they do it in house, and that's how they bring about efficiency. So quite different than what we look for.
00:07:16.190 - 00:07:55.220, Speaker A: And now here, just one more example. It's quite intriguing. So, user owned by the constituent institutions, BTCC is the premier post free infrastructure, advancing automation, centralization and standardization and streamlining the processes. So we have similar goals, except they go about it in a centralized way. And I'm going to skip through this right now, or I'll just go through very quickly. But we see like settlement and servicing are two of the things that they really say that they could do. Well, they do end of day netting.
00:07:55.220 - 00:08:50.360, Speaker A: Dexes could do like end of block, or even, as we'll see soon, intra block netting. And then you have underwriting and corporate actions, dividends, registration and transferring securities like Ethereum is, in my opinion, kind of made for a lot of these settling functions. We see the legacy financial market utilities. They have different clearinghouses per instrument. Ethereum can settle all instruments, assuming they conform to a standard, or that a Dex could settle multiple standards, ERC 20 or 721. Efficiencies by centralization, efficiencies by decentralization. Reactive to risk, meaning they kind of have to always be like tabulating what's going on amongst each other, whereas we could be proactive and kind of look, have a more holistic view of the different dependencies and risks.
00:08:50.360 - 00:09:41.272, Speaker A: Ethereum kind of does all of this better by design, which is really exciting that some of these protocols include loop ring, including BZX or BZX, sorry, I'm canadian, BZX, but they still pose risks. And smart contract insurance like Nexus mutual could be a thing. Here's just a quick thing. We're such a tiny fraction. This is just looking at one clearinghouse on one type of instrument, like a credit default swap and ICE, which I guess some of us know because like the whole back relationship. But you see, they're clearing trillions. This is actually a multi year total, but this is just one instrument in one clearinghouse.
00:09:41.272 - 00:10:37.228, Speaker A: So it's like so exciting what Dexs will be able to clear and how much value could be transposed if indeed Dexes and other things become these FnUs. So now I just wanted to talk about how we go about things in the Lupin model. So, as you guys all know, and Kyle alluded to about that thing at the beginning, we have the four different types of dex market structures, or general market structures, I guess you say. We have the automatic market making, like, uniswap quote based by a bunch of reserve managers, Kyber auction based from the dutch axe. And then we have order book based loop ring, and our closest peer would be zero X in terms of the architecture. So we're going to focus on number four right now for the rest of this. That's what we work on.
00:10:37.228 - 00:11:13.130, Speaker A: So there's been three generations of loop ring decks in the past two years. Well, actually, we never implemented this model. This is everything on blockchain model. The order book, you have absolutely everything is on there. That's maybe the naive implementation, to put everything on there. So deposit withdrawals, orders, cancel orders, also cost, gas and pace of block cycle. And you have these nice security guarantees, but it's completely infeasible to trade that way.
00:11:13.130 - 00:11:46.080, Speaker A: So an example of this would have been ether delta when they first launched. We never implemented this. We came about in July, August 2017, and we went to the next model, which is just settlement on chain, which maybe you guys are familiar with. Again, more like the Zero X model as well. So here, the order books live on chain. The order books live off chain. They're matched off chain.
00:11:46.080 - 00:12:27.632, Speaker A: Cancellations could happen off chain, but you see there's an asterisk, because you have to actually trust the order book that they're removing your order from the order book and not kind of maliciously filling it. So to really cancel it, you have to fill it yourself or null it yourself. And again, so this is what we first implemented. This is the bridge version one. And you have the same security guarantees, a bit better throughput and a bit better cost, but still, it's completely infeasible. It's kind of crazy to me to think that how far we've come, as you'll see. Maybe I'm saying that a bit preemptively, but this is our first implementation now.
00:12:27.632 - 00:13:29.348, Speaker A: However, for the past year, we've been working on just proof on chain or zk roll ups, and in this model, we do everything off chain as much as possible. So, similar to the last version, where order books are off chain and matching is off chain. Here we even settle things off chain, and then we just take a whole bunch of these settlements, prove them in a circuit, in a zero knowledge proof. We use snarks and we submit just the proof on chain to be verified by our smart contract, which simply verifies that proof. That's all that the smart contract does. So really, a Dex state lives in, keeps state in the merkel tree, and all the users have their little account balances, which represent beliefs. And when you're interacting with the Dex, you're interacting with an off chain structure like this.
00:13:29.348 - 00:14:09.570, Speaker A: They update it, all these little transactions. And when they get to the amount that they could fit in, like a virtual block or like a chunk, they prove it, and they submit that proof to Ethereum blockchain to be verified. There's one nuance here. So you see what we put? We just put, so deposits and withdrawals have to be on chain because that's how you kind of get the funds into their market tree. And then you keep the state and you put the proof. But on chain data availability, maybe you guys have heard of this. This is more of a subtlety, but it's important.
00:14:09.570 - 00:15:25.960, Speaker A: The on chain data availability means instead of just submitting the proof, we also submit the delta of the Merkel roots along with that commitment, because that way anybody could go back in time and see the state of a merkel tree by using Ethereum as the kind of hint, the data availability layer. So without putting the data on chain, there's still an element of trust with the Dex operator. They can't steal my money or do arbitrarily bad things. But I could say, hey, Dex, what was my balance yesterday or last week? And they could be like, they could just for some reason refuse it, or they could be offline. And I can't reconstruct the Merkel tree at some point in time, which means I can't, first of all, for auditability, but that means potentially I can't retrieve my money, they can't steal it, but also they might just kind of withhold it. So with on chain data availability, by always putting the delta of the Merkel route, I could always kind of sequentially build the space. And so that's what we focus on, the more secure one.
00:15:25.960 - 00:16:24.780, Speaker A: So here, what do we have on chain deposits, withdrawals, and block commitments and verification. So really what happens is when that Merkel tree is being updated and you have all these transactions eventually fills up like a virtual block, not like an ethereum block. And then the Dex operator puts that block on chain and it has some finite amount of time to prove it. They have maybe, let's say an hour to generate the proof and then submit that proof on chain, where they could say, hey, everything was executed faithfully, right? I followed the protocol rules because the snark checks signatures, it checks order, balances all these little constraints in the circuit. So it's either right or wrong. If the dex operator does not submit the proof within that hour, then they would be slashed. So within that, let's say in practice, like a proof takes, right now, 20 to 40 minutes.
00:16:24.780 - 00:17:16.828, Speaker A: So they have 20 to 40 minutes to generate that proof. In that time, there's only a level of economic security. It hasn't been cryptographically proven, but the dex operator must submit that proof or they will be slashed. So there's like a level of economic security by staking, and then ultimately, when the actual Snarf gets verified, cryptographic security, so as secure as Ethereum with an asterisk, with the on chain data availability, they're really approaching Ethereum security with the caveat of that economic finality, time before the cryptographic finality. And you see, let's actually look at the better stats. So this is what we've been able to. We kind of released the beta three of loop ring V three last week.
00:17:16.828 - 00:17:52.920, Speaker A: It's out for audits right now. Of the smart contracts and of the zero knowledge circuits, we also have a bug bounty on bitcoin. But these are the numbers that we're able to do. And you recall, we were only able to do two to three transactions per second in version two. Now with on chain data availability. So this is like a really strong one. We could do 350 right now and after Istanbul, because of ERP 2028, with a gas cost reduction for call data by a factor of four, if I'm not mistaken.
00:17:52.920 - 00:18:47.348, Speaker A: We'll be able to do 1400 with on chain database. But if we relax that constraint, we could see, we could do a lot more, but we're more inclined to follow the extra secure way because we actually believe that 1400 transactions per second will be more than enough given current Dex activity. So, just a quick look at the throughput limitations, just a bit on the technical side. So, with onchain data availability, it does scale. We are limited with the gas cost of sending that call data, which is about 320 per settlement. That's with the onchain data availability without. And then you also have this for either with or without, you have 256,000,000 constraints.
00:18:47.348 - 00:19:19.808, Speaker A: That limits the proof that we could submit, because otherwise it's inefficient. And this number comes from the fact that with ALt 126, or it's over my head, to be honest. But just speaking with our developers. Basically, two to the power of 28 constraints is what we have to fit in. That's like our max. Virtual block size is limited by that. And as you see one, we call it a ring settlement.
00:19:19.808 - 00:20:02.464, Speaker A: It comes from a legacy version, uses 68,000 constraints. So 68 into that, that's where we get about like 4000 settlements in a virtual block to be submitted to Ethereum. But actually committing and verifying approved costs only 350 gas, which will again be reduced after Istanbul. So those are like the factors we contend with. And just doing a quick bit of math here and let's just pop up after assemble for more. So you see here, and again, we're just going to focus on the width, data availability, the stronger security case, it'll be 385 gas per trade. If we just pop in a few numbers that I calculated before.
00:20:02.464 - 00:20:29.704, Speaker A: So we have $0.04 much cheaper without the data availability. Then you do have the off chain proof generation cost to actually generate that proof. On AWS, of course you could spin up more servers. So it's an exercise in operating for time and cost. This is like trying to prove it within 20 to 40 minutes. Again, I can't remember which.
00:20:29.704 - 00:20:51.792, Speaker A: 120 to 40 minutes, that's the cost. If we want to do it quicker, we could spin up more servers, but it'll be more costly. So this is a cost to settle a trade. Whereas in the old way used to be $0.33 here we have less than one 1000, or about one 1000. So that's where we're at now. You can see how many trades we'll be able to settle in a day.
00:20:51.792 - 00:21:07.060, Speaker A: This is Istanbul numbers. Even without that, it's one fourth of that. So it's still pretty good. And that's why we're really excited. And we find Dexes will be commercially feasible. Order book based. Performing Dexes.
00:21:07.060 - 00:21:14.490, Speaker A: This is where we are right now. And I'll leave it there because I'm at my 20 minutes. So thank you, guys.
00:21:23.280 - 00:21:53.280, Speaker B: Yeah, could you just. No. The on chain, what you call the gentle trade, you can immediately trade which accounts were involved and the amount and the assets involved. So do you repeat or clarify? How does that change when you are gen three with and without data availability?
00:21:53.440 - 00:22:21.820, Speaker A: Right, yeah, that's a very good question. Right now, we don't use snarks for any privacy preserving means. So first of all, for sure, the operator that you trust, not with your funds. It's still my custodial, but they see it. As far as I know, what could hold a privacy preserving stuff for us is recursive snarks, which we can't support yet. I think we need a new lifted curve.
00:22:22.580 - 00:22:24.770, Speaker B: What information can you get from?
00:22:26.100 - 00:22:48.404, Speaker A: Right. So with the on chain data availability, we have to build like a mini virtual block explorer, let's say for the virtual block. Anybody could see that with onchain data availability, since all the delta updated states are being posted, anybody could in fact.
00:22:48.442 - 00:22:59.592, Speaker B: See that at any point in time you can identify which trades happen or only the state changes in the accounts that have deposited on the exchange.
00:22:59.736 - 00:23:12.220, Speaker A: Right. It's a very good question. It's kind of a nuance I'm not aware of. I would love to get an answer I could believe in from our team.
00:23:12.370 - 00:23:25.356, Speaker B: I don't want to try to follow up with the gen two operator of the exchange. It's not privileged compared to anybody else when it comes to, let's say, wash.
00:23:25.388 - 00:23:26.604, Speaker A: Trading or big trades.
00:23:26.652 - 00:23:40.500, Speaker B: Like there's a cost involved with each trade. You need to have fundraising to do it. And it tends to be like here. The exchange operator could just like create true non happening trades.
00:23:46.860 - 00:23:59.950, Speaker A: Sure. Okay, so I see what you're saying about that position of privilege. But the operator can't make arbitrary fake transactions because then the proof won't be correct.
00:24:02.320 - 00:24:03.564, Speaker B: From the point of the operator.
00:24:03.612 - 00:24:05.420, Speaker A: As long as they have the collateral.
00:24:05.580 - 00:24:19.232, Speaker B: In their own account, they can just trade back and forth sometimes and mix them into some legitimate web with some exchanges today where the volume looks like it's up here, but 95% is actually not real trace.
00:24:19.296 - 00:24:36.090, Speaker A: Right. Yeah, that's interesting. I guess with the on chain data availability there is the slight cost of doing it. But yeah, without it then it's literally free for them because it's just the overhead of the commitment and the proof. That's an interesting point.
00:24:37.180 - 00:24:41.804, Speaker B: Do you know if this is something that you're trying to address, like to.
00:24:41.842 - 00:25:08.260, Speaker A: Basically be able to say that that volume is very real? The answer that I believe is that you will be able to see on that virtual block explorer that kind of where the trades derive from. But I guess it's possible that the Dex operator could spin up a bunch of accounts, fill blocks, pay that extra cost in the on chain.
00:25:08.760 - 00:25:14.870, Speaker B: You can't really square that triangle. Right. Super fast and efficient trades and also.
00:25:17.740 - 00:25:26.330, Speaker A: Right. Do you have a suspicion one way or another or like from other projects? Have you heard about a solution like this?
00:25:26.860 - 00:25:28.520, Speaker B: I don't know of any solution.
00:25:30.240 - 00:26:01.920, Speaker A: Right. I'm going to put you in contact with. I would love to. Our lead B three developer called Bret because he would have way better answer for it than I would. But that's a very good point. And the operator is still someone that has actually, something that's interesting is the operator. If I want to spin up like Matthew's exchange, it's likely that I won't be also the zero knowledge prover.
00:26:01.920 - 00:26:36.144, Speaker A: I'm just like the front end guy and good at acquiring users and legal and compliance. I'm not a zero knowledge proverb, exactly. And it's actually interesting that relates to the financial market utilities. You spoke of looprain, for the first time ever kind of has like, besides being like an open source protocol, we have like a viable business model in being the prover for Dex's building on it. Of course you could do it yourself if you have access to machines cheaply. But we think we'll do it very well, let's say. So.
00:26:36.144 - 00:27:12.380, Speaker A: Then you have to trust us as an operator. And again, we can't steal your money. But if we're bad operators and we don't submit a proof in time, that means the history from the last proof to us, it gets reverted, which disrupts your users. And you're going to say, get out of here. I'm not using you as my operator anymore. I'm going to choose a different one. The decentralized optimal solution for that is not using one operator, but using a contract as an operator with multiple sub operators that get chosen according to something maybe per state.
00:27:12.380 - 00:27:31.420, Speaker A: So everybody that gets a chance to operate, you get a chance to submit a block, he gets a chance like a contract of sub operators. Although right now that's not how it's scaled. Right now it'll probably be just one super efficient operator. Hopefully there's competition, but we actually will operate our own operator.
00:27:33.360 - 00:27:34.870, Speaker B: And it.
00:27:35.320 - 00:27:45.590, Speaker A: Thanks for those questions. Anybody else? Well, thank you guys very much. I appreciate it.
