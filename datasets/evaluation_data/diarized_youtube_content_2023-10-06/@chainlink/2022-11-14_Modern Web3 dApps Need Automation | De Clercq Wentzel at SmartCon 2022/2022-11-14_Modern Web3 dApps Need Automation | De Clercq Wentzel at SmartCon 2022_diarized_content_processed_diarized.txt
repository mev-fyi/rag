00:00:10.170 - 00:00:30.070, Speaker A: Cool. Hey everybody, my name is Clark. I'm a product manager at Chaining Labs and I have the privilege of chatting to you today about automation. So just quick show of hands. So I know I'm speaking to. You are totally new to the blockchain space, have not get deployed, smart contract, don't have a project up and running. Okay.
00:00:30.070 - 00:00:46.966, Speaker A: A couple of folks and the rest of you, you have projects up and running show vans. Okay, cool. Awesome. Okay, great. So let's kick it off. We'll be talking about the need for automation. Sorry, it's a bit bright.
00:00:46.966 - 00:01:40.800, Speaker A: Need for automation. We're going to be looking at Chainlink automation traction to date and going over a couple of use cases. So why some of our users chose to go with Chainlink automation? What were the important factors they considered when they looked at automation solutions? And then we'll talk about some of the exciting stuff that's up and coming. Okay, as you heard this morning from Sergey and Kamal's keynotes, Chainlink keepers is now known as Chainlink automation. Right? So today a lot of decentralized applications are fairly simple when you compare them to web two applications. And one of the big reasons for this, a big reason, is the fact that state change doesn't happen unless somebody hits the button. So somebody actually needs to go and trigger that function.
00:01:40.800 - 00:02:33.934, Speaker A: And so maybe show vans, who of you have encountered this challenge when you wanted to build a great user interface, a great user experience of having to stand up your own automation stack to go and automate some functions? Okay, I see one. Anybody else? So this is a common thing. Now, a lot of people in web two take this for granted. And I think for us, automation is something that can help drive tremendous improvement in user experience. And this is why we're very excited to be in this space. Now let's look at some of the applications that we're massively value creating in web3. So we look at things such as yield, automation derivatives, automation, and obviously user experience.
00:02:33.934 - 00:03:46.206, Speaker A: And it's no coincidence that these things have automation in the name because they basically automated things that users didn't have to do anymore, made it a lot more engaging and exciting and interesting. Now, obviously, if you're new in the space, imagine the possibilities that are out there if you don't have to stand up your own stack and also if you have your own projects, what you can do more. So when I say possibilities from our perspective, like the possibility is huge. Rough estimates today show and this is a rounding error, basically like 0.4% of people engaging web two is involved in web3, and we're super keen on how do we break down that barrier? How do we enlarge the surface area of problems that we can address with blockchain and with web3? And from an automation or a transaction automation perspective, we estimate that probably less than a percent of the transactions today are getting automated. That should be automated. So to date, chain link automation is available on more than six chains or six chains.
00:03:46.206 - 00:04:39.990, Speaker A: We've done more than 120 integrations and have executed somewhere in the region of 250,000 transactions year to date. From an automation perspective, simulating off chain, I don't know, numerous billions, because we basically run this every block in terms of checking when we should be automating these transactions. So let's look at a couple of users that have decided to partner with us, and we've had the good fortune of partnering with just sort of broad strokes. These use cases were defi things such as yield compounding. I almost thought there was a question. Limit orders, yield harvesting, et cetera, games starting, stopping rounds distributing. We're also seeing a lot of interest in prediction markets, specifically where they need really timeless execution.
00:04:39.990 - 00:05:19.198, Speaker A: And these users decided to work with us for the following reasons. So really they look at their automation stack and say like, hey, I need reliability. I need something that's going to save me money, I need something that's going to help me scale quicker. And one of the key things for me is enable innovation, like effectively. We're building an infrastructure level service and people can build on it, they can build faster and they can innovate. So reliable automation that is not reliable is not automation. It's like giving somebody a limit order functionality and then the thing fails to trigger.
00:05:19.198 - 00:05:49.980, Speaker A: That's not going to work. So in keeping with the decentralized ethos of web3, we built chainlink automation as a decentralized automation solution. But we didn't want to skimp on performance, so we built something that is highly reliable and highly performant. And let's look at an example from Robovault. I think one of their co founders will actually speak tomorrow morning. Super engaging guy, Sam. Definitely go and listen.
00:05:49.980 - 00:06:22.200, Speaker A: But this is the true quote. Like they're basically doing leveraged investing, doing some awesome stuff, and effectively generating outsized yields for, let's call it a low sharp ratio. So what that means is they're basically managing their risk through automation. And before using Chainlink automation, they built their own stack. They used a couple of other providers on the market as well. And after integrating with us, their founder is now sleeping a whole lot better. And this is by design.
00:06:22.200 - 00:07:11.074, Speaker A: So we have done a number of internal benchmark tests. I'll be at the booth. You can happily come and chat with me about that. But suffice to say, key things you need to think about is whatever service you use, are they good at detecting that a job is actually eligible, that it should be executed? And then secondly, can they actually land the transaction on chain? Transaction management is not a, it's not a small thing. We've had more than three years now to battle test our own transaction manager stack. It's the same stack we use to send transactions on chain for price feeds. And as you've seen this morning, we've landed something more than 4 billion, I think prices on chain or data points on chain tested across various different networks in various sort of congestion conditions.
00:07:11.074 - 00:07:50.820, Speaker A: Apologies. So definitely some interesting stuff there. Next thing, saves money for those of you have spun up your own mean. You can create an AWS instance, you can add some python scripting, it can check, it can execute if you want to add reliability. Now we start saying, listen, this thing needs to be reliable, potentially decentralized. I need to add alerting, I need to add monitoring, and I need to add maintenance. And now all of a sudden I have another piece of architecture that my old team needs to maintain and I need to employ people just to do this for me.
00:07:50.820 - 00:08:40.418, Speaker A: So this is another reason why people look to us and say like, hey, by integrating with you, we can move faster. If you invest in your product that improves our product. So civilization decided to do just that. And they're saving something like $250,000 per year by just integrating with us and using our automation. Next thing, scaling quickly like this is key. On the previous slide and this slide, you would see that it basically takes two functions, check upkeep function that we run off chain to see if something is eligible and the perform upkeep function that we execute on chain. And if you think about it, everybody likes to joke and say if our startup takes off, it's awesome.
00:08:40.418 - 00:09:18.990, Speaker A: Scalability is the problem we want to have. Everybody says that. But have you really thought about that? If you build something on a solution that is not scalable, you will feel pain. You will likely not see the growth that you could have seen if you had went with something that was scalable. And this is another reason that scalability also saves you time. Examples here in the middle we have their entropy, PhI, easily expanded their prediction markets across ten different markets. We have kratos as well came back and said listen, this is saving us 100 plus hours per year.
00:09:18.990 - 00:10:02.390, Speaker A: And obviously internally we have thousands of contracts on chain and we use this to simply monitor balances and ensure contracts are properly funded. So that saves us a lot and helps us scale as we add more contracts on chain. Last thing, innovate. For me, this is definitely one of the cool ones as a developer. I think developer superpower is the ability to innovate on behalf of users and actually execute, deliver something that is super useful. So I feel automation should enable developers to do more of that. And so examples we have here today would be gravity Phi.
00:10:02.390 - 00:11:09.022, Speaker A: So they have this really cool thing where they are creating silos users can go into. I spent ten years in trading and structuring and some of the things I built now I thought like wow, that's only available to like hedge funds or inetwith individuals. They're basically making automated trading strategies available to everybody and they're leveraging keepers in the background to kind of do the automation and the execution. Apeswap was pretty innovative to begin with and they started adding automated harvesting yield compounding to their solution. And then you have companies like cost, like bringing a web two sort of native subscription idea onto web3 and using automation to enable that. Right? So some of the things coming down the pipes, some of the things we're super excited about, we're going to talk a bit about enhanced reliability, web two API data that I think a lot of people are interested in, log event data and then also custom compute. So enhanced reliability.
00:11:09.022 - 00:12:36.634, Speaker A: I don't know who of you listened to Lorenzo's chat, but we're effectively integrating the OCR two protocol and what that gives us is enhanced reliability and trust minimization. You will now have a quorum of nodes who would effectively verify that jobs are due before they're executed. And also there's a peer to peer network included in this, so there's more redundancy and failover if one node goes offline, web two API data, I think maybe another show of hands who have you have had to stand up your own server just to try and fetch data from off chain to bring it on chain in order to solve a problem. I guess people, you've attempted that, anybody? A couple of folks maybe. So this is definitely one of the biggest asks I would say that we see, and the reason for that is as a developer you're working in blockchain for a reason. There are some really cool features and functionalities, but we're keen on solving problems not just in crypto but around the world. We're engaging with people a lot here, and some of them are bringing satellite data, some of them are bringing data from other data sources, but effectively they're saying like hey, if I need this to be tractable, I need that web two data to come in in a trust minimized fashion so that I can actually solve this with transparency using some of the unique features of the blockchain.
00:12:36.634 - 00:13:18.460, Speaker A: So for us that means giving you easy access to web two data. That's trust minimized and then brought on chain log event triggers. Again, a lot of people use log events today to store data to power their UI. For us it kind of resembles something similar to serverless like loosely coupled programs where I could effectively emit an event from one smart contract. And through automation on Chainlink automation I can trigger other smart contracts. So give your smart contracts the ability to trigger as soon as something else happens and therefore also make components swappable. And lastly, something fun.
00:13:18.460 - 00:14:26.270, Speaker A: I worked in machine learning for a couple of years and imagine being able to do some of the inferencing on blockchain, et cetera. So really custom computers, imagine the possibilities when you start actually executing custom javascript as part of your automation stack and doing that in a trust minimized way and being transparent about it. So for us, this really enables you to open up a whole new paradigm in terms of the problem solving. So as I mentioned, I'm super keen on how do we break down barriers between web two, web3, and open that span of area or surface area that we can kind of go and attack? Okay, I don't know. We're doing for time wrapping it up. We spoke about reliability and how automation that is not reliable is not really automation. We spoke about really the need for automation to allow you to move quicker, scale faster, save money and innovate.
00:14:26.270 - 00:15:07.978, Speaker A: And right where does that get us? I think we're at the booth today. We'd love to talk to you to hear about your use cases, to see if you're keen, like if there's anything we can do to help, how we might partner together. And that can go a long way in terms of identifying where are the automation opportunities. Secondly, we can work with you to help develop and deploy these. And then lastly, as you may have heard today, we launched a program to help you badge your usage of Chainlink automation. So tell your users that you're relying on us to do your automation. And so I'd go to chainlink.org
00:15:07.978 - 00:15:18.060, Speaker A: slash prove it for that. Cool. I think we're good. Thanks everybody, really appreciate your time and meet us out there.
