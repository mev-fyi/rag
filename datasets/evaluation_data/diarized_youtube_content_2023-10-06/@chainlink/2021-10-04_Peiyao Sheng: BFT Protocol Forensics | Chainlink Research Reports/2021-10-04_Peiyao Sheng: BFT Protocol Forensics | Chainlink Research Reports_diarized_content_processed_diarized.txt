00:00:00.410 - 00:00:42.294, Speaker A: Welcome to Chainlink Research Reports, a new series featuring research across the web, three industry and academic fields, with scholarship that expands our understanding of decentralized technologies. I'm Dr. Andy Boyen from Chainlink Labs, and I'll be your host. Chainlink Research reports explores research on blockchain and smart contracts from the fields of computer science, mathematics, economics, philosophy, political science, and public policy. Today we're hearing from Payao Sheng, a computer science doctoral student at the University of Illinois, presenting her paper titled BFT Protocol Forensics. This piece was presented at the 2021 ACM conference on Computer and Communication Security. It presents a model to identify BFT consensus system faults.
00:00:42.294 - 00:01:09.570, Speaker A: This work extends our understandings of the methods used to test and temper distributed consensus networks. It also provides several key forensic indicators that some fault has been observed, plus the ability to locate and identify those indicators. Payao Shang will join us to present BFT protocol forensics, followed by a discussion session featuring Dr. Jason Anastasopoulos, a researcher at Chainlink Labs and an assistant professor of public policy and statistics at the University of Georgia.
00:01:15.370 - 00:01:55.794, Speaker B: Hello everyone. I'm very happy to be here. Today I'm going to talk about BFT protocol forensics. This is a joint work with Gray Cardig Shiram and promote so BFT protocols have been started over 40 years. Researchers keep working on new secure protocols with better efficiency or tolerate mo faults under different settings. In this work, we discuss one basic formulation of the problem, the validated byzantine agreement. Informally, we say a protocol solves VBA if under a security threshold, t.
00:01:55.794 - 00:02:34.842, Speaker B: When the total number of byzantine replicas is no more than t. UnIST replicas eventually will agree on the same value with external validity. It is also known as the liveness and safety properties. However, what if f is greater than t? This is what we care about for forensics. We focus on the day after. Specifically, we hope to identify malicious replicas after they have successfully mounted a security breach. Note that the safety and liveness can both be violated when f is greater than t, but we focus on the safety violation.
00:02:34.842 - 00:03:39.202, Speaker B: Here we call it forensic support. It is the capability to provide irrefutable evidence for bad behaviors. And naturally, there are two follow up questions to solve. First, how many bad actors can we detect? Can we find as many as possible? And the second, how to obtain such evidence? Can we get it in a most distributed way? Keep these two questions in mind. We use triplet mkd to formalize the forensic support, where m is the maximum number of byzantine replicas under which the forensic support can be provided. K is the number of different honest nodes whose transcripts is needed to guarantee approval of culpability and d is the number of byzantine replicas that can be detected. When we think about forensics, we may 1 have an intuitive thoughts on this abuse attack.
00:03:39.202 - 00:04:26.050, Speaker B: Double vote to detect double voting, we just need to collect all votes and account the number of conflicting votes. And since they are signed by the same replica, it's easy to get the cryptographic evidence. However, most BFT protocols are not just as simple as voting. They contain voting. That's true, but there are usually multiple rounds of voting and several stages coupled together. As a consequence, attacks are always conducted across multiple rounds and the attackers hands can be hided behind any stage. In addition, these attacks usually depend on protocols, and all these subtleties make forensics much harder to analyze than what we have imagined.
00:04:26.050 - 00:05:06.558, Speaker B: And these are the key questions we are going to focus on today. So to figure out these questions, let's start with a case study. We will start with the host of protocol. Hostov is a modern BFT protocol that works on a partially synchronous network setting and tolerates one third bizantin faults. Hostoff is based on PBFT, which is a more canonical protocol. Under the same setting and based on PBFT, Hostoff achieves linear communication complexity and optimal responsiveness. It also has a good impact on the blockchain community.
00:05:06.558 - 00:05:55.226, Speaker B: The DM blockchain, proposed by Facebook and known as Libra before, is built based on Hostoff. So briefly, we said Hostoff protocol proceeds in a sequence of views, and in each view after a leader proposes a value, there are three rounds of voting. At the end of each round, a quarantine certificate is formed with two t plus one votes. They have different names in different phases. If the protocol goes well and all three rounds finish, then nodes commit at the end of this view. Otherwise they have to enter the next view on timeout and do the votings again. The safety of hostoff is guaranteed by two propositions.
00:05:55.226 - 00:07:04.558, Speaker B: The first, there's only one QC, can be formed in each round of voting. This is because the QC contains two t plus one votes and we have total three t plus one replicas. The second is a voting rule that a node locked on the value v will not vote differently unless the HQC here shared by the leader is from a higher view. Let's understand the rule carefully, which is important for our following analysis. The lock here is the latest pre commit QC, so nodes will update their locks on receiving the pre commit. QC and high QC, denoted as HQC, is the highest pre proQc known to the leader, since with a high QC from a higher view, nodes with log on V can vote for different values. So this is like a key then to violate the safety, attackers just need to break one of the two rules.
00:07:04.558 - 00:07:53.182, Speaker B: They can double vote to break the uniqueness of the QC, or just unlock themselves without receiving a key. And the first one is easy to detect, just as we said before. But the second type is more subtle because the attack could be across views. So here is an example of cross view attack. Suppose in some view e, there is an honest party commit a value v because it receives a commit QC. The formation of this commit Qc here means nodes a, b and c should have a lock of value v, and they are the ones who are responsible for guarding the safety. Later, then multiple views later, there may be no progress since it's partial synchronous.
00:07:53.182 - 00:09:01.770, Speaker B: And then in a later view e prime, another value v prime is committed, which means the safety is violated. So something must be run among these views. Recap that a, b and c are locked on value v, and according to the voting rule, they cannot vote for other values unless they receive a key in the proposal. So we should focus on this proposal here. In the first case, if we observe that HQc in the proposal does not have a higher view than e, then Bnc must be malicious since it is not a correct key and they violate the voting rule otherwise. In the second case, what we need to do is to find a view that satisfies the condition. In the first case, we claim that such a view, denoted as estar, must exist, and it must be the first view after e, where the prepared Qc for a different value was formed.
00:09:01.770 - 00:10:09.950, Speaker B: So in this view, e star, the view number of HQc in the proposal must be lower than or equal to e. Why? Because HQC is the highest prepared QC known to the leader, and if the view number of HQc is higher than e, then e star would not be the first view to form a prepare according to the definition. So we can make sure that in this view e star, it goes back to case one, and then we can claim that b and c are malicious. Next, we can easily get this t plus one such culpable nodes by taking the intersection of commit qc and preper Qc for a different value. Thus, the parameter d equals to t plus one. Then how do we know that they are indeed culpable? We need some cryptographic evidence, so notice that the key step to find those culprits is to determine which view is estar. So the evidence is actually the proof of estar.
00:10:09.950 - 00:11:17.750, Speaker B: We say in estar, the prepared Qc is formed and the view number of high Qc is less than or equal to e. So, if we include this view number of high Qc into the volt one message, then the prepared Qc itself can be used as the evidence. Thus, we can get k equals to one, which means the transcript from one honest replica is enough to provide evidence. And in particular, we need one node who receives the prepro Qcv prime that contains two t plus one votes and the vote one message contains the view number of the high Qc. Then by comparing the view number and e, the vote to one message can serve as the evidence. The last parameter we want to get is m, which is m minus t. So this is very intuitive, because if there are too many malicious nodes over the quantum size, then they can go ahead and commit any values without communicating its honest nodes.
00:11:17.750 - 00:12:26.460, Speaker B: So, to summarize what we get so far, let's visualize those parameters in a figure. We say Hostov has forensic support with d equals to t plus one and k equals to one. This is a very good result, because as we can see, t plus one byzantine nodes are enough to mount an attack. Thus, t plus one is the best possible we can detect, and it requires only one honest nodes transcript to obtain the evidence. Thus we call it strong forensic support. HoSTF happens to have such a good property, but unfortunately this is not true for all protocols, even for the same protocol host of, we find that small distinctions can result in much worser forensic properties. Remember that when determining the parameter k, we include the view number of high QC in vote one message and compare it with the first committed view.
00:12:26.460 - 00:13:26.640, Speaker B: With this information, a single transcript can be used as evidence. However, in the original version of Hostoff, it does not contain this information, the view number. Instead it contains the hash of the high QC. Since the paper describes SMR protocol, and each block only contains the hash of the parent block. So in this case, one transcript is not enough, because only based on prepared QC, we cannot decide whether this is the first view e star and the HQC is lower, because we hope the HQC is lower than e. And in the worst case, we need to collect at most t plus one transcripts. Compare these two variants, we can see that by adding the view number, which of course will not influence the security and efficiency of the original protocol, but we can improve the forensic properties a lot.
00:13:26.640 - 00:14:23.150, Speaker B: Besides, we also consider what if there is no information contained in this vault, one message. The consequence is terrible. So in this case, even with old transcripts from honest nodes. We cannot detect more than one byzantine node since now the vote one message lacks the link with previous views, which makes the first view estar indistinguishable with later views and the Biden nodes can always deny their voting behaviors in estar and pretend to be like an honest. So we put these results in this figure. We can see that Hostov with hash has a medium forensic support and hostov with now information has almost no forensic support. It also indicates how these small distinctions leverage forensics significantly.
00:14:23.150 - 00:15:27.160, Speaker B: These negative results are not just only the only cases. We further find that a different protocol lgrand has no luck either in the one third fault tolerant family. Lgrand Ba is also a very popular protocol which works under synchronous network and is a part of Elgrain blockchain. So Elgrain Ba has a very important property called player replaceability. That is, different steps of the protocol can be executed by different set of players. This makes the protocol tolerate adaptive adversary as well as ensures subcorgetic communication complexity. While algorithm has such a nice property for security, we proved that it has no forensic support and so far we haven't find an easy way to fix it.
00:15:27.160 - 00:16:33.580, Speaker B: So this result makes us start to think about the relationship between the forensic properties and other security properties. Then we also construct another variant of hostoff with player replaceability. We simply add one step to select committee for every view, as is in Elgrand, where each replica use a verifiable random function to privately decide whether it is selected in a committee to analyze the forensic support of this host of PR. Since nothing else changes, the previous analysis is still applicable. So the culprits we hope to detect are those who receive lock on one value but vote for another value without receiving a key. If they vote for another value, then they are the corporates. We still can find the first view estar here where a higher perpetuity is formed for a conflicting value.
00:16:33.580 - 00:18:14.250, Speaker B: However, at this time, when taking the intersection, we find in most cases we will end up catching no one due to the player replaceability. In this case, even if malicious nodes like DeNf, they are locked, there's no evidence for them for their locks because they do not need to vote in the first view. So these two negative results for player replaceable protocols bring up a burning question to us. What essentially impairs forensic support? Does player replaceability mean no forensic support? If the answer is yes, then the forensic support comes with a heavy price and this is not what we'd love to see, in our recent work we answered this question by constructing a new protocol that has both player replaceability and the strong forensics vote compared to the house PR. The key difference is that in the new protocol we require all committee nodes send a transition certificate together with the vote where the transition certificate here contains also two thirds votes from the last views committee and the lambda is the size of the committee. In other words, a replica cannot enter the next round until it receives a transition certificate. Then the lock now becomes a ticket to the next round.
00:18:14.250 - 00:19:13.470, Speaker B: And also in this way, since those transition certificates are included in the votes, the link between different views are reestablished so we can do forensic analysis based on those votes and the transition certificate. With this change, we finally get a satisfactory result. Again, just notice that D here is not t plus one, but proportional to the size of committee. So yeah, at the end I'd like to give a summary of this talk. So for all these blockchains and BFT protocols, we see security is one side of the coin which researchers have spent most time on. But this is just one side. On the other side, there are forensics that cares about things when the security is broken.
00:19:13.470 - 00:19:46.280, Speaker B: We go over some case studies to show that forensics is not as intuitive as we thought. Lots of subtleties have oversized impact on this result, but overall, with careful design, we can achieve the best of both sides, which means when considering the other side, we don't have to sacrifice existing important properties. So that's all for my talk. Thanks for your time. I'm happy to take questions now.
00:19:46.730 - 00:21:00.830, Speaker C: Thanks payout for that excellent presentation. I really enjoyed reading your paper and I learned so much about BFT forensics from the paper. And like any good paper, it actually raised more questions than it can have answered. And so I hope that you can help us learn about some more aspects of the BFT forensics that you discuss and what this kind of implies for the future of BFT forensics in the kind of blockchain space. So the first question I'd like to ask is regarding the strength of forensic consensus protocols. So you mentioned that there's a common trend that for strong forensic consensus protocols, witnesses with signed messages prove rule breaking. Would you say that there are any kind of trade offs for having strong forensic support for any given protocol?
00:21:02.470 - 00:21:59.860, Speaker B: Yeah, that's a very good question. So I think we can investigate this problem from two aspects, the efficiency and the security of protocols. So firstly, from the three variants of hostile I just mentioned, we find that small changes that will not increase the communication complexity, but can improve the forensic properties. So I think there is no trade off from this aspect. And second, we also construct a protocol with both strong forensic support and the player replaceability, which is an important property for security. That's why we say that both sides of the coin, we can achieve the best. And just there is one minor comment, is that for the protocols that use threshold signature, we need to use aggregate signature because we need a cryptographic evidence which may increase the size of one message.
00:22:01.110 - 00:22:03.060, Speaker A: I see. Thank you.
00:22:03.510 - 00:22:32.480, Speaker C: So just a couple more questions in a similar vein. So do you think that the trends that you're describing in the paper are enough to begin using as analytic indicators, detecting attacks and setting up early warning systems? So do you think that would be something that can be developed in the future? Is that something that you're planning on discussing in the future?
00:22:33.330 - 00:22:47.378, Speaker B: Yeah, I think this is a very good question, and it's meaningful in practice, because on the one hand, what we did just ends at the day after, so it works only after something bad already happened.
00:22:47.464 - 00:22:47.906, Speaker A: Right.
00:22:48.008 - 00:23:05.270, Speaker B: But on the other hand, what we detect can be the early warning for future attacks. Those who are held culpable can be slashed. And the existence of this, such a forensic protocol can also disincentivize rational players to deviate from the protocol.
00:23:05.930 - 00:24:33.300, Speaker C: Right? Yeah. If something like that were developed, it would be really an incredible utility, especially as the kind of cryptocurrency space takes off and it becomes more useful and kind of used more within the general public. So another question I have is regarding scalability, and this is something I was thinking about while I was reading the paper, and it's kind of a problem, at least that I saw described in your paper, of scalability that might exist. And so you could tell me if it doesn't, and maybe I'm totally wrong. So, as I understand it, when the number of byzantine parties exceeds a certain threshold, if I remember correctly, there is an equation f is greater than n minus t, then no forensic protocol support is available. Does that have any implications for scalability? So as the number of nodes increases in any particular blockchain, does this mean that, is there a kind of implication that forensic support is going to be significantly more difficult? Is that one of the implications of your paper?
00:24:34.970 - 00:25:29.258, Speaker B: I think in general, the forensic threshold, m is also proportional to the network size because it's m minus t, and t is the security threshold of the protocol. And it's also intuitive to understand that when adverse refraction is too high, then they can simulate a word by themselves without talking to any honest nodes. But from another perspective, when the network size is large, one concern may be the communication efficiency when getting the forensic support. And in this case, I think the player replaceability helps since only a small group of people need to talk in each round. And also, we say that we can still provide a strong forensic support, though the number of that nodes we can detect now is proportional to the number of nodes who talk in a round.
00:25:29.454 - 00:26:15.300, Speaker C: Right, I see. Yeah, that makes a lot of sense. So, one last question from me, and then my colleague Andy has some questions as well, if you don't mind sticking around. I kind of have a big picture question as well. And in your paper, I really like that you examined a number of different protocols which had different features, and you used each of those protocols as an example of a protocol that has a certain feature. So, for example, with Algorand, this is a kind of proof of stake blockchain. And so that's why you studied that particular blockchain for the paper.
00:26:15.300 - 00:27:13.560, Speaker C: I'm kind of interested in some of the findings that you had regarding Algorand and what those might look like for proof of stake blockchains in general. In particular, you noted that Algorand itself had problems with forensic support, and you discovered that there was a kind of a lack of forensic support. And although this perhaps wasn't implied directly, or this wasn't stated directly, it does kind of imply that proof of stake blockchains might, in general, might have this issue. And so, as we know, many proof of stake blockchains are going to be very popular in the future, most likely. So, for example, E 2.0, it's planned to be a proof of stake blockchain. So I was wondering what the implications are of your findings for proof of stake blockchains in general.
00:27:14.730 - 00:28:29.982, Speaker B: Yeah, this is a very interesting question. So, although we focus on byzantine agreement today, the ultimate goal of forensics lies in the practice. So, like for Elgrand, though, Elgrand is proof of stake blockchain, but it uses LGRand Ba, which is what we analyze today. And this is still a BFT style protocol, because there are explicit votes and the confirmation is deterministic. But we do have a recent work where we investigate the longest chain family of protocols, like Aura boroughs. So, in particular for auroboros, we find that if the number of malicious leaders exceeds one half, there's no forensic support, because they can always create a private chain and we cannot distinguish them from the honest parties. But if the fraction of malicious blocks among a period of time is less than one half, then the longest chain protocols also have some moderate forensic support where the number of detectable nodes are negative, linear to the extra number of bizantini nodes, something like n minus two f.
00:28:29.982 - 00:28:34.846, Speaker B: So this is a very different result from BFT style SMR protocols.
00:28:35.038 - 00:28:35.970, Speaker A: I see.
00:28:36.120 - 00:28:48.022, Speaker C: Well, thank you. Yeah, so that pretty much tackles all my questions. Thanks so much for presenting this paper and for the wonderful learning opportunity that you provided. So Andy, I'll turn it over to you.
00:28:48.076 - 00:29:15.694, Speaker D: Yeah, I've got one more question for you PeYA. Thank you. So in the conclusion, the paper says that this only looks at fatal BFT safety breaches. And the paper mentions there's a number of other type of attacks, liveness attacks, censorship attacks, or even performance bugs that are not attacks necessarily. Is there forensic support for being able to investigate these? How does this research change and kind of looking forward at those as an analytic tool?
00:29:15.732 - 00:29:16.990, Speaker A: It seems pretty useful.
00:29:17.890 - 00:29:55.180, Speaker B: Yeah, very good question. The forensic analysis for these attacks are also very meaningful. For example, for liveness related attacks, the forensic analysis I think will be completely different since there is no irrefutable evidence. And in this case, the forensic support may not be a precise claim like group a is malicious, but some probabilistic statements like either a or b is malicious. The forensics for those different types of attacks I think are very active research topics that we are interested in.
00:29:55.630 - 00:30:14.586, Speaker D: Great, thank you. We'll keep an eye out for those publications and papers as they come payout. Thank you so much for your time coming to talk about this paper. Jason, thank you as well for the questions. I'll take over from here. Thank you for joining us on Chainlink research reports. Please like subscribe.
00:30:14.586 - 00:30:33.202, Speaker D: We're doing these once every two weeks. We've got a number of other types of content on the Chainlink YouTube channel. Be sure to catch it. Don't miss it. You can follow Chainlink at chainlink on Twitter or at smart contract. Smart underscore contract for Chainlink Labs to follow everything going on in the chainlink ecosystem. Until next time, I am Andy Boyan.
00:30:33.202 - 00:30:37.890, Speaker D: We appreciate you joining us and we will talk to you again. Bye.
