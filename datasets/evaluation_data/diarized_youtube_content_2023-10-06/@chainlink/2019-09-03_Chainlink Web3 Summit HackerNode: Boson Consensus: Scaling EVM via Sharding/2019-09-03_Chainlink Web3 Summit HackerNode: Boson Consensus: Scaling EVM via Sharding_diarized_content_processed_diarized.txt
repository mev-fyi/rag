00:00:07.760 - 00:00:46.130, Speaker A: So today, my talk is about for some consensus scalable blockchain starting from sensors. My name is qi. I work on the right now I've been optimizing project called crockchain, which is basically the realization of the. For some consensus. I used to work at Facebook and Google on their infrastructure. So actually, everybody here actually are discussing everybody like hash graph, trying to address in different ways. And so, because everybody knows right now, bitcoin, ethereum are suffering from this low transaction per second.
00:00:46.130 - 00:02:01.320, Speaker A: And the reason why is actually. And there are a couple of solutions that try to address the problem. And one straightforward solution is, hey, why not just tune those parameters of block size and block interval, so that we can, for example, increase the transactions. So, for example, pick a cash, which increased the block size from one megabytes to 32 megabytes, so that you can claim more transaction per second, which is over 32 times of bitcoin. However, with a longer time, larger block size, which also means that it will take much longer time to propagate the block. The network, especially, there are a lot of nodes in the network, and this creates increase the probability of the flocks, which also means that a lot of blocks may be stale, because if the flock happens, only one of them will be chosen as the clinical chain, and which means that some of the hash power are wasted. And also if, for example, the block have a lot of smart contract transactions, this computational resource to run these smart contracts, which right now, a lot of people using EVM, they are still extremely slow versus like, decentralized computer programs.
00:02:01.320 - 00:02:54.520, Speaker A: And for example, one data shows that in 2014 and 15 in a bitcoin network, propagating one gigabytes block to 90% of the nodes takes roughly 2.4 minutes. And this time also increase proportionally in terms of block size. So that means that suppose I increase the block size to ten megabytes in the same network condition, it will take roughly 24 minutes for a block to reach reaches 90% of the blocks, which means that it's almost guaranteed that there's another block that creates. Suppose in another 10% of the nodes, which means that we have a very high steel rate. And another solution which are actually pretty popular these days. People discover a multichain cross chain interoperability.
00:02:54.520 - 00:03:55.208, Speaker A: And basically, it's to try to use multiple blockchains. And however it quickly enter. Sometimes we call it hash power dilution issue, or sometimes people call it single shar attack, which basically means that suppose I have 100 homogeneous chains running on the same hash algorithm, then I can find at least one chain with almost one to the 100 hash power of the network. Which means that attacker can easily just rent maybe one to the 200 of hash power in order to do a double budget attack on this chain. And also, besides the security issue, there's also issue in terms of interoperability, how we are able to securely, for example, form cross chain interoperability between these two chains. Especially suppose one chain is being double spend. And how could another chain be able to address, detect this issue and revert corresponding transactions.
00:03:55.208 - 00:04:51.660, Speaker A: Otherwise, we have the additional asset being created on these multiple chains, and which I believe chaining is actually working on these solutions now. And so basically, we observe these two naive solutions and they have their faults across and our fault is that a. It's possible that we are able to combine the benefit of both of them. So basically, by employing multichain ideas, we have a core short layers, which is a list of, we call homogeneous chain, that can run like the process of non overlap transactions are in parallel. So each of chain can has its own consensus. It can be proof of work, proof of stake deposits, any kind of as long as it's chain. And it can run its own ledger.
00:04:51.660 - 00:05:44.080, Speaker A: For example, it can be account based ledger based on EBM, OtxO, any ledger it can be. And we have called root chain layer, which is just a single chain and it does not process any transactions. What it does is just describe the canonical chain of each shaw by just include for example, the headers or hash value of the tip of each chain. And so here is the basic diagram of how the chain looks like. And the line here indicates the hash pointers that each blocks. Basically ensure you hash pointer to link to the previous block. While the root chain, it just includes the hash pointers of these short blocks.
00:05:44.080 - 00:06:45.380, Speaker A: And so now we have n plus one chains and each chain actually runs its own consensus. However. So for the root chain, it can run any consensus as long as its body consists of the body, which means that it describe a single chain, not multiple chain of box of a chain that would be invalid root blocks. It can be proof of work with total fox choice rule or deposit of post. And each straw runs its own consensus to produce a block. And however, in terms of fog choice rule, we will use a special fog choice rule called root chain first choice rule. Basically what it means that when comparing two fog of a shore, before it applies its local fox choice rule, it will first look up its corresponding longest root chain and determine who is the longest.
00:06:45.380 - 00:08:11.080, Speaker A: And after applying the root chain, and then local consensus will be applied and this is a very simple folk choice rule. And there's a very strong implication in terms of security of this root chain. First rule for choice rule of each straw is that a double spending attack on any straw of a sharp block that is already basically included by the root block blue chain must also revert the corresponding rubblocks. So, for example, suppose this is the ledger of network and attacker tried to revert a block. And it's called money transaction in this block by creating a longer fork of this strong block. And when the network detects this sharp block, and so it will say, hey, by applying the fork choice rule of root chain first, it will detect this tip of this tip of the shot block has corresponding roof block here, while this attacking one has corresponding roof block, which is here. Since this one has longer root chain with higher proto difficulty.
00:08:11.080 - 00:09:10.620, Speaker A: So no matter how long this attack it is, it will always fail. Unless the attacker creates another root chain fog that try to revert corresponding root block that includes the target job blocks. And since this root chain has very high security guarantees performance, such kind of attack will be much higher cost than just like a single shot lock. And also we can compare our postal consensus with existing solutions. One popular one is called merge mining. Basically a miner mine both chains which runs the same hash algorithms like maincoin and bitcoin. And however, they have to produce the block in different chains synchronously.
00:09:10.620 - 00:10:06.320, Speaker A: While in our model, each chain has its consensus, so it just produce a block asynchronously. Another popular solution is called ghost, which basically it will consider the hash power of the sale block and include it in the kinetic chain. It can increase the block rate. However, it sacrifice the performance, because some of these transactions are overlapped in this block, in these field blocks, and actually for some consensus. The ledger produced by the song consensus actually is a dag, but it tried to harvest benefits of both the blockchain and dag. It has a very clear security model because it employs consensus. So the given two ledger, I can easily tell which one will be selected or chosen as the canonical ledger of the network.
00:10:06.320 - 00:10:51.970, Speaker A: And it has a highest approved than a single blockchain, because all the blocks in each shroud blocks are produced asynchronous. And there are a lot of topics regarding ozone consensus. For example, what are the token economies of the root chain and shark chain, so that the root chain are incentives to include blocks of shards. So that this is basically a foundation of how the consensus work. Another topic is like, hey, now we have suppose 100 shards. How could we dynamically add 101 shards in the network. Suppose we pass by either a network upgrade or a governance model.
00:10:51.970 - 00:12:01.240, Speaker A: And another is security. Is that how we are able to further enhance security? By combining football stake, which we both have an idea called football stake work, which I will present in the after this afternoon in pop up note at 06:00 p.m. And another topic is how we are able to perform cross shore transactions. For example, by sending US assets from one shot to another sHA in a scalable way and also secure, which we prove that actually both in shard transaction and crosshair transaction in the network can share the same security guarantee, as long as we have some protocol built behind. And also heterogeneous shards, which can run different, for example, ledger or virtual machines. And so I probably skip all these details. So for some consensus, actually it's just kind of blockchain relationship like blockchain and bitcoin, and just provide a way that we can produce ledger but leave a lot of space.
00:12:01.240 - 00:12:56.040, Speaker A: For example, how the root chain looks, what kind of consensus root chain looks like and what the consensus of, for example, is charging looks like. For example, one example is that the root chain runs book of work and also charging run for work. So we can adjust this hash power by incentive, different incentive on these chains. We can also, for example, have the root chain run proof of work, while sharding proof of stake and employ the strong security of proof of work. For example, hash value as the random value to select the stakers. And you can also, for example, run depos in the root chain and then for destroying from proof of work, so that you can enjoy the fast finality of depos, while keep some kind of level of the decentralization. Since for work, the miners can still join the network and contribute the hash power to the network.
00:12:56.040 - 00:14:14.960, Speaker A: And so we just released our technical white paper of for some consensus, which is in our paper, basically we mathematically describe what the consensus looks like, what kind of ledger it will be produced, which is kind of chain of blocks, and how we prove that why every double spending attack on sharp block must also reverse for corresponding roadblocks by mathematical proof. And also we demonstrate how this cross shot transaction, these messages can be securely transferred from one shot to another shot. And so now we go to crockchain, which basically is the first realization of Boson's consensus. Right now it used the proof of work and using the hash of the root chain. And for each frog, it actually can adopt whatever consensus hash algorithm it is. Right now it's using account based ledger and also EVM as all the Shaw Ledger and transaction model. So we can easily incorporate with chainlink and deploy this contract triggered by the oracle that produced by Chainlink.
00:14:14.960 - 00:15:36.264, Speaker A: And we also implement a class feature which basically within a full node, we are running it as a cluster and it will contain a root node and multiple shy nodes which can work in either small trust mode or non trust mode so that it can enjoy different security level. And this is kind of like we can easily, for example, run a node, scale a node, multiple machines which we have the open source code and invite our community members to join for a TPS competition which everybody just create those cluster and create as much as node they want. And the highest number they can get is 55,000 transactions per second. And so our main net was officially launched on April 30, 2019. And here is the parameters that are run on top of the network. And so we are also proud to collaborate with Chainlink in the area of Oracle. So we are happy that we are able to, for example, scale this EVM using this multi chain concept.
00:15:36.264 - 00:16:43.600, Speaker A: And now we are able to trigger all these smart contracts using the Chainlink oracle node and to perform a lot of fancy things, for example, interoperability between different chains like Easter or etc. And we are looking forward to more collaborations once the network grows much greater. And so many thanks for attending my presentation. Do you have any questions? What happens to the. Good question? So, any question? Yes. So the question is, if there's a caution short transaction happens in the network, how we are able to prevent double spending? So let's take an example of a simple crosshair transaction, basically balance transfer. I have an asset on Sha zero.
00:16:43.600 - 00:18:08.700, Speaker A: I want to move this asset to Sha one, and I want this transaction to be automatic and there's no extra assets being created. Even source transaction or source message is substantial. And so the key point here is that in order to make sure this withdrawal, we have to build a hyper after relationship of withdrawal transaction and deposit transaction, which is basically construct a partial order. So back to this curve, back to this ledger. So for example, suppose there's a transaction that sends the asset from sha zero to shaw one, and in order to deposit transaction to be processed, the corresponding block must acknowledge the corresponding rule block, which basically here each straw has two hash pointers. One is changed to the previous block, another is changed to the root block, and make sure that it is also mono county increasing in terms of block height. And so then once it includes, then it's able not to process this deposit transaction.
00:18:08.700 - 00:19:01.770, Speaker A: And now if there's a double spending attack falling in the rule chain. First choice rule, which means that if this one has been double standard, that means the corresponding rubra must be also double banned, which means the corresponding deposit transaction is also being double banned, which means that all this will be reverted back to the state of the previous roadblock. So we guarantee that there will be never new asset will be created. First and second is that such kind of double spending attack must also attack the root chain. So basically, the instrument transaction and quotient transactions share the same security level, as long as it's included by the roblox. Any other questions?
