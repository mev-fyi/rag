00:00:00.170 - 00:00:01.200, Speaker A: Live right now.
00:00:01.970 - 00:00:03.518, Speaker B: Oh, are we live right now?
00:00:03.604 - 00:00:04.400, Speaker A: Oh, cool.
00:00:05.650 - 00:00:23.110, Speaker B: Yeah, let me share the link with our community right now eventually.
00:00:23.530 - 00:00:29.870, Speaker A: Sweet. We are live. Welcome everyone. You, I just dropped it in the chat for you. Soda.
00:00:30.610 - 00:00:42.978, Speaker B: Yep, just done. I just share the information with our community right now.
00:00:43.144 - 00:01:01.990, Speaker A: Awesome. Cool. Well, welcome everyone. Really excited to have soda and martine of plasm here today. Yeah, without further ado, really excited to learn more about how to use Chainlink on parachains and polkadot and everything that you're working on at plasma.
00:01:03.130 - 00:01:56.130, Speaker B: Cool. Yeah. Thank you Kanan for having us. So today I'm really excited to talk about what plasma is and what we are working on right now in the vision with the polkadot and also how to deploy smart contract on the top of plasma network. So let's get started. Let me see. Can you see my screen right now?
00:01:58.260 - 00:01:59.490, Speaker C: Yes, we can.
00:01:59.860 - 00:03:19.630, Speaker B: Cool. Hello everyone, again, thank you for having me and I'm really excited to participate in Chainlink hackathon and we are actively looking for a developer who can make Chainlink Oracle on the top of plasma network. And today I'm going to talk about what plasm is and what we are working online now and also how to deploy smart contract on the top of plasma network and hopefully Martin can share some demo how to deploy contract on the top of our testnet. So I'm going to talk about plasma network. So Plasma Network is a multi batch machine smart contract hub on Polkadot that support Ethereum and layer two technologies such as ZK, Roadap and the optimistic road app. We have been working on scaling solution on the top of polka Dot and we have received around six grants from the web three foundation and we have already implemented plasma and the smart contract playground and the ECDSA signature and the ECDSA for hardware. And we are also implementing ZK Rowrap which is 50% done and the optimistic roll up which is 50% done right now.
00:03:19.630 - 00:04:09.980, Speaker B: So what do you mean by multibatching machine? So plasma network support both solidity Ethereum batch machine as well as webassembly. This means you can deploy existing solidity contract on the top of our Ethereum batch machine and you can also deploy Polkadot smart contract on the top of Webassembly and it's ready today. So you can deploy any sort of contract by using existing tool such as Metamask remix and so on. And today I and Martin will be talking about Plasma Network and I'm founder of Plasm. My name is Sota Vatanabe and today we have Martin.
00:04:12.560 - 00:04:32.950, Speaker C: Hi, everyone, my name is Martin. I'm infrastructure developer at Plaza. So I'm also one of the early ambassadors from Plasma Network. Started as ambassador for a program, enthusiastic community member, and now I'm working together with SOTA to build Web 3.0.
00:04:34.040 - 00:05:07.320, Speaker B: Cool. Yeah. Thank you for the introduction. All right, so what's prasm network in one sentence? Prasm Network is a multibatcher machine smart contract hub on Polka dot that support Ethereum and data. Two solution like zk Rob and the polka dot consists of delay chain and the parachain. So relay chain is the heart of the polka dot, which is developed by parity technologies and web three foundation. And we have a parachain.
00:05:07.320 - 00:05:59.810, Speaker B: So parachain is the own blockchain which has own logic. So parachain can be smart contract parachain, defi hub, parachain, iot parachain, et cetera. And we are making smart contract parachain because Polkadot relay chain, the heart of the Polkadot, does not support smart contract functionality by design. So no one can make application on the top of Polkadot relay chain. In this sense, we need at least one parachain which supports smart contract functionality. And when it comes to smart contract functionality, I think we have two important things. So first one is Ethereum compatibility, and second one is obviously scaling solution scalability, because blockchain does not scale by design.
00:05:59.810 - 00:06:46.552, Speaker B: And this is where plasma networks comes in again. Our plasma network support Ethereum battery machine and also zk roll up. So our network will be scalable. All developers can deploy solidity contract or Polkadot smart contract contract without sacrificing scalability, which means cheaper gas cost, faster finality, and more flexibility on layer two. And also, I'm really excited to share a little bit about our journey on polka dot. So we started making plasma network back in 2019. And at that time, plasma was sort of plasma module on substrate.
00:06:46.552 - 00:07:41.104, Speaker B: So substrate is the foundation for making polka dot parachain. So it's sort of like a WordPress. So you can make all web page by using WordPress, and you can make all blockchain by using substrate and which is developed by parity technologies. So when we started our development, we have been working on plasma module, and now we are working on parachain, making parachain. And we got around six grants from the web three foundation and we have already accomplished plasma module, smart contract, playground, ECDSA. ECDSA for hardware. And we are working on optimistic virtual machine, optimistic roll up and the ZK roll up.
00:07:41.104 - 00:08:38.224, Speaker B: Optimistic virtual machine is the subset of optimistic rollup. And also I would like to talk about ECDSA a little bit. So eCDSA is cryptography, which is used for ethereum. And now you can make prism network address public key by using your Ethereum private key because we support ECDSA. This improve user experience because you can make plasma network address by using your Ethereum private key. Also this is sort of technical achievements. So we became the first Polkadot testnet parachain back in 2021, which is one month ago.
00:08:38.224 - 00:09:25.680, Speaker B: And also we have deployed the first webassembly smart contract on the top of polka dot testnet parachain. And we have completed the first ever cross chain messaging, passing messaging transaction between plasma network and Akara through Polkadot. So the core functionality of Polkadot is interoperability. So you can transfer the message and data from one parachain to another parachain. And last month we made it happen with Akala. And now around six projects are connected to Polkadot testnet. And you can send a message between plasm to Akala, plasma to another parachain and so on, back and forth.
00:09:25.680 - 00:10:28.500, Speaker B: And more importantly, we supported Ethereum budget machine on the top of Polkadot testnet. I think some of the Polkadot parachains support Ethereum batch machine, but actually what they're doing is they are supporting Ethereum budget machine on the top of independent substrate chain. So it is not polkadot parachain. But now we support Ethereum batch machine on the top of Polkadot testnet testnet parachain, which means you can deploy the contract on the top of Polkadot instead of independent substrate chain. Yeah. Interoperability was a buzzword in a few years, but now it became a reality. So we are really excited to make it happen and use cross chain messaging passing and make interoperable marriage chain decentralized application on the top of protein network.
00:10:28.500 - 00:11:18.260, Speaker B: Yeah. And our ecosystem is getting bigger and bigger. We have a partnership with Microsoft, Akala API three and the long hash and UC Bakri obviously with chain link. And we have already used the chain link Oracle on the top of plasma network and also our smart contract on ethereum. And we are going to start Microsoft Azure program with our community. So a community member can deploy nodes, can make nodes on the top of plasma network by using Microsoft Azure. And during this hackathon, I'm really excited to see a chain link integration on the top of Polkadot Testnet parachain, the plasm testnet parachain.
00:11:18.260 - 00:12:15.570, Speaker B: Cool. So I'm going to briefly talk about how to develop decentralized application on the top of plasm network. So we have three network right now, the dusty network and Rococo Testnet and the plasm. So basically the dusty network is independent testnet which is just a substrate chain and we support Ethereum Virgin machine as well as Webassembly on the top of this testnet. And we also have a plasma network part testnet parachain on Lococo. So Locoko is Polkadot testnet for parachains. So we have already connected our blockchain to Lococo and you can deploy solidity contract and webassembly contract on the top of Polkadot testnet instead of dusty network.
00:12:15.570 - 00:12:55.246, Speaker B: And now we have already launched a main net but Mainnet is locked right now so no one make transaction. But we are going to connect plasma network to Polkadot once it's ready. And Polkadot is not ready yet. Yeah, I hope we can connect our blockchain to Polkadot in this year. Yeah Andy, this is super simple architecture. So we have a plasma network core which have the core functionality of frasm networks. And also we support both Ethereum virtual machine as well as webassembly environment.
00:12:55.246 - 00:13:53.506, Speaker B: So you can deploy solidity contract or bypass contract on the top of EBM Ethereum virtual machine and you can deploy Polkadot smart contract ink smart contract on the top of webassembly and these contracts can interact each other. And also we are making bridges right now. So we are making secret network bridge by using chainsafe bridge function and MovP will be ready in weeks. And yeah we are going to explain how it works in different cloudcast or webinar. And also we are working on Ethereum bridge right now. So once it's ready you can use existing Ethereum dapps on the top of plasma networks without compromising interoperability. So basically plasma network 1.0
00:13:53.506 - 00:14:47.586, Speaker B: will be a polka dot testnet parachain and the plasma network 2.0 will be a merge chain smart contract hub which has a lot of bridges. Yes indeed. Today I would like to talk a little bit about our documentation as well. So we have a documentation and if you are interested please go to Docs plasmnet IO. And yeah, we have already written what is plasm network and why we are working on Polkadot and our functionality and our load on the top of Polkadot. I think the important things is this page, the smart contract.
00:14:47.586 - 00:15:40.170, Speaker B: As I said before, you can deploy solidity contract, Piper contract and ink contract on the Topo plasma network. And this is a tutorial how to deploy the contract on the top of parasite network. So let's see one of them, I think Martin will be showing how to deploy solidity contract on the top of dusty network. So basically this will be simple. So you can use Linux and you can paste smart contract here and you can connect the metamask to dusty network which is substrate based. Our testnet and we have already prepared for RPC. So this is the RPC and the actor connecting metamask to dusty network.
00:15:40.170 - 00:16:28.966, Speaker B: So you need PLD token, dusty network token or your metamask. But metamask only support Ethereum account, right, starts from zero X, but dusty network is substrate blockchain which does not have ethereum account. So substrate based blockchain account starts from five. This is where our combatant comes in. So our combatant looks very simple. But once you fill out your Ethereum account here so you can see your substrate account. So basically this substrate account comes from your Ethereum public key.
00:16:28.966 - 00:17:55.518, Speaker B: We have already implemented ECDSA signal function on substrate. That's why you can use ecdm address on the top of substrate. Yeah, you need PLD tokens. So feel free to join our discord here we have around 9000 people on the top of Discord and yeah, postet is ready today. Yeah, actually posted is ready today. We have updated the postet so feel free to jump in Discord and ask PlD token, where is the faucet? Yeah, here free to use the faucet and ask PLD token to the community. I would like to talk about a little bit about our Twitter account Discord account and medium Discord is not written yet, so I'm going to add our discord link here and I'm going to share this slide on Chainlink Discord group as well as plasma Network Discord group.
00:17:55.518 - 00:18:01.860, Speaker B: So feel free to use. Yeah. Matt, are you ready?
00:18:03.910 - 00:18:08.420, Speaker C: Yes, I'm ready. Let me share my screen.
00:18:09.350 - 00:18:10.100, Speaker B: Cool.
00:18:30.110 - 00:18:32.220, Speaker C: Okay, you can see my screen?
00:18:32.910 - 00:18:33.660, Speaker B: Yes.
00:18:34.350 - 00:19:07.474, Speaker C: Okay, great. I will do some little tutorial about deploying contracts on our testnet. As you can see I'm now on our testnet here. Our testnets can be found on polkadot GS.org and then you just have to choose on the top left you can choose for test networks and then you can choose for dusty. This is very important to be connected to a testnet before deploying some contracts. But it wasn't.
00:19:07.474 - 00:20:01.106, Speaker C: So I will first repeat some things SOTA already mentioned, like our documentation. I really encourage you to look into our documentation. We build around smart contracts or if you're interested in building a validator? Feel free to use our guides to do that. Also some a little bit more information about our layer two applications, ink smart contracts and so on. If you want to know more about substrate, we have also a very great website that you can see here on substrate dev where you can also learn more about building smart contracts with ink, creating a project with ink and so on. It's very useful if you want to know the basics around substrate. Today I will generate my solidity contract with Solong.
00:20:01.106 - 00:20:56.220, Speaker C: Solong is a solidity compiler. It's also supported by Web three foundation. I will be doing this on my Windows environment because I didn't have time to set up everything on my Linux. Let's start with Solong. So when you go to our medium medium plasmnetwork you also find here tutorials and in these tutorials you also find something like compile smart contracts with an solidity on Windows. I will be following this one right now, but it's actually the same if you do it on Linux or on your Macintosh, just some other commands. So just follow our tutorials we made for you guys and for our community.
00:20:56.220 - 00:21:46.770, Speaker C: And if you have any problems feel free to jump in our discord. I'm there, all our developers are there. So we are always ready to give you some support regarding building your smart contracts on a testnet. So I will just explain the main basics around what I did. If you are using windows you must install the docker, then you must install so long. Like I already told you, I will not do everything here in this live session because sometimes it will take time to build so long and to build everything. So I will skip all those and I will be going to my contact.
00:21:46.770 - 00:22:24.840, Speaker C: I'm not sure if you see my screen now, do you see my common screen or do you also only see my text? Only smart text. Okay, let me try to change this and I want to share my screen but my will see everything.
00:22:26.490 - 00:22:27.238, Speaker A: Yes.
00:22:27.404 - 00:23:11.410, Speaker C: Okay so I created solidity contract here. Just a basic solidity contract. Just my contact is just hello world where I just add a string to where the contact will greet me with hello world. Just a very simple basic solidity contract. So after I deployed everything like I did in a tutorial, I just let my that's the wrong one. I will not type everything over because it will take too long. So if I just run this through my docker, nothing really happens.
00:23:11.410 - 00:23:49.878, Speaker C: But as you can see my contract is now made here hello world contract and now I can just deploy this contract on our testnet how to do this. Just go to our testnet. You need to create an account here. When you have an account you also need some PLD, some test tokens. Just come to our discord so we can send you one or use our facet website. We just launched to get some PlD tokens. Now how do I deploy my contract? I would just go to my developer, go to contracts.
00:23:49.878 - 00:24:14.240, Speaker C: I see I already got it deployed. Here let me delete this. Okay, so I upload and deploy my code. I need my hello world contract. Next let's say I will end down 100 pld. Just deploy my.
