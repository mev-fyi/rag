00:00:03.690 - 00:00:22.640, Speaker A: Hey everyone, welcome to the fifth smart contract automation Masterclass. Today we're joined by Planetix. We'll start things off by doing a quick round of intros. I'm Mike Stone. I am the market strategy manager for automation at Chainlink Labs. James, I'll pass it off to you.
00:00:23.570 - 00:00:38.294, Speaker B: Thank you, Mike, for the great introduction. Hey everyone, my name is James Lauden. I'm a principal solutions architect at Chainlink Labs. And with that, I'll turn it over to our friends at Planet Ix for a brief round of intros as well. Lucas, you prefer to take it away?
00:00:38.412 - 00:00:47.820, Speaker C: So, my name is Lucas, I am a CpO at planet Ix. And yeah, been working with chainlink for some time now.
00:00:48.190 - 00:00:54.030, Speaker D: Hi guys, my name is Emil. I'm the smart contract lead at planet.
00:00:55.010 - 00:01:54.274, Speaker A: Great, thanks everyone. So as a quick agenda today, we'll be talking about two products that Chainlink offers, Chainlink Automation and Chainlink Vrf. We'll talk about the benefits of using these, how they can be combined to offer a really unique and cool solution and even offer some cost savings. And then planet ix will go through the game they've built and how they've used this chainlink technology to power parts of their game and also save some money in gas costs. So we're going to start things off by doing very quick intros on Chainlink automation and chainlink Vrf. So I'll start things off and we'll just talk through chainlink automation. So, as you may or may not know, smart contracts are asleep by default, right? So they require someone or something to come along and interact with them in order for them to do some work.
00:01:54.274 - 00:02:48.770, Speaker A: So what we've built at Chainlink is a way for a decentralized network of nodes to monitor some smart contract and determine when some transaction needs to occur on those contracts to force some interaction to happen. And the way this works is, again, you've got these nodes. These nodes are constantly doing a check against this contract that you've deployed on chain. And in order to determine what work they need to do, you need to include this checkup keep function in a contract that you've written. That checkupkeep function will return a boolean value of true or false that determines if work needs to happen. And if so, they'll call a secondary function called perform upkeep. And that perform upkeep function ultimately results in a transaction on chain.
00:02:48.770 - 00:03:43.250, Speaker A: Now, the value in doing this work off chain, this check upkeep function, is you can do lots and lots of computation off chain, pass the result of that on chain, and you can save lots of gas cost in doing so, because you're only passing the end result, which is really cool. So there's lots of value in having multiple nodes performing this work because it adds security and decentralization. And if one of these nodes goes down, you can rest assured that another one will pick the job up and you don't have to worry about any downtime. So Chainlink automation today is live on ethereum, polygon, binance, chain avalanche, phantom, arbitram, and optimism. So that's chainlink automation. James, I'll pass it off to you to talk a bit about chainlink VRF.
00:03:44.870 - 00:04:46.582, Speaker B: Yeah, I really appreciate the overview on automation, Mike. So I would love to talk to you a little bit about chainlink VRF and what makes it so different and why it's actually so needed, not only across the entire crypto ecosystem, but specifically for games. So chainlink vRf stands for verifiable random function. And generally this is a way that you can create randomness that is cryptographically secure by combining on chain and off chain information in order to deliver randomness for your web two and web three application needs. So normally, if you're using randomness from the blockchain itself, blockchains are deterministic, so you can actually determine what the value of any rng derived only from the blockchain itself. Now, what makes VRF different is combining those two different types of off chain and on chain information in order to make randomness that is tamper proof. That means not even the oracles devs, anybody can actually alter this.
00:04:46.582 - 00:05:37.942, Speaker B: And it also considers these different attack vectors and nuances of each chain. It's completely unbiased, so there's no way to predict what the randomness will be. So as Planet IX integrated this into their game, there's no way that they could predict anything that's actually derived using this randomness. And what's really cool is any user, whenever you generate this RNG, they can go and check that it was actually cryptographically proven that it's secure and verifiable. So it's super easy to integrate. All you do have to read our docs, input our contracts, and then you can deploy and go to get verifiable random numbers in your contract. So to talk a little bit about how this works is first you would have a user contract, and this would actually be the contract that you would like randomness in.
00:05:37.942 - 00:06:52.000, Speaker B: So this could be an NFT drop or your game contract, so on and so forth, and you would actually request randomness, and this would send a request to our VRF coordinator. Now, our VRF coordinator then concatenates this information by using the block hash and the nonce along with basically a randomness request. And it combines all this information where an off chain VRF service node is constantly listening to each of these blockchains for an event emitted by this VRF coordinator. Whenever this event is emitted, it then concatenates all this information with a key associated with this VRF service node, and then provides a response or callback function to the VRF coordinator, along with a proof that the randomness was verifiable and securely generated. Ultimately, then, the VRS coordinator calls back to your user contract with the RNG seed to use for any purpose that you would like. Now currently, Chainlink VRF is on avalanche, phantom, ethereum, polygon, binance, arbitrum and more. And if you would like Chainlink VRF on your blockchain, feel free to get in touch with us and we'd be happy to evaluate that for your needs.
00:06:52.000 - 00:07:17.960, Speaker B: So with that said, that we've gone over a little bit about Chainlink VRF. Now I would like to explore a little bit about how you can actually combine these for really exciting use cases. So this is specifically for automation and VRF to essentially implement and optimize batch minting using randomness. So with that, I would like to turn over to Planet IX for a little more explanation on this specific use case.
00:07:18.670 - 00:08:35.858, Speaker C: So Planet IX isn't just any game. It's the world's largest web three gaming platform, where players can earn rewards in the ix token, the game's own native currency. So since going on chain in November 21, it has risen as a leading game across all blockchains, with 130,000 active wallets and 220,000 wallets holding the ixT. Most of these players are onboarded from web two and had never interacted with the blockchain prior to Planet IX. So what sets Planet IX apart, I think, is how massive it is. We have our own marketplace, our own Gamefi defi, section two big game mechanics where you have the full scale Earth as your map, as the playing field. The game is built up on ten different corporations that all have different functionality into the game.
00:08:35.858 - 00:09:48.582, Speaker C: Today we're going to walk you through a bit of one of the corporations that have a very strong connection to have Chainlink built in deep into their ecosystem. The farming game on Planet IX is called Mission Control. It looks a little bit like this when it's very well developed. So what happens when it's not well developed here is that waste bags basically spawn on these tiles here on my screen. So you farm these waste bags and you're supposed to transform them into more valuable assets that you then build, that you build and construct facilities with to make it more interesting. More fun for all players is by involving a lot of probability into the game. So here, for instance, you can see that we can turn this waste that you should see here into different assets.
00:09:48.582 - 00:10:10.480, Speaker C: So the blueprint here, for instance, has a 1.37% chance of being found in the waste. And to make this happen, we use chain link VRF. And I think, Yamil, you could go through how this works more on a more detailed level.
00:10:10.930 - 00:11:14.962, Speaker D: Sure. So we have prospecting, the prospecting contract, where you refine ways to get some type of biomods, or you can get nothing. When we first built this contract, we only used VRF. And we used the VRF to generate a run number for what biomod that the user should get on their prospecting order. And the prospecting works in the way that. So you place an order and you pay 25 waste, and then you have to wait for like 6 hours, and after this 6 hours, you can claim your prospecting order, and then you will gain some biomod or nothing, or a blueprint. And when we first built this, we used the recommended way of using VRF, where we mint the asset inside the VRF callback.
00:11:14.962 - 00:12:02.926, Speaker D: Um, but this quickly got very expensive when we reached about 10,000 calls, or 10,000 prospecting orders made per day. So we had some logic inside the VRF callback and also the mint there. So we paid a lot in link and gas fees there, so we wanted to optimize it. And our first instinct was just to reduce the gas costs. So we moved most of logic out from the callback, but it didn't save enough. So then we moved even more out. And the only thing that the VRF callback did was to save the random number that the user requested.
00:12:02.926 - 00:12:45.250, Speaker D: And instead of doing this request, when the user claimed an order, we did it when they created an order. And then we saved the number. And when they claimed order, they had the random number already generated. But then we got up to around 100,000 prospecting orders per day. And a lot of VRF calls, where we save a number each time, still gets pretty expensive. So we had to come up with a better idea. And that's where we started to implement automation in the loop.
00:12:45.250 - 00:13:46.630, Speaker D: So we wanted to batch many order at the same time. So when a user created an order, we added their order id to a batch, and then when the batch was ready to be processed by automation, we asked for a random number and we got one random number for each order id. And then we saved each random number for each already. And when the user then claimed their order, they had it. So we saved a lot by asking for maybe 100 different random numbers in the same time. But this was also pretty expensive when we're up around 100 or 150 order placements per day. So we changed this system a little bit by just getting one random number for each batch.
00:13:46.630 - 00:14:59.750, Speaker D: So there's a batch with a lot of random numbers or a lot of order ids and it just has one random number. And then when the user tries to claim their order, we calculate a new random number from the order id and the random number for this batch. And this is where we are today. Okay, so this is the order automation contract which the prospecting contract uses to get random numbers. So first we have a batch order struct which contains the timestamp when the batch order was created and if it's pending and all the order ids that's inside this batch. And we use a queue system to have all the batch orders in a queue. So basically we basically have a sliding window so we know which one are processed and which one is the next in the queue.
00:14:59.750 - 00:15:59.546, Speaker D: When a player tries to create a prospecting order, they will call add request to batch, and if a batch order is already created, we have one in queue. We will just add the order id to the batch. And if we don't have a batch order ready or if it's too full, we will create a new batch order which we add to the queue. And then every block the shainlink automation will call and check upkeep where it calls on should perform upkeep. Here we check if the batch order is pending and the batch order will be pending when a random number is requested for this batch order. And it will also check if there is something inside this batch order queue. It can be empty.
00:15:59.546 - 00:17:35.600, Speaker D: And it will also check if the time since this batch was created has gone over some interval. I think right now we have about 100 seconds. So from the first and who enters a batch, it will be a maximum of about 100 seconds until this batch will be fulfilled. If this batch order is ready to be processed, if it meets these requirements, perform upkeep will be called from automation and we will ask for a random number and set and set the and set this batch to pending. And here inside the fulfillment words, we basically just set the random number to the corresponding batch and move the pointer. So when a user then tries to claim their order, they will call claim order on prospecting and it will call this get random number for order where we get which batch index this order id is in and then we get the random number for this batch and we generate a new random number with the already and the random number for this batch. And that's basically the whole order automation right now.
00:17:37.010 - 00:17:45.380, Speaker A: Emil, if I can ask a question, do you have an estimate on how much you saved by switching to this model, the batching model?
00:17:46.870 - 00:18:11.610, Speaker D: I know that during some point we were probably up around like 500, maybe 600 link per day and now we spend maybe half of that per month. And this is compared to maybe the first version where we minted and did some logic on the callback.
00:18:13.390 - 00:18:14.140, Speaker A: Wow.
00:18:16.990 - 00:18:22.590, Speaker D: It's not much code but it's very important and it has saved a lot of money.
00:18:22.740 - 00:18:29.450, Speaker B: Wow. So that's like 80% to 90% cost savings by including automation with the VRF.
00:18:29.610 - 00:18:41.860, Speaker D: Yeah. And batching at the highest point we had around 200,000 prospecting orders created per day.
00:18:43.590 - 00:19:02.730, Speaker B: I remember when we first integrated VRF for the eternal labs use case, all of a sudden it took off, started doing hundreds of thousands of requests per day. And then it was really nice that we could figure out a solution by incorporating another chainlink product to get this resolved.
00:19:03.230 - 00:19:09.500, Speaker D: It escalated very quickly. The current code didn't hold up.
00:19:11.410 - 00:19:14.350, Speaker B: Success is a good problem to have ultimately.
00:19:14.690 - 00:19:26.180, Speaker D: Sure it's a fun problem to have. Also you have to do it fast because you know that it's expensive if it doesn't come out.
00:19:27.910 - 00:19:31.970, Speaker A: For sure. Emil Lucas, what's coming next for Planet Ax?
00:19:33.030 - 00:20:34.086, Speaker C: Yeah, so we're currently working on improving the foundation a little bit. So in the coming weeks we're launching a brand new marketplace which it has the look and feel and functionality of some of the major marketplaces out there. So it's going to be very interesting to see the reception of that. We're also launching a massive airdrop competition. The final airdrop from the vesting schedule is happening this year. So we've designed a really cool, nice quest system where people can play their way to bigger airdrops. Basically that's maybe more on the activity side.
00:20:34.086 - 00:21:32.010, Speaker C: But then we're also looking towards, we're looking cross chain, we're in talks with some of the bigger chains on expanding the game. Both launching new game features on different chains, moving the token to two or three new chains. But also looking into finding a way where you actually can play the core part of the game from multiple chains together with people from other chains. So that's very interesting. Probably sometime in the fall where that should become a reality. Also, another big project that we're working on is the PvP. Gaming.
00:21:32.010 - 00:21:57.010, Speaker C: Gaming in a mobile app, high scores, leaderboards, players, player onboarding from web two. All of that. Very interesting year it has been. But also what's going to happen. This is going to be by far the biggest year for Planet IX production wise.
00:21:57.670 - 00:22:01.570, Speaker A: Can we expect another Twitch live stream when that's live PvP?
00:22:01.910 - 00:22:07.240, Speaker C: Definitely. James will probably beat me.
00:22:08.730 - 00:22:20.620, Speaker B: We'll see. I saw your setup in the net empire. I think I'm lacking a little bit. I got some work to do, some farming to do.
00:22:21.070 - 00:22:32.858, Speaker A: Great. And Lucas Emil, where can people learn more about Planet IX? Or where can they go to interact with the game or get in contact with mean?
00:22:32.944 - 00:23:21.614, Speaker C: Planetix.com? That's where the magic starts. We have a massive community, mostly asian based, but there's a big english speaking community as well. Discord is a great place to start. We have 2030 people there who are actively helping people getting on board into the game. If you're a little bit more into crypto already, I would definitely recommend starting in the gamefly section looking at how to earn in the game and then go get those assets that you need to get into those staking pools that you want. Because that's what the game is all about right now.
00:23:21.614 - 00:24:14.542, Speaker C: It's play to earn and yeah, that's how I would start anyway. But we also have a great news section on the website but also a pretty decent gamebook that you can access all of this from planetax.com. So start there and take your time. This is not a fast game. You really need to you play a little bit every day and it's that everyday action over time that will make you succeed. It's very difficult to go from zero to 100 in one day for sure.
00:24:14.596 - 00:25:09.914, Speaker A: I think good advice. Very exciting stuff coming. If I can show my screen and describe one thing that may be helpful for anyone viewing this, we've actually created a template that can provide the same functionality that the Planet IX team has used to combine automation and VRF to create similar functionality and allow you to save costs when minting nfts or any other mass use of VRF. So feel free to head here. It'll take you directly to our docs where you can learn more about it and see the code and the docs. Of course link to GitHub where you can really dive into the details and again deploy this on your own. Last thing, a few links here if you're interested in using automation, head to automation chain link, same for VRF.
00:25:09.914 - 00:25:26.120, Speaker A: VRF chain link. And then we've got Planetix here as well. Planetix.com head there. Make sure to take advantage of the advice you heard from Lucas here before we hop off, before we sign off. Emil, Lucas, James, any parting words?
00:25:26.970 - 00:25:53.260, Speaker C: Parting words? I mean it's awesome to work with, awesome to work with you guys, and we look forward to evolving this even more. I know Yamil has some ideas on how to improving this automation some. So yeah, no, definitely fun future. Let's fucking go.
00:25:55.090 - 00:26:21.350, Speaker B: Awesome. Yeah, and I just want to say from my side as well, it's been a pleasure working with you over these past six or seven months. So I think these features and seeing the exponential rise of the adoption of your game has been super exciting also from the outskirts looking in. So yeah, it's been really great working with you and seeing the awesome innovations you've basically come up with using our solutions.
00:26:21.850 - 00:26:24.680, Speaker C: Great, thanks for having us on the show also.
00:26:25.370 - 00:26:28.840, Speaker A: Yeah, thanks so much, appreciate it. Talk soon.
