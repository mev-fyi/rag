00:01:27.460 - 00:01:27.672, Speaker A: Hello.
00:01:27.726 - 00:01:34.504, Speaker B: Hello. How's everybody? Welcome, welcome. How's it going, Harry? How are you?
00:01:34.702 - 00:01:36.200, Speaker A: Good, Patrick, how are you?
00:01:36.270 - 00:01:51.792, Speaker B: I'm doing well, thanks for asking. How's everybody doing? Oh, whoops, sorry. I got a, got my own feedback on there. Great. Well, yeah, as people trickle in, we're going to be going over something fantastic today. Really exciting. We have Harry with us here.
00:01:51.792 - 00:02:29.272, Speaker B: He is a two time chain link hackathon winner, so definitely knows what it takes to make a good submission, make a really cool project, make a really fun project. And he's going to be going over basically what a good submission looks like. What are we aiming for? What are the goals? What are we looking to do when we submit these hackathon projects? What are the judges looking for? And obviously Harry has a lot of insight into doing that. So before we jump in and before Harry kind of goes into all the little tips and tricks that he has for us here, I just want to say at the end of the day, the most important thing, though, guys, is submitting and showing your work.
00:02:29.326 - 00:02:29.640, Speaker A: Right?
00:02:29.710 - 00:03:19.050, Speaker B: Because the reason that we have these hackathons is for people to show up, people to have fun, people to get engaged, learn something new, try something new, network, meet some people and maybe become a part of the community, maybe become a full time blockchain engineer, maybe not even do anything, maybe explore, decide it's not for you, and then bounce out. But at the end of the day, the most important thing is submitting your project and not being afraid. We've had projects in the past who after? I'll speak to them, right? We'll have a conversation and they're like, yeah, I almost didn't submit because I didn't think my project was that good, and they end up winning a prize. So it's always, always submit. And then we also have projects who go, yeah, I submitted my project. I didn't win anything, but I learned so much. I got so much value out of meeting people, out of networking and the whole experience.
00:03:19.050 - 00:03:47.350, Speaker B: At the end of the day, that's really the most important thing. But if you're really going for the gold and you really want to make a really powerful, really cool, really fun project, that's really going to catch some eyes and get some attention that the judges are going to like to see, Harry has a way of doing it and has like one twice, definitely very talented engineer, very talented at presenting his engineering project as well. So without further ado, I will let Harry, I'll let you take it away.
00:03:48.600 - 00:04:18.590, Speaker A: Great. Thanks, Patrick. So, hi, everyone. My name is Harry, and I'm a developer advocate for Chain link Labs. And as part of the current 2021 chain link virtual Hackathon, we're going to go through and talk about what makes a winning submission. So we'll show you some of the nuances involved in what makes a winning hackathon project. And we'll point out a few small things that you can do to kind of capture the judges attention and kind of stand out from the crowd, basically.
00:04:19.280 - 00:04:21.404, Speaker B: And then I just wanted to point out one more thing.
00:04:21.442 - 00:04:21.644, Speaker A: Yeah.
00:04:21.682 - 00:04:37.556, Speaker B: Harry recently been on board as developer advocate. So everyone give Harry a massive welcome. He's obviously been in the community for quite some time, and I know a lot of people here know him. But again, welcome, Harry, to be finally being full time with the Chainlink team here. So welcome.
00:04:37.738 - 00:05:02.828, Speaker A: Thank you. All right, let's bring the slides up now and let's get underway. So here's what we'll be going through, guys. So we'll be going through just a quick overview of the current chain link virtual hackathon and kind of where it's currently at. We'll talk a little bit about the UI. We'll talk about how to kind of get your code and documentation in check. We'll talk a little bit about video.
00:05:02.828 - 00:05:30.896, Speaker A: We'll talk about the possibility of having a live demo as well. We'll talk about why your project matters and why that's important. And then we'll wrap things up. And if there's any time at the end, we'll have a couple of questions. So let's go. So, guys, Chainlink virtual hackathon is now live. You can find info at Hack chain Link, one of the premier blockchain hackathons.
00:05:30.896 - 00:06:08.210, Speaker A: And it's a chance to get your project seen by some of the best in the industry. So I think we're currently just finishing or finished up at the midway checking point. And last year was huge. There was a huge number of responses, and I'm pretty sure this year is going to be even bigger, guys. So huge amounts of prize bounties up for grabs. I think it's over 125K worth of hackathon prize bounties. So with so many participants and submissions, let's kind of go through what you or your team can do to kind of stand out and kind of go for one of the top prizes, basically.
00:06:08.210 - 00:06:53.216, Speaker A: But I want to just reiterate what Patrick said before, just before I move on, just over all of these things that we're about to discuss, guys, submitting is 100% the most important part so don't be afraid to put yourself out there. Just you being part of the hackathon and trying is worthy of a submission in itself and it will give you confidence for the next one. So don't be afraid to submit. Someone could even see your work that you submitted that you didn't think was complete already and they might say, hey, that sounds like a cool idea. Do you want to work on completing it together? And you could turn into a fully blown main net ready project that ends up being the next big thing. So you just don't know guys. So definitely submit what you have.
00:06:53.216 - 00:07:49.920, Speaker A: So having said that, let's move on now and kind of go through some of the things that you can do to present your submission in the best possible way. So user interface, the UI can be thought of as kind of like the base of your submission. And I know what a lot of you are about to say because I'm actually in the same boat. You might say, hey, I'm not good at doing a front end or none of my team members are good at doing a front end. How are we going to kind of come up with a decent submission? Now the good news is you don't have to be good at doing a UI, so you don't need to be a front end expert. So if you or your team aren't confident in doing a front end, you can actually team up with others who do specialize in kind of that kind of nuanced work. So even if they haven't worked with blockchain or smart contracts before.
00:07:49.920 - 00:08:42.444, Speaker A: So if you don't know anyone who does front end reach out in the discord, there's people who specialize in that kind of thing. You can hit up social media channels as well. And if you can get someone to work on the front end, specifically, you get a separation of kind of front end and back end and other kind of parts that allows each member to kind of focus on what they do best, which is better for the overall submission in the end. And if you're writing solo in your submission and you're not good with front end, there's some common template starter projects like create React app. Here is a good one. And basically these allow you to spin up a single page app that can be easily modified to suit, basically. So there's a couple template projects that you can use if you're not too confident just to come up with something decent.
00:08:42.444 - 00:09:20.252, Speaker A: Basically. Now the user interface doesn't have to be expensive. It should just be a simple, intuitive and easy to use way to interact with your kind of on chain contracts and other parts of your application. Having said that, a well polished, professional looking UI will help you stand out against the other submissions 100%. It gives the judges a sense of professionalism in your project. It shows them that it's kind of a well polished, live kind of working product. So one personal touch that I like to see and I'll just open up the link my to see.
00:09:20.252 - 00:10:03.576, Speaker A: It's cool to see like a link to the GitHub on the front page. That was a cool thing that Matt added on this one. I've lost count of the amount of times where I see an awesome submission or an awesome application and I want to find out where the code is and I'll have to go googling or things like that farm together here. This is another great example of a UI. I won't go through the video yet, but as you can see in the screenshot, some awesome graphics there, guys. Really cool. So speaking of the graphics, don't be afraid to reach out to the community for help if you need some help with kind of graphics and things for the UI.
00:10:03.576 - 00:10:49.870, Speaker A: We've got some amazing talented artists in the community, and I know in the past for a fact that they've been approached to help with artwork for hackathons that ended up winning prizes. So if you're struggling for things like artwork, definitely reach out for help, guys. All right, let's move on. Next we're going to talk about the code and documentation. So the code is obviously the most important aspect of your submission. After all, this is a hackathon. So apart from it being hopefully complete and in a working state, there's a couple of things that you can address to kind of really help this admission stand out and look like a real world mainnet ready project, basically.
00:10:49.870 - 00:11:37.064, Speaker A: So let's take a look. So apart from the obvious things, which is make sure your code is clean, make sure it's well indented and easy to follow comments definitely help as well. For people that are trying to follow along with your code, apart from those things, there's a couple of things you can do to the repo itself, the repository. I personally think less is more in the repository. Don't include unnecessary files, don't include no modules and libraries that other people don't need to pull from your repository. When it comes to keys and passwords, use environment files or environment variables, don't put them in your repository, guys. That's the best way to approach those things.
00:11:37.064 - 00:12:47.330, Speaker A: And I know that some of the more technically minded judges but they might appreciate some of the little things here. So are there tests in the repo? Have they used any developer tools? Have they used any of the Chainlink developer boxes that are now available, like the truffle box, hard hat box? And I think it's a brownie option as well. Here's an example of a nice clean repo here from a previous hackathon. They've got tests as well, and they've got a good readme as well. So speaking of the readme, the readme is a very important part of your repository, actually, because it's basically the first thing that judges and other developers are going to see when they look at your repo. So you want to make sure you're presenting your code in the best way possible. Now, the repository should be well laid out and it should contain specific things to help both judges and other developers and even members of the community understand your project better and guide them on how to basically deploy it and run it.
00:12:47.330 - 00:13:23.550, Speaker A: So let's go through my example here. So this is the link, my right readme from the last virtual hackathon. So title at the top, obviously. And first things first, just a quick description of what your project is and kind of what's the point of it. Now, if you've got a demo video, which for this hackathon you should, I feel it's good to have it straight away after because you need to remember, not all of the people coming to your repo are going to be technically minded people. And if they see a link to a video, they'll think, oh cool, I can watch a video. So I like to have that as well in there.
00:13:23.550 - 00:14:31.410, Speaker A: If you've got a live demo for your project, definitely include a link to it as well here, guys. And if there's a few moving parts to your project and you feel that having a diagram might help people understand how it all comes together a little bit better, then feel free to add a little diagram here as well. And most importantly is you need clear and concise instructions on how to deploy, how to build, sorry, how to deploy, and how to then run your project. And you need to have it for each individual part, for example, front end smart contracts, et cetera. So you need to have clear instructions for kind of each part here. So I personally actually pull the code into another folder and then follow the steps here like a kind of bouncing bulb just to see if my instructions are kind of clear enough when I kind of do these readme files. Here's another example of a nice clean readme file here with a nice diagram as well.
00:14:31.410 - 00:15:28.884, Speaker A: And I just want to add, if you're not sure in how to kind of lay this out, how to format things and how to basically convey this information, you can actually find an example that you like, such as this one. View the raw markup and then just literally grab it and then throw it in yours and start modifying it so that your reading can kind of be presented in a similar manner. So that's something that I've done in the past as well. Okay, let's move on. So next, the video, the fun stuff. So the video is obviously another important part of submission because it's essentially, it shows a demo of your project to the judges, and it shows them that the code is real and it shows them that code worked, basically. However, a couple of things to know when trying to work out how to really nail your submission video.
00:15:28.884 - 00:16:19.990, Speaker A: So let's take a look. So, at the very minimum, have a video of three to five minutes that shows you or someone demoing your project and kind of explaining each step along the way as you kind of navigate through the UI. But just remember, the judges are going to be watching whole lot of these demos, so there's a few things that you can do to kind of stand out in a good way. So some examples of things that have been successful in the past are little quick intros at the beginning of the video to explain the idea behind your project and capture the judge's attention. So I think audits are dead. This submission here had something that was pretty cool where they kind of give a quick overview of the project with some cool animations. Thought that was cool.
00:16:19.990 - 00:16:46.232, Speaker A: Just remember to keep the majority of the video focused on your project, though. Don't get too distracted. Don't be scared to have fun with it, too, guys. Creativity and humor will appeal to the judges for sure. They are human, after all. So things like music, graphics, almost anything goes. Just remember to keep it appropriate and keep it focused on your project and keep it short, sharp, and shiny.
00:16:46.232 - 00:17:36.910, Speaker A: So it's these little things that will make a video seem well polished and stand out. So just like this example here for gearbox protocol, these guys had, once again, a really cool way to convey their project. And they've got some animations and music, et cetera, just, yeah, really cool. And last one here, whiskey market maker. These guys were great, actually. So they got a great intro of literally pouring a bottle of scotch put into a glass, and they'll then go through and talk about their submission, and they'll even have footage inside the distillery as well, before they then start going through and walking through their project. So yeah, just great.
00:17:36.910 - 00:18:37.168, Speaker A: Speaking of walking through the project, if you're not confident at doing those types of things, once again, you can reach out to someone else in the community and say, hey, if we give you a video, can you kind of do a voiceover for us? And I'm sure you can get someone to help you. So once again, don't be afraid to reach out for help in things that you think you're not the best at or that you're not confident at. So just be sure to remember that the main purpose of the video is to demo your submission. So have fun with it, but don't get too carried away and kind of don't lose focus. So here's a good example of what not to do, which I think is pretty funny. Yeah. Okay, so now that we've talked about the video, let's talk about a demo.
00:18:37.168 - 00:19:35.476, Speaker A: So in addition to having a recorded video explaining your project, you can take things kind of one step further and offer judges and other developers and members of the community a live demo for them to play around with if they want. So this gives them the option of kind of browsing through the UI and clicking through the screens. And I feel it gives them a much more personal touch for your project, basically, and something that they can't get just by watching the video or looking at screenshots. You don't need to do this at all, but I personally feel it adds a nice personal touch. Like I said, once again, it's about standing out from the crowd where possible. So this is a really cool option. Now, if you're not sure where you can host your live demo, there are a number of free or trial based hosting options that you can get plenty of guides on the Internet about it.
00:19:35.476 - 00:20:10.444, Speaker A: You can use GitHub pages and a whole bunch of other things, or you could go full decentralized route and use IPFs and ens if you want. So whiskey market maker, here, have a live demo. Once again, really sleek UI. You can kind of click through the pages, you can try to generate some transactions if you want. And yeah, I thought this one was really cool. And the other example, quickly, gearbox finance. Once again, great UI.
00:20:10.444 - 00:21:50.364, Speaker A: You can kind of click through and see all the screens. Now, if your live demo requires Chainlink infrastructure to host things to support the live demo, such as jobs or external adapters, you can reach out to the node operator request channel in the chainlink discord and kind of say, hey guys, can someone host this job for me or can someone host this adapter for me and someone will be able to help you out there? Or if you want to go the whole nine yards, you can host your own chain link node. There's some free tier options on things like Google Cloud or Amazon Web Services, and there's plenty of guides on the Internet for how to kind of spin up a node in these environments. Now we've discussed what can be done to improve some of these tangible project deliverables, such as the user interface, the code video. Now we're going to talk about the why. So some questions to think about while kind of wrapping up and kind of finishing your submissions. So what's the point of your submission? What problem does it solve? Or how does it make life better for others? Does it address any current social or economical issues? Does it create economic fairness, transparency and efficiency? How useful would your project be in the real world? So judges will favor submissions that kind of clearly address these questions in a positive and meaningful way.
00:21:50.364 - 00:22:46.192, Speaker A: And if you want to discuss a couple of these points in your submission, you can put a few points at the beginning of your dev post submission at the top there, or even in the GitHub readme in kind of that first section that we looked at before. So I think crypto plants were a recent hackathon winner that conveyed this information really well. So crypto plants is basically it encourages environmentally and socially conscious giving to charity, using unique NFTs as rewards. So yeah, I think this was a great example of that. Okay, well, that's kind of it, I think. So to wrap things up, we've gone through some of the things that will help your hackathon submission stand out. We talked about having a decent UI, getting your code and documentation in check.
00:22:46.192 - 00:23:45.268, Speaker A: We've talked about what you can do to your video to kind of capture judges attention. We've talked about having a live demo for people to play around with. We've talked about conveying why your project matters. But in addition to these, don't forget there are other listed judging criteria on the dev post hackathon home page. I think it's near the bottom. There it is. So how complex is your submission technically? Is it a pretty trivial kind of thing with just a couple basic parts, or is it a fully blown technical piece with a whole bunch of moving parts? How complete is the submission? Is it half baked with basic functionality? Or is it a fully blown solution that's ready for mainnet with the applicability we talked a bit about before as part of the why your project matters discussion, so I won't go through that.
00:23:45.268 - 00:24:40.420, Speaker A: And creativity. So how original is your idea? Or even if it's not an original idea, what kind of unique spin have you put on it to kind of differentiate from the others? So keep those in mind too, guys. And if you can address all of those points and also take into account some of these other things that we've talked about today, like the UI, video code, docs, et cetera, then you'll definitely have a submission that's sure to get the judges attention. It'll help you stand out from the crowd and it will give you the best possible shot at winning some of that awesome hackathon prize money. Now, if you do have any questions after this or at any stage from now until when the hackathon ends, definitely reach out to people, to the team, to anyone in the chain. At Discord. There are specific channels that are set up for this hackathon.
00:24:40.420 - 00:25:03.310, Speaker A: Channels for getting technical help, channels for finding teammates, you name it. So definitely go there if you have any questions or issues and you'll be able to get help someone. So that's it for now. Maybe I'll pass it back to Patrick and we'll see if we have any time for a couple questions.
00:25:07.840 - 00:25:30.464, Speaker B: Yeah, awesome. Thanks so much, Harry. That was fantastic. So, yeah, we'll just give it a couple of minutes and see if there's any questions for Harry here on winning hackathon submissions and what makes an awesome submission. So you guys are basically getting all the information, all the knowledge here. It's going to take your project from good to great. All these little tidbits, like I said, from a two time winner.
00:25:30.464 - 00:25:40.904, Speaker B: So we'll give it a couple of minutes and see if anyone has any questions. Yeah, Harry, that was great.
00:25:40.942 - 00:25:41.176, Speaker A: Thank you.
00:25:41.198 - 00:25:41.770, Speaker B: So.
00:25:44.140 - 00:26:06.832, Speaker A: No, it was great to do. Yeah. Hackathons are always a very exciting thing and it's cool to kind of team up with people, especially people you haven't met and kind of throw around ideas and it's always very exciting. And then trying to get something kind of ready to go by the deadline and trying to polish it up. It's always good fun. Yeah, for sure.
00:26:06.886 - 00:26:46.870, Speaker B: I'm just checking to YouTube to see if there's any lagging questions, but it looks like there are no questions, everybody, if you guys have questions, like Harry was saying, feel free to drop into the discord, say hello, ask a question. Really looking forward to seeing all the projects we had. Like I said before in the discord, we have over about 300 projects assigned to the midway check in. So really excited that there are so many engineers so excited about building with chain link, building smart contracts, and really looking to kind of empower these blockchain technologies to the next level. So with that, we'll sign off. Thank you, everybody, so much, and we'll see you soon. Thanks.
