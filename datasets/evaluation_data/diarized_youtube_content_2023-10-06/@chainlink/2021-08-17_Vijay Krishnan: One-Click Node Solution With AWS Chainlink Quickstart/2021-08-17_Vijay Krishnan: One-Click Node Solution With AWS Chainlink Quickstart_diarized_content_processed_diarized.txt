00:00:06.090 - 00:00:23.386, Speaker A: Hi there. Good afternoon, good morning, wherever you are. Thanks for joining me today. My name is Vijay Krishnan. I am from AWS. I'm one of the senior partner solutions architect. That means I work with a handful of partners, managed partners.
00:00:23.386 - 00:00:58.334, Speaker A: I work with like more than ten plus partners in AWS, all working on blockchain. I've done two dozen implementations on the blockchain network, mostly on the enterprise. I've done at least like 100 plus use cases in the blockchain, mostly on the enterprise. Again, like most of you, I started my blockchain journey as a minor. So excited to be here and then share some of the experience as well. But today I am here to talk something more exciting and also make an announcement that it will just be too big for all you guys, including me. I'm looking forward to that.
00:00:58.334 - 00:01:42.780, Speaker A: But before that, I'd like to talk about Chainlink partnership and what we are doing with Chainlink from AWS. So AWS has something called AWS partner network, or APN, if you're familiar with. So here we have a handful of managed partners, like I mentioned, and Chainlink is one of the managed partner and also the newest partner in the ecosystem. And we've been working with Chainlink for less than three months, probably like 70 days, I would say. And right from day one, it's been an agile team. Even. I had spoken to Roger from Japan, David from San Francisco, where I'm sitting in middle.
00:01:42.780 - 00:02:30.700, Speaker A: It's been like great working with the team, and we want to build something together right from day one, that's been our goal. And we want to do it in a very easy way, faster way and a secure way for the customers as well as for the Chainlink customers that on the other side. And we want to follow all the well architected framework reviews and recommendations that we publish as best practices from the AWS side. And we definitely want to change something from a customer experience perspective. So here I am sitting in front of you announcing the launch of AWS Quickstart for Chainlink nodes on AWS. So it will be officially released in two weeks or in beginning of September. But let's go and see what we have developed for you guys.
00:02:30.700 - 00:03:11.754, Speaker A: So what is Quickstart? Let's understand what is Quickstart first. So Quickstart are nothing but automated reference deployments built by AWS. So when I say AWS, we do have dedicated teams for developing these quick starts. So quick starts also are hosted in public repositories. If you do not know what is AWS, Quickstart repository, then you can just go and search for the GitHub for the AWS Quickstart repo. So you'll find anywhere between like 250 repositories, quick start repositories there and chain link node will be one of the repositories there. And it's also gold standard.
00:03:11.754 - 00:03:45.134, Speaker A: When I say gold standard, you don't have to worry about anything. Just launch the quick start and you'll be good to go into production. So well, architected framework review this is one of the main focus areas in everything that we built and publish. So Velo Architecture review has five pillars. So the quick start that we built also follow all of these five pillars. It also comes up with step by step instruction. That means you don't have to know anything for you to get start with the AWS Quickstart.
00:03:45.134 - 00:04:24.420, Speaker A: Even if you don't have any knowledge, the step by step guides will actually walk you through, help you launch the stack that you are planning to deploy in the AWS. And usually it's a one click. We call it one click and customers call it one click. And anytime anybody refers as one click is always fun, right? You don't have to do anything, just click and then your stack is up and running in front of you. That's like pretty exciting for anyone from the developer side of things as well as from the operations side. So it's completely open source, we are not hiding anything on the back. So it's completely open and you can go into the GitHub to look into the templates as well as all the code that we have put in behind.
00:04:24.420 - 00:05:14.154, Speaker A: So let's talk about the quick start that we develop for the chainlink nodes. So quick starts is again nothing but a combination of cloud formation and a guide that will help you get up and running. So here for chain link node. So we have put together a configurable parameter, roughly 40 parameters that you can play around according to your needs. So this includes a combination of, if you have VPC already up and running, you can deploy the chain link nodes to that, or if you want to quickly spin up a new VPC and then deploy the chain link nodes to that, you can do that. You can provision your aurora database for postgres on the back end. You can actually configure your chain link nodes on the fly by providing parameters.
00:05:14.154 - 00:06:11.230, Speaker A: So these 40 configuration parameters I'm talking about is like a lot of things that you go and do manually. Now you have a form to fill in and then get it up and running. So when you launch the cloudformation template. It actually creates a nested stack of cloudformation templates and workloads that it creates, usually grouped into six cloud formation stacks on the back. You'll be able to see what's going on in this cloud formation stacks and how it is pulling up all the sub modules that we usually use for creating these VPCs, bastion hosts, private subnets and all that. And roughly it creates like 30 resources. So here, resources means it is either an AWS service, a configuration that you need to launch the channel node, or some resources that is like intermediary when it comes in helping doing a configuration.
00:06:11.230 - 00:07:13.000, Speaker A: So it is everything together in roughly 30 resources. So we do not want to just stop there and we want to do something that be helpful for the administrators and operators once you launch the stack. So once you launch the stack, you need to actually administer and monitor the stack. So we have introduced a couple of services, especially one service in particular into the quickstart. So which will actually monitor the chain link node in the stack using an AAML on the background for any operational or administration anomalies that you can take. So I'll talk about this service a little bit later, but this is going to help especially the DevOps person or if there is a team, usually we refer to a pizza size team or a half a Pisa team where you run a lot of these nodes and you have minimal resource to manage them. So this is going to come very handy for you.
00:07:13.000 - 00:08:17.850, Speaker A: So what are we talking about here? When we put the whole thing together, your deployment time to launch a chain link node is going to go down from days to hours to minutes. So how much time are we really talking about here? So we are running all the test internally and anywhere between like 35 to 40 minutes or plus or minus a few. Again, it's going to depend on a lot of other factors, which region you are running, what kind of other workloads you are running, depending on your accounts and other configurations, depending on the time of the day that you are running. So everything matters. So anywhere between like 30 to 40 minutes is when your stack will be ready and your training node will be up and running. So you don't have to worry about a lot of these configurations because you're just going to fill in a bunch of parameters in the form and then you can just hit the start button, go for a coffee or lunch, come back, your chain link node will be ready to operate. So let's quickly look at the architecture.
00:08:17.850 - 00:09:09.322, Speaker A: So the architecture that you're looking at here is a pretty standard architecture. We want to keep it again simple and easy for people to understand what we are building. So it's a single vpc architecture with two availability zones. The availability zone is introduced here so that any kind of high availability or any kind of failure or you want to load balance your workload, it becomes very easy. So within this availability zones there are like four subnets, two public subnets and two private subnets. The public subnets usually has the usual suspects here, the Nat gateways and the bastion host. The Nat gateway to communicate to the Internet and actually the bastion host for you to log into the chain link node, easy to instance and then see what's going on there.
00:09:09.322 - 00:09:41.430, Speaker A: Just in case. If you need to apply a security patch or you want to do something quickly, check something, check some logs or push in some more code, you can do that using the bastion hook. So again the bastion nodes are load balanced using auto scaling group so you don't have to worry about they're going down. You'll automatically get another basin host because it is under the auto scaling group. So moving on to the private subnet. So this is actually where your chain link node is going to sit. As you can see it is again auto scaling group is enabled.
00:09:41.430 - 00:10:21.890, Speaker A: We are giving you pretty much every other EC two instance possible out there for you to pick from. So we do not want the customers to be restricted only with certain set of EC two instances. For example, you are a developer and you just want to launch a chain link node and play around with it. Even you can use the three tier t two three t two micro for that and then start playing around. But if you are a large customer you start running hundreds of nodes and all your nodes have significant workloads. Then you can all the way go into something like C six extra large or C five X four extra large. So really we are giving you the power that you need.
00:10:21.890 - 00:10:57.818, Speaker A: So on the back end we picked up Amazon order postgres because it's a self managed service. You don't have to do again anything from an operation side. It's going to avoid a lot of overhead. You don't need somebody sitting there and monitoring your databases. It's going to do pretty much everything what NDBA will do for you. It's three times faster than the regular RDS databases that we have as another option and it also comes up with automatic failovers and read replicas and all that. So that's the reason we went for Amazon Aurora postgres.
00:10:57.818 - 00:11:51.406, Speaker A: So on the right hand side you see the other services in play, the key management service which will enable your certificates and secrets to be encrypted and decrypted by the services. Your certificate manager will actually store your SSL which is need to operate on the chain link node. Your secret manager will actually handle all the credentials that you are typing in from the cloud formation. And even if you have to enable policy rotations, passer rotations, things like that, the secret manager will actually take care of that. So all the 40 parameters configurable that I mentioned before is handled by the system manager parameter. So here the system manager parameter will actually take in all the parameters that you type on the form and then give it to the system manager parameter store. And the system manager parameter store is where the stat picks up all the parameters for you.
00:11:51.406 - 00:12:35.502, Speaker A: So we enable Cloudwatch. So Cloudwatch is there for logging. So you can actually go and look at your logs as usual as you do in the other AWS applications. So again on the top, that's the service I want to talk about a little bit which is going to help you in the operations and the administration of the node once the node is launched. So let's quickly, before going into the DevOps guru, let's quickly look at the forms that you may start filling up. So once you launch the quick start cloud formation stack, then these forms will come up. So this is the 40 parameters that I was talking about again here.
00:12:35.502 - 00:13:27.486, Speaker A: If you see you can give a stack name on the parameter side, you're seeing network configuration that includes your current PPC or you want to create a new one. You can provide your set arranges for your public and private subnets. Again up to you how you want to do it. On the right hand side top the chain link node configurations is where the core chain link node configuration resides. You can pick up from any one of the networks, including the Mainnet or Coban, Rinky B. Rabstan, any one of the network that you're configuring your chainlink node against so that your smart contracts can interact with it, and you provide your email for the GUI and the password for the GUI. And here you specify your websocket connection to your network that you picked on the top.
00:13:27.486 - 00:14:00.986, Speaker A: That's pretty much you need to do from a chain link node perspective, it's literally like four different configurations that you put in and then we take care of everything for you. We are doing all the heavy lifting for you. You don't have to actually go and spin up all these services on your own. So on the bottom you'll see the postgres configurations again. We are leaving it up to you, depending on your needs, how well or how deep you want to go into the instance configuration. We are just literally leaving it up to your choice. The next thing is here.
00:14:00.986 - 00:14:57.340, Speaker A: The DevOps guru is an optional parameter. When I say optional parameter, by default it is false. But I strongly recommend start using the DevOps guru by enabling it and you will see how easy it is for you to monitor and administer your stack automatically. You're not doing anything. The underlying AML programs, which does a lot of model learning from the other programs, is going to help you launch, administer and even give you insections on how to fix an issue if there is an issue coming into play. So on the right hand side, this is the finished stack, a sample finished stack. As you can see, it does have like six different stacks here when you launch the AWS Quickstart, and what you're seeing here is the corresponding services and the underlying configurations that went through.
00:14:57.340 - 00:15:28.020, Speaker A: All this is done by a single click of a button. And what you need to do is just fill in the form on the left hand side that I'm showing you. That means once you're done with this, that means your chain link node is up and running. That means your smart contracts can start interacting with the chain link node. Pretty easy. You don't have to do anything here other than just launching the template and then putting in a bunch of configurations and you're there. And more than that, this is production ready.
00:15:28.020 - 00:15:59.226, Speaker A: This is like no child's play. This is like a production ready. The moment you see the stack up and running, that means it is good for production. We have taken all the heavily thing for you in terms of high availability, performance, cost optimization, security. We're considered everything that's written on the web architecture review guide and we have implemented that for you. So moving on quickly. So what is DevOps guru? So DevOps guru is an AML function specifically designed for monitoring cloudformation stack.
00:15:59.226 - 00:16:26.006, Speaker A: You don't have to do anything. It's again a managed service. It continuously monitors the stack and creates metrics for you. And if it finds an anomaly it just triggers an alert. It does not triggers an alert, that may be an understatement. It also tells you where the logs files are located and even sends you a snippet of the exception if there is a stack trace. And also it provides you a guidance on how to fix an issue.
00:16:26.006 - 00:17:14.200, Speaker A: I'll share a screenshot on what kind of recommendations it gives you and it is scalable, just in case. If you decide to scale your nodes to hundreds of nodes, it does scale automatically. Again, it can scale down back as well. So on the other side, more from an operations and management perspective, when there is a defect or when there is an outage going on from your stack, there is too much noise that's going on. The MTTR becomes a very difficult thing. But if you are an incident responder or first responder in this space, and you will have all the information that you need to start working on the resolution straight away, including the recommendations from the tool. So how cool is that? That's going to save you a lot of midnight oil, I would say.
00:17:14.200 - 00:18:10.902, Speaker A: So this is something that I pulled in from a sample. So this is the insight that you'll get here. It's even saying what are the metrics that is capturing, what are the anomalous direction and the accommodations that it is giving you to look in and then go and fix the issue. So this is going to be a very important tool for you from a chainlink node perspective to monitor and administer the node. Okay, next steps. So people who are looking this presentation, if you are a developer, if you are a customer, or if you're a node operator or a data provider and you want to pilot or get started with us, these are the three names that you have to remember and this will be part of the presentation for you. Either you can contact me or William from Chainlink or Robert from Chainlink if you want to pilot or get started with the quick starts.
00:18:10.902 - 00:18:44.340, Speaker A: Like I mentioned, we are testing this now. It'll be out pretty soon and we are excited to launch this within the first three months of our partnership. And with that, I will say a big thank you for Chainlink and the smart contract summit for giving me an opportunity. And I have provided my contacts here as well. If you had to reach out to me and hope you guys are having a good time with this smart consummate. I'm having an excellent time here. Again, thank you so much for giving me the opportunity.
00:18:45.590 - 00:19:14.158, Speaker B: Thank you for giving us the opportunity to learn. Vijay, it's amazing to meet you and great to see this solution as well. What a fantastic day. The community is very excited as well. I can see the chat going crazy. People want to know where they can learn a little bit more about that documentation. So it sounds like you gave some great email addresses at the end, but then also chat if you've got an application, you want to start thinking about how you to use this, you can go talk to our chain link experts right now in the expo as well.
00:19:14.158 - 00:19:17.420, Speaker B: Get on the list and figure that out. So, B shape, thank you again.
