00:00:02.410 - 00:00:24.870, Speaker A: I think we're live GM hackers. How's it going? My name is Kevin Montgomery. I'm an events manager here at Chainlink Labs here. Joining me is Harry Papa Churicio. He's a developer advocate manager. We're going to talk about social fi today, the benefits, the use cases. And just so you're aware, if you haven't signed up already for the hackathon, go to hack chain link.
00:00:24.870 - 00:00:46.620, Speaker A: We have an amazing constellation hackathon going on right now, one of which includes a social Phi innovation tracked. Now, this will earn you $10,000 if you win first prize and $5,000 if you earn second. So we do have a lot of use case here. Without further ado, I want to kick it over to Harry. Take it away.
00:00:47.870 - 00:01:15.460, Speaker B: Awesome. Thank you, Kevin. What's up, hackers? Very excited to be here today. Very excited to chat about social fire. So this is the first time, actually, to my knowledge, that we've run a track in our hackathon that is in the social fi space. So for some of you guys, you might be thinking, well, what the hell is this thing? How can I participate? It seems to have a pretty big bounty. Social media is something that interests me.
00:01:15.460 - 00:01:55.358, Speaker B: So what we're going to do today is basically chat a little bit about what social fi is, and then I will run through maybe four or five examples of social fi apps that you can build in your hackathon and how you can integrate chainlink into those example applications. So it's going to be pretty casual conversation. Happy to answer any questions. There's not going to be any coding involved or anything. Today, it's more about just chatting, explaining about what sociali is. What are some types of apps that you can build to hopefully get those creative juices going and get you kind of thinking about how you can create a winning project for the hackathon. So let's get into it.
00:01:55.358 - 00:03:02.054, Speaker B: So, first of all, what is socialify? For those that don't know, it's a fairly new thing in the kind of web three space. So to me, I guess socialify is basically platforms or apps that obviously built using web three technology that combine the principles of social networking with the principles of DFI, where those kinds of worlds come together. So there's some kind of financial incentive for participating in some kind of social ecosystem or app or platform, and the incentive encourages the social behavior, right? So there's always incentives for everyone in terms of financial incentives. So you can incorporate the use of tokens, rewards for engaging with content, or any kind of social interaction within the app. So if that doesn't kind of make sense to you, I'll try and make a bit of an analogy. Imagine, you know, everyone knows what, right? You know, you watch videos on YouTube, you have influencers and content creators that post videos to YouTube. You have advertisers that pay money for ads on YouTube which know flow through to Google and then the content creators themselves.
00:03:02.054 - 00:03:50.994, Speaker B: So imagine that if YouTube paid you as a consumer to watch videos on YouTube, right? So you as a consumer, you watch videos, you get paid for that. Content creators, they still get paid for creating content and for getting the engagement that they get. And advertisers still pay for advertising in these videos. But instead of Google taking a 30% or whatever it is cut from essentially the whole process, it's all handled by this completely separate third party that isn't controlling everything, right? It can't be gained, bought, influenced. It can't decide to not pay you. It's just completely abstracted away. So that's kind of the equivalent of social fi.
00:03:50.994 - 00:04:26.686, Speaker B: So in this case, blockchains and smart contracts, is that completely separate third party? That's separate to the agreements happening. So that's what Socialfi is at a pretty high level. So the next question you might ask, you know, why? Know, we have X, we have Instagram, we have Facebook, et cetera, we have YouTube. So these are all great platforms. And these are platforms that have reached literally billions of users, which is pretty amazing when you think of it. However, historically, these platforms are not so great with certain aspects. So one thing is transparency.
00:04:26.686 - 00:04:49.398, Speaker B: They can be very opaque. Another one is censorship. They can censor content. They can censor people based on their geographies and things like that. And also data ownership. You don't really own your data on these platforms. You're kind of the product, essentially, and any data that you're involved in creating or that you think is yours is actually theirs.
00:04:49.398 - 00:05:39.080, Speaker B: So those are some of the issues and problems with the existing world of social media that social fi aims to solve using blockchain and web three technology. So now that we've talked about what social fi is, hopefully you guys have a little bit of an understanding. What I'm going to do now is I'm going to talk about maybe five or so examples of social fi apps. And after that we'll go through some questions and, yeah, after that we'll end it. And I'll just reiterate the bounties for you guys. So the first one that comes to mind, definitely for myself personally, is anything that's built on lens protocol. So if you guys haven't heard of lens protocol, you should definitely check it out.
00:05:39.080 - 00:06:25.522, Speaker B: We'll get a link posted in the chat to the lens protocol. But essentially lens is a web three social graph. So it's a protocol for building web three social fire and social media applications. So it's not an application itself, it's not like a Facebook or an Instagram, but it's a protocol that you can use to then build apps on top of. So I'm just going to share my screen quickly here. So if you're interested in lens protocol, definitely we posted the link to the site in the chat. But in terms of developers, if you go to docs, lens XYZ, that's their tech docs.
00:06:25.522 - 00:07:26.122, Speaker B: So you can kind of get an introduction to lens protocol here. So what you can do is you can build a social for application that uses lens protocol at the core level, right? So the lens protocol itself handles users posts or publications. And the big difference here is that every user kind of owns their own data, they own their own social graph, they own their own profiles, et cetera. So if you have an app that's built on top of lens, it's like a Twitter clone and you have a bunch of followers on there. If someone builds a YouTube app, you can then take your profile and sign in on that YouTube app that also uses lens protocol and automatically you have the same followers there, right? Because it's your social graph, you own it. So that's kind of one of the key differentiators. So in terms of what you can build with lens protocol, they actually recently came out with lens v two, which has this really cool feature called open actions or smart posts, right? And this is something that's interested me a lot.
00:07:26.122 - 00:07:53.954, Speaker B: So what this essentially is, is these are things that can be attached to posts or publications, as they call them, which can have any custom logic that you want, right? So just to give you a bit of an idea of what that means. So I am on a lens app here. This is Leinster, I think, or it's been rebranded to hay, actually. So this is my profile on post. I like to post about music here on hay. That's all I post about. So here I posted about some song that I like back from a long time ago.
00:07:53.954 - 00:08:32.446, Speaker B: So if you look down here, you can see what are the types of things you can do to this post as a lens user. So you can comment on it, you can mirror it, which is kind of like a repost, or you can like it. So imagine if there was like another button down here that was something else. And what that something else is completely customizable and configurable for yourself. So this is what an open action is. You can build smart contracts that get added to lens to have some kind of functionality when a user interacts with it. So you deploy the smart contract and you call know.
00:08:32.446 - 00:08:58.214, Speaker B: This is Harry's new open action. And then on the lens app, you basically modify it to essentially interact with it. And then the way it works is you add that open action to a publication when you publish it, and then users can interact with it. So imagine some ideas that you can attach these smart posts. It can be literally anything. Could be, hey, you can mint an NFT. So this could be advertising some new product launch or something.
00:08:58.214 - 00:09:44.694, Speaker B: You press a button and then it essentially mints you an NFT. So the opportunities are pretty endless because it's very open. Hence the name open actions. But some of the things we've been looking at actually for these open actions is combining lens protocol and lens apps with web two social media, right? Because lens is awesome. However, web two social media, they can reach billions of people, like I said. So there's certain things you can do in the web two world in social media that you can't yet do in web three, right? So you can do all kinds of things, such as buy tickets to a concert, buy some items on a shopify store, and things like that. So there's some of the types of things that you can do.
00:09:44.694 - 00:10:42.060, Speaker B: So how does chaining fit into these open actions? So one example we've been actually building out recently, and I think there's a blog post coming out on it soon, is we're actually very interested in combining use cases where you use chaining functions in smart posts or open actions to reach out to web two APIs and do something. So one example that we've actually built, which I'll put in the chat, is we have actually built a use case example that I'll put it in the chat. It's essentially an open action that reaches out to the eventbrite API. So imagine you're a lens user and you have an event that you have on eventbrite. You have tickets on there, et cetera. You're advertising the event on lens here. You're offering everyone on lens a special discount that they can claim for the event.
00:10:42.060 - 00:11:40.138, Speaker B: But we have a unique discount for each lens user, right? Not just a blanket one for just lens users. You want to offer everyone their own specific discount code and maybe the discount amount could be how many times they've interacted with you on lens or something, right? So you can make it configurable. So what this repository does is it essentially creates a smart post or an open action that reaches out to the eventbrite API and for the particular lens user, it generates them a unique discount code just for them for this specific event, and then it returns it. So that's a great example that you can actually use. So in terms of what your project could be, you could build a smart post or open action just like we have here, that does something. And it could use chaining functions to reach out to some kind of web two API, grab some data, make some state change and return it back to lens protocol. And then you can kind of display it on the front end or do whatever.
00:11:40.138 - 00:12:34.554, Speaker B: So in this case, we're generating unique discounts using the eventbrite API for an event. So the idea is the event promoter advertises the event on lens, says hey, interact with this post to generate a unique discount code for yourself, and then they attach the smart post to it, and then on the lens app users can then click on it and then they can generate a discount code for themselves. So that uses chainlink functions to reach out to the eventbrite API. Some other cool examples of things you can do with lens open actions and chainlink functions is you can allow lens user to collect a publication. So collect is another one of these things only if they follow an artist on Spotify. So you can use functions to connect to the Spotify API to find that data. You can create a Spotify playlist based on the lens users social graph.
00:12:34.554 - 00:13:16.220, Speaker B: So you can take a look at all the artists that a user follows on lens, and then you can reach out to the Spotify API using chaining functions and generate a unique playlist using that Spotify API. We talked about generating discount codes for events. You can also do the same thing for a Shopify store. Shopify store can advertise some products or something. You can create a smart post to reach out to the Shopify API to generate unique discount codes based on a lens user. You can allow lens users to participate in an on chain raffle. So you could advertise some kind of product launch or something and say, hey, we're doing a raffle for your chance to win a t shirt or a car or whatever.
00:13:16.220 - 00:14:04.106, Speaker B: Join this raffle. And the smart post could basically take a lens user's detail as a wallet address, add it to a VRF raffle that exists in the smart post smart contract. It will basically just collect users that opt into the raffle, and then you can use Chainlink automation as a second chain link service to then settle the raffle at a particular point in time. So they're just some examples of how you can combine lens open actions with chain link functions to create some cool kind of social fire hackathon submissions. So anything that you do with lens, especially if it uses chain link functions to reach out to web two, I think would be an amazing hackathon idea. So that is the first one. Let's talk about the second one.
00:14:04.106 - 00:15:24.238, Speaker B: I'll just stop sharing my screen here. So it's one thing that we've actually already seen in the past, a little bit of even though we didn't have hackathon tracks specifically for social fire, is things to do with the influencer economy, right? So we see platforms being built and apps and dapps where basically content creators can essentially monetize their following and content directly, right? So the way it works is you can build your own app or you can build it on lens, and content creators can go into agreements with advertisers and essentially you can have a smart contract that says, hey, you're going to advertise our products. You're going to do five social media posts on Twitter or YouTube or whatever, and we're going to pay you $100 for every 100 likes or 100 interactions that you get. So that can be stored in a smart contract. And essentially the users can then post on social media, TikTok, YouTube, et cetera, advertising these things. And then once again, you can use chaining functions to reach out to these social media APIs to get the engagement data back to the smart contract. You can say, how many likes did it get on X, how many views did the video get on YouTube, et cetera.
00:15:24.238 - 00:16:00.478, Speaker B: You can pull that data into the smart contract, and then based on that data, the smart contract can then say, hey, all right, based on this data, this is how much this influencer should get paid based on the agreement that we had. So in addition to that, you can use data feeds to work out how much to pay them in crypto. So once again, you want to try to stack some of these chain link products together to get a higher score, multiplier. You can use data feeds to work out. All right, I'm going to pay this person out in ETH or in Maddox or whatever. They're meant to get $2,000. Let's calculate how much that is in ETh or Maddox and pay them out.
00:16:00.478 - 00:16:54.930, Speaker B: Or you can also use CCIP as a third chaining product to pay them out in a token on another chain. So let's say the influencer prefers to use avalanche. You can say, hey, this person wants to get paid out in stablecoins on avalanche, let's use CCRP to send some stablecoins from Ethereum or wherever the app is deployed to avalanche and then pay the person out. So that's a cool example of kind of an influencer economy. Socialify app that basically uses things like chaining functions to pull in web two data from social media APIs, uses data feeds to work out how much to pay out some of these content creators in terms of native tokens, and potentially uses CCIP to pay them out on other chains. So that's a cool example of social fire apps that use three chaining services. Let's move on.
00:16:54.930 - 00:17:32.960, Speaker B: So there's a lot of platforms for. Once again, this is on the content creator type subject here, things like Patreon, only fans, et cetera. So the problem with these platforms is that they generally take a fairly big cut away from the content creators. It could be 20%, could be 30%, et cetera. Essentially for just having a platform and connecting subscribers and content creators. So with a web three version of this, you can pretty much cut out that kind of middleman and replace it with smart contracts and blockchains to get rid of these kinds of third parties. So you have content creators putting out content on the platform.
00:17:32.960 - 00:18:15.046, Speaker B: The agreements with subscribers could exist in smart contracts. You can use automation, chain link automation to automate the billing. Once again, price feeds to work out the conversion of dollars to crypto, et cetera. And you can also use functions to reach out to that to get engagement details and things like that. In terms of storing the content, there's a whole lot of decentralized storage solutions that you can use. You have space and time, database, arweave, et cetera, Filecoin for storing data, images and things like that. So that's another cool example of a social fi app where you can use multiple chain link products to essentially build a better version of these apps and cut out these third parties that take 20 or 30% cuts.
00:18:15.046 - 00:19:08.762, Speaker B: In this case, yeah. Other than that, a couple more examples that we can talk about is decentralized wellness apps. So a lot of people are into smartwatches and stuff these days and counting steps and working out their daily exercise goals and things like that. There's definitely a way, an opportunity to monetize some of these things and incentivize people to basically do these things. So you can build some kind of fitness app that you share your workouts and goals, and when you reach them, you can earn tokens that have monetary value or you can use to buy some kind of services or goods or something like that. So you could also make it so that the platform could encourage group goal setting where everyone commits to a certain amount of steps or something. And if all the group achieves their monthly or weekly goals, there's kind of extra tokens or incentives to get paid.
00:19:08.762 - 00:19:48.342, Speaker B: So the biggest thing with this is you need to access the data. So once again, I think chaining functions is a cool way to do this. If you have a Fitbit or any kind of wearable device that has an API that has this data. If it has an API, you can use chaining functions to connect to it. So whatever device you have, if you just go to their website or just search API on Google for that product, you can usually see that information. So if they have an API, then usually you should be able to connect to it and actually pull some of this data yourself. You'll be able to get kind of an API key and things like that.
00:19:48.342 - 00:20:46.730, Speaker B: Or even if you don't have the device, even if you mock up an API that is similar or the same as one of these devices, that's a fine hackathon submission as well. You can say, hey, I don't have a fitness wearable device, but in my submission, here's an API that I've spun up that mimics the Fitbit, one that returns the steps from this endpoint, that's absolutely fine to do as well. So in this case, you use chaining functions, connect to the wearable device, work out how many steps or what that data is that you need, pull it back to the smart contract, and you can then work out how much should people get paid. So I think something like that would be really cool. I haven't really seen that done before. However, in my opinion, any hackathon submission that actually has a real world device that has an API attached to it, that actually gets used and that you can demonstrate in a demo is always going to be like a massive success. It's always going to get a very high wow factor.
00:20:46.730 - 00:21:46.090, Speaker B: So that's decentralized wellness. Probably the last one I'll talk about is there's been a lot of hype lately around friend tech and those types of apps that kind of monetize a community of following on Twitter or other social networks. So you can kind of build apps like that as well. So generally speaking, like I said before, some of these big social media apps on web two have billions of users. Some people have thousands, millions of followers and things like that. However, these web two social networks don't traditionally offer ways to monetize these followings, right? So this is how things like friend tech and stuff like that came along, where you essentially have apps that let you interact with your fan base in a better way, and to monetize that interaction as well. So users can buy or sell keys, or whatever you want to call them that are linked to some of these social media accounts.
00:21:46.090 - 00:22:43.790, Speaker B: And then what these keys or whatever you want to call them are, is they offer access to private ways to interact with that person, right? So it might be access to a chat room or something like that. So if you follow someone on social media and you want to be able to chat to them, et cetera, you can buy one of their keys, you get access to a chat room or something, and then you can kind of chat to them in a private channel there. So you could definitely do this kind of thing or your own kind of version of this. You can use CCRP to make it a cross chain app so that someone from an ecosystem can participate, even if the app isn't natively deployed on the chain that you're on. You can also use functions to get data from web, two social platforms in the app. So you can say you can prove that you actually own this handle on x that has 100,000 followers and things like that too. So there's various ways that you can use and interact with these types of apps that are similar to like the friend tech scenario that we saw recently.
00:22:43.790 - 00:23:20.602, Speaker B: So I think we've just got a few more minutes left. They're the main ideas that came to mind for myself when building socialify apps. If you have any other ideas, feel free to mention them in the chat. A couple of other ideas that came to mind as well that I'll just talk about at a high level content curation. Dows so curators that get rewarded for their work with the dows token that promotes discovery, sharing and high quality content. A collaborative content platform as well. The content is created by a group and any profits generated are split based on work contributed and collective learning.
00:23:20.602 - 00:24:03.900, Speaker B: An online study group where you can learn or teach something new, incentivized by tokens, right? So just any kind of apps that have a financial aspect that incentivize people to participate in the platform and to be social and interact with others, whether it's content creation, whether it's reviewing, whether it's learning, whether it's exercising, anything that encourages this kind of social kind of aspect and the incentive is a financial reward. So anything like that is a great kind of socialify app, in my opinion. So that's kind of all that I had. Kevin, did we have any questions or does anyone have any other ideas they want to share? Happy to hear.
00:24:05.550 - 00:24:44.760, Speaker A: Yeah, I was just looking through everyone's having a good time. Socialify is an exciting time in our ecosystem and I think we had Christopher over here that was building off and he can't wait to show it off in the hackathon finale. I really can't wait to see what gets built out of this because a large portion of these web two providers do take these cuts and do have other nuances, terms and conditions, et cetera, et cetera, that web three looks to build into better, I guess just applications and ecosystem plays. So we're about building on existing stuff, but making it better and really kind of curious to see what comes out of this hackathon. I'm excited to see.
00:24:45.130 - 00:25:17.298, Speaker B: Yeah, definitely. I think there's definitely a lot of opportunities with social fi and web three. Social in general. I think it's one of the use cases that makes sense to me. People always talk about web three. What are the main use cases? I know that DFI is definitely one, but I think social fi and social is definitely one that to me just fits. And like you said, a lot of the issues with web two versions of these can easily be solved with the technology that we have and the financial incentives that we have in social apps and social fire in web three.
00:25:17.298 - 00:25:31.800, Speaker B: So yeah, very excited to see what submissions we get. It's the first time we've run this track once again, so we don't have any reference points or anything. So just very excited to see what some of the projects that people come up with are.
00:25:32.250 - 00:25:40.220, Speaker A: Absolutely. And hey, Christopher asks how many socialify apps are utilizing lens on avalanche? Do we have any idea of that?
00:25:40.910 - 00:26:23.026, Speaker B: Yeah, great question, Chris. So I think lens itself is natively deployed on polygon. So there are no apps on avalanche as far as I'm aware. However, that doesn't mean you can't build something on avalanche in the social fire space that uses lens. Like I said earlier, smart post functionality or feature that lens added is completely customizable. You can kind of put whatever you want behind that button, that logic. So you can actually have a lens app that uses a smart post that does something on avalanche using CCIP so let's say you're a blockchain game on Avalanche and you're advertising your game on lens.
00:26:23.026 - 00:26:51.630, Speaker B: You're saying, hey, any lens users that sign up to our game get a special free sword or asset minted to your profile if you interact with this post on lens. So the lens post gets published. That's all on Polygon, but when you interact with it, it uses CCIP to reach out to the game on Avalanche and then mints you a special sword or asset to your profile on Avalanche. So you can kind of still use avalanche together with lens using smart posts and CCIP.
00:26:55.030 - 00:26:56.450, Speaker A: Excellent. Excellent.
00:27:00.630 - 00:27:02.340, Speaker B: Awesome. Any other questions?
00:27:08.570 - 00:27:21.100, Speaker A: All right, doesn't look like anything else is coming in from the question front, but Harry, did you have any final thoughts for us or any kind of something you want to leave us with?
00:27:21.790 - 00:28:11.922, Speaker B: Yeah, sure. Yeah. Just in general, I think this will be a great if you're still thinking about what to build for your hackathon, I think social file would be a great track to choose because I know that, like I said, we haven't had it historically before, so it's kind of very greenfields area. There's a lot of opportunities, a lot of cool use cases, a lot of cool ways to combine chaining services as well. So functions once again is a very big part of socialify apps, especially if you need to reach out to these web two APIs and endpoints to grab some data. But yeah, just want to encourage everyone, if you build on social, try and combine some of the multiple chaining services like I talked about. Make a cross chain, reach out to web data and APIs, calculate payments using data feeds.
00:28:11.922 - 00:28:21.994, Speaker B: But be sure to combine chaining services in your project because that's going to help you to get a high score. But yeah, other than that, very excited to see what everyone builds. Awesome.
00:28:22.112 - 00:28:52.642, Speaker A: Thank you so much, Harry. We appreciate your time. And again, everybody, we're about 19 days away from the finish line, so if you haven't had a chance to sign up, go to hack chain link, submit your project. There's still enough time to build your idea out, find a team and get that project across the line. We have a bunch more content in the pipeline to help you essentially get across the line and possibly give you some ideas along the way to make it better. Things that we're looking for in our judging and as well as office hours to continue to ask questions. So don't be a stranger.
00:28:52.642 - 00:28:59.240, Speaker A: Feel free to reach out. We're always happy to help in our discord and with that, happy hacking everybody take care.
00:28:59.610 - 00:29:00.690, Speaker B: Thanks. So, bye.
