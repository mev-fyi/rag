00:00:00.170 - 00:00:42.870, Speaker A: At the end of our last video, we called an API to get the price of Ethereum into our smart contract. In order to get this external data into our smart contracts, we have to use a chainlink oracle. In this video, we're going to go over what an oracle is, why you need them, and the oracle problem. Now, these are crucial pieces to understand because they unlock the full potential of smart contracts. So let's dive right in. When a transaction occurs on the blockchain, it needs to be validated by every other node in the blockchain so that they can all agree. We can see when we send $5 from Bob to Alice, we can simply subtract five from Bob's wallet and add five to Alice's wallet.
00:00:42.870 - 00:01:15.406, Speaker A: This is easily reproducible by every other node on the network. But what if that wasn't the case? Let's imagine a blockchain that allows for non determinism and allows for nodes to validate each other based off some variable. Let's say we want to send a variable amount from Bob to Alice. We want to send the price of Ethereum at that time. So we have our node call an API to get the price of Ethereum, send it over to Alice. Now, when every other node goes to validate the transaction, they too have to call this API. But what happens now? If we call this API even an instant later, the API could be changed, updated, hacked, or just depreciated.
00:01:15.406 - 00:02:00.190, Speaker A: And now all the other nodes are going to get a different result and not be able to validate and be in the same state as the first node. This means that none of the nodes would be able to actually agree upon what the state of the blockchain is. It's for this reason that the Ethereum blockchain and blockchains in general are designed to be entirely deterministic. This means that if we replayed every transaction from the Genesis block zero to where we are currently, we should end up in the exact same state. If we add API calls to these transactions, we're going to end up in wildly different states and no node is going to be able to have consensus with what the actual state of the blockchain is. In blockchain, the mechanism for agreeing upon a data value is called consensus. And determinism is really important so that nodes can come to this consensus.
00:02:00.190 - 00:02:41.870, Speaker A: You might have heard of some of them, like proof of work with Nakamoto consensus, or proof of stake, or any others out there as well. Consensus is one of the key ingredients that makes blockchain work in the first place. Now, at the same time we need blockchain and we need smart contracts to be able to connect to the outside world and connect to the APIs so that we can do more interesting things. We need to get the price of Ethereum and other cryptocurrencies so we can do anything in deFi. We need to get weather data so we can have decentralized farmer insurance contracts. We need this data to use blockchain for the pinnacle of its purpose. So how do we bridge the world with this constraint? Enter oracles an oracler is any device or entity that connects deterministic blockchains with real world off chain external data.
00:02:41.870 - 00:03:15.610, Speaker A: The way they work is these oracles actually enter data on the blockchain through an external transaction. This way we can guarantee that the blockchain has all the information needs to verify itself. So instead of calling an API an off chain, oracle will actually get the API and then report it on chain in a transaction. That way there's no API calling in the Ethereum or blockchain virtual machine itself. This is why oracles are known as blockchain middleware as they bridge the blockchain world to the real world. Seems simple enough though. But there's a big problem with this.
00:03:15.610 - 00:03:55.122, Speaker A: It's commonly referred to as the oracle problem. Let's take a quick step back and remember why we're building on blockchain in the first place. A huge reason for smart contracts is decentrality. However, data has to come from somewhere. If we import data onto a decentralized blockchain through a centralized or single API node or source, we are now essentially removing one of the main benefits that blockchain has in the first place. A centralized oracle or data source means that that single oracle or data source now has control over the entire execution of your smart contract. And your smart contract is now no better than a regular contract, even if the centralized oracle has the best intentions.
00:03:55.122 - 00:04:39.670, Speaker A: We've seen cases where oracles are hacked and catastrophe has ensued. The oracle problem can be defined as these two pieces combined. Number one, blockchains themselves can't access external data, and number two, using centralized oracles essentially nullifies the decentrality of the smart contract now into chainlink. Chainlink solves both of these issues and is the standard for decentralized oracles. Chainlink is a framework for choosing your decentralized network of nodes and data providers to enable your smart contract to reach their fullest potential. Chainlink also has a number of other functionalities that you can find out more by going through the docs or following along with these tutorials. With Chainlink, we are leveraging the same reliable, decentralized, infrastructural concept that makes blockchain work.
00:04:39.670 - 00:05:32.550, Speaker A: If any nodes or API sources are deleted, hacked, or depreciated, the decentrality of the network will allow it to carry on and your smart contracts will be safe, secure and reliable. Links in the description will describe even more detail about the oracle problem and how Chainlink solves it all. Chainlink code is open source, so feel free to dig around, make a pr, and join the community. Now I know we've gone over a lot of conceptual pieces here, but they're really important to understand in order to do any of the coding aspects. And a quick disclaimer, in most examples, we're going to be calling from a single centralized oracle just to show you the functionality. But please, when you move to a production system, do not use a single centralized oracle ever. Now that we know how and why Chainlink is such a powerful tool, let's dive even deeper into figuring out exactly how to work with these APIs and make our smart contracts do really interesting things.
00:05:32.550 - 00:05:33.540, Speaker A: I'll see you in the next video.
