00:00:10.010 - 00:01:02.570, Speaker A: Good to meet you. So, going to start by just looking at how does randomness, or more precisely, how does random number generation work today in the world? It's basically based on trust. Examples. So, for example, usually when we think of randomness, deciding something, water is one of the first things that comes to mind. And with water risk, you always have this happen in a black box somewhere on a server, maybe someone drawing a ticket from somewhere. But it's always that we have to trust someone, that they won't cheat us. Jury duty, that's something specific to the US, which I'm not from, but I think that's a pretty big issue sometimes that people don't think it's fair.
00:01:02.570 - 00:01:55.620, Speaker A: Maybe the wrong judge got selected, the wrong jury member, or that would be biased against what they're doing. Gaming dynamics. Well, when there's a lot of value at stake, the randomness, that's going to be deciding who gets that value, that's something that, again, happens in the black box pharmaceutical control trials. That's another example where we don't really know who gets selected to get the actual drug that might save their wife. So there's sometimes wives at stake when randomness is involved, but there's a better way. And this is something that. This is basically everything that we do is about truth being the way to do things in the world in the future, which is more reliable than trust.
00:01:55.620 - 00:02:52.610, Speaker A: So we did have this cool kind of giveaway raffle for seven lucky people to get selected to have a Big Mac lunch with Sergey. I don't know if anyone's here who got selected, but what we did, we did it in a better way, because we used our own solution, Chainlink verifiable random function, or Chainlink VRf, to select these winners. And what do we have here with Chainlink VRF? First of all, it's temper proof. There's nobody that could have changed the selection or influenced the outcome or kind of had advanced knowledge of who the winners are going to be. It's unbiased. Everyone has equal chance to be selected. And most importantly, all of this is verifiable.
00:02:52.610 - 00:03:46.660, Speaker A: Everyone can verify that the selection was fair, that it wasn't tampered with, and that it was completely unpredictable to anyone involved in the process. And this has been in production, actually, since October 2020. And we have to say that we are not only the market leader, but the only solution provider of randomness, in a blockchain context, at least. With more than 8.2 million randomness requests served since inception just in the last three months we had one point four k or a bit more. Even unique smart contracts requesting randomness. And there's some pretty big names here.
00:03:46.660 - 00:04:43.238, Speaker A: High profile brands like Dolce and Gabana have used chaining VRF. Australia, open use chaining VRF. Some really well adopted users like Gala games and Cyberkunks have used chaining VRF and many many more. But the markets that exist, that are still available for ChainlinkVRF are much bigger than what has been done so far. Only for NFT minting, which is the most adopted use case up to date. The primary sales where you could have randomness involved in the minting, for example, to select some more unique traits or more rare nfts, that's a huge market by itself. But lotteries, online gaming and regulated gaming, these are untapped markets that we still have to go after.
00:04:43.238 - 00:06:24.662, Speaker A: And actually not we, it's you guys, the developers that can go after these markets and utilize a secure solution like Chainlink VRF. And more importantly, we recently actually certified it with one of the leading gaming test labs, BMM, which makes it possible for regulated gaming to use Chainlink VRF in multiple jurisdictions, including North America. So how does this work in practice? It's a simple request response model, where we have consuming contract that needs randomness. It needs to send a request transaction to a coordinating contract that we call the VREF coordinator, that results in an event being emitted, and that event is being picked up by our off chain service that is responsible for actually generating a random number. The way the actual random number is generated is done in a way that can make it verifiable at a later stage. So we use block data from the, that includes the request transaction, and we mix that with a private key that the VRAF service has committed to by publishing the public key that corresponds to it. So just like cryptographic signatures work, you can sign something with a private key, and then later anyone can verify using the public key that this private key is being used.
00:06:24.662 - 00:07:05.642, Speaker A: Without that private key being reviewed to anyone. You can simply apply the same logic to verifying that the VRF service has indeed used the right parameters. Because the bulk data is public, the private key is not public, but you have a public key that is public and committed to, so they cannot use anything else. And that makes the whole process completely verifiable and trustworthy. And nobody can cheat, nobody has advanced knowledge. So what happens next is the vira service calls back the VRF coordinator contract. It includes the random number along with a proof, cryptographic proof, about how it was generated.
00:07:05.642 - 00:08:24.960, Speaker A: So again, all the inputs are either public or verifiable in a way, and the VRF coordinator, what it does at this point, it actually verifies that the random numbers were generated as how it had to be generated, and only if that is true, it pushes it back to the consuming smart contract calling back a callback function. So this process is self audited because of the whole workflow. So there's no need actually for anyone to verify this independently because the coordinating smart contract does this job. But of course the data is on chain, and whoever is curious can do that by themselves as well. On top of that, we built a very nice UI with VREF version two that makes setting up basically the smart contracts that are able to utilize this service very easy. It's only basically a few clicks that the billing model is basically creating a subscription, prefunding it, and then every time you request a random number, that subscription balance gets debited by the amount that it cost. It's very affordable as well.
00:08:24.960 - 00:09:24.480, Speaker A: So recently we added some more new features that I wanted to talk about to make sure that we're all aware of them. First of all, we had a lot of feedback that sometimes it wasn't obvious why some requests were remaining pending and weren't responded to. Usually the reason was that the subscription balance was too low. There's a minimum subscription balance that needs to be maintained, and now this is visible in the UI, so it's very easy for everyone to track what's happening with their request. Another model that we launched actually very recently, just a few days ago, is what we call the VRF direct funding model, which actually accepts funding during request time. So the cost is known during the request time. This is again based on feedback that we received from you guys.
00:09:24.480 - 00:10:37.320, Speaker A: Because first of all, it makes it easier if you only need to use VRF only once, for example, for a raffle or something like this, so you don't have to go through the process of setting up subscription funding it, then canceling it. It's very easy, just include the fee in the request and that's it. But it also means that it's now much easier to transfer that cost to the end user, to the user of the DAP. Basically that utilizes this randomness because the cost is now known during the request. Again, this is based on feedback, and we have more stuff coming that is based on feedback for you guys. First of all, we are going to be expanding to a lot more new chains, and we're working on a framework that will help us expand quickly to application specific chains or all these kind of private or personal chains, especially gaming protocols that utilize randomness heavily rely on. But we did launch Vira V two on five chains throughout this year already, but more are coming soon.
00:10:37.320 - 00:11:58.770, Speaker A: We are also working on the next version of VRF that actually utilizes some cutting edge cryptography. We will be incorporating our new OCR V two model in it, and we'll have notes with threshold signatures coming together to actually make the whole process cheaper. I wouldn't say more affordable, I wouldn't say faster because it's going to be the same speed, but it will be more performant in a way, and more configurable. This is coming soon as well, perhaps early next year. And we're also looking into something that we think is the future of VRF that is going to open the possibilities for a lot larger markets than what we have today. Because as we spoke, everything is wrong with the way randomness is generated in the world today. So it's not only smart contracts that can benefit from this verifiable and temper proof randomness solution that we have, but it's everyone, everyone in the world can do that.
00:11:58.770 - 00:13:04.020, Speaker A: And we will be working on creating a model that preserves these security properties even when the randomness needs to be consumed off chain, like for example a state watery or anything that really can benefit from it. And finally, what we did yesterday is we launched a program for application developers to be able to show that the randomness that they use in their protocols is secure, verifiable and time proof through a batch. So anyone who wants to showcase to their users, they have a way now and visit this link that at the bottom of the page chain link. Prove it and there will be a process. And if everything is implemented correctly, you'll be able to display dispatch on your app. There's more that can be worn on chain link slash verf. Thank you.
