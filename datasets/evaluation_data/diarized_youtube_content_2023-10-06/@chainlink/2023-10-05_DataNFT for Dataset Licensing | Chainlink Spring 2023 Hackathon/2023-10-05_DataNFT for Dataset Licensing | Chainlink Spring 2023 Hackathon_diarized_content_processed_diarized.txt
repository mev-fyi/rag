00:00:03.770 - 00:00:51.946, Speaker A: Hi, I'm Ricky, a software developer at Fileswan. For our hackathon project we submitted data nfts with Chainlink functions using a Lagrange platform. Users can create spaces and upload datasets. Then they can mint data NFTs and licenses to show verifiable proof of data ownership. On the blockchain, we use chainlink functions to send a post request to generate the NFT data and upload it to IPFs via multichain storage. This request will also make sure that the wallet address corresponds to the owner of the data asset and after the oracle has uploaded the NFT data to IPFs, it will fulfill the request back to in the smart contract with the URI in order to create a new data NFT contract for the user. The data NFT smart contract is implemented using the ERC 721 standard while also following a factory design.
00:00:51.946 - 00:02:00.820, Speaker A: It's built on top of the widely used open Zeppelin contract library and it implements the Chainlink functions library, sending the request to the decentralized Oracle network to verify ownership of assets on Lagrange. The smart contracts are currently deployed on the sepolia Ethereum testnet as well as the Mumbai polygon testnet. So if we head over to lagrangedao.org we can log in using our metamask, sign the transaction, head over to spaces. We can see all the spaces already created on the platform. We can create a new space demo space, choose a license let's go with MIT, choose the space SDK, create the space and after going to files and versions you can contribute some files and create some new files. You can head over to settings, generate space Nft type agree and this will call the request data NFT function.
00:02:00.820 - 00:02:33.978, Speaker A: Sending the request to the oracle so now it'll take some time. We have to refresh after the oracle has completed. So now the oracle has fulfilled our request and we are calling the claim data NFT function. So after we claim it will create our new data NFT contract. So now we are just waiting for the Lagrange scanner to pick up our transaction. So here we see the contract address and here we currently see there's no licenses, but we can create a new license. It will be a space license.
00:02:33.978 - 00:03:23.194, Speaker A: My wallet address will be the author, I can choose the recipient. But let's say I want to issue a license to myself. I can give any tags, any description, any relevant links, or any key value pairs I want to include. I can just hit create license, confirm the transaction, and here you see is my license. It is currently processing so if I were to refresh here we see success. I refresh again, I can get the link, open, a new tab, and here's the information of my license. With data NFTs, ownership of data can be established, which allows transferability and sales while maintaining a verifiable proof of ownership.
00:03:23.194 - 00:03:57.780, Speaker A: NFT owners can issue licenses. It incentivizes collaboration under defined terms and conditions for how the data can be used. These specifications are stored in the metadata of licenses to help data owners maintain the integrity of their work. Chainlink functions will continue to provide a decentralized oracle network, enabling the trust minimalized computations, the ability to run scripts and code before and after the API calls will lead to more innovative and complex projects in the future. So this is our project. Data nfts with Chainlink functions and I hope you enjoyed. Thanks for watching.
