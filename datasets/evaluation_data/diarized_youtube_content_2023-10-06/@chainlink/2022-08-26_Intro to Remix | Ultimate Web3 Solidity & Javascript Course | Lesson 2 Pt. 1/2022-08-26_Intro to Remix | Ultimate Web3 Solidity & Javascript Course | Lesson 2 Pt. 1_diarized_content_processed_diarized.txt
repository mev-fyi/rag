00:00:09.050 - 00:00:36.790, Speaker A: Now that we're getting to the coding sections, I need to stress to absolutely use the GitHub repository associated with this course. If you come to the GitHub repo and you scroll down and you click the lesson that we're on right now we're on lesson two. Welcome to remix simple storage. If you click on it, it'll give you a ton of timestamps and other helpful links associated with this lesson. Additionally, the biggest piece is that all the code will be available right underneath the lesson title.
00:00:37.370 - 00:00:38.918, Speaker B: This will have all the code that.
00:00:38.924 - 00:01:07.726, Speaker A: We'Re going to be working with, as well as some more additional information on how to work with the code. Please when asking questions and entering in discussions, though, please ask your questions in the full blockchain solidity course repository. Thank you. And if we're at the top of the repository and we scroll down, we have this resources for this course section which brings us to the GitHub discussions which you can ask questions in the GitHub discussions section of this course. Additionally, on stack exchange, Ethereum or stack.
00:01:07.758 - 00:01:10.482, Speaker B: Overflow, I'll talk a little bit about.
00:01:10.536 - 00:01:57.306, Speaker A: How to format questions and ask questions the best way so that you have the highest chance of getting a good answer in a later lesson. I highly recommend you pause and make accounts for stack exchange, Ethereum, stack overflow and GitHub right now if you haven't already. Links to them, of course, can be found in our GitHub repository. Typically for each coding section, I'll start it off by giving a quick overview of the code of what we're going to be working with and what we're going to be building towards, since everything that we're doing is going to be project based and that's how we're going to learn. For our first one in remix, though, we're going to skip over that because there's a lot of stuff to get used to. Now, I highly recommend that as I'm coding this and as I'm doing all this in remix, you follow along with me and you code along with me. Remember, you can change my speed.
00:01:57.306 - 00:02:27.770, Speaker A: If I'm coding too fast or if I'm coding too slow to start, we're going to jump into a tool called Remix. If you're unsure how to get there, there's a link to remix in our GitHub repository. This is where we're going to be writing all of our code. So welcome to the remix ide or integrated development environment. This is where we're going to learn how to code and interact with our smart contracts. If you want, you can go ahead and accept to help out remix. If you've never been here before, it'll give you a quick walkthrough of some of the tools that remix actually has.
00:02:27.770 - 00:03:08.534, Speaker A: We're going to skip over them for now because I'm going to explain everything that's going on. Remix is such a powerful tool because it has a lot of features that allow us to really see and interact with our smart contracts. Eventually, we're going to move off of remix actually to a local development environment. However, Remix is absolutely fantastic for learning the fundamentals of solidity, and I highly recommend everybody start with remix when they're getting started. When you come to the remix ide, there's a whole lot of different things that are popping out to us. There's a lot of different plugins as well. Since we're going to be working with solidity, which is going to be the language that we're using to develop our smart contracts, we can go ahead and get started by clicking the solidity plugin, and a couple of other tools will.
00:03:08.572 - 00:03:09.734, Speaker B: Show up on the side.
00:03:09.852 - 00:03:26.826, Speaker A: Even if you don't click the solidity plugin, you'll still be able to code solidity smart contracts. The left hand side is where we're going to start to actually interact with things. The button on the top, most of the left is our files or our explorer directories. Remix comes boilerplated with some different contracts.
00:03:27.018 - 00:03:31.898, Speaker B: Some different scripts, some different tests, and different dependencies.
00:03:31.994 - 00:03:38.066, Speaker A: We are going to minimize this a little bit, so if you want to go ahead and right click and delete some of these folders other than the.
00:03:38.088 - 00:03:40.418, Speaker B: Contracts folders, feel free to do so.
00:03:40.504 - 00:03:41.634, Speaker A: Or if you kind of like them.
00:03:41.672 - 00:03:43.700, Speaker B: There, feel free to leave them as well.
00:03:44.230 - 00:03:49.126, Speaker A: We're going to leave our contracts folder and we're going to delete the different files inside of it just so that.
00:03:49.148 - 00:03:51.030, Speaker B: We can start from a blank slate.
00:03:54.440 - 00:04:05.570, Speaker A: Most projects come with something known as a readme. Usually it's a readme MD, which usually explains how to actually work with code. But for our purposes, we're going to delete this as well, and you can just follow along with me.
