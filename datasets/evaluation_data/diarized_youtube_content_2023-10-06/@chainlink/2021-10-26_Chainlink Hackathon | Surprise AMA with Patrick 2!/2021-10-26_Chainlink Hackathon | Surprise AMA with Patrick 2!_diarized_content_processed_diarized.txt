00:00:02.090 - 00:00:43.890, Speaker A: Hello. Hello. Welcome back to the Chandler Hackathon. Get started in just a minute here. We're going to let a couple people join. Got a another wonderful workshop. Get started in just a minute here.
00:00:43.890 - 00:01:16.860, Speaker A: I'm redoing myself. Let's not do that. Yeah, we're about to get started. Here's it. All right. Welcome, everybody. How is everybody doing? Hello, welcome to surprise AMa round two.
00:01:16.860 - 00:01:41.694, Speaker A: So it is 12:00 originally we had alchemy on the schedule for right now to do some NfT stuff. They are still going to be presenting. It is just not right now. So they're moving to Thursday. I believe they wanted to change a couple of things and the presenter is going to make it. So they're actually going to come here on Thursday. We will hear from them on Thursday, which will be an absolute blast.
00:01:41.694 - 00:02:27.460, Speaker A: So in the meantime, to keep the content train going, I'm going to be doing an AMA or if we don't have a lot of people, we can do kind of like let's build some weird thing together which might be kind of fun where we just kind of live, pick something and see what we can build in an hour or less and maybe I'll explain things less or maybe I'll explain things more, kind of whatever. Here we have a pretty small group, which is great, so we can be pretty collaborate. Hello, how's it going? I see everybody in the chats. What's up? What's up? How are we doing? What up? What up? Good morning. Although it's noon where I am first. You were actually second. Hey, how's it going? How are we doing? Cool.
00:02:27.460 - 00:02:37.320, Speaker A: So, hey, what's up? What's up? Chrome. More chrome. More. Taking that 16 hours course. Doing absolutely fantastic. Hello, Jose. Hello, hello.
00:02:37.320 - 00:03:05.342, Speaker A: Let's do something with Brownie this. Ooh, now we're talking. Now we're. Hello, hello, Ts or Js? Just kidding. I mean, if everyone here wants Ts, we'll do something with Ts, right? So, yeah, we're letting some people trinkle in, but yeah, to get this started, like I said, alchemy couldn't make it here, so they're jumping in on Thursday. So to fill the gap, I am here to answer any questions. So we'll kick it off with any questions.
00:03:05.342 - 00:03:30.070, Speaker A: And if nobody has any questions, maybe we'll just do something fun, right? I got my vs code up. We'll see if we can build some crazy thing together or something weird or something wild. I wish streamyard had the comments coming a little quicker. That way I could see them quicker. But cool. So I'll answer some questions and then depending on the volume of questions, maybe we'll do something fun. But questions first.
00:03:30.070 - 00:04:03.650, Speaker A: So Jose, I have a question. I like this hackathon. It is my first two, but what is the next step for beginner? Amazing question. So this is the first step. You taking this step is perfect, right? This is awesome. Typically what we see from a lot of people is that this kind of is that resume builder, right? You put it on your GitHub and you stick that on your resume. Boom, you've got a project, you've got something, right? And the next step depends on what you want to do, right? If you want to get hired by a blockchain company, well, the next step is going to be start applying.
00:04:03.650 - 00:04:25.922, Speaker A: You know, I did this chain link hackathon. Look at how sick my project is. Or you can start jumping on gitcoin grants. So a ton of these protocols are looking for people to do something, right. Maybe you see uniswap and you know that they need more tooling or something. So you apply to a grant for uniswap and you get paid to make something on uniswap. Or maybe for chainlink.
00:04:25.922 - 00:04:48.080, Speaker A: Chainlink has a grants program. Maybe you jump into chainlink and say, hey, I want to make the funding link process better or something like that. I'm going to do a remix integration or something. Boom. You can make money off of that. If you're looking to make money or kind of get a job, a lot of freelance work is out there. But yeah, putting this on your resume is like absolutely the best thing that you can do.
00:04:48.080 - 00:05:33.390, Speaker A: Or maybe you want to just start your protocol, right? Maybe your project is so cool you want to just start it. What you can do is take it and run with it, right? You can absolutely run with it. You can build a team, try to get some funding. Maybe that path is a little bit less clear, but get an audit, go mainnet, do the darn thing. Should I leave the chainlink hard hat starter kit in JS or is it too hard to write the test in typescript and have everything work? I want the typings. If you like typescript, do it in typescript. I actually have a call this week on if we want to have both a JavaScript and typescript starter kit or just typescript.
00:05:33.390 - 00:06:07.510, Speaker A: As most of you know, I make fun of JavaScript all the time just because I personally don't really like it. But the more I've worked with typescript, the more I like it, the more I'm like, okay, this does get rid of a lot of the issues that JavaScript has. So it's up to you what you want to do. Is it wrong for me to have both truffle and hard hat in my project? That way whoever pulls it can use whatever they prefer. It's up to you. So hard hat and truffle are for you, for you to build your thing. If you want it to be usable by anybody, maybe that's something that you can do.
00:06:07.510 - 00:06:38.820, Speaker A: I think that's over engineering a little bit. If I have a project, I'm going to be using hard hat, not hard hat and truffle, right? So we do a bunch of demos in truffle. You can absolutely use truffle for this hackathon. I think just going with one is going to be better. Can you suggest project ideas for beginners? Yes, I can. Our garsh darn Tooton can. I'm going to post a link in the chat here.
00:06:38.820 - 00:07:21.086, Speaker A: 77 smart contract use cases with chain link. That's a whole ton of stuff. But if you're looking for a beginner piece, just really any of the workshops that we do, take any of the workshops, any of the code that we give you and tweak it, right? So the rest of this week the workshops start getting a little bit more advanced, which is really good, but take it, tweak it and improve on it. So like any of the NFTs, we have an NFT workshop later today. Take that NFT workshop and level it up. Take the Defi project that we did earlier today and maybe finish it because we didn't finish it. Or take the finished code and do something different with it, right? So there's a ton of different things you could do something with.
00:07:21.086 - 00:08:06.240, Speaker A: NFTs are usually pretty easy and they're great starter projects. Absolutely great starter projects. I have a question, before you start building, when did you find out about smart contracts and what were your first thoughts on it? Great question. So I first found out about smart contracts maybe two years ago, which, crazy, right? It's only been like two years. And somebody had approached me and the company that I was working for at the time and they were like, hey, do you want to help put data on the blockchain? And I was like, this is before I knew anything about smart contracts. And I knew blockchain was like bitcoin. And I was like, why would I want to do that? Why would I put data on bitcoin? What is the purpose? And then they started talking about smart contracts and stuff and I was like, okay, that sounds interesting.
00:08:06.240 - 00:08:51.294, Speaker A: And then at first I was like, oh, that sounds a little gimmicky. But then I started looking into it and I was absolutely blown away. I was like, oh my goodness, this can solve so many problems, especially since I had worked at a hedge fund before that and I got to see a lot of the issues kind of that space has. And smart contracts just were kind of like the light switch went off or whatever happened, right? My brain was like, oh my goodness, these are so cool. And then it's just been down the rabbit hole since, right? I love this industry so much and I think it's so cool and I think it really does solve so many problems. For something related to IoT, which set of tech is best for beginners? Chainlink is chainlink. Anyapi call.
00:08:51.294 - 00:09:26.038, Speaker A: Go to the docs chain link, look up that anyapi call stuff. What you'll do is in your iot device is you'll expose like an HTTP port or you'll allow Htp get or post requests to be made to your Iot device. And then you can use that to connect to your chainlink node. And bada boom for chainlink keepers. How does checkupkeep work? I want to minimize costs, so check upkeep is free. So the nodes will call that function and they will wait for a return type. So if it returns true on checkupkeep, it's going to do perform upkeep, right.
00:09:26.038 - 00:10:02.414, Speaker A: So they're going to call checkupkeep all the time and it's never going to cost them you a dime because they call it in a virtual environment, right? So there's two ways to call functions in solidity. You can do a call or ascend. Okay. Ascend is when you actually spend gas and you make a transaction and you change the state of the blockchain. A call is when you call that function, but you simulate what would happen if you called it, right. So the chainlink knows they use this call, this simulation functionality to call check upkeep. So they never spend any gas.
00:10:02.414 - 00:10:30.800, Speaker A: Only gas is spent on perform upkeep. And that's where you're going to want to optimize your gas. So optimize on perform upkeep as opposed to checkup keep. Well, they do actually call checkup keep. After they simulate it, they go, okay, it's going to return true now, then they'll actually call checkup keep. But for the most part, perform upkeep is where you're going to want to optimize gas checkup keep. You can be a little bit more laxadaisical with, although they do call it so you should be gas efficient there too.
00:10:30.800 - 00:10:50.580, Speaker A: I only asked because I found about smart contracts Ethereum and chainlink in the same night. I was blown away by the revolutionary this tech cyberpunks were working on. Sweet. Yes. It's an insane technology. Absolutely insane. What are the importance on learning level stuff at the beginning of your journey, such as EVM or Abi logic? Yeah, not that important.
00:10:50.580 - 00:11:17.100, Speaker A: Abi stuff is good. It's good to understand what an ABI is and what an ABI does, but you don't need to know opcodes or Yule or assembly or any of that stuff. Yeah, that's really not important. You need to know what an is and you need to know what an ABI is and what an API encoding does. That's kind of it. Yep. NFts are.
00:11:17.100 - 00:11:50.994, Speaker A: So chainlink itself is an open source technology, right? So will the chainlink community do this? I don't know. Probably. Chainlink itself doesn't really partner, right? That's like asking if Python will partner with stuff. Sure, yeah. No, I don't plan on having a party. Sorry. There's so many developers tools released and continue to be released.
00:11:50.994 - 00:12:11.850, Speaker A: Is it worth trying to keep up with them all? If so, how? Up to you. I would say no, though, for the most part. Right. If there's a new technology that excites you and it solves a problem that you have, then great. Learn it, right. Tools are only as good as the problems that they solve. So if there's like a tool and it's like, yo, we're the new hotness.
00:12:11.850 - 00:12:35.654, Speaker A: We're not the old and busted. We're new hotness. And they're like, here's the problem that we solved. We solved the problem of opening a text editor. If you don't have that problem, don't get the tool. Right? Like, if you can open your text editor, fine, who cares? Right? So if you hear of a tech that kind of solves a problem that you have, then yes. Right.
00:12:35.654 - 00:13:10.030, Speaker A: But it's kind of up to you. If you're happy with your environment, great. I think it's good to have a light pulse or keep a light pulse on it, keep a light check on it, just to hear about new technologies and the problems that they solve. But, yeah, if it doesn't solve a problem that you have, then who cares, right? I'm kind of confused about tokens and contracts. Is each token an instance of that ERC 20 contract or ERC 20 contract is only one and it is like a blank that holds info about token holders. Amazing question. Yes, it's the latter.
00:13:10.030 - 00:13:35.658, Speaker A: This is a good tech question. Here's how we're going to answer this question. We're going to pop open an ERC 20 contract and we're going to look into it. We're going to answer this share. Share screen window. This one share. All right.
00:13:35.658 - 00:13:59.354, Speaker A: Open Zeppelin contracts. Actually open Zeppelin contracts. So here's open Zeppelin. If you haven't heard of open Zeppelin before, they have basically packages that show you how to do a lot of smart contracts really easily and hopefully that's big enough. But they have an example ERC 20 token contract. So we can go in here. This is an ERC 20 token contract.
00:13:59.354 - 00:14:26.966, Speaker A: When you deploy this, this whole thing gets dumped onto a blockchain. Right, right at the top we have a bunch of these things, one of these things, a bunch of these variables. One of these variables is a mapping of an address to a UN 256. It's a private variable called balances. So this contract, literally in this one variable just keeps track of how much tokens everybody has. Right? So that's it. Right.
00:14:26.966 - 00:14:53.374, Speaker A: So it's not like individual tokens are flying around. There's a mapping, there's this data structure that says address one has this many tokens, address two is this many tokens. And that's it. This one contract just has a list of every address and how much of this token that they have. So great question. It's more the latter. So it's more the ladder or ERC 20 token is only one and it is like blank that holds info about token holders.
00:14:53.374 - 00:15:26.380, Speaker A: Yes, it is the latter. Amazing question. Can the keepers check up keep update the state of a contract it calls before delegating it to perform upkeep. No. So check up keep tells the keepers when to update the state of a smart contract. So there you go. Right? So you could have like two keepers, right? You could have a keeper checking up keep to do something and then another checkup keep to check to see when that something is done.
00:15:26.380 - 00:16:00.574, Speaker A: Good question. What would happen if data providers would collaborate on reporting missing data? Great question. So they probably would no longer be used. And this is kind of the same question as like hey, what happens if all the Ethereum miners decide to stop working? Right? They could totally do that. It would be very difficult to coordinate that. And that's kind of the power of Ethereum. If they all coordinate, they're going to get kicked off.
00:16:00.574 - 00:16:29.994, Speaker A: Like kicked off the network. They're not going to make money, they're going to ruin the network and there's all these incentives for them not to do that. So it's kind of the same problem of Ethereum. This question is not related to hackathon, but when do you see devs putting out projects that are not finance related? Ask any question you want here. But when do you see devs putting out projects that are not finance related? All the time. I mean, NFT projects aren't finance related. Well, I guess it depends on what you make them for.
00:16:29.994 - 00:17:12.220, Speaker A: But yeah, all the time. I've seen some of my favorite projects are like, what is it? There's like random faucets. The FaU faucet is a really cool, it has nothing to do with money, it just gives you kind of free ERC 20 tokens and that's it. It doesn't make any money. There's a whole bunch of them, just random contracts that don't really do anything. What oracles and functionality would you say are missing in the current chain link environment? So this is one of the beauty of chain link is all the functionality is technically there, right? We just need to make it easier to use, which is super sick right now. You can do anything, right? It just some takes more legwork than others.
00:17:12.220 - 00:17:46.562, Speaker A: So if I could rephrase the question, what functionality currently isn't as easy as other technologies? I would say the answer kind of depends. So depends on where the demand is going to be next. Smart contracts and the data. That data is really only good, again, as the problem it solves, right? Data is you use data to make decisions about life. So pricing data is a great example. People wanted pricing data to make financial instruments. There's a huge demand for that.
00:17:46.562 - 00:18:36.340, Speaker A: So it became easier and easier to get this financial data. I think as we go on, we'll see more demand for different products and services come out and those will dictate what is missing, what's needed. Great question, tippy, with an amazing question here. Okay, if you were a final boss dragon type creature encountered at level ten inside the chain link fortress, what you be guarding? Loot for players. And what would you say upon defeating them or being defeated? I would be guarding a treasure trove of NFTs and cheeseburgers. I love cheeseburgers. I would never be defeated and I would say get frogged on when I defeated them.
00:18:36.340 - 00:19:11.200, Speaker A: How to become a blockchain developer? Yeah, we mix it up here. How to become a blockchain developer tons of ways. You are doing the exact right thing being here, asking questions, being engaged. Go to the workshops, ask a ton of questions. Take that 16 hours freecode camp course, ask a ton of questions, find any course, ask questions. Then go to a hackathon, make some projects, put it on your resume, and then start applying to blockchain groups. Run your own protocol, or start doing open source work and getting paid for it.
00:19:11.200 - 00:19:35.094, Speaker A: I know that was a quick answer, but we answered something similar recently. I'm struggling a bit with fixing Chainlink and Morales in the same architecture. In my head, how can they work together at high level? Great question. Think of it like this. On this side of the world is smart contracts. We have Ethereum, we have chainlink. They're all doing this smart contract and hybrid smart contract stuff.
00:19:35.094 - 00:19:49.162, Speaker A: They are all in kind of their own world. Boom. This side. On this side we have Morales. Morales connects to the blockchain stuff. So we have our hybrid smart contracts, our smart contracts agreement. We have something like Ave over here.
00:19:49.162 - 00:20:36.220, Speaker A: We have something like, you know, Chainlink prices, the underlying collateral. And then we have something like Morales, which reads off the blockchain and lets people sign into a website that allows them to interact with Aave. So if you've been to any defi protocol, if you've been to any website, all the stuff that's happening on the website is what Morales would do versus whenever your metamask pops up, that's going to be chainlink and Ethereum or avalanche polygon, whatever happening in the smart contract world. Hopefully that was clear. Great question. What will be the roadmap to becoming a master in blockchain? AI researcher? Great question that. 16 hours freecode camp.
00:20:36.220 - 00:21:06.366, Speaker A: I mean, full python GitHub so you don't have to do all this stuff in Brownie. And again, I'm a little bit biased, obviously, because I made this, but I think this is really it. So you don't have to do all this in Python and Brownie. But I think the lessons here are good, right? So understanding kind of the basics of blockchain. I'll drop this course. I'll drop this GitHub in here. It doesn't have to be python.
00:21:06.366 - 00:21:41.578, Speaker A: You can do all this on hardhead, but these are kind of the basics here. Understanding how remix works, right? What storage is, how to store stuff. Storage. What is inheritance? Inheriting smart contracts. Inheriting external smart contracts. Working with global variables, units of measure, chain link oracles, hybrid smart contracts, web3 Py, web3 Js or just web3 Js, whichever one you want. Working with one of these smart contract development frameworks like Brownie, like hard hat, where you can test, you can test them in these environments.
00:21:41.578 - 00:22:27.310, Speaker A: You can go into the console, you learn how to work with open source like git, GitHub, you learn about dependencies, how to deploy to different networks, how to fund and send money and send tokens across smart contracts, how to get true random numbers right, how to work with some boilerplate projects, ERC 20 eips token standards, DFI Ave well, maybe not necessarily. Well actually no. Ave is awesome. Learning about DFI and kind of some of the basics of how to build DFI, learning the basics of NFTs, proxies and upgrades. And then you don't have to do full stack if you want to do full stack. If you understand the concepts of lesson zero to lesson twelve, you're an expert. Boom.
00:22:27.310 - 00:23:10.150, Speaker A: And that's it. How is VRF? Actually, I'm going to answer this as if the question is, how does VRF work? Great question. Smart contract emits an event, Chainlink nodes. Listening for that event goes ah, somebody wants a random number. Let me get that for you. Goes off chain gets a random number, and then in a second transaction it makes a call to a smart contract that on chain is verifying whether the number is truly random. It uses some wonderful cryptographic magic with like signing the number with its key to make sure the number is actually random, and then boom, it sends it to your smart contract.
00:23:10.150 - 00:23:38.514, Speaker A: So hopefully that was good. There's more on the docstep chain to link as well. How does upgrading via proxies work? I saw a video about it on your YouTube channel. Yes, upgrades YouTube smart contract. So this video will give you a much better look into it. I'll post a link to this as well. It's a half an hour.
00:23:38.514 - 00:24:07.882, Speaker A: I think the first 15 minutes is kind of the high level. And then after that we do an example. This actually is in hard hat, so if you guys like JavaScript and stuff. But basically how it works is with this magic of this thing called delegate call. So you have a contract that you always make calls to, let me get rid of me. You have a contract that you always make call to. This is your proxy contract.
00:24:07.882 - 00:24:38.454, Speaker A: This never changes, this is always going to be the same. And this proxy contract, it basically has a variable in it that says hey, the contract you want to call is this one. And then you point to it. So you call this proxy and it directs you to which contract you really want to call. Whenever you want to upgrade, you just change the pointer, right? So that's it. So it's just a variable. You change the pointer, you say, hey, now we're going to call this contract over here uses this special thing called delegate call, which does some cool low level stuff.
00:24:38.454 - 00:24:56.170, Speaker A: But that's basically it. You just change the pointer and say, hey, the new contract is going to be over here. That's what we're going to call now. That's the new one. And when you want to upgrade again, you just change the pointer again. You say, hey, you call the proxy and the proxy directs you kind of like think of the proxy contract as like a router. It's going to route you to the right contract to go to.
00:24:56.170 - 00:25:17.742, Speaker A: So that's how the upgrades work. How fast is VRF, is it possible to use to generate reward after matching the game? Depends on how fast the blockchain is. That's it. If you have a block like Ethereum or, excuse me, a blockchain like Ethereum, the quickest it can respond is in one block time, which is going to be like 13 seconds. Could be a lot faster on Polygon where the block time is a lot lower. Or binance. Smart chain or Salana.
00:25:17.742 - 00:25:44.470, Speaker A: It's not on Salana yet though, sorry. Because remember, it's a two transaction deal. So one transaction to make the request and a second transaction to get the request returned by the chainlink node. So at its fastest is two blocks of whatever network it's on. Great question. In the workshop earlier today, you mentioned that import ad open zeppelin is more gas efficient than copy pasting. Why? It doesn't sound like either changes state of the blockchain.
00:25:44.470 - 00:26:02.002, Speaker A: So I think I said it was the same. Right, because importing is doing exactly that. When you import code, you are just copy pasting. So that import line, when it gets compiled, gets compiled down to copy pasting. So I don't think I said it was more gas efficient. If I did. That was wrong.
00:26:02.002 - 00:26:30.940, Speaker A: Sorry. It doesn't sound like either change of the state of the chain. So yeah, they should be pretty much the same, both gas efficient. One feature keepers, I read, is off chain computing to save gas. How does this work? Is it those free call functions you were talking about? Great question. Yeah, basically. I'm not sure what in particular this could be referring to.
00:26:30.940 - 00:27:43.650, Speaker A: I think off chain computing, that might be a mix between off chain computing and keepers, right? So off chain computing is definitely a gas saver, right? So let's say you have some crazy function on chain and it does some weird AI stuff and it's super sick, right? Maybe like on your laptop it takes it ten minutes to run. In the ethereum world, something like that is going to cost an insane amount of gas. So instead of running all your computations on chain, what you can do is you can export them to run it off chain and just get the result of it as like a chain link call. So I think what you're talking about there is just off chain computing in general Keepers is kind of the first echelon into that, into this off chain compute world, which in the world of off chain compute that is a massive gas saver, right? Let's say you wanted to scroll through 10,000 variables. That would be quite expensive to do on chain. Doing it off chain is going to be one API call to a chain link node and a response. So that could be much cheaper.
00:27:43.650 - 00:28:06.774, Speaker A: Great question. Got some proxy questions. We have an upgrades workshop later this week or next week, so definitely go to that. Everyone asking about upgrades, does proxy upgrades could be used for destructive purposes as you can change the invitation. If someone hacks my computers, it'll become a single point. Spot on. Yes, in that video I talk about that a little bit too upgradable.
00:28:06.774 - 00:28:29.860, Speaker A: Smart contracts are a risk because depending on who has the power to upgrade is a centralized point of failure. So absolutely spot on. Great question. Something that's cool that a lot of protocols will use is they will have a DaO responsible for the upgrades. Great question. What are your favorite chainlink products built on Chainlink? I love so many. There's so many cool ones.
00:28:29.860 - 00:28:42.760, Speaker A: You hear me talk about Avi all the time. I absolutely love what Avi is doing. They're really cool. Talk about synthetics a lot. I think synthetics is really cool. I think all the NFT products are really cool. I think they're all really cool.
00:28:42.760 - 00:29:05.166, Speaker A: I would never become defeated. Get frogged on. Yes, if I understand the external adapter, it's the API. Oh my God, I'm like ten minutes back on questions. Sorry. I'll try to go faster if I understand the external adapter. It's the API service that will run on my server and give it the node operator Uri of my API to then as the external adapter provider can manipulate the data.
00:29:05.166 - 00:29:27.986, Speaker A: Yes. External adapters are a centralized point of failure. That's why you should, if you want a decentralized external adapter, have it on many different nodes. Excellent point. Does proxy upgrading, I lost my point here. Does proxy upgrading could be used for destructive purpose? Oh wait, I already answered that. Yes.
00:29:27.986 - 00:30:07.120, Speaker A: I'm always stuck making smart contracts and deploy and then the token is an error. I don't know what to do with so many info at once. I'm always stuck making smart contracts. Good question. So I would jump into one of these workshops or do some peer programming or make stack overflow, stack exchange questions on the errors that you're running into, right? Copy paste the error into a stack exchange e question. Boom. Some people will jump on, they'll help you out because it sounds like there isn't a specific issue, but that's how you can get help there.
00:30:07.120 - 00:30:42.490, Speaker A: What aspects of a hackathon project will you look at to determine winners of the various categories on the dev post? At the bottom there is categories that we're looking at. It's going to be technicality, originality, user experience, some wow factor and can't remember the first one. Dev post chain link fall hackathon. I'm just going to scroll to the bottom and I'll just tell you. I'll post a link in here too. User experience, originality, technicality, practicality and wow factor. Boom.
00:30:42.490 - 00:31:04.340, Speaker A: Posted link, scroll the bottom. It has it there. How do we get access to the free codecam? It's free. I'll post a link right now. YouTube video, it's on just, you always have access. What is the difference between hybrid smart contracts and a normal smart contract? Million dollar question here. Great question.
00:31:04.340 - 00:32:28.506, Speaker A: Hybrid smart contracts are a combination of your on chain logic and some off chain component, right? So oracles are the key feature that turn a smart contract into a hybrid smart contract. Once you have a smart contract that has some data or some component from an oracle, it's now a hybrid smart contract. And what we see is a lot of these top protocols are hybrid in some sense, right? Because these are the protocols, these are the smart contracts that interact with the real world in some regard, right? We want smart contracts to replace these old contracts, right? They need to be these superior digital agreements, so they need this connection to the real world, right? And so that's what oracles do. And oracles are the key piece between a smart contract and a hybrid smart contract according to your vision? My vision. Do you think smart contracts would be implemented in politics and voting? What is the limit or the ultimate goal? I think yes. I think eventually smart contracts will replace almost every contract, especially voting, especially politics, because blockchains are just a better infrastructure, right? They're tamper resistant, they're more transparent, they're immutable, they're just way better. How to join VCs? Where is info like getting a job with a VC that's not really blockchainy.
00:32:28.506 - 00:32:50.054, Speaker A: I'm going to move on. Are you saying 16 hours are enough to become a master? Patrick, are you lying to us? I might be a master. No. So that course is 16 hours. If you only spend 16 hours, I promise you won't be a master. Right. Because each section takes time for you to tinker with it and try yourself to really understand the sections, right.
00:32:50.054 - 00:33:34.526, Speaker A: So if you only take 16 hours, you probably miss some information and you 100% won't have digested it. They say there's three levels of learning. There's knowing the information, which is kind of like knowing about it, and then the next level is understanding the information is like being able to kind of connect dots that might not seem like they're connected, instead of just knowing random facts. And then there's like feeling the information where somebody could do something and you would have an immediate impulse without even having to think about it, right. Because you feel it in your bones. Like if you're coding and you just automatically know to do something or you automatically know to see something, that's that feeling piece. Python Js are used for the test parts, right? It's been difficult deciding whether to use brownie hardhat.
00:33:34.526 - 00:33:45.640, Speaker A: It doesn't matter, pick one and go. That's what I'm going to say. Doesn't matter, pick one, go. Have fun. I prefer Python. I think 70% of the community uses hard hat. Just pick one and go.
00:33:45.640 - 00:34:12.442, Speaker A: Doesn't matter. Can I officially request more AMA and perhaps topic related? And what would you say to an eleven year old who's already learned algorithms in Python? Yes, you can officially request. Thanks for the request. I'm glad you find value in these. And what would you say to an eleven year old who's already learned algorithms in Python? Thanks work. I guess it depends on what they want to know. Do they want to do smart contracts? Then I would say, hey, check out Brownie.
00:34:12.442 - 00:34:41.906, Speaker A: Do they want to do more Python? I would say, hey, do more Python. But yeah, I'd probably tell them to check out Brownie. That's what I would say. What is the best way to rate a front end with VooJs? After deploying a contract to Brownie? I've worked almost none with Vue Js, so I will be the terrible person to ask that. If you're a total noob, what language and path would you take to get adapt dev JavaScript versus Python? Dive right into slidity, et cetera, et cetera. Python that freecodecamp video JavaScript. I'm making a JavaScript version.
00:34:41.906 - 00:35:18.590, Speaker A: So I would say that one, whenever that one comes out. Oh, what language path? It doesn't matter, it doesn't matter. And I make fun of JavaScript a lot just because I personally don't like it, but it really doesn't matter when I'm being honest. It's going to be whatever you want to use. Whatever you want to use. I would say if that's your stopping point, flip a coin, pick one and go seriously, it doesn't matter. How does VRF handle the gas fees on the callback? It pays them, so the VRF is the one to pay them and that's why it takes the link token as payment to cover those gas costs.
00:35:18.590 - 00:35:46.178, Speaker A: Great question. How does a large DAP organize their code? If someone reports the bug, how do they update their code? Is possible because of delegate call or something else. Amazing question. So this is kind of just about like maintenance of your smart contract. I'm actually falling farther behind in the questions. I promise I'll be quick. I would definitely recommend looking at some high profile protocols like Aave, like uniswap Maker if you want to look into DAP tools.
00:35:46.178 - 00:36:29.418, Speaker A: Maker is one of the few that uses kind of like their own smart contract framework. But yeah, ave urine curve, they're all great examples of what they do now. It depends. So curve I believe is a protocol where they made it not upgradable on purpose, right? They did that intentionally so that it would be harder to manipulate. And if someone reports a bug, typically they'll have a security vulnerabilities roadmap or document where they say hey if you want to report a security vulnerability, here's how you do it. For just reporting bugs and stuff, you usually just make an issue on the code base, right? That's it. You just make an issue on the code base.
00:36:29.418 - 00:37:08.040, Speaker A: Large Dapps, they usually organize it into like a smart contracts repository and a front end repository, right? That's the real simple of it. Sometimes they break up the smart contracts and they break up the front end and they'll break up other tools, but that's really it. Smart contracts, a back end. By back end I mean smart contracts and then like a website front end repository and yeah, someone reports bugs, you just make an issue. Is it possible because of delegate call or something else? So yeah, I mean hacks happen all the time. Issues can happen from any plethora of things. So yes, that's how they do it.
00:37:08.040 - 00:37:41.678, Speaker A: I don't know, everything imported is pasted in the contract to compile time. Yes. Should one plan to upgrade from the onset when creating smart contracts? No. Why not? Because upgrades can introduce a whole bunch of issues and security vulnerabilities. If you don't know what you're doing with upgrades, don't do them. That's it. If you want your smart contract to be immutable and that logic to live there forever, permanently, don't have upgrades.
00:37:41.678 - 00:37:54.898, Speaker A: Right. So upgrades can depend. Right. Whenever you introduce new functionality, you have to think of the trade offs. There's definitely a trade off. Using upgrades, you introduce some point of failure. Somebody has to make the upgrades, and somebody has the key to make those upgrades.
00:37:54.898 - 00:38:24.720, Speaker A: So you want to keep that in mind when you're architecting your smart contracts. Trail of bits has written some blogs where they basically say they hate upgrades. They don't want to see anybody doing upgrades. Openzeppelin, on the other hand, says, yeah, people are going to do upgrades, and here's how you can do them the best. So it's up to you. If you need to perform different upkeeps that affect the contract differently, how do you delegate the checkup keep to tell the perform upkeep function to perform the right action. If you need to perform different upkeeps that affect the contract differently, you register different.
00:38:24.720 - 00:38:48.694, Speaker A: That's it. So. Or in your checkup keep, you can have a whole bunch of ifs. And in your perform upkeep, you can have a whole bunch of ifs. So those would be the two ways I would do it. Matt Durkin. What's up, Matt? How you doing? Are VRF requests fulfilled by Chainlink nodes, operated by Chainlink Labs, or by community node operators? Is there some level of node redundancy in the system? This is a great question.
00:38:48.694 - 00:39:06.654, Speaker A: So this is actually being renovated a little bit right now for. Well, actually, wait. I don't want to give anything away. Whoopsies. Let's come back to that in like two months, basically. So anybody can run a chain link node. Anybody can spin a chain link node up.
00:39:06.654 - 00:39:53.206, Speaker A: Running the VRF part is a little bit tricky, but anybody can run one. There's like a flag you set to do, like VRF equals true. But yeah, running the VRF part is definitely trickier, and it's something that even I'm not great at myself right now. Is market node verification support for the avalanche Solana coming soon, or can I help with this? Solana probably not, because Chainlink is only available on Solana Devnet, right? I don't know. Sorry. The canned answer I always give to these for timelines is sooner than you think, but not as quick as you'd like because it really depends on a thousand factors. Chain link doc says a get request section with examples.
00:39:53.206 - 00:40:33.260, Speaker A: Can you go over an example of why this would be useful on a blockchain? If it's pulling from a centralized source, doesn't it defeat the purpose? Yes, spot on. But if you get a sufficient number of these gets and different nodes and different APIs, guess what you get? You get a decentralized data network. So showing how to do a single one is just saying hey, here's kind of the minimalist functionality and you can hook this and combine this with many other gets or posts or whatever. Boom, you have a decentralized data network. Great question. What is maximum capacity of a smart contract? It's some number of kilobytes, I forget. If you look up the block size.
00:40:33.260 - 00:41:04.354, Speaker A: I recommend googling that. I promise it's on Google somewhere. You like to learn both of them anyways in your. I mean, I use both because it's what I do. Do you have any concerns about future regulating limiting development in the blockchain space? None. I'm sure there will be bumps along the way, but I'm not really concerned at all. I just found about Openzeppelin's gas station network.
00:41:04.354 - 00:41:24.800, Speaker A: Is that product still active? Should daps pay gas for their users? I didn't know about this. That's super sick. I'll have to look into it. Thanks, Colin. About regulations. The future will be divided on centralized chains managed by governments and decentralized ones worldwide. Doesn't it? Maybe, I don't know, renovated? Go on.
00:41:24.800 - 00:41:52.760, Speaker A: I already spoke too much. What's the best place to get a cheeseburger? I'm in Boston. I love Boston burger company. They have these massive burgers with names as disgusting as the burgers. They have one called like kitchen sink, hot mess, the green Munster. They're these monstrosities of burgers and they're great and they come with like a milkshake. And I love them.
00:41:52.760 - 00:42:32.974, Speaker A: I love cheeseburgers. I tell everybody, like my last meal would be a big fat greasy cheeseburger. Oh man, we're turning this into a foodie ama. Do smart contracts require a token to go along with it? Can there be a smart contract without any sort of token? Yes, and in fact I think that most smart contracts shouldn't have tokens. Vitalik's actually written a lot about this. He doesn't even think a lot of governance should have tokens, which I think is awesome. Again, a smart contract is just functionality it's just code that's going to be executed in a decentralized context.
00:42:32.974 - 00:43:16.954, Speaker A: So especially for tokens, a lot of times you don't need a token, right? Tokens should be a tool used, again to solve some problem. Tokens are a tool in my mind. They're an economic tool for a dow. They make a lot of sense sometimes because you want only people who are invested in the protocol to have that voting power. Right? But maybe it doesn't make sense for you to have a token in your NFT, although NFT is a token, maybe you don't need an ERC 20 token for your NFT, right? Like what purpose could your ERC 20 do? Maybe you're only allowed to buy the NFTs with the ERC 20 token. That's very gimmicky, right? You don't need an ERC 20 token for that. So no, they absolutely do not always need to have tokens.
00:43:16.954 - 00:43:42.794, Speaker A: And a lot of people think that they do. And I think sometimes that comes from like an agreed perspective. But some absolutely do need tokens. Like I think Dow tokens are a great example. It's really hard to vote on something without a token. So great question. What kind of anti scam antifraud blockchain app can we build on chain link? I'm asking because it is a big problem, but nobody wants to deal with it.
00:43:42.794 - 00:44:09.540, Speaker A: That's a great question. I actually don't know the answer there, but if you can come up with something really cool, 100%. Because scam and fraud is a huge issue in this industry. So maybe like some type of chain link oracle network that checks addresses before they go in and maybe has a block list or something. I don't know. This hackathon is exactly the place to experiment with something like that. Good question.
00:44:09.540 - 00:44:52.700, Speaker A: Can someone spin up a chain link node, launch it on main net and get jobs to deliver VRF quests, assuming they need to meet qualifications? Yeah, anybody can spin up a chain link node. I don't know how to do that right now. I don't know how to do that myself. But yeah. What do you think will be the next big infrastructure development or use case hurdles that blockchain devs will get excited to tackle? What do you think will be the next big infrastructure development or use case hurdle that blockchain devs will get excited to tackle? There's 100 things. There are a million things I didn't put on screen. I feel like that's such a big question.
00:44:52.700 - 00:45:31.770, Speaker A: Yeah, I think building more cross chain dapps will be awesome. Especially once CC chain link interoperability chainlink cross chain interoperability protocol. Once that comes out, that's going to be a ton of fun because we clearly are living in a multi chain world. So I think more of that is going to be really cool. I think that's going to be a big hurdle to work with and I think that's going to be a ton of fun. Do nodes have their own computer services or do they use cloud services like AWS? Does link river have a basement of chainlink computer nodes? Awesome question. It depends on the group.
00:45:31.770 - 00:46:03.846, Speaker A: So I know a lot of node operators. I know a lot have nodes not necessarily in their basements, but yeah, to that effect. Usually the professional ones have some redundancy. So they'll have some combination of on premise hardware in some location and then in another location in some other spot across the world. So that know, just in case like a tornado hits or something. Some are working with cloud like AWS and GCP, but yeah, it depends. Right.
00:46:03.846 - 00:46:36.400, Speaker A: So there's a ton of redundant cloud. There's a ton of redundant on premise infrastructure. If you're trying to go for the cheapest option, you do 100% on chain or, excuse me, on premise infrastructure. But yeah, it's all over the place. It's up to whatever they want to do. Christine, how would you safely introduce kids to blockchain development without them wanting to steal their parents credit cards and degenning in crazy expensive NFTs? Great question. I would say that is a great question.
00:46:36.400 - 00:47:33.234, Speaker A: Just how do you introduce kids into blockchain development? Well, I think teaching them the fundamentals of computer science first is important and probably the most important because smart contracts still all follow all the fundamentals of computer science. Or just drop them into solidity course. I don't think doing a solidity course is going to make them want to steal their parents credit cards and degen into NFTs. Yeah, I don't know if those two go hand in hand, but yeah, I would say teaching them the fundamentals of computer science, dropping them into solidity courses, I think those are kind of the easiest getting started paths, showing them how to use metamask, hopefully not having them degen into NFTs next week. Did you say that we would receive an email about a course? Tell me more about that. Yes, soon. Chainshot course.
00:47:33.234 - 00:47:55.606, Speaker A: You can actually jump onto chainshot right now and I believe actually chainshot. I think they put the chain link stuff up already. I think they have a chain link course too, which is really exciting. Let me, look at courses. Oh my goodness, it is up. Boom, look at this. Oh my goodness.
00:47:55.606 - 00:48:22.130, Speaker A: I mean, they have a ton of free courses already, right? So if you want one of these self paced, like intro to solidity, JavaScript, crash course, introduction to Chainlink, you can jump in here and you can take these as well. So these are another amazing tools. But they have an additional course that they're giving out for free for people who are at the sackathon. And we will send links very soon. But if you want to jump start and you want to get started now, you can check out all these courses. Look at how sick, they have a black background too. That's so sick.
00:48:22.130 - 00:48:51.860, Speaker A: Oh my gosh, they're awesome. I have registered how to start the welcome track. Now you're doing it. So the welcome track is really just kind of saying, hey, there are all these prizes for new engineers. So when you go submit your project, just submit and apply to all those beginner projects. Absolutely. Do Daos have their smart contracts publicly available? And is that safe? Yes.
00:48:51.860 - 00:49:37.934, Speaker A: Blockchain is transparent and yes it is safe. Well, it depends on the infrastructure of the Dow most, I would say, yeah, are pretty safe, right? Because if you have a token, you need the token to vote on the governance, then that's it. Right? There is something to be said though about, and Vitalik has written a lot about this, about buying votes, which could be considered. So it depends on the architecture. But I would say yes. What can hybrid smart contract or chain link can do to prevent Dow hack like incident? Yeah. So for those of you who don't know, they're referring to back in 2016 14, I forget.
00:49:37.934 - 00:50:18.206, Speaker A: No, it wasn't even made in 2014. Back in the day there was this protocol called the Dow, right. It was one of the few pieces of infrastructure on the Ethereum network and there was an issue with, there was a bug basically, and they got hacked and they lost a ton of money. So I would say the first thing to do is this is why audits are so important. And we continue to see hacks like this all the time. One of the most popular hacks that you've seen probably is what they call flash loan attacks, right? And this accounts for 50% of all hacks in the space. And typically when people see flash loan attacks, again, these are all just bugs in the code, right.
00:50:18.206 - 00:50:49.770, Speaker A: Somebody wrote the code in a way and didn't check for these things. Flash loan attacks are actually oracle manipulation attacks. So the protocol is using some pricing, some data with a non decentralized version of code. Or with data. So for example, they pull from a centralized Dex and they say, hey, that Dex, whatever. They say the price is, that's what I'm going to use as my pricing mechanism. Somebody can flash loan the dex, manipulate the price, and your protocol is now screwed.
00:50:49.770 - 00:51:10.320, Speaker A: So that's just one super simple case of how chainlink prevents a lot of these hacks is because it brings on this decentralized data. So people don't point to a centralized piece of data. Right? Dexes are great. They are decentralized exchanges. They are not decentralized data points. They are centralized data points. Right.
00:51:10.320 - 00:51:51.530, Speaker A: The price of some asset is coming from a centralized point, which is that Dex. So that's one way chain link can help prevent Dow like hacks or with random numbers or with decentralized keepers. Or there's all these tools that chain link has to help prevent these good questions. How to implement multichain presence for ERC 20 or ERC 721? I understand that I will have to burn it on one chain and mint it on another, but how contracts of different chains will talk to each other, I would say wait for chain link, cross chain interoperability protocol and then all will become real. Can you send me a chainlink t shirt if you submit a project to the chainlink hackathon? Yes. Lol. Fair.
00:51:51.530 - 00:52:27.214, Speaker A: Yep. If you had the chance to pitch a project to Nintendo or introduce them a blockchain development for their platform, what would it be? Asking for a friend? Nfts. And I already kind of my, I make a lot of silly videos. This is one of those silly videos. Nfts. I mean, it's the easiest layup for Nintendo on the planet, period, right? They did such an amazing job with trading cards. NFTs like easiest, easiest layup.
00:52:27.214 - 00:53:16.354, Speaker A: What are the fundamentals of computer science in your opinion? That is such a big question. I'm going to skip over it. Tippy, there's a lot what web3 products do you personally use as a consumer on a routine basis? Metamask brownie, hard hat BS code. Oh, you're not talking about development tools, are you? Yeah, metamask Abe Uniswap, a lot of the basics curve, I got to swap tokens and stuff. Chain link, obviously. Well, chain links on the back. Chain links on the back end of all these protocols except for like Uniswap.
00:53:16.354 - 00:53:37.070, Speaker A: Haha. No, I didn't mean about Java VCs. I was asking about VCs, like places where you can talk about your projects. They are listed on your site, but there are no dates or ah, so the pitch day. Yes. So we're having a pitch day from this hackathon. Winning projects will get a chance to pitch the projects to VC projects, and that day will become realized once the winners are selected.
00:53:37.070 - 00:54:05.174, Speaker A: A second call. What web3 products do you personally, I'm assuming you were talking about? I don't know if you were talking about development products or not, but those are some of the ones that I use. Yeah. And tangentially related to flash loan attacks. Did you finish all the Ethernotes challenges? I finished four. So the cornflip challenge opened my eyes to the blockchain's math random problem. Yes.
00:54:05.174 - 00:54:24.110, Speaker A: And that's why chain link VRF exists. So I didn't finish all of them, but I did a lot of them. It was more of a time thing. Yeah, I forget how many I did. I did like maybe ten or 15, I think. I forget maybe I did all of them. But I also cheated, though, because I wrote one myself.
00:54:24.110 - 00:55:00.540, Speaker A: So I got to look at all the tests, so I got to see how they all work. Where are these questions even coming from? From the comments you're posting them. All right, so we have maybe a couple of minutes left here before the elastic finance workshop is going to start, which is going to be a ton of fun. So we didn't end up building anything for this workshop. What was your question? If you want to retype it, sometimes YouTube shadow bans questions if they have any weird profanity or anything in them. So that could be why. And they just won't show up for me.
00:55:00.540 - 00:55:31.378, Speaker A: I know we didn't build anything here. We asked a ton of great questions. These have been awesome questions, everybody. If we're interested, maybe we'll put some time on the calendar for next week or the week after. We'll do a fun build something weird together where we'll kind of like, we'll all jump on the YouTube comments and we'll get response a little bit quicker and we'll see if we can build something crazy. If you guys would like that, or, excuse me, if you all would like that, let me know. Let us know.
00:55:31.378 - 00:56:06.126, Speaker A: And again, let us know what you thought about this workshop. I know this was an AMa, so I don't think it's on the list. If you want to just go to the bottom like other AMa, too, please give feedback. The feedback forms really help us kind of figure out what you all liked and what you all didn't like to make these kind of better and better. And it looks like a couple more questions have come in and I got to jump off soon. Any thoughts about e two? Do you think it will kill other proof of stake blockchains like Salana? I think e two is awesome. I'm really excited for e two.
00:56:06.126 - 00:56:44.890, Speaker A: Do I think it'll kill other proof of stake blockchain? I think as we've seen, we're going to live in a multi chain world. So I don't think any particular feature will kill any other particular chain at all. So that's kind of my answer. I think I'd use more web3 products if they were free. Somehow with L2 and e two and all these protocols coming out, I mean, the fees have become cheaper and cheaper. I know I've worked a lot on polygon. I'm probably going to do more on arbitrum where fees kind of are dropping more and going to make life a lot easier and a lot cheaper.
00:56:44.890 - 00:57:17.676, Speaker A: Yeah. Jules, your question is likely getting shadow banned. That's why I can't see it. So it's not that I'm ignoring it, I just can't see it. How did you get to be so confident jumping in whenever needed a lot of time behind the wheel? I've written a lot of smart contracts, played with a lot of technology. I mean, this is like my favorite thing. I love writing smart contracts.
00:57:17.676 - 00:57:34.436, Speaker A: I love the blockchain community. I love having all you here and being able to give you knowledge and helping people out. And I absolutely love it. So it is my pleasure. It's an absolute blast. I think that's a great idea. Mass brainstorming sessions.
00:57:34.436 - 00:58:03.616, Speaker A: Web three is all about open source? 100% yes. Is chain link usable by permissioned blockchains like Bezu? Yes, I've done a demo with them as well. It's been a while, but yeah, I mean, chainlink is a chain agnostic protocol, so. Absolutely. Do you know of any universities that leverage ethereum smart contracts? Probably a ton. I don't know which specific ones, but probably a ton. I don't know what.
00:58:03.616 - 00:58:16.884, Speaker A: ICE wallow. That's funny. Okay, cute. Nice. Almost got me. Almost got me. Anyways, thank you all for coming.
00:58:16.884 - 00:58:42.720, Speaker A: Thank you all for being here. Thank you all for asking these amazing questions and being a part of this workshop. So really excited to see what everybody builds. We're going to pass it off to elastic finance now and they're going to do an amazing workshop. So definitely be sure to get that. Be sure to see that and all the workshops coming up. Like I said, I dropped a link to the type form here.
00:58:42.720 - 00:58:57.100, Speaker A: Feel free to leave any comments, any feedback. It helps us make these better and better for everybody here. And I am really looking forward to seeing everybody and seeing what everybody builds. So thank you all. Talk to you soon. Bye.
