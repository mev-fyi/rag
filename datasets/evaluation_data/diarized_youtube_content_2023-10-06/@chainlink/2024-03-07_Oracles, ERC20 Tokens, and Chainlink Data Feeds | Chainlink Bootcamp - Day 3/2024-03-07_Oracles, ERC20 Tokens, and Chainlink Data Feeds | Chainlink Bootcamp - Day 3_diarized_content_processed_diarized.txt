00:00:04.480 - 00:00:32.974, Speaker A: Welcome, welcome, welcome to day three of our chainlit bootcamp, the english track. Yeah, it's amazing to see you all here in the third day of the bootcamp. And we have a very special guest for today. We have Darby Martinez. This is our developer expert from United States. Okay, let's go, Dari. Let's start.
00:00:32.974 - 00:00:35.174, Speaker A: Welcome, friends.
00:00:36.074 - 00:00:40.434, Speaker B: All right, you got my screen?
00:00:40.514 - 00:00:41.282, Speaker A: Yeah, perfect.
00:00:41.378 - 00:00:43.786, Speaker B: All right, welcome, GM.
00:00:43.930 - 00:01:16.910, Speaker A: We're just going to start off with that. This is the chain link boot camp and this third section. So what we're going to cover today is Oracles ERc 20 tokens and Chainlink data feeds. My name is Darby Martinez. I'm a developer expert and you can connect with me at Twitter along with my LinkedIn as well. If we can have everybody go over to the pad, rise up.
00:01:17.062 - 00:01:20.264, Speaker B: This will allow us to have everybody.
00:01:20.304 - 00:02:29.744, Speaker A: Follow along while we go into our workshops today working with tokens and creating a token shop. But first, we're going to handle and learn about smart contract limitations. So at the bottom here we have a link to the chainlink blog and that discusses what is the blockchain oracle problem. I'm going to introduce this problem to you and the limitations of smart contracts. Yesterday we learned about smart contracts and how powerful they are, but there happens to be some limitations. So the limitations in a smart contract is that they do not have access to real world data and events. These blockchains are in their own network, so they cannot connect to these pieces of information, which pose a problem when we are building our smart contracts and building our decentralized web.
00:02:32.444 - 00:02:40.144, Speaker B: A blockchain is deterministic, so everything on it is public and immutable.
00:02:40.484 - 00:02:53.700, Speaker A: So on the left side here we have each of these blockchain nodes are running the same computation. This is fairly easy. So if one plus one is the value, all of them can reach consensus.
00:02:53.772 - 00:02:59.284, Speaker B: Because each single node can come to the same conclusion.
00:02:59.444 - 00:03:08.024, Speaker A: When you go to the other side, say you have three nodes doing a random call. Each random number will come back separate.
00:03:08.144 - 00:03:11.176, Speaker B: Which then poses a problem allowing you.
00:03:11.200 - 00:03:37.952, Speaker A: To not reach consensus. Say you get an API call and somebody calls the weather today, the weather tomorrow, and the weather in different areas. Each area will have different information which will allow you to not have consensus. And then with the one plus one, all of those are separate, so they can't all agree on these API calls and they all can't agree on what.
00:03:37.968 - 00:03:39.444, Speaker B: A random number is.
00:03:41.704 - 00:04:02.408, Speaker A: Important information that we would like to bring onto a blockchain is market data, retail payments, bank payments, events data, and any number of real world data. These pieces of information will allow us to create smart contracts and build digital.
00:04:02.496 - 00:04:06.724, Speaker B: Agreements that we can all trust and understand.
00:04:09.824 - 00:04:44.092, Speaker A: Enter blockchain oracles. So a blockchain oracle will allow us to bring this data onto our chain. And this is what the chainlink network does as it is a decentralized oracle network. A blockchain oracle is any device that interacts with the off chain world to provide external data or computation for smart contracts. This allows us to really connect to the world at large when we are talking about data sources and external resources.
00:04:44.188 - 00:04:47.004, Speaker B: This can deal with anything from sports.
00:04:47.084 - 00:04:55.148, Speaker A: Data to market data, IoT devices, our smartwatches, whether it's Fitbit or any heart.
00:04:55.196 - 00:05:05.270, Speaker B: Rate data, financial data, and then temperature and smart homes. All of these pieces of data can.
00:05:05.302 - 00:05:11.294, Speaker A: Be integrated with our smart contracts to build a more robust Internet of contracts.
00:05:11.414 - 00:05:17.114, Speaker B: Allowing us to really build out our dreams here.
00:05:18.454 - 00:05:40.614, Speaker A: Next, we have a centralized oracle, which is not best practices because they are a source of failure and a single point of failure. Essentially, if you had a centralized node that hosts that hosted this data, if there was ever an issue with retrieving that data, then it would in turn break the smart contract.
00:05:40.774 - 00:05:43.950, Speaker B: Or if you had a malicious node.
00:05:44.022 - 00:05:50.858, Speaker A: Operator that wanted to change data within the smart contract, they could do it.
00:05:50.946 - 00:05:56.294, Speaker B: And that ultimately results in bad practice.
00:05:57.114 - 00:06:14.728, Speaker A: The solution is the dawn. So a decentralized oracle network. So what we're doing here is we're bringing the real world data onto the chain link network, and that is being sent to any blockchain, back to the chain link network, and then back to real world events.
00:06:14.866 - 00:06:18.628, Speaker B: This flow will allow us to have.
00:06:18.676 - 00:06:21.740, Speaker A: Multiple points of data consumption onto our.
00:06:21.772 - 00:06:26.972, Speaker B: Smart contracts, allowing us to have confidence.
00:06:27.108 - 00:07:04.402, Speaker A: In the data that we're using in the smart contract itself. Enter Chainlink. It's the platform to connect smart contracts. Blockchain. Our chain link is blockchain agnostic. So what that means is it doesn't matter which blockchain you're operating on, whether it's public blockchain, Ethereum, avalanche polygon, or private blockchains. That is, any financial institution or other institution that may have their own private blockchain.
00:07:04.402 - 00:07:07.962, Speaker A: ChainLink is a solution that allows you.
00:07:07.978 - 00:07:11.700, Speaker B: To connect to each of these networks.
00:07:11.852 - 00:08:10.212, Speaker A: And allows us to integrate these real world data and events onto our smart contracts. Chainlink is the blockchain oracle standard. So Chainlink expands smart contract capabilities, and it provides secure access to data and computation outside of a blockchain. This allows us to. Whether this allows us to send information, receive information, but also automate our smart contracts provide random numbers information like financial data, weather data and real world events, or any number of solutions. Chainlink the web3 platform introduces multiple services from data feeds and data streams, CCIP functions, VRF automation and proof of reserve.
00:08:10.348 - 00:08:13.740, Speaker B: I can elaborate on a few of.
00:08:13.772 - 00:08:18.064, Speaker A: These, but we will be learning directly about data feeds today.
00:08:18.964 - 00:08:22.348, Speaker B: But the altogether all of these services.
00:08:22.476 - 00:08:57.434, Speaker A: Really bolster and improve smart contracts to allow for better reach and access to what we're trying to achieve here. One link that we can go to is dev chain link and this allows us to look at all the resources along with quick starts and demos for developing tools with chain link. So in here you'll be able to go into each of these products and services to understand more code along, build.
00:08:57.474 - 00:09:01.802, Speaker B: A workshop or build a little DAP.
00:09:01.898 - 00:09:49.266, Speaker A: And understand how the flow of these services work. Next we're on the ERC 20 token and this will help us understand the standards on the Ethereum network and other blockchains itself. And we will also be looking into Chainlink data feeds and learning about those. The chainlink data feeds will get data and asset prices in your smart contracts. These are pulled from external sources and have full market coverage. Whether it's a decentralized exchange or a centralized exchange. Premium data providers, aggregators and exchanges all provide value or this data here allowing.
00:09:49.330 - 00:09:51.794, Speaker B: Us to connect with it.
00:09:51.914 - 00:10:58.524, Speaker A: A individual node operator will then pull this information from premium data providers, aggregators and exchanges to present this to our smart contracts. And it is a volume based average method and it's available on many blockchains. A few of the blockchains it's available on are the Ethereum network, arbitrum, polygon, avalanche and base. So how this flow works is you have your off chain, your chain link nodes all aggregating price, and then on chain you have your smart contract. As you can see here on the left side, we have multiple different responses to the data, whether it's 400 or 399 or 398 401. Some of these may vary slightly. So what happens is it all gets bundled together and aggregated to come up with the price of 400.
00:10:58.524 - 00:11:11.554, Speaker A: Chain link services like data feeds help support the growth of Defi. So you have synthetix, Sushiswap, compound and.
00:11:11.594 - 00:11:15.734, Speaker B: AAvE who are all leading industry.
00:11:17.874 - 00:11:22.194, Speaker A: Protocols in this space that utilize chainlink services.
00:11:22.314 - 00:11:27.418, Speaker B: Like data feeds to provide the data.
00:11:27.506 - 00:11:35.330, Speaker A: For their smart contracts. Whether you're doing swaps with synthetix or sushi swap, or you're lending and borrowing.
00:11:35.402 - 00:11:39.206, Speaker B: With compound or AAVE, this will allow.
00:11:39.270 - 00:11:41.534, Speaker A: You to understand the digital agreement that.
00:11:41.574 - 00:11:49.246, Speaker B: You'Re a part of and then you can do a deep dive on data.
00:11:49.390 - 00:12:04.066, Speaker A: Chain link to learn more, see the different assets that have price pairs and see which networks that these live on. Here are some references here.
00:12:04.250 - 00:12:09.330, Speaker B: Chainlink data feeds chain link data feeds.
00:12:09.402 - 00:12:30.734, Speaker A: And then the documentation. So docs chain link which will allow us to have access to the market and data feeds and then the contract addresses. So as we are building with these smart contracts, we can go and check these smart contract addresses to make sure that they are directly implemented with our smart contract.
00:12:37.164 - 00:12:40.344, Speaker B: All right. And then.
00:12:42.604 - 00:12:44.824, Speaker A: Let'S address this question.
00:12:45.684 - 00:12:46.584, Speaker B: You may.
00:12:51.524 - 00:13:06.216, Speaker A: So I have a question here saying can chainlink interact with discrete log contracts? To be honest, I'm not sure the technical answer here.
00:13:06.360 - 00:13:10.320, Speaker B: If Andre could help me with this.
00:13:10.392 - 00:13:16.804, Speaker A: I would assume yes, but I don't, I don't know the direct technical response on this.
00:13:24.804 - 00:13:35.064, Speaker B: Andre. Let's see.
00:13:37.884 - 00:13:43.424, Speaker C: Hey Debbie, Andre can come back later. You can go forward and you try to answer this later.
00:13:43.764 - 00:14:27.668, Speaker A: Okay, sounds good. We'll address this question in a little bit then. Data feeds do provide data for the testnets as well. And andre will be answering this question in the comments section. So I guess the next step is to take a look at for us and us only, we have the announcement of the block magic, which is the next chain link hackathon we are giving you access to this early. Please do not share this outside of YouTube or on the greater social networks. This is for us and us only.
00:14:27.836 - 00:14:30.324, Speaker B: What we this will give us an.
00:14:30.364 - 00:14:48.828, Speaker A: Opportunity to learn more practice and build using these chain link services and products while also giving you an opportunity to learn more from partners and sponsors in other workshops. So that will begin on April 29.
00:14:48.956 - 00:15:03.876, Speaker B: To June 2, about five weeks of hacking. And go ahead and sign up here. I'm going to cancel this screen and.
00:15:03.940 - 00:15:11.044, Speaker A: Provide these presentation slides for you here. In a little bit, what we're going to do is move over to the.
00:15:11.084 - 00:15:14.844, Speaker B: Pad and rise up.
00:15:15.004 - 00:15:20.704, Speaker A: So what we have here, congratulations. Look, we have so many people in the pad.
00:15:21.124 - 00:15:24.276, Speaker B: If people following along can go ahead.
00:15:24.380 - 00:15:28.060, Speaker A: And add their name and their occupation.
00:15:28.172 - 00:15:31.464, Speaker B: Or role, that will allow us to.
00:15:32.284 - 00:15:37.584, Speaker A: See everybody that's going to be going in the hands on section with us today.
00:15:38.234 - 00:15:40.454, Speaker B: I mean, look at all these.
00:15:42.874 - 00:15:47.914, Speaker A: Individuals here. We have full stack developers, loco dev student.
00:15:47.994 - 00:15:51.266, Speaker B: We have friends from Lima, Peru.
00:15:51.330 - 00:16:19.980, Speaker A: As a peruvian, mucho gusto, amigo. We have portfolio and balance sheet strategy analysts, front end developer, computer science researcher. Looks like we have people from a lot of different backgrounds and I'm so excited to learn more about smart contracts with you guys. Good job handling the flow of the rise up pad. It can get a little busy with all the individuals that we have today.
00:16:20.092 - 00:16:31.752, Speaker B: But we're going to go through it at the bottom of the pad.
00:16:31.888 - 00:16:34.576, Speaker A: I'm going to start off by introducing.
00:16:34.640 - 00:16:51.296, Speaker B: Remix and pulling that up so we have remix and a link. So remix dot ethereum.org dot this is we're going to start off by making.
00:16:51.360 - 00:16:53.404, Speaker A: Sure we're in the right network.
00:16:53.704 - 00:17:00.780, Speaker B: So in our remix we have our.
00:17:00.852 - 00:17:16.716, Speaker A: Five tabs on the left. We've already had an introduction to remix over the last two days and we will be using this a little bit further. Remix is an ide, but what we're going to do is we're going to.
00:17:16.740 - 00:17:20.742, Speaker B: Make sure we're in the fifth icon.
00:17:20.908 - 00:17:41.034, Speaker A: The deploy and run transactions. And we want to make sure our environment says injected provider metamask and that we are on the sepolia network here. And that can be confirmed with 111-5511 as a network. You can see it here. At this point I'm going to make.
00:17:41.074 - 00:17:50.814, Speaker B: Sure to zoom in my remix just in case people have problems seeing does.
00:17:50.854 - 00:17:54.034, Speaker A: This have a good size for everybody.
00:17:57.214 - 00:18:08.670, Speaker B: That'S looking all right on my screen? Cool. All right, so what we have here is the our remix and what we're.
00:18:08.702 - 00:18:43.198, Speaker A: Going to do is I am going to copy and paste some information for ERC 20 tokens in our rise up pad. So in these sets of links we have the ERC 20 tokens. So ERC 20 is a standard on the Ethereum network and then all EVM blockchains that has been agreed upon as best practices for tokens. So opening this link we have token.
00:18:43.246 - 00:18:47.222, Speaker B: Standards and you have a few different.
00:18:47.278 - 00:18:59.934, Speaker A: Types of token standards, whether it's ERC 20, ERC 721, 770, 711 55 and 46 26. Today we are going to be focusing.
00:19:00.014 - 00:19:06.354, Speaker B: On ERC 20 and the ERC token standard it has.
00:19:08.034 - 00:19:25.082, Speaker A: Tokens can represent anything in Ethereum, reputation points, skills of a character, financial assets, a fiat like currency like us dollars and an ounce of gold. And more tokens can be used across our industry and we will be learning.
00:19:25.138 - 00:19:30.374, Speaker B: More about them then.
00:19:30.674 - 00:19:37.862, Speaker A: In our next link we have the EIP token standards. So an EIP is an ethereum improvement.
00:19:37.918 - 00:19:41.606, Speaker B: Proposal and what that has allowed us.
00:19:41.630 - 00:20:02.526, Speaker A: To do is understand and create these standards like the ERC 20 standard. And in this link you can see simple summary abstract, why it was created and then the specifications within it, along with the technical information underneath the hood.
00:20:02.630 - 00:20:08.542, Speaker B: Allowing us to understand here our next link.
00:20:08.598 - 00:20:25.446, Speaker A: We have the contract wizard by open Zeppelin. Open Zeppelin is kind of the standard of using the ERC tokens. And this will, this contract wizard allows you to create these tokens kind of.
00:20:25.470 - 00:20:34.950, Speaker B: On the fly where you can understand. So let's say my name, Darby token is the name.
00:20:35.102 - 00:20:47.702, Speaker A: And then the token ticker is going to be DRB. So I can just type this into this field here and it will automatically update the contract here, whether I want.
00:20:47.718 - 00:20:55.526, Speaker B: To add features like mintable or it's burnable and it's possible, and maybe I.
00:20:55.550 - 00:21:02.994, Speaker A: Want to have controls over access roles, whether it's owned or managed, and then upgradeability.
00:21:03.294 - 00:21:07.262, Speaker B: I can address these changes here in.
00:21:07.278 - 00:21:14.034, Speaker A: The open Zeppelin wizard, allowing us to.
00:21:14.334 - 00:21:18.962, Speaker B: Create this and then copy this and.
00:21:19.018 - 00:21:24.334, Speaker A: Introduce it into our smart contract. Back to remix.
00:21:25.154 - 00:21:28.330, Speaker B: So what we're going to do is.
00:21:28.442 - 00:21:31.778, Speaker A: I am going to share some information.
00:21:31.946 - 00:21:41.974, Speaker B: With you on the pad.
00:21:50.334 - 00:21:53.994, Speaker A: So what we're going to do is go back into our remix.
00:21:55.574 - 00:21:57.966, Speaker B: We're going to create a file and.
00:21:57.990 - 00:22:01.434, Speaker A: We'Re going to name that file token soul.
00:22:02.494 - 00:22:06.070, Speaker B: So I'm going to start off by.
00:22:06.182 - 00:22:11.984, Speaker A: I have this preloaded here for myself and I'm going to take this.
00:22:13.924 - 00:22:23.784, Speaker B: Explain it for you, and I will paste this in the pad. I'm going to first explain it.
00:22:25.164 - 00:22:28.812, Speaker A: What we have here is the SPDX license identifier.
00:22:28.988 - 00:22:32.756, Speaker B: And this identifies the contract with the.
00:22:32.780 - 00:23:12.722, Speaker A: Pragma solidity zero point 819. This is identifying the compiler for our smart contract, which version of solidity. And then we'll notice that lines four and five, we have import open Zeppelin ERC 20 and import open Zeppelin access control. These are important for the ERC 20 standard as we are importing these contracts onto ours without having to copy and paste the entire contract itself. So what we're doing is we're giving our contract access to the functions within.
00:23:12.818 - 00:23:16.050, Speaker B: These, allowing us to use it.
00:23:16.162 - 00:23:25.494, Speaker A: And then on line seven, we are creating our contract. So our contract token is an ERC 20 and it has access control.
00:23:28.194 - 00:23:32.958, Speaker B: I hear you, I see you. I have posted this in.
00:23:33.106 - 00:23:38.110, Speaker A: So now in remix you have access to the contract. Make sure to copy and paste from.
00:23:38.142 - 00:23:50.782, Speaker B: The begin and to the end within remix. Let's see if I can make this a little bit bigger for you guys as well. Is this bigger?
00:23:50.838 - 00:23:51.994, Speaker A: Better for you guys?
00:24:01.434 - 00:24:10.698, Speaker B: All right, so then the first thing, line eight, you have the bytes, the data. It's public and it's constant.
00:24:10.866 - 00:24:16.706, Speaker A: So the mint roll, we're getting the hash of the word mentor role to.
00:24:16.890 - 00:24:25.014, Speaker B: Create a role within this token. And we will learn through that together.
00:24:25.484 - 00:24:30.964, Speaker A: Next on line ten, we have the constructor where we are creating the ERC.
00:24:31.044 - 00:24:36.704, Speaker B: 20 with a name and then the token ticker.
00:24:37.644 - 00:24:44.780, Speaker A: The name is the first string and then the token ticker is the second string. What's happening underneath is we're using the.
00:24:44.812 - 00:24:49.412, Speaker B: Function grant role to get a defund.
00:24:49.548 - 00:25:05.164, Speaker A: Default admin role as the message sender. And then we're granting the role for the minter role as the message sender as well. The message sender would be like me sending information, or the EOA sending the.
00:25:05.204 - 00:25:06.944, Speaker B: Data directly to it.
00:25:07.404 - 00:25:17.284, Speaker A: The mint function is taking the address, so the address of who we're sending this amount to and then the amount.
00:25:17.364 - 00:25:20.870, Speaker B: That we're sending, and then it is public.
00:25:20.942 - 00:25:22.798, Speaker A: So anybody can call this.
00:25:22.966 - 00:25:25.606, Speaker B: And its only role is the minter.
00:25:25.670 - 00:25:53.694, Speaker A: Role, which is handled up here in line eight. When we are calling this function, we end up doing mint two and the amount. So we are sending to a address and then we are sending the amount to that address. And then the function, the decimals, is just for us to create this token to be a little bit more based off of what we know already by.
00:25:53.734 - 00:25:58.342, Speaker B: Making it a little bit more like a fiat currency.
00:25:58.438 - 00:26:02.734, Speaker A: So if we have 100, what we're doing is we're adding two zeros there.
00:26:02.854 - 00:26:09.534, Speaker B: So it has, when we type it out, it'll look like 110 thousand, but.
00:26:09.574 - 00:26:18.530, Speaker A: Really it is 100 because we're making sure the decimal place is at two. What happens there is in the ethereum.
00:26:18.602 - 00:26:25.094, Speaker B: Network, the, it does not handle periods.
00:26:25.674 - 00:26:36.876, Speaker A: Or decimals in numbers. So when you exchanging ether, you have 18 decimal places to the right, which.
00:26:36.900 - 00:26:44.804, Speaker B: Is way, and that is how that's handled. We have addressed this.
00:26:44.844 - 00:26:47.644, Speaker A: So through this workshop, we will be.
00:26:47.684 - 00:26:49.704, Speaker B: Working with just two.
00:26:53.564 - 00:26:55.404, Speaker A: All right, so what we're going to.
00:26:55.444 - 00:27:02.772, Speaker B: Do is we're going to update our token info. So right here in line ten, we.
00:27:02.788 - 00:27:05.580, Speaker A: Have two pieces of information, whether it.
00:27:05.612 - 00:27:08.924, Speaker B: Is the name of our token or.
00:27:09.044 - 00:27:15.264, Speaker A: The ticker of our token. I'm going to change the name of my token to.
00:27:17.324 - 00:27:33.492, Speaker B: No, no, no, no. All right, going to change this to Darby's token and then DRB will be the ticker.
00:27:33.628 - 00:27:35.924, Speaker A: If everybody following along can do the.
00:27:35.964 - 00:27:39.964, Speaker B: Same, then we will get ready to.
00:27:40.044 - 00:27:42.264, Speaker A: Compile and deploy this contract.
00:28:00.424 - 00:28:07.232, Speaker B: I'm posting the, the next steps in.
00:28:07.248 - 00:28:20.200, Speaker A: The pad for us to follow along. So once again, we're updating the token info, creating our own token. You're updating the token name and symbol on line ten.
00:28:20.352 - 00:28:22.444, Speaker B: So although the min function is public.
00:28:24.724 - 00:28:27.380, Speaker A: Yes, we will go through that flow.
00:28:27.452 - 00:28:33.468, Speaker B: Here in a little bit. Once we mint tokens ourselves, and then.
00:28:33.556 - 00:28:46.836, Speaker A: Especially when we go on to the next step of the workshop, we are going to be instantiating a token shop contract, which we will have to grant roles on as well.
00:28:46.980 - 00:28:54.970, Speaker B: So what we're going to do is then compile our contract and we're going.
00:28:55.002 - 00:28:56.574, Speaker A: To deploy our contract.
00:28:56.874 - 00:29:02.514, Speaker B: So in the file Explorer, we're going to go to the third one, the.
00:29:02.554 - 00:29:17.838, Speaker A: Solidity compiler here, it'll look like this. I have mine on autocompile, but if you don't see this green check mark here, you can feel free to hit compile token soul. Then we will go to deploy and.
00:29:17.886 - 00:29:26.142, Speaker B: Run transactions to this tab. Here we have the injected provider metamask.
00:29:26.198 - 00:29:35.474, Speaker A: We want to be connected here. We want to make sure that this is connected to Sepolia at eleven 155-1111.
00:29:36.894 - 00:29:39.030, Speaker B: We can see that the account is.
00:29:39.062 - 00:29:40.998, Speaker A: My account, and I can double check.
00:29:41.046 - 00:29:50.780, Speaker B: That by going opening my metamask, checking this account upon. So four f 808 four f eight.
00:29:50.932 - 00:29:55.868, Speaker A: Last 1667 e 4667 e four.
00:29:55.956 - 00:29:57.264, Speaker B: This is the same account.
00:29:57.764 - 00:30:03.244, Speaker A: What we're going to do is make sure our token dot soul contract is.
00:30:03.284 - 00:30:12.408, Speaker B: Selected, and we are going to deploy it. It's going to pop up metamask and.
00:30:12.456 - 00:30:14.844, Speaker A: Ask us to confirm this transaction.
00:30:24.504 - 00:30:37.730, Speaker B: And now that has been confirmed, we can see our token here in the deployed contracts. So if I open it up, you can see a list of functions and.
00:30:37.842 - 00:30:46.090, Speaker A: Parameters within the contract. What we're going to do is we're going to copy our token address, which.
00:30:46.122 - 00:31:12.594, Speaker B: You can copy here with this clipboard button. And we're going to post this in the pad. Good job. Jeff, Sebastian, Killian, Katia, Emily, Susan. Some of you guys beat me to it. Very good job.
00:31:13.774 - 00:31:16.474, Speaker A: At this point, do we have any questions?
00:31:25.374 - 00:31:40.322, Speaker B: Okay, nice. Good job. There's so many people joining us today. Job.
00:31:40.378 - 00:31:44.894, Speaker A: Mario, Jason. I see you. Simon. Stanley.
00:31:46.034 - 00:31:57.574, Speaker B: Carmine. Henrik, Ben. Now, an important note.
00:31:57.694 - 00:32:02.554, Speaker A: I'm going to share this information with you. So, in our.
00:32:03.134 - 00:32:06.766, Speaker B: At the top here, we have our.
00:32:06.830 - 00:32:30.450, Speaker A: Chainlink boot camp 2024 task form. In this form, this is how you will be receiving certification for this boot camp. You may have done the workshops from yesterday and the day before, and now we're on the third session. At the third session you have token address.
00:32:30.602 - 00:32:35.138, Speaker B: So if while we're posting the token.
00:32:35.186 - 00:32:39.506, Speaker A: Address in the pad, it might be advantageous for you to post your token.
00:32:39.570 - 00:32:43.050, Speaker B: Address in the form here for the.
00:32:43.082 - 00:32:56.834, Speaker A: Token address as well. While we still have the token address.
00:32:57.614 - 00:33:07.274, Speaker B: On in our clipboard, we're going to do is.
00:33:09.054 - 00:33:12.234, Speaker A: We'Re going to add our token to Metamask.
00:33:13.264 - 00:33:15.808, Speaker B: So how this works is we're going.
00:33:15.816 - 00:33:17.364, Speaker A: To open our metamask.
00:33:19.344 - 00:33:19.872, Speaker B: We'Re going to.
00:33:19.888 - 00:33:25.720, Speaker A: Go to tokens, you go scroll down.
00:33:25.912 - 00:33:32.712, Speaker B: The tokens tab to import tokens, and.
00:33:32.768 - 00:33:38.084, Speaker A: Here you'll see import tokens, custom token, and the token contract address.
00:33:39.124 - 00:33:41.584, Speaker B: That's not it. Give me 1 second.
00:33:42.204 - 00:33:48.224, Speaker A: You can grab, once again, you can grab your token contract address here in remix.
00:33:48.764 - 00:34:06.928, Speaker B: But we are going to open metamask, open the tokens tab, import our tokens, take our token contract address and paste that there. And then it will populate the token.
00:34:06.976 - 00:34:13.920, Speaker A: Symbol and the amount of decimals that the token has. As you can see, as I import.
00:34:13.992 - 00:34:32.404, Speaker B: It, I have zero darp tokens. But we're going to import it anyway. Next we're going to mint 100 tokens and on remix.
00:34:35.704 - 00:34:56.816, Speaker A: We will walk through this on remix together. I'm going to paste the information here for you for the next step. So mint tokens, 100 tokens. On remix, you go to deployed contracts, you expand the token and you function mint.
00:34:56.960 - 00:35:03.044, Speaker B: So let's walk through that together. So we now have the token.
00:35:03.344 - 00:35:06.880, Speaker A: We are in the deploy and run transactions page.
00:35:07.072 - 00:35:11.816, Speaker B: On the fifth icon, deploy and run transactions.
00:35:11.920 - 00:35:13.952, Speaker A: At the bottom we have our token.
00:35:14.088 - 00:35:16.724, Speaker B: We're going to open that up and.
00:35:17.384 - 00:35:26.614, Speaker A: See our list of functions here. The one that we are most interested in right now for this step is, is going to be the mint function.
00:35:26.954 - 00:35:28.698, Speaker B: We're going to open this up just.
00:35:28.746 - 00:35:31.018, Speaker A: To make it a little bit easier for ourselves.
00:35:31.186 - 00:35:34.014, Speaker B: We have our address and the amount.
00:35:35.354 - 00:35:39.574, Speaker A: What we're going to do for our address is we're going to take our.
00:35:41.234 - 00:35:59.924, Speaker B: Wallet address, copy that in there. So I'm going to copy my wallet address by opening up metamask, grab my con or my wallet address, copy and paste this to the two as, and.
00:35:59.964 - 00:36:05.164, Speaker A: Then that is what's happening right here is this address two, and then the.
00:36:05.204 - 00:36:08.556, Speaker B: Uint, which is data, the amount.
00:36:08.740 - 00:36:18.750, Speaker A: So if we want 100 tokens, we already discussed the two decimal places, so we want 100 tokens and we are.
00:36:18.932 - 00:36:25.226, Speaker B: In our brain creating we have this in the amount page.
00:36:25.330 - 00:36:29.098, Speaker A: But since solidity doesn't handle decimals like.
00:36:29.146 - 00:36:37.762, Speaker B: That, we just have it as 10,000. That was actually 100.
00:36:37.938 - 00:36:44.640, Speaker A: We are going to confirm the transaction. It's going to pop metamask up, ask me to confirm the transaction.
00:36:44.802 - 00:36:53.820, Speaker B: We are going to go ahead and confirm it. Now it's saying mint is pending, so.
00:36:53.852 - 00:36:58.384, Speaker A: We'Re going to let the sepulian network reach consensus.
00:37:01.044 - 00:37:06.584, Speaker B: And now we have the transaction in our remix.
00:37:07.284 - 00:37:12.360, Speaker A: How can we verify that we have tokens in our account?
00:37:12.432 - 00:37:14.888, Speaker B: Now there's a few ways to do it.
00:37:15.016 - 00:37:18.484, Speaker A: So what we can do is we can do the balance of.
00:37:19.024 - 00:37:21.440, Speaker B: So in this balance of we can.
00:37:21.472 - 00:37:25.280, Speaker A: Paste our contract or our wallet address.
00:37:25.432 - 00:37:27.760, Speaker B: Into the balance of and call it.
00:37:27.952 - 00:37:36.174, Speaker A: From here we are showing that I have 100 tokens. What if I want to see that in my metamask?
00:37:36.304 - 00:37:46.934, Speaker B: I'm going to open this up, go to my tokens page, go to DARP, see that I have 100 tokens.
00:37:56.914 - 00:38:04.516, Speaker A: Next we're going to be learning a little bit more about data feeds and we're going to be creating a token shop.
00:38:04.650 - 00:38:07.384, Speaker B: I'm going to paste some data feeds.
00:38:07.424 - 00:38:29.808, Speaker A: Related links to our rise up pad and here we have links to the.
00:38:29.896 - 00:38:36.844, Speaker B: Docs or the reference contracts and the data feeds themselves.
00:38:36.964 - 00:39:01.292, Speaker A: So we're going to open these up piece by piece. So we have price feeds here and this is docs chain link allowing us to get information here. So if we go into the overview we can see the types of data feeds, price feeds, proof of reserve, etcetera getting started. This is where you can examine a simple contract and go back to price.
00:39:01.348 - 00:39:04.988, Speaker B: Feeds and exit out of this link.
00:39:05.036 - 00:39:31.744, Speaker A: But this is where this information lives for when you're building on your own. Then we have the contract addresses. This will allow us to showcase which networks that this lives on. So say we are operating on Polygon. I can click Polygon here and it'll populate the contract addresses for the data feeds on that network.
00:39:31.824 - 00:39:35.392, Speaker B: So say I want to use, I.
00:39:35.408 - 00:39:36.872, Speaker A: Want to be on the Ethereum main.
00:39:36.928 - 00:39:38.608, Speaker B: Net, I want to check the price.
00:39:38.656 - 00:39:43.560, Speaker A: Of Aave the US dollars. I will take this information here and.
00:39:43.592 - 00:39:56.354, Speaker B: Copy and paste that here and then this has bitcoin and multiple other assets available in docs chain link.
00:39:56.474 - 00:40:01.034, Speaker A: And then we have the price feed contract addresses which is the same page.
00:40:01.154 - 00:40:02.614, Speaker B: That we were just at.
00:40:05.034 - 00:40:08.334, Speaker A: Next we're going to be creating the token shop.
00:40:08.834 - 00:40:11.218, Speaker B: So this is going to help us.
00:40:11.266 - 00:40:17.414, Speaker A: Understand the relationship between our token ERC contract.
00:40:19.314 - 00:40:26.734, Speaker B: And such. So I'm going to paste this information into the pad.
00:40:27.954 - 00:40:31.850, Speaker A: So we have the token shop. We want to go back to our.
00:40:31.882 - 00:40:41.442, Speaker B: Remix, go back to our file Explorer, create a new file, the token shop.
00:40:41.538 - 00:40:44.040, Speaker A: Sol what I'm going to do is.
00:40:44.162 - 00:40:53.156, Speaker B: Create a file with you, so new file token shop dot soul. But I'm just going to name it.
00:40:53.180 - 00:40:58.564, Speaker A: Token shop one just for the sake of it. I have it already made. So what we have here is the.
00:40:58.604 - 00:41:00.644, Speaker B: Token shop and we are going to.
00:41:00.684 - 00:41:05.024, Speaker A: Walk through this together. I'm going to copy and paste this.
00:41:07.484 - 00:41:14.894, Speaker B: Contract information and bring it to the pad and include it between the begin and end.
00:41:15.754 - 00:41:22.454, Speaker A: If you following along can go ahead and copy this into yours, that would be fantastic.
00:41:33.474 - 00:41:35.014, Speaker B: We're learning so much.
00:41:45.174 - 00:41:49.382, Speaker A: We have the SpDx license identifier and pragma solidity.
00:41:49.518 - 00:41:54.606, Speaker B: These are identifying the solidity code that.
00:41:54.630 - 00:41:57.630, Speaker A: We are using and the compiler that we are using.
00:41:57.782 - 00:41:59.430, Speaker B: We have a comment here.
00:41:59.502 - 00:42:26.260, Speaker A: Deploy this contract on sepulia and then the next step is on line six we have import chainlink contracts, aggregator v three interface. What's happening here is we are importing the chain link data feeds onto our contract. This allows us to see price and other information. What we have here is the interface.
00:42:26.412 - 00:42:40.480, Speaker B: Of the token interface and this is pulling the mint function with the address of the account that we want and then the amount of value that we are sending.
00:42:40.552 - 00:42:47.284, Speaker A: And then this is an external function allowing it to be called outside. The contract.
00:42:48.024 - 00:42:52.208, Speaker B: Token shop has a few variables.
00:42:52.256 - 00:43:16.106, Speaker A: Here we have the aggregator v three interface which is internal and it's identified as the price feed, the token interface. So public mentor, the UN 256 public token price is two so this is $2.01. Token is $2 because it has two decimal places.
00:43:16.290 - 00:43:19.298, Speaker B: Visually you can see that there with.
00:43:19.346 - 00:43:35.104, Speaker A: The period but I'm going to take that out because that's not how solidity works. Then we have the address of the public owner. Then we have the constructor which is.
00:43:35.144 - 00:43:41.008, Speaker B: The first function created when we deploy this contract.
00:43:41.136 - 00:43:54.636, Speaker A: So when we deploy this contract we are going to want to give the address of the token address. So the same token address that we imported into metamask that we shared in the pad and that we put in.
00:43:54.660 - 00:44:06.444, Speaker B: The forms we are going to be providing that upon deploying this token shop, this is creating the mentor of the.
00:44:06.484 - 00:44:18.992, Speaker A: Token interface is the token address. So it is granting permission of the token interface to mint tokens from our original token soul.
00:44:19.188 - 00:44:22.792, Speaker B: And then we have a comment here.
00:44:22.888 - 00:44:28.112, Speaker A: Which is just identifying the sepulia network and that the aggregator for our price.
00:44:28.168 - 00:44:37.324, Speaker B: Feed is ETH US dollars and that the address is this hexadecimal hash right here.
00:44:38.224 - 00:44:48.428, Speaker A: So we would take this. So we had the price feed, the aggregator v three interface and we are including the address of the ETH US.
00:44:48.516 - 00:44:51.772, Speaker B: Dollar pair and then we are making.
00:44:51.828 - 00:45:00.504, Speaker A: Sure the owner is the message dot sender and that is all being handled in the first function upon deployment of this contract.
00:45:03.604 - 00:45:05.404, Speaker B: In this constructor here.
00:45:05.564 - 00:45:09.380, Speaker A: Then we're going to the next function.
00:45:09.572 - 00:45:13.100, Speaker B: The git chainlink data feeds latest answer.
00:45:13.292 - 00:45:21.492, Speaker A: So it is public, so it can be called by anybody. It is a view, so it's not writing anything and it returns an integer.
00:45:21.628 - 00:45:25.724, Speaker B: That what's happening here is it usually.
00:45:25.804 - 00:45:38.284, Speaker A: Responds with five pieces of information. The round id, the price, the started at the timestamp and the answered in round. For the sake of our contract, we.
00:45:38.324 - 00:45:46.888, Speaker B: Are only interested in the price. So what we have here is some.
00:45:46.936 - 00:46:09.314, Speaker A: Comments and then commas to just identify the price. In other contracts, you may be interested in the round id or started at or timestamp. Whether you're building a financial tool or something along those lines, these pieces of information may be important for the logic of your smart contract.
00:46:09.894 - 00:46:13.654, Speaker B: And it's returning this price here how.
00:46:13.694 - 00:46:15.534, Speaker A: This looks would be.
00:46:15.694 - 00:46:30.194, Speaker B: So we have empty space, comma, price, comma, comma, comma. But we don't need to go too deep there.
00:46:30.934 - 00:46:32.854, Speaker A: The next thing we have the token.
00:46:32.894 - 00:46:39.248, Speaker B: Amount, which is basically understanding whether one.
00:46:39.296 - 00:46:57.344, Speaker A: Token is $2 with two decimal places. And this is the function that's making that happen. So what we're doing is we have the amount of ETH sent to this contract. It is taking the ETH to us.
00:46:57.424 - 00:47:01.294, Speaker B: Dollar, getting a value because it's calling.
00:47:01.334 - 00:47:04.110, Speaker A: The chainlink data feeds latest answer, which.
00:47:04.142 - 00:47:10.034, Speaker B: Is this right here, and it has eight decimal places.
00:47:10.494 - 00:47:15.574, Speaker A: Then what it's doing is we're getting the amount of us dollars, and that.
00:47:15.614 - 00:47:18.878, Speaker B: Is the amount of ETH times the.
00:47:18.926 - 00:47:21.474, Speaker A: ETH us dollar, which we create here.
00:47:21.814 - 00:47:30.774, Speaker B: Divided by ten to the 18th power. So that is ETH with 18 decimal places.
00:47:31.954 - 00:47:35.594, Speaker A: Then the next step is the amount of the token.
00:47:35.754 - 00:47:39.026, Speaker B: So it is the amount of the.
00:47:39.050 - 00:47:42.530, Speaker A: US dollar divided by token price, divided.
00:47:42.602 - 00:47:48.442, Speaker B: By ten to the 8th power divided by two.
00:47:48.538 - 00:48:10.264, Speaker A: So this math can be a little tricky, just copy and paste here. But what it's essentially doing is it's creating our token, the amount of token to be received at two decimal places. Then we have the receive function, which is external and it's payable.
00:48:10.424 - 00:48:15.240, Speaker B: This payable value is very important because.
00:48:15.312 - 00:48:27.472, Speaker A: Without this, this smart contract would not be able to receive any value, whether it's ETH or any other tokens. Essentially, you would send it and it would get locked because it wouldn't have.
00:48:27.488 - 00:48:36.600, Speaker B: A destination to go to the uint. The amount token is equal to the.
00:48:36.632 - 00:48:40.848, Speaker A: Amount token sent by the value of the sender.
00:48:40.936 - 00:48:44.976, Speaker B: So if I sent money to this.
00:48:45.080 - 00:48:56.404, Speaker A: Contract, it is taking my value sent and that amount and sending it. Then it is calling the mint function to the address of the message sender.
00:48:56.524 - 00:48:59.884, Speaker B: Which would be me and the amount.
00:48:59.924 - 00:49:02.424, Speaker A: Of the token as the response.
00:49:02.884 - 00:49:12.224, Speaker B: Then the modifier here is the only owner. Only the owner can send and address this information.
00:49:12.564 - 00:49:20.704, Speaker A: And then we have the withdrawal function which will allow us to withdraw the value that this smart contract creates.
00:49:21.164 - 00:49:23.108, Speaker B: Now that we've done that, we're going.
00:49:23.116 - 00:49:24.784, Speaker A: To go through the next steps.
00:49:25.124 - 00:49:28.624, Speaker B: So we're going to deploy this contract.
00:49:29.564 - 00:49:31.344, Speaker A: I'm going to take this information.
00:49:33.204 - 00:49:33.660, Speaker B: And.
00:49:33.732 - 00:49:46.844, Speaker A: Send this into remix for us. So what we're doing is we're deploying our contract.
00:49:47.344 - 00:49:51.640, Speaker B: We're selecting the token shop in the parameter.
00:49:51.752 - 00:50:00.564, Speaker A: While we deploy it, we have our token address and then we're going to hit deploy. So I'm going to walk through this with you as well.
00:50:02.104 - 00:50:05.344, Speaker B: Going to open remix back up, go.
00:50:05.384 - 00:50:15.614, Speaker A: To deploy and run transactions. We're going to make sure that we are in the injected provider metamask, the environment that we are connected to Sepolia.
00:50:16.834 - 00:50:18.786, Speaker B: That my account is the same.
00:50:18.970 - 00:50:21.210, Speaker A: And then we're going to go to.
00:50:21.402 - 00:50:26.214, Speaker B: Here in this contract. We don't want to be in.
00:50:27.514 - 00:50:34.094, Speaker A: We do not want to select the token interface. What we want to select is the token shop Sol.
00:50:35.504 - 00:50:37.336, Speaker B: As you can see here, it is.
00:50:37.360 - 00:50:42.844, Speaker A: The Token shop soul. Then what we're going to do is.
00:50:45.024 - 00:51:02.044, Speaker C: What'S happened. If you select the token interface, you will have the problem that Jospong had. So this is the message and the problem that you have if you selected the token interface.
00:51:02.674 - 00:51:15.258, Speaker A: Yeah. So you will run into that problem right here. If right here in the deploy and run transactions. This contract tab, it says token interface. We are going to open it up.
00:51:15.346 - 00:51:18.706, Speaker B: And select token shop itself.
00:51:18.890 - 00:51:20.410, Speaker A: And then we're going to notice that.
00:51:20.442 - 00:51:23.970, Speaker B: This deploy tab is grayed out and.
00:51:24.042 - 00:51:25.854, Speaker A: It'S asking for information.
00:51:26.434 - 00:51:29.914, Speaker B: If you remember, during the constructor, we.
00:51:30.034 - 00:51:34.274, Speaker A: Are identifying the token address as information.
00:51:34.394 - 00:51:37.442, Speaker B: That needs to be given to our.
00:51:37.498 - 00:51:42.338, Speaker A: Contract before deploying it. So what we're going to do is.
00:51:42.386 - 00:51:52.214, Speaker B: We'Re going to take our token contracts address and paste it into our deploy tab.
00:51:52.754 - 00:51:54.650, Speaker A: Then you will see that this deploy.
00:51:54.722 - 00:51:58.478, Speaker B: Tab itself will light up. I'll just delete it really quick.
00:51:58.526 - 00:51:59.494, Speaker A: So it's grayed out.
00:51:59.534 - 00:52:00.794, Speaker B: I can't click it.
00:52:01.854 - 00:52:04.750, Speaker A: When I paste this here, it lights.
00:52:04.782 - 00:52:09.326, Speaker B: Up, allowing us to deploy it.
00:52:09.390 - 00:52:14.590, Speaker A: So I am going to hit transact. It's going to open Metamask, I'm going.
00:52:14.622 - 00:52:18.166, Speaker B: To confirm the transaction itself, and then.
00:52:18.230 - 00:52:23.334, Speaker A: We are going to wait until sepolia reaches consensus about the creation of my.
00:52:23.374 - 00:52:26.374, Speaker B: Token shop address contract.
00:52:27.194 - 00:52:29.266, Speaker A: Now we have the token shop.
00:52:29.410 - 00:52:29.954, Speaker B: Yay.
00:52:30.034 - 00:52:30.894, Speaker A: It's been.
00:52:32.594 - 00:52:35.546, Speaker B: It'S been created.
00:52:35.690 - 00:52:47.818, Speaker A: What we're going to do now is go back to the pad. We're going to share our token shop address with the pad.
00:52:47.946 - 00:53:04.630, Speaker B: I can see the shift Emil, Joss, Vivesh and a few others that have beat me to the punch but are also right here coding along with us.
00:53:04.702 - 00:53:14.110, Speaker A: So as we are working together, if we can go ahead and post this, this is also important because this is going to be another task for a.
00:53:14.142 - 00:53:16.462, Speaker B: Task forum and we will go through.
00:53:16.518 - 00:53:22.924, Speaker A: That together as well. Is that Gilbert's that I saw?
00:53:24.064 - 00:53:48.024, Speaker B: It is nice. I have Mike. I got Mario, Georgie, Hugo, Alexander, Stanley Bartek, Juan Duong. Fantastic. Good job, everybody. Thanks for following along.
00:53:48.184 - 00:53:53.804, Speaker A: Thanks for working with us and I hope you're getting some value here and learning a little bit of something.
00:53:55.744 - 00:54:12.532, Speaker B: I'm going to pull the task form back up and just show you that as we go to session three, we.
00:54:12.548 - 00:54:34.344, Speaker A: Have our token shop address. Just go ahead and make sure that once your token shop is deployed, you can paste this token shop address to your task form. This will help us know where you are, whether you have any problems, but also help you get you the certification for this boot camp as well.
00:54:39.264 - 00:54:40.496, Speaker B: Now I'm going to go back to.
00:54:40.520 - 00:54:42.632, Speaker A: The bottom and we're going to be.
00:54:42.688 - 00:54:48.088, Speaker B: Walking through the process of granting a.
00:54:48.136 - 00:54:52.164, Speaker A: Mentor role to the token shop. So I'm going to take.
00:54:59.504 - 00:55:00.924, Speaker B: All right, yeah.
00:55:06.084 - 00:55:18.704, Speaker A: I'm going to take this information and post it at the bottom of the pad as well for the next steps. So.
00:55:22.164 - 00:55:23.788, Speaker B: Good job, everybody.
00:55:23.956 - 00:55:28.664, Speaker A: Looks like we got quite a lot. So we have 591.
00:55:30.594 - 00:55:33.666, Speaker B: And then 691.
00:55:33.730 - 00:55:41.202, Speaker A: We have almost 100 people working and deploying this token shop with us as well.
00:55:41.338 - 00:55:42.210, Speaker B: Congratulations.
00:55:42.242 - 00:55:47.930, Speaker A: Give everybody their own little pat on the back. Round of applause to yourself. Good job, friends.
00:55:48.082 - 00:55:50.258, Speaker B: The next step, we're going to be.
00:55:50.306 - 00:55:53.494, Speaker A: Granting a mint a roll to the token shop.
00:55:54.074 - 00:56:12.660, Speaker B: So how that works is we are going to. We have our token and we have our token shop in the token. We're going to open this up.
00:56:12.812 - 00:56:15.184, Speaker A: I'm going to minimize the mint function.
00:56:15.684 - 00:56:17.784, Speaker B: I'm going to minimize this balance.
00:56:19.884 - 00:56:33.196, Speaker A: I'm going to click this blue button here for the mint to roll. We're going to see an aux nine f 2d. This should be the same for all of us as what's happening here is.
00:56:33.260 - 00:56:40.644, Speaker B: We'Re getting the Keshek or hash of the string value mentor role.
00:56:40.724 - 00:56:42.664, Speaker A: So everybody should be the same.
00:56:43.324 - 00:56:45.916, Speaker B: But if it is different, that's okay.
00:56:45.980 - 00:56:51.594, Speaker A: We're just going to follow along this here directly. We're going to copy and paste this.
00:56:51.634 - 00:56:56.290, Speaker B: Mentor role, then we're going to run.
00:56:56.322 - 00:56:58.534, Speaker A: The function grant role.
00:56:59.074 - 00:57:01.274, Speaker B: So what we're going to do is.
00:57:01.314 - 00:57:04.930, Speaker A: We'Re going to paste that value from.
00:57:04.962 - 00:57:08.974, Speaker B: The mentor role into this role here.
00:57:10.034 - 00:57:12.414, Speaker A: And then it's asking for an account.
00:57:12.874 - 00:57:16.014, Speaker B: Does anyone know which account it should be?
00:57:25.974 - 00:57:28.594, Speaker A: I don't know if I have any comments here.
00:57:29.734 - 00:57:31.354, Speaker B: The contract address?
00:57:31.934 - 00:58:20.384, Speaker C: Yes, I will be here to answer that. So Manuel, if you'd like to mint ten tokens per 0.18, it depends of the token price that we define it. That we define it inside the token, not in the token shop. Okay, so this will be the rule. In the token, we define the price of the token in USD. If we define the price in it can be on this way, but like to us doesn't make sense to do in that way because would you like to use chaining data fit to do the conversion? So it's better to get it and convert to USD.
00:58:23.404 - 00:58:24.664, Speaker A: Thank you Soland.
00:58:29.524 - 00:58:30.664, Speaker B: Excuse me.
00:58:31.244 - 00:58:36.520, Speaker A: So then we're in the grant role function. We have the role which we got.
00:58:36.592 - 00:58:39.776, Speaker B: From the minter role by copy and.
00:58:39.800 - 00:58:41.552, Speaker A: Pasting this value here.
00:58:41.648 - 00:58:45.320, Speaker B: Once we called it, then we have the account.
00:58:45.472 - 00:58:57.424, Speaker A: And this account here is going to be our token shop address. So we can go ahead and copy that from our deployed token shop contract or the same value that you pasted.
00:58:57.504 - 00:59:02.038, Speaker B: In the forms along with the pad.
00:59:02.086 - 00:59:03.510, Speaker A: Rise up and then we're going to.
00:59:03.542 - 00:59:14.714, Speaker B: Grant role hit transact pulls metamask up, confirm the transaction and have it move forward. We confirm it.
00:59:17.734 - 00:59:21.154, Speaker A: Once it's still pending, but once it goes through.
00:59:23.934 - 00:59:45.862, Speaker B: We can confirm it by checking has role. So take the role information here and then take the contract address of our token shop and paste it here. This will should pull back a boolean.
00:59:45.918 - 01:00:08.014, Speaker A: Value of true which will confirm whether or not your token shop address now has the ability to mint tokens from your token address. Now we are going to go to the token shop.
01:00:18.114 - 01:00:34.944, Speaker B: We'Re going to get chainlink data feed. Latest answer this here is the value of ETH currently based off of the chainlink data feed ETH pair.
01:00:37.444 - 01:01:05.124, Speaker A: We want to do is to see the value here. We can move the decimal over eight points. So let's take this, let's take this to the pad so we can all follow along together. So the data feed value was this.
01:01:05.464 - 01:01:16.528, Speaker B: So we are going eight decimal places to the left here, 1234-5678 and we.
01:01:16.536 - 01:01:29.604, Speaker A: Can paste or post a decimal here. So as we can see, we can see the current value of ETH is 3353.929.
01:01:30.504 - 01:01:31.884, Speaker B: Add some numbers.
01:01:33.984 - 01:01:35.724, Speaker A: This is the current pair.
01:01:37.144 - 01:01:54.732, Speaker B: And the next step is we're going to buy tokens ourselves from ourselves to the token shop.
01:01:54.868 - 01:01:57.268, Speaker A: So what we're going to do is.
01:01:57.356 - 01:02:04.228, Speaker B: I'm going to take the token shop address. I'm going to copy this, I'm going.
01:02:04.236 - 01:02:11.384, Speaker A: To open up metamask. I'm going to send some value.
01:02:12.624 - 01:02:20.204, Speaker B: I'm going to paste my token shop address to into my metamask.
01:02:21.104 - 01:02:26.044, Speaker A: I'm going to send zero one sepolia ETH to myself.
01:02:28.304 - 01:02:30.040, Speaker B: Or to the token shop address.
01:02:30.152 - 01:02:35.424, Speaker A: And what it should do is mint that value back to me in my wallet.
01:02:35.584 - 01:02:41.270, Speaker B: So before I do this, let's just take a little mental note about the.
01:02:41.302 - 01:02:45.794, Speaker A: Amount of darp tokens I have. I have 100 darp tokens.
01:02:46.254 - 01:02:51.998, Speaker B: After I do this transaction, you should see more what that value is.
01:02:52.046 - 01:02:55.838, Speaker A: 2.01 ETH we will see in a second.
01:02:56.006 - 01:03:13.414, Speaker B: So I am going to send this value to the token shop. Going to .01 Sepolia. Ethan going to send this. I'm going to confirm this transaction.
01:03:17.714 - 01:03:18.854, Speaker A: It's pending.
01:03:19.514 - 01:03:20.614, Speaker B: It's pending.
01:03:25.954 - 01:03:27.682, Speaker A: It's been confirmed.
01:03:27.858 - 01:03:31.772, Speaker B: So when I open this token tab.
01:03:31.938 - 01:03:37.524, Speaker A: I should see the value of the darp tokens in my wallet have changed.
01:03:38.864 - 01:03:43.472, Speaker B: As you could see .01 Sepolia ETH.
01:03:43.608 - 01:03:51.124, Speaker A: Has minted me and sent back 16.76 Darb tokens were sent to my account.
01:04:00.524 - 01:04:05.404, Speaker B: Now, what I'm going to do is.
01:04:05.484 - 01:04:12.884, Speaker A: I'm going to take some. I'm going to send some value to.
01:04:12.924 - 01:04:19.780, Speaker B: Some of our contracts here and see if I get any value.
01:04:19.852 - 01:04:26.484, Speaker A: So I have George P. First thing I'm going to do is I'm going to find George.
01:04:30.344 - 01:04:35.644, Speaker B: P's token address. I'm going to copy and paste this.
01:04:36.264 - 01:04:41.324, Speaker A: I'm going to open up my metamask. I'm going to import one of his tokens.
01:04:42.904 - 01:04:49.200, Speaker B: I'm going to see if I is Kaka k a k a. I'm going to import this.
01:04:49.272 - 01:04:50.284, Speaker A: I have zero.
01:04:52.144 - 01:04:52.576, Speaker B: Now.
01:04:52.640 - 01:05:03.328, Speaker A: I'm going to go to George P's token shop. I'm going to copy and paste his from there.
01:05:03.416 - 01:05:10.408, Speaker B: I'm going to send George some money. Let's do.
01:05:10.456 - 01:05:15.204, Speaker A: .07. I like the number seven.
01:05:17.604 - 01:05:29.500, Speaker B: I'm going to send him .07 Sepolia ETH. And now that contract is pending, and what I should do, what I should.
01:05:29.572 - 01:05:30.944, Speaker A: Receive is.
01:05:32.964 - 01:05:58.724, Speaker B: 0.07 ETH worth of George's tokens. It's confirmed now. So then I now have 116 kaka tokens.
01:06:00.664 - 01:06:04.084, Speaker A: Do we have any questions with where we're at at this point.
01:06:27.404 - 01:06:29.224, Speaker B: Let'S take a look at the chat.
01:06:39.944 - 01:06:40.884, Speaker A: Manual.
01:06:41.464 - 01:06:42.680, Speaker B: All right, I see you.
01:06:42.792 - 01:06:47.004, Speaker A: How does the contract estimate how many tokens to mint?
01:06:47.304 - 01:06:54.560, Speaker B: Let's go look at the code. So, here we have the token price.
01:06:54.712 - 01:07:04.900, Speaker A: We've set the token price to be $2. We're getting that value from the get chainlink data feeds.
01:07:04.932 - 01:07:08.540, Speaker B: Latest answer to figure out what the.
01:07:08.572 - 01:07:12.044, Speaker A: Value of ETH to us dollars is.
01:07:12.204 - 01:07:31.456, Speaker B: To get the price. Then we do the math to get the current price of chainlink of the ETH us dollars divided that by get the decimals out, and then divide it.
01:07:31.480 - 01:07:38.200, Speaker A: Out to make it so each one costs $2. Then from there, that is being calculated.
01:07:38.392 - 01:07:41.384, Speaker B: For how many tokens are minted based.
01:07:41.424 - 01:07:42.884, Speaker A: Off of the value sent.
01:07:46.864 - 01:07:47.464, Speaker B: I get.
01:07:47.544 - 01:07:50.986, Speaker A: You want me to go buy more of George's tokens?
01:07:51.120 - 01:07:58.006, Speaker B: I could do that. All right. So what I did originally was I.
01:07:58.030 - 01:08:00.314, Speaker A: Went to George's token address.
01:08:00.694 - 01:08:03.830, Speaker B: I had to search it, but it's right here.
01:08:04.022 - 01:08:07.094, Speaker A: I took his token address. For me to even be able to.
01:08:07.134 - 01:08:13.214, Speaker B: See it in my metamask, I had to import his token, which you would.
01:08:13.254 - 01:08:16.902, Speaker A: Have in your tokens tab and metamask on the bottom.
01:08:17.038 - 01:08:17.714, Speaker B: Import.
01:08:18.094 - 01:08:21.934, Speaker A: I pasted his contract address. It's already been added, so I can't.
01:08:21.974 - 01:08:27.054, Speaker B: Follow this again, but ideally, I imported.
01:08:27.174 - 01:08:30.234, Speaker A: His token into my metamask so I can see it.
01:08:31.454 - 01:08:33.270, Speaker B: Then it populated here.
01:08:33.462 - 01:08:35.454, Speaker A: What I did then was I went.
01:08:35.494 - 01:08:41.702, Speaker B: To the same address for George for.
01:08:41.718 - 01:08:45.914, Speaker A: His token shop address, and I copy and pasted his token shop address.
01:08:47.754 - 01:08:55.746, Speaker B: From there, I opened metamask. I hit the send button, I pasted.
01:08:55.930 - 01:08:57.774, Speaker A: His token shop address.
01:08:58.994 - 01:09:03.534, Speaker B: I defined the value in which that I wanted to send him.
01:09:03.994 - 01:09:27.990, Speaker A: So .07 was what I sent last time. This time, I'm going to send another one. George, you're cleaning up today. Then I'm confirming this transaction. And then once this transaction goes through, I should be able to see that.
01:09:28.022 - 01:09:40.210, Speaker B: This token kaka or KK, creates more. So, now that it's confirmed, I see.
01:09:40.242 - 01:09:53.690, Speaker A: That I've received another 16k, aka tokens back. No, I own those tokens. I have minted them from his token.
01:09:53.842 - 01:10:03.686, Speaker B: Contract using the token shop. So we called the token shop. We gave the token shop access to.
01:10:03.710 - 01:10:15.594, Speaker A: The mentor role of the token dot soul contract itself. So now the token shop can mint tokens from George's token contract.
01:10:16.574 - 01:10:20.434, Speaker B: I sent the token shop value.
01:10:21.054 - 01:10:27.994, Speaker A: It then minted from the token contract and sent those to my address.
01:10:36.514 - 01:10:39.054, Speaker B: Token amount. Let's take a look.
01:10:41.754 - 01:10:43.534, Speaker A: Which two lines were you?
01:10:43.914 - 01:10:49.494, Speaker B: So the, uh, the decimal bit.
01:10:51.194 - 01:10:54.574, Speaker A: Excuse my remix. It's looking like a.
01:11:08.024 - 01:11:33.546, Speaker B: Let's reload this. Apologize there. All right, so back here, we are having issues understanding the two lines and the function token amount don't get the decimal bit. So it's kind of tricky due to the math here.
01:11:33.690 - 01:11:36.138, Speaker A: But essentially we're getting the amount of.
01:11:36.186 - 01:11:44.202, Speaker B: ETH times the ETH priced in us dollars divided by 18 or ten to the 18.
01:11:44.378 - 01:11:45.930, Speaker A: So what we're doing is we're taking.
01:11:46.002 - 01:11:53.366, Speaker B: The 18 decimal places out of that. Then the next is the US, the.
01:11:53.390 - 01:11:59.446, Speaker A: Amount in us dollars divided by the token price divided again by ten to.
01:11:59.470 - 01:12:02.694, Speaker B: The 8th power divided by two.
01:12:02.854 - 01:12:16.354, Speaker A: And once again, it's kind of tricky math, but essentially we're boiling this down so there's not 18 decimal places on the right of our value. And we're making it a little bit more user friendly by put making it.
01:12:16.824 - 01:12:21.364, Speaker B: Closer to fiat, where it has 0.02 or 0.2.
01:12:22.464 - 01:12:25.880, Speaker A: It has two decimal places to the right of the value.
01:12:26.032 - 01:12:46.944, Speaker B: So if we have 100, the value itself looks like 10,000, but it was 100. So essentially the right two decimals, or. Yeah, decimals are values.
01:12:52.964 - 01:13:11.824, Speaker A: I still have information on the pad. .01.
01:13:11.944 - 01:13:22.664, Speaker B: Kaka gave me 16 tokens .07 gave me seven times 16, so it should.
01:13:22.704 - 01:13:36.584, Speaker A: Value out at around 116. I thought that was a little weird myself. Almost like I minted 100 of his tokens to begin with as well. But somehow the math just happens to work out where those values look similar.
01:13:59.744 - 01:14:02.064, Speaker B: Let's take somebody else's token. Let's.
01:14:02.104 - 01:14:06.604, Speaker A: Let's walk through somebody else's token. So let's go find.
01:14:08.744 - 01:14:55.644, Speaker B: Shoot, it does look like some tokens. All right, nice. If I. Let's use sock the bell.
01:14:56.544 - 01:15:01.576, Speaker A: I'm going to copy and paste his token address. It looks like we lost a bunch.
01:15:01.600 - 01:15:22.776, Speaker B: Of the token soul addresses, so I'm going to use this one here as another example. I am going to open metamask. I'm going to import a token. I'm going to take the value that.
01:15:22.800 - 01:15:25.204, Speaker A: I had sac sak.
01:15:26.104 - 01:15:32.364, Speaker B: Next, I'm going to import it successfully been imported. I can see it here.
01:15:33.424 - 01:15:35.524, Speaker A: Now I'm going to find.
01:15:39.704 - 01:15:41.480, Speaker B: Sex sector.
01:15:41.552 - 01:15:46.674, Speaker A: Balls, token shop address, copy and paste that myself.
01:15:47.414 - 01:15:57.874, Speaker B: Open metamask. Going to send value here. .01. Going to send it.
01:15:59.254 - 01:16:06.714, Speaker A: Confirm my transaction. Absolutely. Solange.
01:16:16.634 - 01:16:27.770, Speaker B: The size. Okay, now let's do one more look a little better. It looks a little better.
01:16:27.842 - 01:16:28.494, Speaker A: Perfect.
01:16:31.954 - 01:16:41.720, Speaker B: Andrew, is that your token address so I can import it? Perfect.
01:16:41.792 - 01:16:45.004, Speaker A: I'm going to go with blue and suit.
01:16:45.784 - 01:17:02.064, Speaker B: So I have the Munich token. Going to copy that. Going to import it in my extension or my metamask. Token import. Uh huh.
01:17:02.644 - 01:17:03.704, Speaker A: There's why.
01:17:06.444 - 01:17:22.744, Speaker B: Now muc. Now I have that. It's been imported. Now I'm going to take his, uh.
01:17:24.364 - 01:17:29.094, Speaker A: Token address or token shop address, and I'm going to send value.
01:17:30.954 - 01:17:36.634, Speaker B: Paste that there. Let's do a thanks for posting this in chat.
01:17:36.674 - 01:17:39.170, Speaker A: You're getting 1.1 superior ETH.
01:17:39.202 - 01:17:42.894, Speaker B: Now I got size and large.
01:17:44.074 - 01:17:55.414, Speaker A: Confirm the transaction and we should see a bunch pop into my metamask here, waiting for the contract to go through.
01:18:19.554 - 01:18:26.354, Speaker B: It's sent so we can see. I lowered in value 0.1, but I.
01:18:26.394 - 01:18:30.574, Speaker A: Received 165 Munich coins.
01:18:32.234 - 01:18:33.894, Speaker B: Thanks for your transaction.
01:18:36.034 - 01:18:38.614, Speaker A: Kind of lost on the token shop address.
01:18:39.154 - 01:19:03.534, Speaker B: Um, how can I help? How can I help you absolutely would. That is exactly how you would.
01:19:03.574 - 01:19:13.298, Speaker A: So the question is, so for me to get the sepolia ETH that my token shop has, I would call the withdrawal function of the token shop.
01:19:13.486 - 01:19:14.294, Speaker B: Correct.
01:19:15.434 - 01:19:19.658, Speaker A: And only you, as the owner of the token shop, should be able to.
01:19:19.826 - 01:19:39.120, Speaker B: Withdraw the value there. Andrew. I'm coming. All right. Token copyright.
01:19:39.120 - 01:19:41.834, Speaker A: I'm going to open up my metamask.
01:19:43.254 - 01:20:00.102, Speaker B: I'm going to import your token. That looks like the one that I have here, Andrew, is your token shop address.
01:20:00.278 - 01:20:02.366, Speaker A: It's asking me for a token symbol.
01:20:02.470 - 01:20:07.454, Speaker B: Could you please post your token address for me so I can import it?
01:20:17.634 - 01:20:19.130, Speaker A: I can show you how that works.
01:20:19.202 - 01:20:33.110, Speaker B: So in metamask, you can go to prior transactions, you can see your past activity.
01:20:33.262 - 01:20:40.838, Speaker A: So we can see that I have been interacting with a lot of contracts here. Last thing I did myself was grant role.
01:20:41.006 - 01:20:43.854, Speaker B: But then I have all these contracted.
01:20:44.014 - 01:20:56.876, Speaker A: Iterations, which I can also view on the block explorer as well. We learned yesterday about the block explorer and the day before we had some initial insight into the block explorer.
01:20:56.990 - 01:21:00.288, Speaker B: So real quick though, we can dig.
01:21:00.336 - 01:21:02.884, Speaker A: Into, we can see that my address.
01:21:03.424 - 01:21:14.784, Speaker B: Four f 808 sent to this contract, we transferred about the value of 16.
01:21:14.944 - 01:21:22.664, Speaker A: Sack devolves tokens, or SaK tokens is what I received back. The value initially sent was 0.01.
01:21:22.704 - 01:21:27.556, Speaker B: Ethan. The transaction fee was this here, and.
01:21:27.580 - 01:21:31.252, Speaker A: The gas price was this here. I can go into more details and.
01:21:31.268 - 01:21:46.744, Speaker B: Understand more, but that's how that works. Let's get back into remix.
01:21:56.024 - 01:22:02.376, Speaker A: Yes, blue in suit. What you can do is you can go to your token shop contract and.
01:22:02.400 - 01:22:04.816, Speaker B: Hit withdrawal from there.
01:22:04.880 - 01:22:14.648, Speaker A: You should be able to withdraw the .07 and the .01 sepulchia ETH totaling in .08 sepulia.
01:22:14.696 - 01:22:34.156, Speaker B: Ethan, to back to yourself. Let's take a look at the pad, see if I have any questions here. All right, Steve, I see you have.
01:22:34.180 - 01:22:36.184, Speaker A: The token and the token shop.
01:22:37.844 - 01:22:40.024, Speaker B: I'm going to copy your token.
01:22:42.944 - 01:22:47.524, Speaker A: I'm going to import it into my metamask. I'm going to buy some from you, buddy.
01:22:52.424 - 01:23:00.336, Speaker B: Sth is the name of your token or the token symbol. We're going to import it now that.
01:23:00.360 - 01:23:01.684, Speaker A: I have it in my.
01:23:03.504 - 01:23:04.784, Speaker B: My metamask.
01:23:04.904 - 01:23:08.974, Speaker A: I'm going to go to your token shop address. I'm going to send you some value.
01:23:13.274 - 01:23:29.202, Speaker B: I'm going to paste that directly in. I'm going to do .077 trip sevens. Next. Going to confirm, and I'm going to.
01:23:29.218 - 01:23:38.374, Speaker A: Wait for that to respond. Mario, you're next. I'll go through and send more value.
01:23:38.454 - 01:23:40.310, Speaker B: To anybody that I like.
01:23:40.342 - 01:23:41.574, Speaker A: The way that you guys have set.
01:23:41.614 - 01:23:45.110, Speaker B: This up with the token and the.
01:23:45.142 - 01:23:58.822, Speaker A: Token shop, Mario and Steve, the way you guys did, that was good. It's easy flow for me to follow up. So while we close out our time here, I'll be sending some value. And if these are populated together like.
01:23:58.878 - 01:24:01.898, Speaker B: This will, uh, I'm just going to.
01:24:01.986 - 01:24:05.002, Speaker A: Accumulate a whole bunch of your guys's minted tokens.
01:24:05.058 - 01:24:05.854, Speaker B: Thank you.
01:24:10.754 - 01:24:12.334, Speaker A: Now that I've sent.
01:24:15.914 - 01:24:30.630, Speaker B: Let's double check. Now I have, uh, some sith tokens. Mario's up. Mario, let's see what you.
01:24:30.782 - 01:24:38.274, Speaker A: The name of your token is. You're going to import it.
01:24:40.094 - 01:24:46.846, Speaker B: Mro, it's a token symbol. I've imported it. Next.
01:24:46.910 - 01:24:48.394, Speaker A: Your token shop address.
01:24:50.214 - 01:24:51.234, Speaker B: Extensions.
01:24:52.524 - 01:24:54.424, Speaker A: I'm going to send you some value.
01:24:55.644 - 01:25:03.704, Speaker B: Let's do a. .08 I'm sending that to you, buddy.
01:25:06.124 - 01:25:13.172, Speaker A: Andrew, you're next. You absolutely can.
01:25:13.228 - 01:25:17.540, Speaker B: Let me, let me hook this up.
01:25:17.572 - 01:25:18.584, Speaker A: So, Darby.
01:25:21.244 - 01:25:50.124, Speaker B: Token, token shop. My token is going to be. Ooh, because I, uh, I lost it. Let me, uh, let me get this up for you. Should be able to pull this.
01:26:19.564 - 01:26:22.824, Speaker A: I appreciate whoever is already a top darby holder.
01:26:27.884 - 01:26:39.564, Speaker B: Your homie for sure. Token shop. Let's go back to mine.
01:26:55.104 - 01:27:27.984, Speaker A: Contract creation without getting lost in myself.
01:27:30.244 - 01:27:32.868, Speaker B: I'll populate this in a second, but.
01:27:32.916 - 01:27:35.944, Speaker A: Let me continue to send value for you guys.
01:27:43.804 - 01:27:48.424, Speaker C: Hey, Darby, people need ethics.
01:27:50.964 - 01:27:51.944, Speaker B: What was that?
01:27:52.884 - 01:27:56.374, Speaker C: They need Ethan Sepalia. Is this.
01:27:58.274 - 01:28:00.374, Speaker A: ETH on Sepolia? Where's.
01:28:01.914 - 01:28:09.490, Speaker C: This is my question to you how the people would on that, because our workshop Faucet is working. If they need that.
01:28:09.522 - 01:28:32.974, Speaker A: Okay, got you. All right. Yeah. So if you need Sepulia ETH at the top of the pad, I posted our faucets, so we have the official chain link faucet. So faucets, chain link. You can find that link here. And then for the sake of these workshops, we also have a workshop faucet which you can see here.
01:28:32.974 - 01:28:52.514, Speaker A: I have included that information at the top of the pad as well. So you can go ahead and. Oh yeah, smart. Thanks for adding the password there, Solange. Appreciate that. So, the password for the workshop function faucet will allow you access if the.
01:28:52.594 - 01:29:03.954, Speaker B: Traditional faucet poses you any problems. I would get it from remix, but.
01:29:04.034 - 01:29:06.410, Speaker A: Since I reloaded my page, I don't.
01:29:06.442 - 01:29:16.194, Speaker B: Have this, uh, up. It's not populated.
01:29:16.614 - 01:29:18.230, Speaker A: I could go back and dig into it.
01:29:18.262 - 01:29:26.474, Speaker C: The address of your conflict is. Yeah, okay. Go to your metamask wallet.
01:29:27.414 - 01:29:28.222, Speaker B: Yes.
01:29:28.398 - 01:29:52.368, Speaker C: Open any transaction on block. Block explorer. Yeah, any of that goes, go to your wallet. In fact, we need to go to your wallet. Yes. Find the last concrete deployment over there in the transaction part.
01:29:52.456 - 01:29:53.744, Speaker A: Contract creation.
01:29:53.904 - 01:29:58.392, Speaker C: Yes, probably this is the token shop. If they order in the token.
01:29:58.528 - 01:29:59.336, Speaker A: Yeah, perfect.
01:29:59.440 - 01:30:09.784, Speaker C: These are both open the two transactions. Is this the token.
01:30:13.084 - 01:30:14.024, Speaker A: Token.
01:30:14.324 - 01:30:18.944, Speaker C: Okay, you have the address and you have the token shop.
01:30:23.004 - 01:30:28.784, Speaker A: Derby token. All right, now, second one.
01:30:36.024 - 01:30:42.404, Speaker C: The contract is upstairs. Contract go a bit up. Yes, here.
01:30:43.464 - 01:30:54.164, Speaker B: Perfect. Thanks for that. Cool.
01:31:02.724 - 01:31:05.744, Speaker A: Because of the monkey emojis I got you, Eric.
01:31:08.164 - 01:31:29.016, Speaker B: I like that. Give me 1 second.
01:31:29.120 - 01:31:30.384, Speaker A: My headphone.
01:31:30.424 - 01:31:31.004, Speaker B: Just.
01:31:38.984 - 01:32:17.704, Speaker C: So what about to create your token and your token shop? Did you like it? And yes. Remember that you can share in the social networks that today you learned how to create a token. And you know that I used to say that create a token. It's so easy. But to make the people believe that your token has some value, it's another history. And I think that is back.
01:32:18.284 - 01:32:26.784, Speaker B: Yeah, I'm back. Can you hear me? Fine, thank you.
01:32:41.544 - 01:32:46.568, Speaker A: Well, can I repeat the process for sending tokens to ourselves?
01:32:46.736 - 01:33:04.696, Speaker B: For sure. So since this is mine, I want to grab my token contract, copy and paste that, go to my metamask, I'm.
01:33:04.720 - 01:33:15.412, Speaker A: Going to import it. We, I already have mine imported, so it's going to say that this contract token has already been added. But essentially then I'm going to the.
01:33:15.468 - 01:33:23.924, Speaker B: Token shop, I'm copying that address, I take the extension of Metamask, I hit.
01:33:23.964 - 01:33:27.384, Speaker A: Send, I paste my token shop address.
01:33:28.484 - 01:33:31.356, Speaker B: And then I send it some value.
01:33:31.460 - 01:33:34.972, Speaker A: Whether it's 0.01 sepolia ETH, that's that.
01:33:35.068 - 01:33:37.996, Speaker B: It's the same flow for sending tokens.
01:33:38.020 - 01:33:42.944, Speaker A: To each other as well. And then I confirm the transaction.
01:33:46.404 - 01:33:46.692, Speaker B: And.
01:33:46.708 - 01:33:50.384, Speaker A: I show you withdrawing the amount once. Absolutely.
01:33:50.724 - 01:33:52.744, Speaker B: So, token shop.
01:33:54.164 - 01:33:56.424, Speaker A: I'm going to take my token shop address.
01:33:57.044 - 01:33:58.664, Speaker B: I'm going to open remix.
01:34:05.024 - 01:34:16.984, Speaker A: I'm going to open up my token shop address. I'm going to hit withdrawal. Let's take a look at my metamask first and see how much value I have. .2088.
01:34:17.104 - 01:34:20.456, Speaker B: When I hit withdrawal, it's going to.
01:34:20.480 - 01:34:27.064, Speaker A: Ask me to confirm. Confirm this. I have one ETH here.
01:34:27.224 - 01:34:37.218, Speaker B: Thanks. This was quite nice. It's pending.
01:34:37.306 - 01:34:38.334, Speaker A: It's pending.
01:34:44.514 - 01:34:55.250, Speaker C: And could you go to the function withdraw to in the. In the contact to them to be sure that they understand what's happened?
01:34:55.402 - 01:34:56.134, Speaker B: Yeah.
01:34:57.434 - 01:35:00.694, Speaker A: So external, it could be called anywhere.
01:35:01.114 - 01:35:03.834, Speaker B: But only the owner can call this.
01:35:03.994 - 01:35:16.170, Speaker A: So only the owner of the contract, that is myself, can call this and then it's payable to the owner and it transfers the address of this balance here.
01:35:16.322 - 01:35:29.074, Speaker B: And after I've called that, let's, uh, let's take a look. But let's see. I should have 1.2 ETH now because.
01:35:29.454 - 01:35:35.374, Speaker A: I withdrew it from my contract. This token shop balance is a zero.
01:35:35.414 - 01:35:40.190, Speaker B: Way to refresh this. All right.
01:35:40.222 - 01:35:43.646, Speaker A: Now it refreshed on its own, so it lagged a little bit.
01:35:43.710 - 01:35:44.998, Speaker B: But the.
01:35:45.086 - 01:35:46.582, Speaker A: I can see the balance here in.
01:35:46.598 - 01:35:50.212, Speaker B: My token shop and it had one.
01:35:50.268 - 01:36:01.224, Speaker A: ETH in it when I hit withdrawal and transacted able. It sent that to my account. And now I see that in my metamask.
01:36:01.684 - 01:36:16.762, Speaker B: It's been reflected here. Short answer. Yes, Ken, you always pass a gas.
01:36:16.818 - 01:36:21.466, Speaker A: Fee to withdraw your tokens? Yes, we're operating on a test network.
01:36:21.570 - 01:36:24.970, Speaker B: So while there is a gas fee.
01:36:25.042 - 01:36:26.242, Speaker A: Doesn'T have real value.
01:36:26.378 - 01:36:28.170, Speaker B: But the answer is yes.
01:36:28.282 - 01:36:44.994, Speaker A: For any change in state of the blockchain or block space, we pay gas. Whether it's transactions, posting information or providing value in any way, there is gas required as kind of rent in the system.
01:36:47.814 - 01:37:08.518, Speaker C: Yeah. Congrats, Darby. I think your session today was amazing. And it's so cute to see the pet with the students names and everything. Then I share my screen as well. Wait a minute. You can share, but I changed to mine.
01:37:08.518 - 01:37:37.874, Speaker C: Like, look at this. This is so cute. It's amazing. I'm so proud of you. And I'm so proud of our. Of our students as well. It's really amazing to see how you are learning, how you are doing, the contacts with us, how you are coding along and this is you are learning day by day creating smart contents, stature learning chain link today.
01:37:37.874 - 01:37:48.874, Speaker C: And oh yes, I'm so happy. Everyone, I think we are finishing now. Darby would like to say some final words.
01:37:49.894 - 01:38:32.572, Speaker A: Thank you so much. Thanks for the opportunity. Thanks to the Chainlink Labs team for putting on this bootcamp. Thank you for everybody in attendance that wants to grow and learn. What's great about this is when you stay committed over long periods of time, you can continue to learn and grow. It wasn't just two and a half years ago or so that I was a student at one of these smart contract boot camps run by Chainlink years ago. And the fact that I got the opportunity to come on and teach a little bit and share some of the knowledge that I've accumulated and help out in any way, it's been an amazing experience.
01:38:32.572 - 01:38:41.904, Speaker A: So thank you. Stay committed and if this is what drives your passion, keep going because it's worth it. Thank you.
01:38:43.244 - 01:39:00.664, Speaker C: Yes, thank you so much. Darby, I'm so proud of you. You are part of the history and you are inspiration to everyone. Exactly because you started in a boot camp and look you now where you are now. So I'm so proud of you.
01:39:01.004 - 01:39:03.824, Speaker A: Thanks again. Appreciate it very very much.
01:39:04.404 - 01:39:47.804, Speaker C: And remember that we have our hackathons, so you just you are learning now from zero, creating as much contents day by day. We are finishing this on 12 April. After that we have the hackathon starting on April 29. During that time you can form a team with the people that are here in the bootcamp and you can participate in the hackathon, create an amazing project and learn more advanced topics. Because in the hackathon we have more advanced workshops. So I hope to see you over there. And remember, this link is only to us now.
01:39:47.804 - 01:39:52.304, Speaker C: It's not public yet, so you are the first to know that.
01:39:53.924 - 01:40:25.428, Speaker A: Do the hackathon. It's worthwhile even if you think you should grow and learn and you might be doubting some of your capabilities or something, definitely go through it. Definitely build a team. You can only learn like that by putting yourself in the uncomfortable space. So highly recommend it. I got the opportunity to be a part of two prior hackathons and I love helping out any way possible. Definitely go through and shoot your shot.
01:40:25.428 - 01:40:26.344, Speaker A: Try it out.
01:40:30.644 - 01:40:34.084, Speaker C: And this is by everyone. We are finishing now.
