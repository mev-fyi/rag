00:00:07.560 - 00:00:39.110, Speaker A: So the title of this talk is actually the Ethereum of tomorrow. Today mostly be about tools from Openzepling. Regarding Metacratransactions met a workshop yesterday, but if you're interested in finding out how to actually implement these things, we'll have another workshop on Friday. I think the slides at the end of this so you'll be able to join as well. Check that. About my name is Jennifer Bertram. I'm developer advocate at open and we build developer tools and now we're helping out.
00:00:39.110 - 00:01:34.232, Speaker A: So first things first, as you saw with this poll, I'm really interested in getting statistics about people using our software and using software in general and understand this. So I have gotten actual footage of a new user trying to onboard to adapt real footage. That's what the experience is like today. I'm sure you all know that if you were going to go use cryptokitties right now, you'd have to jump through the KYC loops, which we all know about. You'd have to get your ether, you'd have to get a wallet. If you're on a subway, you probably don't feel like that's the best place to be writing down your twelve super secret life altering words. So what is missing right here is user experience, right? Like web three is fantastic, but if the user experience is actually crap, nobody's going to use that.
00:01:34.232 - 00:02:18.416, Speaker A: People don't use things simply because they're better. They use them because it's the lead. So this interesting stat comes, I think, from dapple Lab. They basically figured out cryptokitties. That out of every 100 users who came to play cryptokitties, they lost 99 of them at the install metamask. Which is crazy, because if you think about how big cryptokitties was, you have to think that was actually only 1% of what it could be. I mean, if you had a company where you were expecting to get a billion dollars of sales because you had a billion dollars worth of potential sales, and you only got 1% of that simply because you had to install metamask, you'd be a little bit pissed.
00:02:18.416 - 00:02:56.050, Speaker A: Your message repair and you probably use Greece. Enter gas stations network. The gas stations network is project by the Gas Stations alliance, which was originally conceived by Taboo team, which is basically a metatransaction system to solve the user onboarding problem. The gas station network alliance is these group of companies. Maybe there's actually more now, so don't hold me to that. But basically the idea is we want to build something that is audited, secure and standard right. It's very important that these things work across.
00:02:56.050 - 00:03:38.680, Speaker A: A lot of people build metatransaction solutions into their products and that's great. But if these things aren't interoperable, then install metamask, just becomes use this tool, use that tool, use the other tool, and you get user experience fatigue between applications. And that sucks. You can see the reason why Facebook OAuth and Google OAuth was so successful, because just the username and email experience with such a high level of friction, that even means paramount person more than happy to log in the first place. So what is the GSN? It's a decentralized group of relayers who are paid for relaying transactions. We use a single audited contract for coordinating all this. That's called the relay hub.
00:03:38.680 - 00:04:00.448, Speaker A: This is deployed on all the testnets and on Mainnet. It's always at the same address. And the way it's actually designed when you deploy it, it will always be deployed at the same address. Even when you create five channel or network, it'll always have the same address. And that's very important. We want to make sure that everyone's using the same tool. Gas pay for their own transactions.
00:04:00.448 - 00:04:39.810, Speaker A: So that's really interesting. Now, if you have a customer acquisition cost, it's the actual application that can pay for the gas for users to use. And that's very important because you can certainly imagine an app like e five, for example, where users are more than happy to pay fifty cents to take out a loan for $100,000. But if they don't have that experience up front, maybe you're going to be losing users at the firm. Install that's actually portable across the bundle. So what is installed, the doctors don't need to roll their own solution. That's very important.
00:04:39.810 - 00:05:15.928, Speaker A: You don't roll your own version of Ethereum every time you want to build an application. You don't roll your own cryptography. I hope people aren't rolling your own cryptography. And the system is decentralized. In the words of Yorov, what this enables is new business models, so you can charge users and tokens back to staff. So for example, you can say, hey, transactions using die rather than using, because that's a really kind of weird thing for a lot of users to tell them that hey, this donut costs $0.60, no $0.55,
00:05:15.928 - 00:05:32.480, Speaker A: no $0.60, no $0.32. Right. That's a weird thing. People want to know how much things are going to cost and this can enable that type of business model. Another really interesting business model that we are brainstorming at opening up. One is the idea that dows can pay transactions from the treasury.
00:05:32.480 - 00:06:46.140, Speaker A: So if you're a member of Molokdao, why should you be paying gas using metax? You already have this big treasury pool, right? If you're required to make a vote, why should you have to pay for that vote? So in this case you could set it up so that all the transactions when somebody is voting in the Dow are paid for from the Dow's treasury, which is really, I think it's pretty cool. You can set up credit cards for dapps, right? So in this case you can do something where you can use identity contract, you can use wire, buy $5 worth of ETH using your debit card, gets deposited at an address for which there's nothing there. You can deploy a contract that can refund the person who deployed the contract. And now every transaction that you make is paid for out of their own balance, which is a lot more what we kind of expect applications to do onboard uses web two technology. And that's important because most of our phones currently are not yet really web three enabled. Certainly there's sort of hacking solutions to that browser web three war, where people find more web three info browsers. But now you don't need that, right? So users can actually access your application using safari, which as you know is kind of impossible.
00:06:46.140 - 00:07:25.348, Speaker A: Isn't everyone? I can be more animated by help. So actual footage of a new developer trying to build a production dash, especially with another transaction. Right. So the other part of this of course is the developer experience. I'm sure there's a lot of developers here that we're looking at and building on web three, probably one of the most frustrating things you can do in your professional development life, right? Like the documentation is weird, the experience is weird. Typical. You're rolling your own solutions, you're breaking the strange circumstances.
00:07:25.348 - 00:08:09.312, Speaker A: Very few of us have multi hundred people teams doing testing all that jazz. So we're building something that we're supposed to change the world. But for us as developers, it's very difficult. So if it's a difficult experience for us building, how are we going to build experiences that are possible for users to actually learn the tool? This is what opens up and we've been working on the last couple of quarters and I think it's going to be pretty amazing. Some of this, you probably know some of this is going to be new. We've recently rebranded the product. We have contracts, SDK and service contracts inherits from our history of the open Zeppelin library, smart contracts that are audited and secure.
00:08:09.312 - 00:08:37.944, Speaker A: We've added on to that. We have an SDK, which is a suite of tools to help you develop tasks upgraded deploy contracts and starter kit. Starter kit developers right here. Pretty awesome guy. And it enables you to get up and started and running with the gap in just a couple of minutes. So especially now, we have a gas network enabled starter kit. That means that you can have an up and running metatransaction powered application within a couple of minutes, as long as it takes you to get it installed.
00:08:37.944 - 00:09:36.940, Speaker A: You have a ready to go app where you can start right away. So what I'm going to do is go through our tools and I think it'll be a good part of understanding what we've been building open SDK that's built on top of our previous product, Zeppelin RS. And when you install, you now have tools for you. SQL for opens up a transfer balance transaction call. You set up the upgrade contract creates more. So previously, I'm sure you all know that once you deploy the contract and be like, oh, I want to test that counter function, is it really incrementing the way it's on? You open up your console, you're like, let instance equals counterattack. Okay, instance message send transact open from goes on and then you change something about you start over instance equals right now you have interactive CLI.
00:09:36.940 - 00:10:23.936, Speaker A: You deploy your contract, it simply opens up an Oz for short send transactions. It'll prompt you for network you want to use contracts that you want to use, variables that you want to train, the arguments that you want to say, return the event and whatever else happens, saving the call, you can call in a public method. We actually just pushed an upgrade I think on Sunday that allows you to also get an account. So in terms of how easy it is to now interact in the development process, it's crazy. This has saved like hours off my development time already. Yeah, and that's a complete CLI that's ready for today. Opens up a network is a complete web three GSM provider today also engineer behind is right here.
00:10:23.936 - 00:10:50.488, Speaker A: So you're not grilling for anything. He's right here. But basically what this allows you to do is instead of going through the process, you might wish to do web three from your utils folder. Or maybe we're on cipher, maybe we should use like something like that. Instead of what we have is context equals use web three networks helping your provider. And if you want to use gas station's network and metatransactions all you do is pass in an object. GSN true.
00:10:50.488 - 00:11:26.404, Speaker A: And now your web three provider metatransactions enable. Everything is going to GSN network, just like that. You don't have to build anything fancy, complicated, works right out of the box. Additionally, down here you see on the contact object, it should be called contact, local contact. Same thing you see accounts, your network ID, your network name, writer name, lib is your web three and then connected is the booting which tells you when you're actually connected. In the whole examination process complete, you also have the ability to do events on it. So when your network provider changes, you can update the state of your application.
00:11:26.404 - 00:12:05.392, Speaker A: All right, so in the front end for getting your web, another great fact, it's enabled by hooks. So if you want to simplify your code base for your app on the front end, this makes life so much easier. You just pop it in one line with GSN enabled provider. And that is available today, it's not in the future. That's right now you can build on we've opened up a contract which allow you to enable metatransactions in your app today. So once you install the contract security package, all you need to do is import the GSN recipient contract and inherit fund. And at the minimum you have a function called accept, rewrite, call.
00:12:05.392 - 00:12:39.804, Speaker A: And at that point your application is GSN compatible. Metatransaction is your contract. Now from the gas station, all you need to do at the beginning, of course there's a lot more configured options, but the base with that you have metatransaction enablement smart contract that's available today opened up in GSN helpers. We are a development tool company. The experience for developers is very important. The testing process is very important. So what we've built is a suite of GSN helpers that allow you to build this out.
00:12:39.804 - 00:13:30.110, Speaker A: There's a lot of moving pieces when we're talking about meta transactions. We've attempted to simplify that as much as possible for developers so that they have a powerful, configurable, but also very testable, usable environment. So for me here, you could do in a programmatic way, you can deploy a relay hub, you can run a relayer, you can register your relayer in the relay hub, you can fund your recipient contract directly in code with these commands, just like that. We also have a CLI, so if you want to do it manually from the command line, you can do that as well, right? So fast whenever you had to compile your. So you can use the store directly in your test local. You can understand how the system works. This is developed and ready to use today as well.
00:13:30.110 - 00:14:21.256, Speaker A: Opens up in starter kits. We went through that standard, stable, uniform way of starting your application, production application, hobby application or hackathon application opens up in starter kit. Complete react application open up in smart contract. You have your GSM provider as part of the network. You have everything you need to get up and started and running with the contract metatransaction enabled application right away. Right? So this is really going to speed up your development time, speed up your prototyping time, and then you can take this along with you when you go to for when you're deploying on networks such as Rinkby or Mainnet, we have a GSN relay tool which is available today online. I think that's gsn ethereum.org.
00:14:21.256 - 00:14:59.450, Speaker A: So if you go to gsn ethereum.org, you can see the relays that are available. We are deploying live on Mainnet, so you can use it in production right now. You'll see there's three relays by us, one by tablet. We also have a DAP tool that allows you to manage, which essentially manage the amount of money you store inside your contract to pay transactions directly from the web interface. Also at gsn ethereum.org. So you can use the CLI, you can do a program and just want to top up the battle, just go in, grab your contract address, pop it up right there.
00:14:59.450 - 00:15:43.140, Speaker A: All of this course is available today. One of the things that we believe it opens up is that development should not be promises. These are things that you are able to build on right now. And I emphasize that because there's so much that you can. Sometimes you are looking forward to the future, especially when it comes to scaling solutions using on boarding solutions. You can be building this, you can be building your unique onboarding stations, all that today with production of Eddie tools right now. So we're going to go back to our poll really quickly to see how many people have actually used metatransactions.
00:15:43.140 - 00:16:26.740, Speaker A: So the opens up a workshop survey. Have you used metatransactions? One person said yes, another said yes, and seven said no. This is a bit of a trick because we've all used metatransactions, because actually this is a metatransaction enabled application. I built this on Saturday between lunch and dinner in just a couple of hours while we were traveling. So I'm not the world's greatest developer, but I was able to build a metatransaction enabled application and use right now from your phone. Zero friction, not expecting anything from it, not even knowing that that thing's going on. And that's the type of experience we're trying to enable for developers and users right now.
00:16:26.740 - 00:17:09.436, Speaker A: Because if you can log in, use Safari and interact directly with. This is live on Ringspace right now. If you can interact directly with an Ethereum smart contract application without even knowing it, that's a win, right? That's what we're looking for, where our ideas become something where you don't lose 99% of the people who come to use our app simply because they have to install metamask. So to participate in our community, please go to forum opendubble.com, where you can answer questions there. There's a lot of hanging out there, there's a lot of information. We really take feedback from our community very seriously.
00:17:09.436 - 00:17:43.672, Speaker A: There's something you need, something you want to add, something to change, please find or on GitHub we are really building things that help the community do what they're trying to do for developers. So if you reach out to us, we will certainly get back in touch with you. There's a feature that you need. We'll work on seeing if we can integrate that. There's a problem that we need to fix and you will be on top of it here at watching. We're going to be in a lot of different places from Monday to class. Wednesday we have Ramon la Puero doing building dapps for one at Dapcon.
00:17:43.672 - 00:18:10.610, Speaker A: And Friday I will actually be doing a workshop on how to use this, how to actually build metatransaction enabled apps. So if you want to actually get your hands dirty, come and build and try the tool. Please come by. And of course, always feel free to ping me, send me a tweet, hit me up, send me an email. I'm happy to talk. So if you have any questions, that's my 20 minutes.
