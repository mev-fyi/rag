00:00:10.730 - 00:00:47.078, Speaker A: So we're just about done here. However, there's one or two more things we want to do just to clean this all up. Right now when we're auto saving, we're using the Vs code plugin for us to auto format. However, in the future, if anybody else comes across our repository, they might not have the vs code otter formatter on. So we want to give users a way to format their code so it matches the styles that we use. So we have prettier the extension installed. We can also add prettier as a node JS module that can tell other users who don't have our vs code exactly how to format both their javascript and the solidity.
00:00:47.078 - 00:01:29.542, Speaker A: There is a prettier plugin solidity located here. There will be a link to it in our GitHub repo and if we scroll down we can see how to install it with NPM install save dev, which again we're just going to use yarn. So we're going to do yarn, add prettier and then prettier plugin solidity. So we're installing both prettier and the solidity plugin for prettier. And if we check our package jsons we can see that these two have been added. And what we can do now is we can create a new file called Prettier RC. And in this file we can define some little curly braces.
00:01:29.542 - 00:02:22.630, Speaker A: In here we can define what we want for both our solidity and for our javascript. So for example, our simple storage has a tab width of 412344 spaces. Maybe we want to change that. Maybe we want tab width to be two. So we would save it here, we'd come back to simple storage, save it here, and it would get auto formatted to our prettier RRC. So in our settings here we have the default editor for Solidity, our hard hat solidity plugin, and the default formatter for JavaScript being the prettier vs code one. When we add prettier rc in here, this file will take precedent over the default configuration so long as we have downloaded the module in our node modules, which we can see it right here and we have this prettier RC file.
00:02:22.630 - 00:03:10.406, Speaker A: I'm going to keep the tab with form, so we're going to update it to that. One thing that we currently do have that I do not like is these semicolons at the end. So we're going to do semi false and I'm going to save this, come back to deploy, hit save and you'll see the semicolon automatically goes away. I'm also going to add use tabs false, since I want to use spaces or spacing, and then single quote false. This way we'll always use a double quote instead of a single quote. In JavaScript, you can actually use a single quote or a double quote to define strings, but we're going to make it so that no matter what quote you use, it'll always be double quote. And then for all your open source repos and for all your projects that you make, you'll want to make a ReadMe MD.
00:03:10.406 - 00:03:47.602, Speaker A: ReaDMe files are generally where people put instructions or information about your project or anything like that. This way whenever anybody comes across your project, they'll know what it's about. Your ReaDMe MDs are markdown syntax again. Remember how when we made that trial discussion, we used some interesting tips to format our solidity and our code here? Well, that formatting process is the exact same for MD files. For markdown, they're both going to use markdown. In fact, if we hit Ctrl shift v, you'll enter preview mode for the markdown. You'll see pound signed here in my preview of the hard hat.
00:03:47.602 - 00:03:59.890, Speaker A: This ethers simple storage FCC is huge and looks like a heading at the top. So command shift v to view your MD files. Or it might be control shift v for Windows and Linux users.
