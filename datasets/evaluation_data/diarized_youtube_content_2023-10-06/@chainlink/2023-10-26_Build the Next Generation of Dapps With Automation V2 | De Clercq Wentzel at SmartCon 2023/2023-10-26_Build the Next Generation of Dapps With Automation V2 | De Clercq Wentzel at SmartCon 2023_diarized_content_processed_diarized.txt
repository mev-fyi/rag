00:00:06.250 - 00:00:46.780, Speaker A: Hey everybody, I want you to think back to the first time that you held a mobile phone in your hand, the smartphone. Now if you're like me, you grew up in the age of XT. And the first time I saw this thing, it was just filled with possibility and opportunity. And that's what I'm really excited to talk to you about today, like what we're making possible when you integrate on chainlink automation. So at a high level, we're going to cover two things here. First, why we're doing what we're doing and why that matters. And secondly, we're going to talk about how you can build next generation dapps when you build on automation v two.
00:00:46.780 - 00:01:32.650, Speaker A: So when you think about a smart contract and you look at it, there's one thing that's going to happen with certainty. Time is going to pass. It's pretty much like looking at a metronome. Nothing happens unless you click that button. And this is a fundamental gap in blockchain. It doesn't give you the ability to build the engaging experiences you need to really drive adoption. And this is why we went about building automation, to extend blockchain functionality so you can build the features and experiences needed to really drive adoption while retaining the cryptographic advantages of blockchain.
00:01:32.650 - 00:02:28.326, Speaker A: So with just a few lines of solidity code, you can harness the power of decentralized Oracle network compute and really supercharge your dapps for highly reliable and performant automation. And to give you a sense of that, let's look at a case study. We have a user called robolabs, Robovault, and they do leveraged delta neutral investment strategies. Now in short, what that means is if the market moves, they need to re edge their portfolios to maximize their returns and to minimize losses. And like most folks, they went about and said like, okay, cool, we're going to build our own bot to reage our investments. And they actually did really well. But after a couple of months they said like, hey, I think we need a backup solution.
00:02:28.326 - 00:02:54.434, Speaker A: And they went to another industry solution for a backup. And a month down the line they came to Chainlink automation. They were like, okay, cool, we're now going to integrate automation as well. And then they did something pretty cool. They ran a three way race. So they had all three bots, if you want to call it that, in a race. And after two to three months, what they found was that Chainlink automation detected and edged transactions 81% of the time.
00:02:54.434 - 00:03:16.890, Speaker A: So we were first. Their in house bot did 18% of the edges and the other solution did 1%. So we were super happy with these results. But it doesn't stop there. This is a common thing that we're hearing from our users. If you want reliable and performant automation, you go to Chainlink. So let's quickly look at some of our other users.
00:03:16.890 - 00:03:51.426, Speaker A: So yesterday in Kamal's keynote, you probably saw Getty up there. They are doing some really cool stuff at Oku. They build uniswap V three s pro interface, and they're using automation for reliable and fast execution of their limit orders. Next, Planet nine or Planet Ixavi, however you want to. It's a gaming shop. And they integrated Chainlink automation for drastic reduction in cost to their users, and that significantly drives the adoption. And lastly, pancake swap.
00:03:51.426 - 00:04:36.630, Speaker A: For those of you used it, they demand the highest form of reliability, and they turn to chainlink to ensure that their games run on time, every time, every five minutes. Now, we have two other really interesting use cases here, Somalier and GMX, and we'll get to them as soon as we talk about the next section. And this is what I'm really excited to talk to you about, automation V two. So, who of you were in Kamal's keynote yesterday? Okay, I'm seeing a couple of hands. A big thing that was announced especially for us and for the team here is Chainlink automation now has consensus. It's the industry's first automation solution with consensus. We like to call it verifiable compute.
00:04:36.630 - 00:05:18.370, Speaker A: So what does that mean? It basically means you get cryptographic security in your off chain compute. And we'll talk a bit more about what this really unlocks. The next thing we're launching is log triggers. Like for those of you who've ever wanted to use log data, you can now natively listen to and use log data within your smart contracts. And lastly, again, if you were in the keynote, you would have seen we announced something called data streams. We offer a seamless integration with data streams in Chainlink automation. Okay, so if there's one thing that you leave with today, it is the following.
00:05:18.370 - 00:06:01.310, Speaker A: Verifiable compute can drastically reduce your onchain gas costs without sacrificing the cryptographic security of your program. So how did we do this? Well, we rebuilt automation from scratch on top of Chainlink's OCR three protocol. In a nutshell, we now have a peer to peer network these nodes all individually. Go and figure out what is the data that needs to be sent on chain using your upkeep contract. They then get to consensus on that. They write that data to a report, they sign it. That report is sent on chain where the signatures are verified before any execution takes place.
00:06:01.310 - 00:06:46.000, Speaker A: And that's how we provide that cryptographic security on the off chain compute. Let's look at how sommelier use this. What sommelier do is they provide investment vaults, automated investment vaults, which is a pretty neat thing if you think about it. One of the key things obviously, in taking part in an automated investment vault is depositing your money into the vault. And they found that when they integrated automation v two into their protocol, they had to rejig their contract. But what it led to was a 90% reduction in the cost of the depositor function. They literally went from something close to $100 to less than $10 when you invest money into this vault, which is a phenomenal saving.
00:06:46.000 - 00:08:11.350, Speaker A: So, just to put it into perspective, we're talking about solidity code that lives on chain that would, let's say, cost you 5 million gas, and that same would then cost you 500k when you run it via automation and make use of this offloading functionality that we provide. Next up, log events. So a lot of developers out there use log data because it's a cheap way of storing data on chain. But the reality is it's not actually that cheap because you need some back end that will actually reliably listen to the log events, store them, process them, actually make sure that logs that were emitted in blogs that were reorganized are not stored. And then finally, if you wanted to actually take action on the log data, you had to then send a transaction on chain reliably. Okay, now all of a sudden, it might be cheap to emit those logs, but it's not that cheap and easy to actually use it reliably with automation and a couple of lines of code, you can actually trigger on and use log data natively in your solidity contracts. If you look on screen, we provide a simple struct that you can use to investigate the log data and actually use that as part of the compute and then send that on chain.
00:08:11.350 - 00:08:46.070, Speaker A: So the simple diagram here kind of just shows you what we mean. Log data gets submitted. Our nodes individually monitor these logs. They simulate and that whole process that I described earlier follows. So imagine all the new connection opportunities that you can create between smart contracts. Like think of this as a messaging bus, and how you can now create loosely coupled smart contracts. Next, we're going to talk about integrating access with data streams.
00:08:46.070 - 00:09:43.346, Speaker A: So automation v two allow you to seamlessly access data from data streams. Again like three functions, and we can say three lines of solidity code if you don't pretty print. That's how easy it is to actually go and request data from data streams. And now let's look at an example at how this is going to change the derivative space. Derivative protocols with thousands of trades per day are turning to chainlink to use our low latency data to prevent front running and set a new standard in terms of how they execute on delayed order confirmations. Now before it was a fairly complex process with Chainlink, with automation, what happens is we provide seamless access to that. So we take care of all the backend work and they can focus on providing the functionality and the experience to really drive adoption of their protocols.
00:09:43.346 - 00:10:36.760, Speaker A: So this is a nice use case of composability. How we're using log triggers as well as access to data streams to fetch data. If we can quickly talk about the slide on screen, a user would go to, let's say GMX's website and they want to execute a trade, let's say go long on ETh UsD that would emit a log. Automation is listening and waiting for that log. We pick up the log, we process it, we go and fetch mercury data, sign all of that data into a report that gets sent on chain and is then executed in a fast and reliable way. So this is really something where we're super excited and just showcasing what can be made possible and that's kind of where we're going to go. I'll show you a quick video at the end, but if you want to get started, the easiest way is go to our app.
00:10:36.760 - 00:11:19.478, Speaker A: We've launched a number of examples there where you can quickly get started and deploy your own upkeep in five minutes and see what happens. Also, please go to our docs page or jump onto our discord and ask us some questions. We've also created this really neat developer resource hub. Like if you're a smart contract developer and you don't know where to get started, this is a place where you can find out everything about Chainlink and how you can use Chainlink automation in making your own composable apps. So now I'm going to show you a quick video that we made this morning about lock triggers and how we're fetching data. So Elaine, if you wouldn't mind queuing up that video. Awesome.
00:11:19.478 - 00:11:48.202, Speaker A: So this is the contract we deployed. What we're going to do is we're just going to go into a separate contract. We're going to emit the log ourselves and we did this on arbitrum. So it was nice and fast. And the log is emitted. What our nodes is now doing, they're looking at this, getting to consent well, fetching the data from the data stream service, getting to consensus and then writing. And you can see at the bottom there, there's a perform upkeep.
00:11:48.202 - 00:12:07.700, Speaker A: Go and compare the timestamps. It runs within a couple of seconds. And it's a pretty innovative way of just like how we can reuse the power of these decentralized oracles and really get extended blockchain functionality into the hands so you and build the best apps possible. Thank you very much.
