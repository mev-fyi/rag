00:00:03.570 - 00:01:23.310, Speaker A: You. Good morning. I feel like I'm in the minority here because everybody is creating protocols and we're running protocols in the platform. And I'm also, I think we're unique in that we're helping adoption of protocols in the different space, which is in enterprise, which tend to be much slower than the open community in adopting these new technologies. But I think we're still very proud to be part of this movement, so to speak, because there are all these new technologies coming from the open source community that gets the enterprise enamored and they want to try it out, but then they're having a difficulty of adopting them because of either their IT roles, lots of red taping, but also a skill deficit. So Kaleido's mission is to make it really simple to adopt blockchain into enterprise. And as you know, in the winter of cryptocurrency, it's the enterprise that keep pushing the adoption of blockchain.
00:01:23.310 - 00:02:14.750, Speaker A: Last year was probably the worst year in terms of the coins, but that was the 2018 was the year blockchain made mystery in enterprise. So Collido was part of this curve, and we're very glad that we're able to help. So we'd like to show you what Kaleido is all about and what we have been doing to help with the blockchain community. So we are the blockchain business cloud that again helps business to run blockchains in their mission critical systems. And we're based on Amazon and Azure. So we're the first gold level partner on blockchain with Amazon. So before they had their own platform, they had Collido.
00:02:14.750 - 00:03:22.260, Speaker A: That was early 2018, which is more than a year ago. And these are some of our customers. One of our biggest customers had 20 of the Europe's biggest banks running a consortium doing global trade finance. And it's running on Kaleido. And our customers spend banking, global trade, consumer, entertainment, medical and healthcare, and more customers are coming onto our platform every day. And of course, in terms of blockchain platforms for enterprise, there's whole bunch of new platforms are coming online every month. We are unique in that we sort of defined a new category of blockchain platforms, which is the full stack platform.
00:03:22.260 - 00:04:39.120, Speaker A: If you look everywhere else, you have the IBMs, the Oracles, the Amazon, Microsoft of the world. What they have is they stay on the very bottom layer that helps you set up and run blockchains, and that's it. But because of our experiences and how early we are in the space, from our experience with working with customers, we realized blockchain is just tiny sliver of the whole solution. If you want to build a high quality, decentralized application, you have your blockchain and then you have like 90% of the work still remaining. That is, how do I manage my keys? How do I users to the keys, and how do I do transactions? How do I manage transactions to guarantee finality and throughput? All that needs to be built on this new infrastructure. And once you've got the chains, there's still 90% of the work to be done. So we realized that very early on, and we set out to build not just the blockchain of the platform, but the full stack, so you don't have to rebuild things again and again from one project to another.
00:04:39.120 - 00:05:41.950, Speaker A: But instead you can use the components on Flido. And we are multiregion, we're multi cloud, and we have done, when you do multiregion, multi cloud, the hardest part is to connect them seamlessly on the networking layer. So we've done the hard work of doing the networking to make sure when you have a node that runs on Amazon, another node that runs on Azure, they can talk to each other. All the networking rules is taken care of by the platform. You don't have to worry about doing firewalls, doing routing, all that, the platform takes care of that for you. And as of today, we support Amazon and Azure. Very soon we're going to support on Prem, which means you can have another node that runs locally in your own data center.
00:05:41.950 - 00:06:25.194, Speaker A: Some other nodes runs in Amazon, other nodes running Azure, Amazon and Azure. Between the two of them, they are about 70% of the enterprise cloud market. So we have very good coverage. But there's also very highly regulated industries where they don't want to run anything other than their own data centers. So supporting on prem deployment is critical. And again, because of our networking layer, we make sure you don't have to worry about any of that. It's very important that customers feel safe when they run their nodes in our environment.
00:06:25.194 - 00:07:37.906, Speaker A: So we make sure all of their nodes are protected from each other. So networking with blockchain is P to P, right? So you need to make sure, even though the ownership of nodes are different, they can talk to each other within the virtual network, but they can talk to any other nodes in other environments with other blockchain instances. So we have done the work to do isolation through virtual networking technologies and techniques. So one blockchain instance may be running nodes for one set of enterprises, another instance on Fido is running for another set of consortiums. And they can talk to each other. There's no data exchange across the instances. And again, if you choose to not trust Clido to some of the sensitive materials, like the keys, the signing keys and your logs, you can choose to keep those in your own data centers.
00:07:37.906 - 00:08:37.034, Speaker A: And we have private connectivity to make sure that when we need to sign something, we use your keys to sign them and then submit it to the node back into the network. And we also have private pipes, so you can get backups, you can get logs and metrics, that's all built into the system. The enterprise system is not going to be complete without an ichart block diagram, so here it is. So from the very bottom we've got the very foundational layers that includes your identities. Again, most of the protocols we get from open source identities is just individual key pairs. They don't really mean anything. And this is by design, right? Everybody loves the pseudonymity of Ethereum and bitcoin, but in enterprises it's a kind of different world.
00:08:37.034 - 00:09:50.350, Speaker A: They want to know who you are, who is behind this particular key. So identity in this context is you've got a key and who's owning it. And do you have a way to tie that cryptographically so there's no deny that they sign it for smart contracts when you deploy it? Anybody can deploy smart contracts in Ethereum, that's fine, but how do you make sure that when I with it, I'm guaranteed the bytecode behind this contract is compiled from a source code that we have all agreed on. We don't anybody to tweak it and add either a security host to it or have attack vectors. So being able to verify smart contract according to the agreed upon business logic, that's critical. And blockchain is very difficult to find information within. It's really good for putting something in there and that never change.
00:09:50.350 - 00:10:51.054, Speaker A: But to discover information format is quite difficult. So we've done the work to build index all the transaction information to a separate database, so it's much easier to query. Next layer is operating things from day to day. Again, we partner with Microsoft on Azure and Amazon on AWS to make sure as far as files it's highly available and you have multiple copies of it. Next layer is the foundational pieces to guarantee security. So firewalling across the organizations and operating your nodes in a secure environment. And the next layer is the pieces that you want to build within your applications.
00:10:51.054 - 00:11:46.162, Speaker A: In terms of how do I hide my identities from one transaction to another so nobody can analyze my trading patterns by using HD wallet for example. And there's a large number of repeatable patterns in terms of building a good decentralized application. So those are all captured in the platform. I'll show you some of it in the demo. So a node to most public chains is just a node. I have a guest downloaded on my computer run it, and that's my node. In the enterprise context, a node is just one piece of a secure unit that manages your data and manages your transactions.
00:11:46.162 - 00:12:40.870, Speaker A: So we build a lot of features around the node itself. So this is what a node looks like in Kaleido, and that's just the protocol itself. So again, materials, as far as keys and ledgers, they are always encrypted. And when they are saved on disk, unless you have the decryption key, it's just gibberish to any third party. Private transactions. I don't know if you guys know Quorum, which is a fork of gas that supports private transactions for enterprise usage. Private transaction manager runs alongside gas itself as another node, so you can run P to P transactions without having to disclose any information to the rest of the network.
00:12:40.870 - 00:13:35.266, Speaker A: We have APIs to operate your node as an enterprise piece of software. So obviously you want to do periodical backup. So if the node, for whatever reason, goes away, you can recover from certain states and log management. So you can do analysis on the logs for patterns, for analytics, or for diagnosing purposes, streaming of events. And then as far as sending stuff to it, we have created very friendly to enterprise developers of submitting transactions, not through web three. Web three is great, but it's also kind of a unique programming paradigm, and it's hard to grasp. You have to do rop encoding, you have to do nouns management.
00:13:35.266 - 00:14:23.842, Speaker A: It's all kind of gnarly, right? So we created rest APIs that hides all that for you because we understand the underlying bits and pieces. We gave you a really simple, easy to use rest interface, so you don't have to worry about announce management and encoding. You stand in JSON and you forget about it. And then on the other side, for publishing events, we have top based streaming. So when you want to listen on events, you just hook up your websockets and listen to json payloads coming out of the system. So again, with this layer, it becomes very friendly to enterprise developers that has a background of building web applications or mobile applications. They know JSON, they know rest, and they know websocket.
00:14:23.842 - 00:15:22.678, Speaker A: They don't have to learn web three. And finally, for managing these nodes, we have internal APIs, so we can orchestrate how to add a node to an existing system so it can set up its own identity, do the voting so it can join the validator set and all that. So that's all possible. So I think this is not unique to ethereum, but every blockchain node is unique. So it's almost impossible to set up traditional high availability because as far as I know, no blockchain nodes are stateless. They all have lots of state, they all have unique identities. So how do you do ha in the traditional sense, so that you can spray your transactions across multiple nodes.
00:15:22.678 - 00:16:24.510, Speaker A: So if one dies, you don't lose the ability to send transactions. So we recommend to our customers to run multiple nodes to achieve this. But then you don't have ha, you don't have disaster recovery unless you provision them across availability zones. So availability zones is concept in cloud that it's basically one data center, that's another data center that are independently operated. So if any disaster happens to one, workloads are automatically rescheduled to the other. So within our system, if you have three nodes, for example, then we automatically provision them across different availability zones so they don't get provisioned in the same place. So if one zone goes offline, you lose all the nodes.
00:16:24.510 - 00:18:14.922, Speaker A: So key management, this is your identity, this is what signs your transaction. So obviously enterprises care about their keys very much and they all want to know where do the keys exist, how are they protected? So Ethereum uses file based key and they can be encrypted, but it's not easy to fully protect the keys and keep all the sensitive material completely off the node. So what we do is we allow an external signing service such as external encrypting service such as AWS key management service to have a master key that we use to encrypt the password of the private key, so that when we need to use the private key, we decrypt it from inside the node. And the decrypted key only exists in memory, it never exists on disk, so it's always protected on disk. And because every decryption has to go through the service to your master key management service, you know that if a request to decrypt is coming from an unknown source, that's a suspicious attack. You can always trust a request coming from Fido, but otherwise you can have assurance that nobody can attack you. Switching gears to developers.
00:18:14.922 - 00:19:11.010, Speaker A: So we talked a lot about operating nodes and necessary nodes. So what about developers that need to build applications against them? So first of all, we are completely API driven. Anything you do in the console in the UI you can do through APIs. So that's very friendly to developers and it ops people. All of our APIs are documented, fully documented. Again, APIs you can use to enlist and operate the nodes, but also send the transactions with them. Here's a little details of how we built the transaction management system and expose that through rest APIs.
00:19:11.010 - 00:20:08.514, Speaker A: So these are human nodes, those are web three interfaces. You can definitely call them through back clients like web three J, web three Js. Those are great. But then you have to understand nouns, you have to understand rop encoding, all that stuff. If you don't want to bother with any of that, you can use our rest gateway, which uses Kafka to make sure one if you have a very high rate of submitting them. But over here we can handle 15 transactions per second, right? What if you have 1000 seconds to submit and there's a spike in the workload? So we use kafka to buffer that, and then we drip feed on this side to make sure we don't overrun the nodes. And because of Kafka, it's also guaranteed the order is not altered.
00:20:08.514 - 00:21:55.750, Speaker A: So whatever comes in first is queued there, and then they come into the node accordingly. On the other side, if you want to listen to events again, you can submit to the nodes directly, or you can use our event interface and hook up the websocket notifications to lambda functions in AWS, or use WebSocket to connect to your clients. I went through that really quickly so that we can leave some time for demo or actually process like purchase, like application form relaunches. And as everyone we went through submitted for that. And so because this is a business platform, we want to start with the highest level of concepts, which is a consortium. So imagine a bunch of business organizations come together. They want to create enterprise instance of Ethereum.
00:21:55.750 - 00:22:50.890, Speaker A: So they start with defining the consortium. Let's say this is global trade, that's the consortium. And my home region is going to be Ohio, because the company that founded this consortium is based in the US. If it's based in one of the european countries, you can pick Frankfurt. Because we're multi region, you can select other regions to allow your member organizations to own their nodes. So let's say we are a truly global consortium. We have members in Europe, in Australia, in Asia, and finally west coast.
00:22:50.890 - 00:23:33.190, Speaker A: So we're selecting all of these regions as available to deploy your nodes. Now we're going to create environments. Environments is instances, blockchains. A consortium can own one environment for Dev another environment for staging, another environment for production. Let's say this is going to be dev and you can pick what is the main region to capture the metadata about this environment. So that's going to be saved in us. So we support three types of protocols in Ethereum.
00:23:33.190 - 00:24:06.814, Speaker A: Guess this is what's running on Rinkbeat. With Poa forum you can take Ibsp or raft. And finally, our newest addition is Pentheon, which is a Java based implementation by consensus. And you can get poa or Ibt. For this one we're going to use raft. All right, so let's add some node. This is just an empty definition of a blockchain.
00:24:06.814 - 00:25:06.322, Speaker A: So now we have to define some parameters, ten second block, stuff like that. So now let's add some nodes. Node questions show you. For every instance of the blockchain we have a system monitor that we hang our block explorer off of. And this is the note that we just provisioned for ourselves. And because this is a consortium, you can invite other nations to join. You can say we're going to invite Citibank, we're going to invite Mersk as the shipper.
00:25:06.322 - 00:25:45.780, Speaker A: So they will get an invitation email, and then when they join they will see the environments and the nodes you have provisioned and they can provision their own environments and their own nodes. So jointly you're all administering this consortium and the resources within it. So the mantra node has started. Note one is starting. Note one has started too. So let's add another one. So again, this is all very simple and very fast.
00:25:45.780 - 00:26:45.030, Speaker A: Within a few clicks, you got yourself an ethereum blockchain. Once you have any nodes online, you can now connect to it. So there are different ways you can talk to the node. As I said, you can use web three APIs if you like it. And all of our nodes are protected by very strong credentials. So you have to pass in the credentials that are generated with strong remnants and we don't save them, we use the salted hash to validate them, but you have to save it yourself so you don't have to trust Kaido to maintain your credentials. So through this URL we have provisioned a node and then set up a URL dedicated to this node.
00:26:45.030 - 00:28:00.186, Speaker A: Basically you can get attached to it's okay, like voice. All right, sorry. But this is the URL that we defined uniquely for this node. So all the DNS rules are automatically set up so your nodes have a unique URL to it. The other way to connect to your node is through our rest gateway, which is the right window. So it looks like this. Let's just try to deploy a smart contract.
00:28:00.186 - 00:29:24.370, Speaker A: So again, all the cost behind this are rest URLs. If you deploy, it's submitted, and we want to make it work really well with rest paradigms. So because deploying a transaction or deploying a smart contract, so many transactions can take time, we design it so that you get a confirmation first and then you can check the status later. Now that's been deployed successfully, and we've got the address here, you can use it to call smart contract. So this is the contract that we just deployed. And from here you can view all the interfaces that we have generated under the COVID So again, to call it, you just need to use the very easy to use rest APIs. And we take care of both the encoding from submitting them, but also encoding on the reply.
00:29:24.370 - 00:30:04.630, Speaker A: So 12345 is already decoded automatically for you. So this is just one small sneak peek into what Collido offers you. Everybody can sign up for free using our starter plan, and we have great documentation. One thing I like to mention, the work we've done with the chainlink community is we made it very easy. So Kaleido's mission is to make everything easy. I just showed you how we made setting up a blockchain based on Ethereum easy. So now we can do easy button on chainlink.
00:30:04.630 - 00:30:53.330, Speaker A: So you go to the marketplace, you say, I want to use Chainlink on my collidal environment. So you pick that, you say, I'm going to use it in my global trade consortium in spend environment, and I'm the owner. Click that. In a few seconds you will see chain link in your environment and you can start using it. And what this does is it deploys a chainlink node that's associated to the Ethereum blockchain instance, and you can deploy multiple of them since Chainlink is decentralized. Oracle. Right, that's a great feature.
00:30:53.330 - 00:31:58.210, Speaker A: And different organizations can own different nodes. They're all connected together as the same network, and they can submit jobs through their own nodes. So for every chain deployment, we generate unique username and password so you can access the UI. So this is a private deployment of Chainlink that's attached to the Ethereum instance that we just saw. Okay, so I hope you got a sense of how plano makes everything easy. And again, this is probably one 50th of what we offer. You're welcome to explore the platform yourself and sign up for a free trial.
00:31:58.210 - 00:31:58.820, Speaker A: Thank you.
