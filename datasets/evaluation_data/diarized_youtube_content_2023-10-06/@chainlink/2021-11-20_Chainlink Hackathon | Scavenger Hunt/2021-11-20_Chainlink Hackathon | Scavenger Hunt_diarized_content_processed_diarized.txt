00:00:06.270 - 00:00:44.670, Speaker A: You. Hello, hello, welcome, welcome. Hopefully we can hear me here. We're going to get started in just a couple of minutes. Let me know in the comments here if you can hear me or if I'm super silent. That would be unil if I was super silent here you, it's perfect. Welcome.
00:00:44.670 - 00:03:08.926, Speaker A: Going to give it just a few minutes here and then we're going to get started right ahead. Oh, this is going to be an amazing event. I am so excited. How are you all doing today, by the way, while we're waiting here, how are we doing? Excellent. Glad to hear people are doing well. Excellent. Thanks for the patience, everybody.
00:03:08.926 - 00:03:51.126, Speaker A: As people trickle in, also making sure that all of our githubs and stuff are good for this. We're going to be doing some coding. Surprise, surprise. We're going to be doing some very fun coding things here. Shock. Throw on the camera. Hello, hello, welcome.
00:03:51.126 - 00:04:16.270, Speaker A: Let me move my camera just a hair. Hello, hello, welcome. Love from all over the planet. Excellent, excellent, excellent, excellent. Where do I get my energy from? I get it from doing these. I get it from everything that we do here, get it from the community. I get it from this amazingness.
00:04:16.270 - 00:05:28.310, Speaker A: Welcome. How are we doing? A long little event for you guys here. And by a long little event, I mean we got a fun event here. It's as long or as short as you guys will make it. Actually, as everyone here makes it, the GitHub now and then we'll jump into it. So long as I actually made a GitHub, it looks like I didn't, which was partially intentional. I didn't want anybody seeing what we were working on ahead of time.
00:05:28.310 - 00:06:36.190, Speaker A: So just give me one more second, y'all, and then we're going to do it. Yeah. I realized I didn't have the GitHub up for this. I'm just trying to pull that up right now. A couple commits, a couple last minute commits here. I think we're good now. All right, cool.
00:06:36.190 - 00:07:14.120, Speaker A: All right, let's do this. All right. Welcome to the scavenger hunt, everybody. This is going to be an absolutely insane event because what we're doing here is we're giving you some code base and we're saying good luck, have fun, have at it, have a blast, have a ball. And it's going to be up to you. It's going to be up to everybody here. It's going to be up to the contestants to take these clues and take this challenge that we give you and find the NFTs, find the clues, solve the puzzles.
00:07:14.120 - 00:07:39.664, Speaker A: Let's switch over to the board here. Am I even set up right, let's get this up here. Switching over to the board here. Here is the GitHub we're going to be working out of. I'm going to post it. I should move my stuff out of the. Huh? Let's do that.
00:07:39.664 - 00:08:06.200, Speaker A: I'm going to post it to the chat here. Now, technically, now that I've posted it to chat, the race has already begun. But here's what you're going to be playing for, peeps. We have these five beautiful, wonderful Nfts that have been deployed to the rinkby chain to this address. Head over to rinkby ether scan. Let's pop it in here. Oh, here it is.
00:08:06.200 - 00:08:26.000, Speaker A: How lovely. Oh, look at that beautiful verified contract here. Look at that terrible formatting. I will fix that. But here's how it's played. There are five nFts. NFT zero can be won by calling attempt password with the correct password.
00:08:26.000 - 00:08:46.480, Speaker A: It has been revealed already what the password is. That's the only clue you get. NFT one can also be called one by calling attempt password with the correct password. It has also been revealed NFT two. So zero, one two. We're indexing with zero. Came to one by calling a temp password with the correct password.
00:08:46.480 - 00:09:17.488, Speaker A: And we have this wonderful hint here, which means nothing to most of you, which is exactly why I did that. Nft three, read the contract to win the NFT. NFt four, read the contract to learn how to win this NFt. And that's it. That's what we're doing here. So you have the next 2 hours or 3 hours or 1 hour or really however long it takes. I hope it doesn't take that long because I don't think I made them that hard.
00:09:17.488 - 00:09:31.444, Speaker A: I made them hard, but not that hard. But the race is off. That's really it. So, yeah, good luck. Have fun. That's it. That's it.
00:09:31.444 - 00:10:04.990, Speaker A: So what we can do now is let me pop over to Opensea. There are exactly five NFTs minted to Rinkbeat. And the reason I did rinkby, obviously was so that we could do opensea. Let me reshare my screen here so we'll know if someone has been successful. Because let me switch over to Rinkerbee. We'll know if people have been successful. We can obviously monitor this contract and check for transactions which nobody has done any yet.
00:10:04.990 - 00:10:42.892, Speaker A: Or we can just kind of refresh opensea here, right? Because this is the address here. But nothing has been minted, so it's just kind of blank right now. Right? It started out with zero, but if we look in the code of this contract. Is this good? We look in the code of this contract here, we can see what is this? There's a little minting thing. Oh, this is being minted on a fulfill. Oh, that looks like a chain link request. So attempt password gets fulfilled with a minting happening.
00:10:42.892 - 00:11:13.844, Speaker A: And then whoever successfully called it gets minted that NFT. Now this is on rinkby, so a few of you might be going, ah, Patrick, what are you rinkby test that. I'm here to will. I will deploy this to Polygon afterwards. I didn't want you guys having to spend any actual money to do this fun little challenge here. So if you actually are successful here, we will mint them on Polygon mainnet for you and send you the actual NFTs here. That's it.
00:11:13.844 - 00:11:39.470, Speaker A: So there are five NFts? There are five NFTs and it is up to you to solve them. If you have been going to our workshops, if you had been paying attention, this should be a slam dunk because we've taught you, we've given you the skills, or hopefully we've given you the skills. And if we haven't, that's okay. You can always go back and go back to some of our videos. You can go back to some of our workshops and learn what we have here. Right. So a couple of them.
00:11:39.470 - 00:12:05.380, Speaker A: The first two, you had to be paying attention during the hackathon. That's really all I could say. You had to be paying attention during the hackathon. That's all I'm going to say. Number NFT two, if you decode that little hint, maybe that was a hint. That was too big of a hint already. That will pretty much give you how to do that one for NFT three and four.
00:12:05.380 - 00:12:30.092, Speaker A: Those ones are really just totally on chain challenges. Those ones you can really get just by reading the contracts and going to town there. So that's what's going on. So for those who are just joining, let me repost this in the chat here. And I'm going to update this. I'm going to update this in a second. Yes.
00:12:30.092 - 00:13:04.810, Speaker A: For those who just jumped in, who just came, we have this repo here. Time is ticking down. There are five NFTs to win in the next couple of hours, right? All the clues are in that repo and in the contracts. Every NFT that you win, we will mint you it on a real chain like Polygon and send it to you. And that's what we're doing. So this is meant to be a fun challenge to challenge you to see what your skills are to get these right, to solve the clues, to solve the puzzles. What crazy puzzles have we done here? And that's it.
00:13:04.810 - 00:13:56.200, Speaker A: Yeah. Any questions or one people to win all five? Yeah, one person could totally win all five. And so while we're waiting here, while we're chatting here, are there any questions? I mean, that's really it. I think the plan is for us to kind of hang out for the time being and see what's up and answer questions or. Yeah, answer questions, do whatever kind of hang out. I kind of want to just be monitoring these as well. A part of me thinks it'd be cool to just have like a timer up here, right? Oh, I see a bunch of people attempting passwords already.
00:13:56.200 - 00:14:08.220, Speaker A: Oh my goodness. Hold on, hold on. All you guys are so fast. This is so cool. Okay, hold on, hold on. Wait, let me switch, let me switch to the stream. Okay, you see this? We already have people attempting passwords.
00:14:08.220 - 00:14:26.656, Speaker A: If they're failing though, why are they failing? What's going on? Wow. I've been talking for like five minutes about this and people are already getting after it. That's what's up. I absolutely love seeing this. So we already have people doing this. We already. People attempting password.
00:14:26.656 - 00:14:48.408, Speaker A: We have four attempted passwords. It looks like it's from two different people. That's what's up. That's what I like to see. So we have a couple of people already attempting passwords here. Great. Are there any questions here? I like to think this is pretty straightforward, but I could be wrong.
00:14:48.408 - 00:15:07.872, Speaker A: Maybe this is crazy hard. Maybe people are like, Patrick, I know you're off your rock or a little bit, but this is way over the top. Yeah. Any questions? Is it better to develop on a Mac OS? Okay. We can also do normal questions or we can also do non scavenger hunt related questions. Absolutely. So great question.
00:15:07.872 - 00:15:47.308, Speaker A: Here we have, is it better to deploy to develop on Mac ten? I found out my MacBook Pro is too old and doesn't support node. But I'm not sure if I should go with Windows Ten or buy a new MacBook pro. It's really up to you, honestly. It's totally up to you. I personally am a fan of Linux like development environments. So for example, Mac Linux. I'm not a big fan of Windows, but if you don't want to spend the dough on a new Mac, you can absolutely be 100% successful on a windows ten.
00:15:47.308 - 00:16:13.750, Speaker A: Absolutely. So it's really up to you. Good question. Is that approved function unprotected? I don't know. I forget. Or maybe I don't forget. What are you going to do with that information? Yeah, feel free to ask me questions about the scavenger hunt here or anything else.
00:16:13.750 - 00:17:08.370, Speaker A: Let's see, what do you have going on? Do we have more people attempting passwords? We have more people attempting passwords. Oh, we got a couple more people attempting passwords. That's what I'm talking it about. What does s password two mean? Great question. Great question. I won't answer that one. Sorry.
00:17:08.370 - 00:17:38.750, Speaker A: This is excellent. I'm so happy this is happening. It. So we're off the race. We got a couple people who are indeed trying to do some things here. Right? So we're seeing different people. The thing that I really like here is we're seeing different people actually do transactions and stuff, which is great.
00:17:38.750 - 00:18:24.940, Speaker A: So approve is actually an ERC 721 transaction function and that's why it's unprotected because this is an NFT contract. So anybody can actually call the approved function on their. It's like, it's kind of like a factory, if you will, which is really cool. I seem to have lost the owner of this contract. Let me. How can we take part in hackathon? Go to hack chain link. You can absolutely still sign up.
00:18:24.940 - 00:19:15.994, Speaker A: Go to hack chain link it. Sign up. For those of you who are jumping on here, we're doing a scavenger hunt right now. That's what's going on. That's it. We've got a whole bunch of clues in the GitHub link posted in the chat here. Just reposted it and yeah, for the next however long it takes.
00:19:15.994 - 00:20:22.020, Speaker A: Everybody here, this is where I can sit back and relax and let y'all do the work here. But again, we are going to give out actual NFTs to the people who are successful with this challenge here. So going to be a lot of fun here. Really excited to see how many people can actually clutch it out, if you will. That's what I'm excited for. What are all these random weird variables and stuff? What's going on? What's going on with that? Yeah, item password seed. It says transfer event for me.
00:20:22.020 - 00:20:48.860, Speaker A: Well, let's find out. Time for me to pull up. Let's see. Do we have our first winner already? Oh my gosh, that'd be awesome. Let's go to transactions here. Let's switch my screen to the stream and let's go over to opensea let's do a quick refresh. I see no items to display here.
00:20:48.860 - 00:21:16.082, Speaker A: I see some attempted passwords. I see a transfer. Looks like this one failed. It says transfer event for me. Attempted password. Yes. So attempted password is an event that is emitted when you attempt a password is not what happens when you are successful with what you're doing here.
00:21:16.082 - 00:21:29.686, Speaker A: Right. Because if we go to contract again, we go to read contract. We can go see like owner of right. And we can see owner of Zero. Owner of one. Oh, wait. Oh, it looks like there is an owner of zero.
00:21:29.686 - 00:21:58.522, Speaker A: Looks like somebody did win the wrong nft here before. Oh, it looks like somebody did win something. Okay, hold on. Let's refresh the metadata. Hold on, hold on. Looks like we got a winner here. We have our first winner.
00:21:58.522 - 00:22:22.710, Speaker A: Once Opensea decides it wants to update its metadata. Owner of Zero. Whoever this person is, congratulations, you are the first winner. You have won zero. That's me. Whoa. All right, so it looks like you did it after all.
00:22:22.710 - 00:22:54.194, Speaker A: And then Opensea is just being slow here. Come on, Openc. Came on, Cameron. Yes. All right, so this was zero. Right? Would you like to reveal how you did it or would you like me to reveal for you? We have our first winner, Opensea. Why are not you updating? Right.
00:22:54.194 - 00:23:20.794, Speaker A: And we can even go to, we'll go to token Uri of Zero here and we'll see what this NFT looks like. So we'll copy this over here. Oops. Got to grab the rest of it. So this is the NFT data here. We have it hosted on IPFs here. So this is the NFT that they just won.
00:23:20.794 - 00:23:38.122, Speaker A: Congratulations. Excellent day. Openc just doesn't want to update. That's fine. It'll update later. Okay, so let's see. Did they reveal what are some quick guides to get spun up on winter? Password was attempt password.
00:23:38.122 - 00:24:25.358, Speaker A: Nope, that was definitely not the password. Adjacent parser just flew over my house and then checked the script. All right, what they did was in the tests here and in the scripts. I believe if you looked at the unit tests, the reason I put this in is because this should be one of the first things that you do as an engineer when you're looking at other people's contracts. And I want to put it on me real quick. When you're looking at other people's contracts, to really understand the functionality, one of the first things you should always do is go right to the tests. Because if somebody wrote effective tests, those tests should tell you everything about the contract and everything about what the contract does.
00:24:25.358 - 00:24:54.086, Speaker A: Should be encapsulated in the test. Now, granted, I didn't put all the answers to all the clues in the test here, but I did put the first clue in the test here. So if you scroll down, in order for us to test it, we tested it with this freebie password. So likely if we looked at these transactions here. Hold on. I wonder if we scroll down, we decode. Exactly.
00:24:54.086 - 00:25:07.980, Speaker A: If we decoded Shivali. I'm so sorry. If I'm pronouncing it wrong. I'm not doing the stream here. Oh, my gosh. Sorry. Let me redo that.
00:25:07.980 - 00:25:52.860, Speaker A: Sorry. So, yeah, always go to the test. Always go to the test. And if in the unit test here, when we have this attempt password, I tested it with this freebie keyword here. And so what ended up happening was we made a chainlink API call through a chainlink node using this freebie as a parameter. And if we actually looking directly at Chevali's transaction here, we do indeed see they had password with freebie as the data object. So what happened was the chainlink node, it made the call, it returned with.
00:25:52.860 - 00:26:23.822, Speaker A: Now I'm all over the place. It returned with the fulfill function, it returned a zero. And so it set the token being taken to true, and then it minted shival the NFT. So awesome work again. Let's see if it's finally updated in openc. There we go. Yeah, now it's updated.
00:26:23.822 - 00:26:36.950, Speaker A: Opensea. All right, excellent job once again and again. Going to the tests first is just one of the best things to do here to really understand the functionality here. Great work. That was awesome. That's right pronunciation. Thanks.
00:26:36.950 - 00:26:50.880, Speaker A: Great work. Alamau, I'm looking at the test. Yes. Test is the first place you want to look at. You want to look at the test for your starting point. So great job. Great.
00:26:50.880 - 00:27:24.440, Speaker A: That's great. So you got the freebie, right? Because I have it as freebie in the unit test there. So one down, four to go. Okay. And I might have to give some hints as we get farther along, but I'm also realizing I don't think I set one of them correctly. And now I'm like, a little sad if I messed one up. So I'm actually going to double check to make sure I didn't mess it up here and then let me format the readme while we're doing this.
00:27:24.440 - 00:27:48.462, Speaker A: Anyone seen one of the Sam at paradigm? He made some really cool. He made like a pinball game. I kind of wanted to do something like that, but this isn't as intense I feel like that would have been like a two day, a week long excursion where this is like, we're supposed to get them in, like, a couple of hours and tried freebie again. So it's gone. Yes. So freebie is gone. Exactly.
00:27:48.462 - 00:28:08.280, Speaker A: Because if you looked in the code, there was, like, a token taken mapping. And that's token ID zero. And it's taken. So if you looked at the require statement, it says, know if it's been taken, you can't take it again. So congratulations again to shivali for getting the first one. Nice work. That's awesome.
00:28:08.280 - 00:28:31.934, Speaker A: Four more. Four more. Here, let me update the readme. All right, cool. I formatted the readme a little bit nicer now. Or hopefully formatted a little nicer now. Yeah.
00:28:31.934 - 00:28:50.322, Speaker A: Okay. Now it's formatted a little bit nicer. Excellent, excellent, excellent, excellent, excellent. Another day. Oh, some people doing challenge 14. Oh, yes, challenge four. I love that.
00:28:50.322 - 00:29:00.120, Speaker A: Challenge four. Oh, I'm not going to give any hint. Some people are doing challenge four. Let me pop over to the stream real quick. Call. People are doing challenge four. I wonder if any of them are successful here.
00:29:00.120 - 00:29:30.320, Speaker A: Well, it looks like Opensea says no, but maybe they are successful. Challenge four. And by challenge four, I mean challenge four because I clearly can't spell. That should be challenge four. Why? The readme says deploy to rinkby, but the config is set to COVID. It's got both. You need either one.
00:29:30.320 - 00:29:59.760, Speaker A: Oh, wait. Do I have the quick start? I do have the quick deploy to rank B. I should update that, too. Let me do that, too. Sorry. Good call. Well, now it says.
00:29:59.760 - 00:30:34.230, Speaker A: Now it says rink B. Cool. And I think I've met messed up challenge three. So don't do challenge three yet. I think I messed that up. I got to fix something on challenge three. Challenge four.
00:30:34.230 - 00:30:48.098, Speaker A: A couple more attempted passwords here. Let's see. What does openc say? Okay. Opensea still says nothing. Pop into the contract. Here we go to owner of see. Has anyone got one yet? Nope.
00:30:48.098 - 00:31:03.860, Speaker A: Nobody got one. Nobody has two. Nobody has three. Nobody has four, nobody has five. I'm not able to play. The Remi is also pointing to a decentralized raffle. Well, you're right.
00:31:03.860 - 00:31:34.458, Speaker A: Yes. Let me update that, too. As you can tell, this was a little bit spending a lot of time trying to make the challenges fun, and I spent a little less time on the readme call not being able to deploy. So the thing with this is that you don't need to deploy anything. Well, you don't need to deploy anything. From this repo. That's more.
00:31:34.458 - 00:32:00.654, Speaker A: If you want to, if you want to deploy something, it's more for fun. There. Updated. So it's the scavenger hunt now. Hopefully that's better, but awesome. We have a couple more people who are attempting different transactions here. We have attempted password.
00:32:00.654 - 00:34:43.942, Speaker A: Attempted password. Give me 1 minute here. Let me fix challenge three. So I'll still be paying attention to questions, but let me fix challenge three real quick. I will be right back. All right. Sorry, I messed up challenge three, so apologies.
00:34:43.942 - 00:35:15.974, Speaker A: Challenge three on this one won't work. I'm currently redeploying and I will fix challenge three. It'll just be at a different address, sadly. Sorry, I was rushing a little bit too much to get this out. What's going on with s variable? Great question. What's going on with this variable? What's going on? And I got the fire alarm going on here. I should probably check that out.
00:35:15.974 - 00:35:51.682, Speaker A: 1 second they're cooking and food's done. That sounds about right. All right, so I'm only seeing one still completed now, challenge three, like I said, is currently bunked. Working on fixing it. So we'll get that fixed. I'm going to deploy a new contract for it's going to be scavenger hunt two. Now, I know.
00:35:51.682 - 00:36:49.780, Speaker A: Major bummer. Such is life. Such is life. Here's. And it'll probably give you all a hint as to what challenge three is about, so use that to your advantage. Whoops. Challenge three only works.
00:36:49.780 - 00:37:28.398, Speaker A: Three it. All right. Challenge three is up and ready. Yes. Let me show you what we've done. What I updated again, apologies. Thanks for calling out some of those there.
00:37:28.398 - 00:37:40.466, Speaker A: So whoops. Sorry. Challenge three only works with this address. So now we have two addresses here. Right. So we have the main one. The main scavenger hunt addresses which people have been working on and somebody has solved.
00:37:40.466 - 00:38:08.270, Speaker A: We also have this second one. It's literally just a duplicate. However, this one has challenge three set up properly. That's the only difference. Yes. This is clearly, obviously a clue, this little set dow thing here. If you paid attention to the governance, and this is already a hint since we're 40 minutes in, if you paid attention to the governance workshop, that is the answer there for challenge three.
00:38:08.270 - 00:38:28.754, Speaker A: But yes, challenge three will only work on this contract. And so if you get it right on this one, great. But for the other ones, it only will count on our main one here. Right. We'll only count on this main one here. So remember, we have one person. Don't do challenge three.
00:38:28.754 - 00:38:49.050, Speaker A: On this one. Sorry, challenge three won't work on this one. Challenge three on this one will work. Yeah, you can see those again in the GitHub. I'll pop these in here again. For those of you who are just showing up, or for those of you who might have missed or been bouncing around, what we're doing right now is we're doing a scavenger hunt. We have this repository with a whole bunch of clues.
00:38:49.050 - 00:39:31.626, Speaker A: Challenge three, there's two contracts, two NFT contracts to work off of here and here. Four of them are in this first contract. One is in the second contract because I screwed something up. But such is life. And yeah, at the end of this little challenge here, whoever successfully captured these NFTs will win a polygon edition of these NFTs, will win these actual NFTs. Right now we have one winner so far who did what I think every engineer should do, especially in the smart contract world, is go into the test folder and read the tests. Right, because the tests are going to tell you what the smart contract should do.
00:39:31.626 - 00:40:24.154, Speaker A: Now, I only put one of them in the tests here, but basically we call this function called attempt password, which kicked off a chainlink request to a chainlink node. Chainlink node returned with a value from the chainlink node, giving, I think, Chevali, if I'm pronouncing their name right, minting them. The first NFT, which we can indeed see right here. So right now, only one has been minted so far across these two contracts here. It looks like somebody is trying for a new, it looks like trying challenge three. And yeah, my spelling was a little bit off. It was challenge in some of them, but yeah, dang, I missed that one.
00:40:24.154 - 00:40:46.738, Speaker A: Was saving it for later. So we're just about 40 minutes in at this point. I know I started a little bit late. We have one NFT successfully captured and let's see if you can get the rest. Let's see if you can get the rest. I'm saving it for later. So is it that now the password has changed because the first password was accepted? No.
00:40:46.738 - 00:41:19.338, Speaker A: So each password is independent. Attempt password will take basically three different passwords and that's it. So three different passwords. How can we look inside that chain link node? No, because then you would know how to get the answers. What do you know? That's where all the magic is happening. All right, so let's go back to the stream here. So it looks like we have.
00:41:19.338 - 00:41:30.510, Speaker A: Somebody just did challenge three here. Let's see what they did. Right. Let's pop into it. Aha. So they called challenge three, but they ran into this issue. It says only the dow can do this.
00:41:30.510 - 00:41:41.282, Speaker A: Right. If we go back to this contracts functions, we look up challenge three. Hopefully. I spelled challenge three right. Okay. I spelled challenge three. I spelled challenge four.
00:41:41.282 - 00:41:56.146, Speaker A: Whoops. Challenge three. It has this only dow modifier, right. Modifier only dow is challenge three. Bytecode, maybe not. We have this modifier only dow. Require message sender is sdao.
00:41:56.146 - 00:42:16.480, Speaker A: Only dow can do this. So I know I have this set for 3 hours. I'm kind of thinking of having it be 2 hours. By the way, if people here are like, no, let me go for the whole three. I'm happy to break a little bit early. It's up to whatever everybody here wants to do. Happy to break a little bit early and tell you all the solutions here.
00:42:16.480 - 00:42:52.534, Speaker A: Put my address instead of the dow, right? Maybe. Well, so if you read the code. Well, what's the code say? Right? What's the code say? Who? I'm not gonna, I'm not gonna say anymore though, because I'm gonna, that's, that might give, no way I'm going to hack this. I think you can. This is very hackable. This is very hackable. Well, they're not even hackable, right? They're just not even so much hackable.
00:42:52.534 - 00:43:31.506, Speaker A: It's more that. So why are these failing? Why do we think these are failing? I got a hint for you, for all the people who are making these, just because it looks like a lot of people are making them. So if we go to the contract again, we read the contract, let's scroll down. So attempt password, right? This is our attempt password function. What's it doing? What's it doing? What is it doing? So it's doing a chain link request, right? We're building a chain link request request that add password, password request Id, set chainlink request. Send chainlink request. So we're sending a chain link request.
00:43:31.506 - 00:44:16.966, Speaker A: What do you need to send a chain link request? What do you need to send a chain link request? Yes, challenge three is the new deployed contract address. Yes. So you can call challenge three on the new contract address. Sorry I screwed it up on the first one, but yeah. So what is this doing? So what does it need? If you want to send a chain link request to, what does this need? It needs some, needs some, needs some l, something, right. What does it need? If it's going to send a chain link request, you need an oracle. You're right.
00:44:16.966 - 00:44:30.114, Speaker A: You need oracle. The oracle address is actually right here. S oracle is the oracle address. So good. So we have the oracle address. We have the oracle. We don't need a key hash.
00:44:30.114 - 00:44:47.680, Speaker A: Actually it does need gas. Yes, it needs gas. What kind of gas? What kind of gas does it need? Boom. Yes, exactly. It needs a link token. Right. So this contract, in order for it to actually make any chain link requests it needs to be funded with link.
00:44:47.680 - 00:45:25.320, Speaker A: So the reason some of your passwords, so maybe people got them but they're just not working. Right because it was only funded with link for the first edition, right. For that freebie. Right. Also I know we're about halfway through here but if anybody is rolling out, please fill out the feedback form. Let us know if you thought this was a huge waste of time or a fun little challenge here. That way I'll know if it's a good use of time.
00:45:25.320 - 00:45:44.250, Speaker A: So yes, you need chainlink token in this contract. Okay, I refresh it. Looks like some people are actually starting to fund it now. Yes. So you've done a public service funding it. Okay, great. So now we have an attempt password going through.
00:45:44.250 - 00:46:12.182, Speaker A: Let's go even see it. Let's see what somebody did here. Decode the input data. What is this? What is this? Is this passcode? Where did they find that? Oh, is that a winner? Do we have a winner? Oh my goodness. What happens if I refresh? We have two winners. Oh my goodness. Let's get it.
00:46:12.182 - 00:46:49.314, Speaker A: Okay, so we have two items, I forget which one's which. I think this is the second one. All right, we have two items now. So somebody has successfully found the second nFt. Yes, congratulations. All right, who did it? Who got the second one? Who got the second one? Come on, it's obviously somebody here, right? While they show up, I'll explain what this one is. So Roan, CCIP, let me give you the feedback for this one.
00:46:49.314 - 00:47:27.020, Speaker A: So at the hackathon opening ceremony, right, and after we do our thing here, go back and watch that video. There was a brief like 22nd segment where I go, hey, here's a link, you'll need this later. And that was it. So be sure to pay attention to the hackathon opening ceremony because sometimes we drop little scavenger hunt clues in them. So there was a link in there and then actually let's even YouTube chain link opening ceremony. Let me even show you. Let me even show you what I'm talking about.
00:47:27.020 - 00:48:07.214, Speaker A: Yes. So what does it mean? So ignore Dow stuff in that first contract, only worry about Dow stuff in that second one. Sorry again, that was my mistake. The Dow stuff only applies for the second contract. So if you're reading the readme, there's a section that says like, whoops, that's what that's about. So in the hack on opening ceremony here, let me see if we can find it right here. Hey, here's a hint for something.
00:48:07.214 - 00:48:38.386, Speaker A: That's it. And if we go to this whole blockchain solidity GitHub smart contract, go to this link. What is this? Discussions 245. Let's go to discussions 245 in link. Hackathon scavenger hunt hint. So whole bunch of eyes on this whole bunch of upvotes, but only one person got it. Is the person who got it going to reveal themselves? Oh, that's so disappointing.
00:48:38.386 - 00:49:05.694, Speaker A: That was awesome. Oh, I'm so sad that they didn't reveal themselves. So the backstory to this is a couple of things. It's obviously CCIP and it's a callback to one of the developers working on it. So that's what that is. So CCIP being worked on, probably one of the most exciting updates that's going to happen to the chain link network. So we have two congratulations to whoever found it.
00:49:05.694 - 00:49:19.186, Speaker A: Hi. Hard to luck that second one was storming me. Yes. Okay. We did it. Frost Corelios. Remember that for intro from way back when? Excellent work.
00:49:19.186 - 00:49:34.498, Speaker A: Yes. All right, so you remember that from the opening ceremony? Yeah, from the intro way back when. Yes. That's why we dropped those little hints. So you have won yourself the second chainly hackathon scavenger hunt. Nft. Congratulations.
00:49:34.498 - 00:49:52.346, Speaker A: Excellent work. Awesome work. And so were you listening when I was like, oh, you got to fund it with link, or were you just kept trying to do a temp password and you were like, why is this not working? Team Corelius, excellent work. Super excited. Yes. So we have two. We have team Coralius.
00:49:52.346 - 00:50:26.310, Speaker A: I probably pronounced that wrong. And Shiv, let me scroll up so I pronounce that at least somewhat correct. Chevali Sharma. So I'm planning on sending the real NFTs to the same addresses. Let me know if you want me to send it to a different one. I know for me, I don't work on testnets with the same one as my main net one, so let me know if you want me to send it to a different one. So two of the five have been collected.
00:50:26.310 - 00:50:43.120, Speaker A: Oh, this is so exciting. Excellent work. So there are three more left. We're almost halfway done. Corey Alice. Oh, Corey Alice. That probably makes more sense.
00:50:43.120 - 00:51:01.622, Speaker A: All right, so people are starting to do challenge three, which again is on that second contract. Apologies. It's not in that first contract. I'm really excited for some of these little ones. Different, please. I will dm you. Okay, great.
00:51:01.622 - 00:51:20.060, Speaker A: Yeah, please DM me. Awesome. Let me know when you all are ready for a hint, by the way. So we're about halfway through. We have two of the three collected, which is awesome. I'm so excited that we have two of the three collected. I'm like, I'm so proud of you all, too.
00:51:20.060 - 00:51:35.214, Speaker A: We have somebody who jumped into the test, which is fantastic. We had somebody who paid attention to the opening ceremony and was like, wait, I remember something. I remember something. They jumped in. Oh, that's so excited. We have a couple of people still doing attempt passwords like a set method before. Yes.
00:51:35.214 - 00:51:50.914, Speaker A: Let's see what some of these attempts are. Let me go to the screen. So somebody tried password. Somebody thought I was going to set a password as password. I like the attempt. I love the attempt. Let's see, let's see what else other people did.
00:51:50.914 - 00:52:17.966, Speaker A: A couple of other, oh, we have some other password attempts that went through. Let's see what they did. Decode inpadetta. Oh, they popped in an address. Okay, I like that. Okay, so whoever did this, whoever popped this address in, you're onto something. You're onto something here, but not quite the person who put this in.
00:52:17.966 - 00:52:41.130, Speaker A: I hope you're listening because I'm going to give just you a hint. Okay. Just you a hint. In scavenger hunt Sol, there is this s password two. So that's your hint. And so the person who just did this address will probably be the only one who understands this clue. S password two is your clue.
00:52:41.130 - 00:53:05.050, Speaker A: S variable is not your clue. S password two is your clue. All right, so I'm going to give you all a little bit of a hint here. Okay, so nft zero has been collected. Nft one has been collected. Nft two your hint. Actually, I just gave this person a bit of a hint.
00:53:05.050 - 00:53:36.150, Speaker A: Oh, no, sorry. That's for four. Nft two. What was NFt two again? It, oh no, Nft two. Look at s password two. S password two is going to be if you can decipher the hint. Okay, look at figure out what s password two is or should be or whatever.
00:53:36.150 - 00:54:10.046, Speaker A: Obviously if we look at it on this contract, where is it? S password two. It's blank. So is the password blank or is there something else going on? So that's your hint there for NFT three, which again is on this second contract. Again, apologies there. Okay, we have some people trying out set Dow. You obviously can't set the Dow because it is an ownable function. However, only a Dow can call the function there.
00:54:10.046 - 00:54:34.310, Speaker A: Right. So if we go to challenge three, which hopefully I spell challenge three, it doesn't do anything except for literally just all it does is mint that NFT. Right. But the only thing is only the Dow can do this. So if you pay attention to the governance workshop or you understand how governance works, you can actually do this yourself. Right. So this is kind of one of the more skilled ones.
00:54:34.310 - 00:54:59.258, Speaker A: If somebody gets this, I'm going to be really impressed. I'm going to be really impressed. So that's the clue here. And then for the last one, nft four. This one is kind of almost like a pure solidity. So that's your clue here. If you just look at this, challenge four, and I know it should be challenge four, but it's challenge.
00:54:59.258 - 00:55:26.122, Speaker A: You should be able to solve this just looking at this and with some ingenuity, with your solidity. So that's your clue here. You don't really need to know anything else about this contract. You do need to know a little bit about s variable. And here's the thing. Whoever solves this one, pay attention to them because they can use their superpowers for evil. So that's the clue here.
00:55:26.122 - 00:55:53.700, Speaker A: Challenge four, which should be challenge four. If you solve this one, you have an evil superpower. So those are your tips here. I'm in string sol checking the converting UN 256 to its ASCII string. You might be a little in the weeds. There might be a little too in the weeds there. So we have two of the three here.
00:55:53.700 - 00:56:25.614, Speaker A: I'm super impressed. So, yeah, let me know in the comments here if you're like, hey, Patrick, I'm super lost, or hey, don't say anymore. I'm like, good. This is an event here where it's really up to you. If you all are super lost and have no idea what's going on and nobody's attempting anymore, we can stop early. But it looks like a couple of you are close. Actually, the person who did that attempt with that address was really close.
00:56:25.614 - 00:56:47.634, Speaker A: And actually it looks like somebody did something else recently, too. Let's see. This is the password person. I am super lost. Okay. Can you use hardhat console to interact with your smart contract on Testnet or only locally? You can do it on a testnet. So you would just do hardhat console network and then whatever network name.
00:56:47.634 - 00:57:14.060, Speaker A: So you can absolutely do that with any network? Yes, I'm super lost. Figured because it would probably require me deploying my own contract. Maybe, perhaps. Hello. Hello. Two minus one equals one, but I'm not sure where to put it. Oh, Tiffy, you're right there.
00:57:14.060 - 00:57:48.680, Speaker A: You're thinking about it the right way. So for those of you who are curious what I mean by that, without giving too much away, let's look at challenge four again here. Okay. Tippy goes, two minus one is one. What are you doing here? So let's look at challenge four, which again should be challenge four. So we have this bit where it just says, hey, if s variable is zero, mint me the NFT. Right.
00:57:48.680 - 00:58:29.220, Speaker A: But after we call this, it always gets set back to two, and two minus one is one. So how is two minus one always going to be one here? Good question. I'm a little lost, too, but still trying. Great. Since we're an hour be, we can be a little bit more liberal with clues unless somebody's like, no, Patrick, no, I'm so close. Don't give these other people a hint. If you're like that, let me know, too, because it sounds like it's time to start getting a little bit more liberal with the clues here.
00:58:29.220 - 00:58:55.626, Speaker A: I'm so excited that we have two down. Okay. Oh, we've got a bunch of people who just tried some stuff. Okay, so challenge three, like I said, challenge three is only on this second one. Okay? So if you're doing challenge three, it's only going to be on this one. Okay, so the people calling functions on this second address. You're correct.
00:58:55.626 - 00:59:09.806, Speaker A: If you call challenge three on this one, it's not going to do anything. I promise you. Do it as much you want. It's not going to do anything. Okay, so we have a couple more people attempting different passwords. Let's see what they're doing, and let's see if we can give some people a hint here. Okay.
00:59:09.806 - 00:59:38.954, Speaker A: If someone just did, just threw out a one that is definitely not the answer to the password. Let's see what this person did. Freebie. They tried freebie again. Obviously it's not going to do anything because somebody already got freebie was. No, not quite. This is good, though.
00:59:38.954 - 01:00:13.400, Speaker A: This is good. We have people thinking about it, thinking about things the right way. Can you check if challenge tree is set up correctly? Challenge three is only working on this contract. So in the GitHub, there's two addresses. So challenge three only works on this second address. So apologies, I messed that up a little bit there. So if you're calling challenge three, let me actually decode this.
01:00:13.400 - 01:00:34.410, Speaker A: Who's this? From challenge three. You could be right. No. Are you right? No. I think you're wrong on challenge three anyways. But yeah, for challenge three you got to use this other one. The second contract.
01:00:34.410 - 01:01:04.962, Speaker A: Don't tell them it's ABC. No, it makes sense what the passwords are. The one was for challenge four, not password. Outlaw love. What's going on here? How can I find out when there will be future events like this? Go to architectchain link and scroll down to developer communications. I will post this in the chat here and sign up for that developer email. It is just stuff for devs.
01:01:04.962 - 01:01:24.522, Speaker A: So if you're a dev that has stuff on it for you. So absolutely go there. Great question. All right, we're coming up on two minutes after the hour. Two minutes after the hour. We have a couple of people doing challenge four. Let's see what they did.
01:01:24.522 - 01:01:48.050, Speaker A: Let's see what's going on here. So decode input data so it looks like they have a different contract and then a winner. So let's see what this contract is. I don't know what this contract is or actually this looks like an externally owned account and this looks like nothing. Good try. Good try. Epic.
01:01:48.050 - 01:02:06.394, Speaker A: How can a smart contract set a variable for another one? Okay, I think it's time for a clue. Let me give you all a clue. We're going to do a clue for each one of these three. Okay. Each one of these three is going to have a clue. Remember, challenge three only works on this second one. Okay.
01:02:06.394 - 01:02:22.734, Speaker A: So we're going to give you a clue on this one first. Okay. I'm pretty sure. So no. So nobody's finished challenge four. So two, three and four, unless. Did they finish it while I'm talking here? No.
01:02:22.734 - 01:02:47.350, Speaker A: So two, three and four are still up for grabs. So let's do a first clue for challenge two. Your clue is this is a hex encoded clue. So this is a hex string which represents another string. So that's your clue. This is hex here. If you can decode this, you will get the clue.
01:02:47.350 - 01:03:03.340, Speaker A: You will get the clue here. Okay. All right, that's the clue there. Nft three. Let's give you the clue here. Nft three or challenge three. Remember, it only works on this second one.
01:03:03.340 - 01:04:20.610, Speaker A: All you have to do to win this one is call this challenge three from the dow. All right, so this is an only dow function. So if we go to read contract and we go to SdAo, there's this contract here which if we go here, it's a governance time lock. It looks like we do have some people doing some stuff on here. This is a dow and it's governance. Actually, let's see if anybody has I executor role, proposal, proposer role has roll. Actually, I don't think I gave you enough information on this.
01:04:20.610 - 01:04:42.250, Speaker A: Well, no, that's not true. You could figure it out. So I'll give you a better hint here. From this account. I believe it's this account. This is one of my. What is this? Oh, no, it's this account.
01:04:42.250 - 01:05:29.904, Speaker A: Let's give a little hint here. What do you say? Let me zoom out a little bit. If we look here, we see a couple of things created. We have a governance time lock and a governance governor contract. I will give you this address in the chat. So this governor contract, what you can do is you can make proposals to this contract. You can make proposals to this contract the same way we showed in that governance workshop.
01:05:29.904 - 01:05:54.300, Speaker A: So you can make proposals directly to this contract. You don't even need to code anything. You just need to kind of know how this works. And to make proposals and vote on those proposals, you need a token. So how do we get this token? So if we look here again, looks like we did create a governance token. I will even give you the governance token. Have fun with the munchkin.
01:05:54.300 - 01:06:31.108, Speaker A: So I'll give you the governance token as well. Now, obviously this is a governance token. But I want. How do I get the token so I can make votes and stuff? Well, maybe take a look at this contract and I'll even post the ether scan link here. So the ether scan link that I just posted, that is the governance token. Okay, so the way to beat lost my place. The way to beat challenge three, which again, only works on this second one here, is only a dow.
01:06:31.108 - 01:07:02.100, Speaker A: Only that specific dow can call this function. So the whole dow, you have to go through a governance process to call challenge three. So that is your hint for challenge three. And last one, challenge four. There's really not much for me to tell you, actually, for challenge four, challenge four is really like low level solidity stuff. The hint I will give you is reentrancy. And this is why I said, if you can pull this off, you have an evil superpower.
01:07:02.100 - 01:07:28.604, Speaker A: Re entrancey. And oracle manipulations are the two most common hacks we see in defi. Yeah, literally, we see oracle manipulation a lot more. And oracle manipulation is one of the reasons chainlink exists, is to prevent that. Right. So this is a reentrancy. You want to think reentrancy when you think this.
01:07:28.604 - 01:08:12.988, Speaker A: All right? And that probably gave it away, but this is like literally a perfect example of what reentrancy can do. So that is that. Now with those hints, are people thinking that they're better prepared or. I just confused you more? Let me know in the comments here. What are we thinking? Did I give you a good direction to go into, or are you like, I'm even more lost now? Patrick, you are out of your mind. You have lost it. What do we think here? What are we thinking? Streamyard takes like eight minutes to populate with comments here.
01:08:12.988 - 01:08:47.504, Speaker A: You were saying we could deploy a contract and have that contract do something to lower the s variable, maybe could be what I'm saying. I'll tell you this. Oftentimes when hackers use reentrancy attacks, they do launch their own contracts or they have some contract that they control or have influence over. So take that as you will. I'm still clocked in at work. I'll just observe. Blast.
01:08:47.504 - 01:09:11.550, Speaker A: Miles, I thought I made this late enough that people would be out of work. So, still clocked in at work. What else should I give for clues here? Challenge four. Can you check transactions? It doesn't give any error. Let's find out. Okay, we got a whole bunch of attempted passwords here. I want to read all these.
01:09:11.550 - 01:09:30.260, Speaker A: What do we have for attempted password here? Decode. No, that's wrong. How do I know it's wrong? Well, because I made all the challenges, that's how. Decode. No, that's wrong. It's the same thing. Another day, another breakdown.
01:09:30.260 - 01:10:24.844, Speaker A: No, that's also wrong. Challenge four. Okay, we have success here. To code input data, we could have a winner. See, the thing is, the thing is this function, how do I get back to it? This function, challenge four. Anybody can call it, but it's this if statement that needs to happen, right? So this just says, hey, if variable is zero, do what's in here so it won't give an error, but you won't get the token. So if I go to read contract, let's go to owner of two.
01:10:24.844 - 01:10:48.010, Speaker A: No, three, no, four. No. Right. Because it, it. Challenge four, right. Anybody can call this and be successful as long as they pass two addresses. The key here is this line.
01:10:48.010 - 01:11:25.252, Speaker A: Okay, we're calling another contract that we're passing, and we're calling its call me function. So you can just create a function called call me on another contract. And something that it does, something that this other contract does will make it so that we can get inside this if variable and mint that. Nft. A reentrancy. Yep, exactly. So this is your chance to be an evil hacker, but in the confines of not being evil, I decoded the hex code.
01:11:25.252 - 01:11:42.570, Speaker A: Excellent. You could share with the group, or you could keep it to yourself. Up to you. Up to you. Yeah, maybe if you want to share it, share it. Maybe I'll share it. I don't know.
01:11:42.570 - 01:12:16.470, Speaker A: Do I want to share it? I even forget what it was. Hex string to string. Now that I've talked a little bit more, what we think it. So for Victor, you shared it. Oh, I don't see it already shared it ten minutes ago, so. All right, well, it looks like a couple of people shared it. Let me double down on something there.
01:12:16.470 - 01:13:49.312, Speaker A: It was deployed spookily. Zach might have figured something out. Was deployed spookily? Yeah, it spookily is on another chain. Yes, it. It should have two transactions. Got to do more of these on the regular. It looks really fun.
01:13:49.312 - 01:14:50.450, Speaker A: Well, I hope you join us on the rest of these. You it spookily. Spookily. Some spooky things going on here. It contract on FTM scan isn't verified. That might have been intentional. I might have done that on purpose.
01:14:50.450 - 01:15:47.410, Speaker A: It looks like you all are coming around to it, though. And I had a different address posted, so apologies again, that contract address is now correct. It looks like one of my other transactions didn't go through, and I didn't bother to check to see if it did go through. So for those of you who are looking at that now, you can correctly get the thing, the password from that one. So I pretty much just gave it away there. Apologies. You could even, probably even just check the transaction that was just sent on it because it probably has the.
01:15:47.410 - 01:16:35.890, Speaker A: Yeah, that's your hint. Check the transactions there on that contract and you'll find it. I made two mistakes in my rush. Would you believe me if I told you that this is all I did today was make the scavenger hunt? Probably right. Or probably not. All right, so it's going to be any second now for someone to find that one, right? Because that one is like, we gave it away. We gave it away.
01:16:35.890 - 01:16:59.890, Speaker A: Looks like a lot of you have that address. I just made a transaction to it, and that transaction pretty much has the password. It. So let's see. Are people making transactions now? People jumping in. Okay, we have some attempted passwords. Let's see all.
01:16:59.890 - 01:17:27.360, Speaker A: No, that's not some. I think some people know. No, that's not it. Somebody definitely knows because they just posted it in chat. Are they doing it? Nope. Nope, they're not doing it. Frosty, eh, looks like Saj.
01:17:27.360 - 01:18:06.490, Speaker A: If I pronounce your name wrong, I'm sorry, looks like Saj knows what's up. But is he going to make the transaction, though? So you all figured it out though, but you guys are still not posting frosty, eh, hacker. Oh, remember? Why is this failing? Why are these failing? I'll give you a hint. There's nothing over here. I lost the contract. Lol. Here.
01:18:06.490 - 01:18:20.530, Speaker A: There's the contract. That's the scavenger hunt contract. I will not post the. Okay, Zach. Okay, Zach. All right, Zach. Zach might be onto something.
01:18:20.530 - 01:18:41.924, Speaker A: All right, so I know for a fact Zach and Saj, I'm sorry if I said your name wrong. Zach and Saj definitely have the answer here, but. Oh, no. What's going on? Oh. If I show this, am I going to give away the password? Nope. Looks like I'm not going to give away the password. About this one.
01:18:41.924 - 01:19:10.610, Speaker A: If I show this one, I'm going to give away the password. I might have given away the password there, but here's the thing. Is that one going to fail? I shouldn't have done that. I shouldn't have given away. Or maybe that's not even the password. Maybe I'm screwing with you all. I can tell you with certainty that you're very close.
01:19:10.610 - 01:19:39.240, Speaker A: Tell you with absolute certainty we're very close. We're right, there's. Am I going to hit refresh? We have a bunch of people trying passwords, but they're failing. Why are they failing? You need to look at that. Attempt password. What is that contract function trying to do? You're all so close. What is it trying to do? Read it line by line.
01:19:39.240 - 01:20:02.720, Speaker A: What is it doing? I promise you, for those of you who are like, no, I got it. You are correct. You do have it, but you're missing something. What is that trying to do? If you paid attention to some of these workshops, you know the answer. Okay, it's trying to do what? This is the same issue that we ran into, actually, at the beginning of this. Man. I need to log into ethcant to see the private note.
01:20:02.720 - 01:20:19.670, Speaker A: Oh, my goodness. Oh, my goodness. Wait. Or did somebody actually do it? Somebody got it. Somebody got it. Oh, my goodness. Somebody got it.
01:20:19.670 - 01:20:56.944, Speaker A: These are probably all correct right here, too. So what was going on here? Right, so we have all these failed transactions. When we make this attempt password, we're making a chain link request. What do you need? When you make a chain link request, the link token. So all these people here, well, not all of them, but some of them who had the correct answer, they might have just gotten beat out simply because they didn't fund it with link with their transaction. So it looks like we do have an owner. We do have di, D, po X, two j.
01:20:56.944 - 01:21:09.030, Speaker A: Whatever. Congratulations. All right. And we can even double check. We can jump into the chain here. We'll do read contract. We'll do owner of two.
01:21:09.030 - 01:22:12.560, Speaker A: Who is Oxdd 1d? Who is it? Is it Zach? Is it Saj? Who is it? Oh, my God. I wasn't showing my screen there. Sorry. 1 second. All right, bar and Sil, congratulations on finding the third one. So, bronze, I got to ask, did you actually figure it out? Did you actually find it, or did you see me flash the answer and you were like, oh, my God, that's it. Which one was it? Did I give you the answer accidentally, or were you like, no, no, I figured it out.
01:22:12.560 - 01:22:27.842, Speaker A: Don't do me like that. Which one was it? Nft number three has been found. Congratulations. Oh, this is so exciting. So, three of the five. We have two more. We have two more.
01:22:27.842 - 01:22:37.542, Speaker A: You found it. Yes. Excellent. Awesome work. Awesome job. Yeah. And so, for those of you, let's do a quick recap of what actually happened here.
01:22:37.542 - 01:22:55.370, Speaker A: Okay, so let me jump back onto the stream. Congrats, Baron Sil, for finding number three. And if I'm butchering your name, I'm sorry. So for number three, or, excuse me, for NFT two, here was the hint. Okay. And this is a hex encoded string. So if we do hex to string.
01:22:55.370 - 01:23:15.826, Speaker A: I was still trying that one how to participate. How'd you do, Bronson? Oh, I'm going to teach everybody, don't worry. But a lot of these are team efforts, which I love, too. Right? So we're bouncing ideas off each other, and this is really for fun. So this is a hex encoded string. So we have an online, like, hex to string converter. We convert it.
01:23:15.826 - 01:23:34.166, Speaker A: And this was deployed spookily. And we have an address here. Okay, so this was deployed spookily. Is our tip off that maybe it's the phantom testnet. Phantom testnet here. Yes. Three is not claimed.
01:23:34.166 - 01:24:17.046, Speaker A: Sorry, I mixed up zero indexing and one indexing. So if we paste this address in here, we get this contract here, and it's the exact same contract as our scavenger hunt. And there is a. In our scavenger hunt, there is an s underscore password two, which on this one is blank, but on this one is going to be a password. Now, what most people probably did was they probably just clicked this and they went into the transaction details and they decoded this. Right, and you have crate two makes frosty the hacker. I don't know why this was the.
01:24:17.046 - 01:24:38.042, Speaker A: I was actually originally going to do something with crate two, and then I kind of ran out of time, and this is the password I put in. And then. So all you have to do then is do attempt password with this password. So congratulations. Zero through two have been claimed. There are two left. NFts three and four.
01:24:38.042 - 01:24:48.334, Speaker A: And. Yes, sorry, I mixed up my zero indexing. NFts three and four are left. Three of them have been claimed for scavenger Hunt. One, two, three. Badabing, bada boom. Mr.
01:24:48.334 - 01:25:22.140, Speaker A: Worldwide is a step in the room. And remember, so challenge three only works on this second contract here because I messed up the first one. Whoops a daisy. All right, you should get bop. Much better than random web conversations. What is bop? Bronchiotis pneumonia. I'll have to look into whatever that is later.
01:25:22.140 - 01:26:07.354, Speaker A: All right, so we have two left. Let's go to transactions. What are people doing? So I will say we no longer need to do any more attempt passwords because all the attempt passwords have been found. Zero, one, and two are done. So the only functions we need to call now are going to be challenge four, which is going to be on this first address, and then on the second one, challenge three. Right, so just remember, we're now on two separate addresses. Okay, it looks like we have some people attempting to do some stuff.
01:26:07.354 - 01:26:38.290, Speaker A: It's all failing. What does support equals bravo and quorum? Tippy, you are where you should be. Yes, you are getting very close. Tippy, you're very close. Let's start hinting it up a little bit more. So which one do we want to do? Three or four. Which one do we want hints for? Three or four.
01:26:38.290 - 01:27:09.500, Speaker A: Let me know in the comments. Yeah, I wish streamyard would update the comments quicker so that we could have a real conversation without me having to spend eight years waiting for people to respond. Which one do we want to do? Three or four. Which one do we want clues for? What are we thinking? What are we feeling? Four. Okay, one vote for four. What else? What are we feeling? What do we want to do here? One vote for four. Three.
01:27:09.500 - 01:27:27.920, Speaker A: Four. Okay, two for four. One for Kelvin. You joker, you jokester. No, four. All right, looks like we have one. Two.
01:27:27.920 - 01:27:37.750, Speaker A: We have three for four and one for three. That's fun to say. Three for four. One for three. All right. With that, we're going to give some clues for four then. Okay.
01:27:37.750 - 01:28:07.804, Speaker A: Challenge four. Or challenge four, as it should be. Let's pop back into the stream here. Here's what we got. You could even do this in remix if you wanted to, by the. Ooh, does tally or snapshot can help? No, actually, tally would help if Tally had a UI for us. Snapshot will not help.
01:28:07.804 - 01:28:29.910, Speaker A: No, the Dow mix will help. The brownie Dow mix will help. Can we check if four is taken? Oh, someone thinks they have. Someone thinks they have. Christian thinks they have four. Okay, did I delete everything? See? Let's see. Do a refresh here.
01:28:29.910 - 01:28:49.256, Speaker A: Oh, my goodness. Somebody got four without even. I think I got something. Yes, you did. Oh, my goodness. Okay, well, I guess I'm not going to go over four because somebody got it without me giving a hint. Yes.
01:28:49.256 - 01:29:01.870, Speaker A: Congratulations. Oh, my goodness. Let's double check on the contract. Maybe opensea is doing some funny business. So we do owner of. Well, it might be owner of three, actually. Or four.
01:29:01.870 - 01:29:30.984, Speaker A: Owner of four. There it is. Bada bing. Congratulations to Christian for being owner of four here. And then once opensea actually does it, great work. Okay, do you want to be the one to explain how you did it or you want me to explain it? Yes, that's me. Yes.
01:29:30.984 - 01:29:50.350, Speaker A: Oh, my goodness. That's awesome. All right, so everyone put him on your blacklist. He is an evil hacker. He did reentrancy. Oh, by the way, if anybody's leaving, remember to fill out the feedback form. Let us know if this was fun, if this was a huge waste of time.
01:29:50.350 - 01:30:11.348, Speaker A: It's been a lot of fun for me. Yeah, Christian, this is awesome. And hopefully I'm pronouncing your name right. Yeah. I'll explain what I think you did here, and then let me know if maybe you did something else. So here is what Christian did here. So in this contract, we scroll down.
01:30:11.348 - 01:30:47.170, Speaker A: Challenge four. I know it should be challenge four. Sorry, what it is is this is a potential reentrancy attack here. Anytime you call an external contract in your code, you should stop and go. Is this contract malicious? Could the contract that I'm calling do something evil to me? And this includes seriously, like, even, like something as benevolent as transfer, maybe you're working with an evil token. Okay, so we have other contracts called. So what we're doing here, and Tippy pointed this out before, too.
01:30:47.170 - 01:31:14.072, Speaker A: Tippy said, hey, two minus one is one. And in this function here, we're checking to see if token four is taken. S variable starts off. Where does it start off? Starts off set to two, right. Could start off set to two. So we subtract one. And now s variable is one.
01:31:14.072 - 01:31:59.924, Speaker A: So then we do an external call. And then we do, if s variable is zero, we're going to go ahead and mint the fourth nft and we're going to mint it to us, right? So we would just say winner is us. Now the thing is, right after we do this, we reset it to two. So some people were saying, hey, my function isn't erroring, what's going on? And the reason is because, yeah, it wasn't erroring, it was perfectly valid transactions. It just s variable wasn't zero, it was one. And then it just gets reset to two every time. So then the question becomes, hey, if this keeps resetting to two, how can we ever get it to be, how can we ever get it to be zero? And the key is in this other contract called contract.
01:31:59.924 - 01:32:23.384, Speaker A: So what you can do, and we'll make this live here. So let's call something called reevil soul. Evil soul. Evil soul. I want to copy paste some stuff. Yes, paste. So we'll do our pragma.
01:32:23.384 - 01:32:48.680, Speaker A: We don't need to import anything. We do any of this stuff. We don't need any of this stuff. Actually, pragma, zero point 87. We'll call this evil. All we need to do is in our code, it calls this a call me function of some other contract. So what we could do is we create a function called call me and function called call me.
01:32:48.680 - 01:33:14.320, Speaker A: And in this contract we could call back to challenge four. Right. So up at the top we say interface. Hunt. We can just say function. Challenge four. External.
01:33:14.320 - 01:33:47.222, Speaker A: Is that interface? Right. Always forget what interfaces even look like. Function. Oh, no, that's not wrong at all. Challenge four. Like this. That's right, yeah.
01:33:47.222 - 01:34:12.878, Speaker A: External. Okay, so we have an interface hunt function. Count four. We can do hunt. Then we paste the address in here of this scavenger hunt, and we do what's called it a reentrancy attack. So we call back to it and we do challenge four. And then we kind of put whatever we want here.
01:34:12.878 - 01:34:34.630, Speaker A: Obviously, we'd want to put ourselves as the winner. When I originally did this, I actually made two evil contracts. One was the reentrancy one, and one was like evil two. What we do is at this line, we call other contract. Callme, we reenter. So we don't get to this. If variable is zero.
01:34:34.630 - 01:35:21.190, Speaker A: So s variable is currently one. When we get to this line, right, then we call this. And if we call it again, if we call it again, we'll reenter this function, and we'll do s variable equals s variable of minus one again. Okay, so we could do challenge four. We could just put in, like, a zero address here, actually, and just say winner is like message sender, winner is us, or whatever. And boom. Now, s variable has been subtracted to being to zero, right, because it was one, then it's zero, and then it's going to continue, and s variable will be zero, and so it'll safe mint us the token, and then it'll reset.
01:35:21.190 - 01:35:59.550, Speaker A: So this is what's known as a reentrancy function or a reentrancy attack here. And we reentered this challenge four before we got to this if statement. So we do this one, we do this line, we call this one, which goes to this other contract, and then comes back, and instead of being in this line, since that contract calls this contract, we again start from the top, go down, s variable equals s variable minus one. Now it's zero. We could just have that contract do nothing here. And then we do indeed mint the token. Let me know if that's crazy, confusing.
01:35:59.550 - 01:36:13.654, Speaker A: Awesome job, christian. You have successfully become a reintrancy hacker. Great work. I was learning about range, something that I heard of for the first time here. Great. Awesome. Yeah.
01:36:13.654 - 01:36:37.566, Speaker A: You need to set s variable to zero. Yes. So we reenter the function, we reenter the contract to set zero from your own contract that implement the same phrase, what's inside call me that? I don't know. So we could make call me be whatever we want. Right. And since it's our own contract that we control, and so our call me, it just calls back to challenge four. That's it.
01:36:37.566 - 01:36:55.794, Speaker A: Just calls back to challenge four. So you made a contract with the function, call me s variable minus one. No. So we didn't do s variable minus one. Right. All we did was call back to challenge four. And since this hadn't reached the rest of this code yet, it hadn't reset s variable back to two.
01:36:55.794 - 01:37:08.262, Speaker A: S variable was still one. So we subtracted one again, making it zero. No, you're not stupid. This is just some next level stuff. Finally understanding reentry. Evil hacking. Thanks to chain link.
01:37:08.262 - 01:37:26.118, Speaker A: Yes, exactly. That's what's up. Don't trust others contracts. Exactly. Anytime. I'm being dead. Seriously, anytime you see a function call to a contract outside of your project, you need to be on alert, because that is an opportunity for somebody to do some reentrancy.
01:37:26.118 - 01:37:56.182, Speaker A: Now, you can obviously add some stuff like mutexes. And Openzeppelin has a great non reentrant modifier that a lot of pro projects use, too. But you always want to keep this in mind when you're making your contracts here. Why wouldn't call other contract again and do a loop? Great question. So this is where I said in this one you could set the Callie address to nothing, basically. Right. So you originally do called contract is this one.
01:37:56.182 - 01:38:10.026, Speaker A: And then when this one calls a contract, it just calls nothing. Or it calls some other contract that does nothing. Right. Great question. After reentrying, because the second evil two does nothing. You could also do that. Right.
01:38:10.026 - 01:38:27.002, Speaker A: So you could call it again to a second evil two, which does nothing. That's how I implemented it. But, yeah, looking at it now, I don't think you actually need to. I think one would be fine. But in any case. Yeah. Would you say reentricy is done through fallback or receive? A lot of times reentric is done through fallback and receive.
01:38:27.002 - 01:38:55.230, Speaker A: And actually my original challenge here, that's what I was going to use, was a fallback or receive function. But it can really be anything. It doesn't have to be a fallback or receive. But, yeah, receive is definitely a tricky one. And that's one I know has been exploited many times. I'm not sure the stats, though, to say which one is more exploited. How do you make it not doing it again? Yeah, so you just set like a bad adder.
01:38:55.230 - 01:39:19.620, Speaker A: So like Zero X is so that way when we go back into here, it does other contracts called contract call me. It goes, oh, that contract doesn't do anything. Or you set this evil two contract. Actually, that's probably what I would do. You set this evil two contract. You set the address of this evil two contract which doesn't do anything. And that's all you would do.
01:39:19.620 - 01:39:38.920, Speaker A: No great explanation. Okay, great. Evil one will call challenge four with address of evil Two. Yes, exactly. And evil Two, and I know this is just pseudocode here, but evil Two's call me would do nothing. It wouldn't do anything at all. Right.
01:39:38.920 - 01:39:56.720, Speaker A: Exactly. Like it wouldn't do anything. So we would call challenge four. And I'm just going to say, like, evil two address evil two address, which I don't know if you need evil two. I think you don't. I forget. But yeah, you would just call another address that doesn't do anything.
01:39:56.720 - 01:40:25.686, Speaker A: What is the line? That's what we're talking about here. So we call another contract, call to call me. How can I encode function data? Do I need to run a script? You could run a script. You could encode it manually. There's a lot of different ways you could do that. We can talk about that if you want to talk about that. Yeah.
01:40:25.686 - 01:40:56.960, Speaker A: If you want more information, feel free to follow up. All right. Awesome job, though. So we have four of the five, and I think it looks like from our chats here, it looks like this last one is going to be one of the harder ones here. So if you all want, I can just go through it and we can mint it live together right now. However, if you'd rather. And this is on that second address, too.
01:40:56.960 - 01:41:10.180, Speaker A: However, if you're like, no, I'm really close, Patrick. I almost got it. We can also hold off on doing it together. So this is the dow. I feel I'm about to get three. Okay. Samuel feels he's about to get.
01:41:10.180 - 01:41:36.718, Speaker A: And I'll give a hint then. This Dao mix has pretty much all the code that you need. And I know we've bounced from hard hat to Brownie and all over the place. That was also partially intentional. This Dow mix has pretty much everything you need. This script has pretty much everything you need. There is just one function missing in here.
01:41:36.718 - 01:41:56.722, Speaker A: There's one function that we don't do in here. One function we don't do in here. I'm stuck trying to make a proposal. Nice. Excellent. So the question is, why can't you make a proposal? I didn't understand number two. Okay, which one was number two? I already forget which one.
01:41:56.722 - 01:42:26.780, Speaker A: Oh, so number two, this decoded to basically look at an address on phantom testnet. And on the phantom testnet, there was a transaction to change a password variable, and that was the password for attempt password. That's it. Feel free to follow up. Feel free to rewind this later and watch the explanation there. So hopefully it's clear there. But yeah, also feel free to ask in the discord, too.
01:42:26.780 - 01:42:34.894, Speaker A: Suck. Trying to make the proposal. Oh, yes. Lacing up my boots. Lacing up my boots. Can you remind us how to do. Remind us about it, about.
01:42:34.894 - 01:43:01.560, Speaker A: What's up, Tippy? What do you want me to remind you about? I know nothing about Dow. Something I plan to learn soon. Well, if you actually, seriously, though, if you want the crash course, we did a governance workshop at this hackathon, so be sure to rewatch that because it'll give you a lot of fantastic information. And I'm planning on doing more Dow governance tutorials very soon. Me too. Lacing up my boots. All right, so it sounds like a couple of people are close.
01:43:01.560 - 01:43:39.220, Speaker A: Let me give you a hint then. Let me give you a hint. I won't tell you everything. So in order to make these proposals. Right, so we have. And actually, where are those addresses? Scrolling way back up now. Where's the governance? Is this the governance? Where's the governance contracts? Let's find them.
01:43:39.220 - 01:44:14.400, Speaker A: Let's find those governance contracts. Set dow. That's not what I want. It's on this one. We have a governor contract, governor time lock, and a governance token. Now, in order for us to do stuff on these time locks. Oh, actually, it looks like you are all actually close.
01:44:14.400 - 01:44:30.514, Speaker A: A couple of people have called this mint function. Oh, four people are on this. Oh, excellent. Four people are on this game. Yes. So they've already called the mint function. So I'm not even going to talk about this then, because it looks like you already know what's up.
01:44:30.514 - 01:45:09.614, Speaker A: So you have some governance token. Now, what you're probably in the middle of doing, and we can even pop over to the Dow mix, you have some governance token is doing a proposal, right? Propose. So we have, in the Dow mix, there's a propose function. Right? So we can do. Propose our arguments. Store value. What is store value? So this is for like, a box contract.
01:45:09.614 - 01:45:44.260, Speaker A: But we need the arguments for not for a box contract. We need the arguments for our scavenger proposal, which. Sorry, I'm bouncing all over the place a lot. Sorry. Right. Here's the proposal should be challenge three. This is what the proposal should be.
01:45:44.260 - 01:46:09.340, Speaker A: And if we look, and then it sounds like I'm giving you all the answers as we talk, if we look in here, if we look at this proposed function. And again, you could do this in hard hat, too. Okay. I have no idea how to encode the call data. Okay, well, we're about to teach you right here. We have this encode input function. So this is how you do it in brownie.
01:46:09.340 - 01:46:40.040, Speaker A: There's, like, an encoding function in hardhat as well. Or you could manually do it, but I don't recommend that because you got to be a little bit finessey there. So we're abi encoding our contract here. So for us, it would be contract fromapi. It would be the scavenger hunt. It would be the scavenger hunt code. And so this is what this box minus one does.
01:46:40.040 - 01:47:28.730, Speaker A: It gets the address here. So we have box. We have the address, and then we have box abi, and then we grab this store function, and then we encode the input. So instead of store here, what would we do? What were we doing? It would be challenge three, right? This would be challenge three. And then we'd encode the input args, which is just going to be the address of the winner, which should be us. Right. So once we have that, once we have it encoded, then we can propose a transaction which again, it's not going to be box minus one address, it's going to be scavenger hunt address, zero value, the encoded function, and then whatever proposal description you want, and then we send it through the proposal process.
01:47:28.730 - 01:48:02.032, Speaker A: Once it's done, we can vote on it. And if some of you others have this token and you want to block each other, if you see proposals, you could actually vote no and block each other, because this is really, whoever gets it done first wins. So you could block each other. And so when you vote, zero is against, one is for, and two is abstain. So you want to vote for your proposal, obviously, right. You want to vote for your proposal and then you have to queue and execute it. So that's it.
01:48:02.032 - 01:48:25.832, Speaker A: So that's what you have to do. It's a little bit tricky here. Yes, it's definitely a little bit tricky here. I have faith that you all can do it. It sounds like you're really close. Yeah. If all you're working on now is encoding the call data, this Python script will help you do that.
01:48:25.832 - 01:48:57.176, Speaker A: And if you want, what you can do is you could just run. If you're like, oh man, python is super confusing. You could figure out how to run just this proposed script here. And again, you would need to change a lot of this stuff to the scavenger hunt edition. That's also partially why I made this in brownie, though, to make it harder. But maybe I made it too hard. But it sounds like you all are really close.
01:48:57.176 - 01:49:14.650, Speaker A: Me too. I'm lacing up my boots. I'm lacing up my boots. This is awesome. Four out of five of these nfts have been found. This is awesome. Honestly, all of you are crazy impressive right now.
01:49:14.650 - 01:49:33.370, Speaker A: I'm thoroughly impressed with. I set aside 3 hours for this. We're already making headway. 2 hours in. This is great. You all are killing it, killing it, killing it, killing it. So we have some proposals in here.
01:49:33.370 - 01:49:52.386, Speaker A: Okay. I'm so happy. We got reentrancy too, Christian. That was beast mode. So let's see, do we have proposals going in? Let's look at these governance contracts here. So the governance token looks like people are minting, right? And you need to mint. Why? Because you need the tokens.
01:49:52.386 - 01:50:22.222, Speaker A: You need the tokens to actually do the proposals. So it looks like people are minting, which is great. Which one's this? This is the governance contract, which is good. And then we have the time lock contract. Looks like nobody successfully called a proposed function yet. So people have the token. Nobody's called the proposed function yet.
01:50:22.222 - 01:50:45.480, Speaker A: Right. So again, if we're looking at the scripts here. Oh, whoops, sorry, dow mix. If we're looking at the scripts here, we have the token. All we need to do is call propose. So people are trying to figure out how to do this propose thing. So we need the Abi of the scavenger hunt at the address.
01:50:45.480 - 01:51:11.310, Speaker A: Right. And then we need to have this be. I'm losing my place. Challenge three, with the winner being, of course, the arguments, having your winning address in here. Right. And then we can propose. Obviously, this needs to be not the governor contract, this has to be your actual scavenger hunt contract.
01:51:11.310 - 01:51:55.476, Speaker A: And for those of you who are like, oh, man, I did all this in Hardhat, or. I'm super familiar with Hardhat. In Hardhat, you can do contract attach, right? So you can call functions with attach, you could make a quick interface with challenge three on it, attach that and do it from there, if that's what you wanted to do. So it looks like people are close. If it's easier. What we could also do is I could just give you the encoded function here, and then you can use whatever framework you want to call the proposed function. Because once you have the encoded function, the rest of this is cake.
01:51:55.476 - 01:52:35.396, Speaker A: Right? All you need is the address. You just need your token. A proposal description can be whatever you want. What do you all think? Do you want me to just give you the encoded function so you can go from there, or are you like. No, I'm so close to encoding it or the encoded input. Wait, I love it. Oh, it's got to be so hard to be, like, listening to me talk while also doing this scavenger hunt.
01:52:35.396 - 01:53:04.044, Speaker A: All right, we won't give it out. We won't give it out yet. I'll be less helpful. You all are so close looking at the addresses here, looking at the people who have called mint, right? It looks like there are four people in the running right now. Oh, wait, no, there's more, there's more. Hold on, I'm looking at it again. There's one, two.
01:53:04.044 - 01:53:38.000, Speaker A: Are these different addresses? There's six people with governance tokens. There are six people who have governance tokens. No, seven, because I'm one. I forgot seven people with governance tokens. So there are seven people in the running. Oh, this is so exciting. But crucially, zero people have made a proposal.
01:53:38.000 - 01:54:04.804, Speaker A: Oh, we have a propose. Okay, I got a flip. Somebody's proposed. Okay, we have a proposal here. I'm not going to give any of the details I'm not going to give any of the details here because they're doing really well. But we have a proposal from eight. They did mint.
01:54:04.804 - 01:54:34.320, Speaker A: They did propose. We have a proposal here. Okay, so this is very good. Still at the NFT zero challenge. So, Richard, so NFT zero has already been claimed. So it's only one of each. But, yeah, feel free to rewatch and see how NFT zero was claimed.
01:54:34.320 - 01:54:59.960, Speaker A: But also, you can also try to figure it out by yourself. But, yeah, it's already been claimed, so even if you solve it, you won't get that positive reinforcement. So I kind of want to read this person's proposal while everyone else try to scrambles for it. Did they do it right? Oh, I'm praying they did it right. Okay, they have a target. They have the call data. They have the description.
01:54:59.960 - 01:55:32.144, Speaker A: Oh, my goodness. I hope the call data is right. I hope the encoded input is correct. But now, what did they set for quorum? And so. Or what did I set for quorum? I think I said, like a couple seconds, right. So you should be able to voting against. So Samuel just said he's voting against it.
01:55:32.144 - 01:55:46.644, Speaker A: Okay. All right. So we have the proposal and we have the race. The race is off. Okay. But the advantages to the proposer, though, right? Because what you could do is you could just keep doing new proposals and then it would be on samuel to keep voting no against him. Oh, my goodness.
01:55:46.644 - 01:55:56.644, Speaker A: I love this. The timer is ticking. The timer is ticking. Just came across this live. So cool. That chainlink is spending time helping people learn. Love your energy presenter.
01:55:56.644 - 01:56:13.324, Speaker A: You're doing great. Appreciate that, andrew. Welcome to the chainlink scavenger hunt, where we have people voting against each other because they want to be the one to mint the Nft. I love this. This is amazing. And this is the last one. Everyone here should be so proud of themselves and so excited.
01:56:13.324 - 01:56:36.010, Speaker A: Lol. Two versus one. We got this vote. No, it's 627 in the morning and I'm voting no so I can get this nft. Oh, my goodness. Wait, so was it shot down? I'm so sorry, whoever put this proposal through, I shouldn't have said anything. Wait, did they shoot it down? Did they shoot the proposal down.
01:56:36.010 - 01:57:09.392, Speaker A: No, you guys failed. Your audio and video have delays that chain like crap. Thank you for the heads up. I might not be able to fix that sad face that makes me so sad. But in any case, so I'm looking at some proposals. Oh, it's working now. Okay, cool.
01:57:09.392 - 01:57:26.212, Speaker A: I'm looking at some proposals. I'm looking at a failed casted vote. Aha. You want to know why they failed? Because they unknown proposal ID. We get this vote no. So you need the proposal ID. So sorry, you screwed up somewhere.
01:57:26.212 - 01:57:44.350, Speaker A: Let's see. Or maybe this was a yes vote that failed. Let's see. I'm going to go ahead and decode proposal ID. One support zero. I think zero is a no, right? Is zero a no? I forget. I think you just failed voting no.
01:57:44.350 - 01:58:18.010, Speaker A: Trying to be malicious, and you failed at it. But it's okay because they haven't voted yes on it either. So we have a proposal. This is, I'm going to be on Dow mix. Abstain. Okay, so somebody voted against it was Samuel or probably Samuel or lacing up my boots. One of you voted no, but you voted no incorrectly, so your vote does not count.
01:58:18.010 - 01:58:39.488, Speaker A: Oh, this is so sick. Oh, this is such a fun race. All right, is the person who proposed it? Okay, we have another failed vote. What did this person vote? Was this the yes voter? The yes voter failed with proposal ID. One. No, you both failed. Well, it's still up.
01:58:39.488 - 01:59:28.520, Speaker A: It's still up. Unknown proposal iD. Is this proposal even open anymore? I'm not even sure this proposal is open anymore. You might have to do another proposal and just immediately vote on it because let's look at the, look at this again. Let's read the contract. Proposal deadline, proposal iD, proposal eta, proposal snapshot, proposal vote, blah, blah. Voting period is going to be five blocks.
01:59:28.520 - 01:59:54.324, Speaker A: I think voting delay is one block. So I think you only really only have a super short period of time to even vote. So you might even want to do a new proposal and just immediately vote yes on it. I think that's the real play. You might have ran out of time to vote on this. It was me, but that's a. So Samuel failed at voting yes.
01:59:54.324 - 02:00:14.572, Speaker A: Oh, that's this. We have somebody who's got the proposal skills. We have one person who can propose. Oh, we have another vote. We have another something coming in. Maybe you all should just mute me. Maybe I'm screwing you up.
02:00:14.572 - 02:01:12.590, Speaker A: Somebody else is casting vote, but it's going to be a failed vote again. It might not even be valid anymore. All right, I'm going to give you all a hint. All it if we look at propose, you look at that return value of the proposal transaction. So that proposal transaction returns the proposal ID. It's not necessarily numeric. So this proposed transaction outputted a proposal ID.
02:01:12.590 - 02:01:39.368, Speaker A: And what do you know, what's this first one? What is that? What is this? It emitted this event. Is that potentially the proposal ID? It might be. I don't know. Maybe. By maybe I mean yes, because I just told you I failed at voting no. I love this. I love this battle that's going on right now.
02:01:39.368 - 02:02:12.340, Speaker A: Is Powershell similar to Mac Os terminal? Yes and no. They're both terminals, but they're very different. Very different. All right, it's 08:00 a.m.. I going to teach the ways of the proposer? Or is whoever proposed, are they going to figure out how to get this over the line or should I jump in? What are we thinking? Oh my gosh. This battle is hilarious though. Yeah.
02:02:12.340 - 02:02:40.030, Speaker A: Both lacing up my boots and Samuel voted no. But we have an unknown proposer. The person who did the original propose has not identified themselves yet. We have another person casting votes. Unknown proposal ID. Okay, so this one was a yes. Was this the original proposer? No, I don't think it was.
02:02:40.030 - 02:03:21.392, Speaker A: Yeah, no, wasn't. Oh, is this Samuel again? I'm banging my head against the call data encoding? Yeah. Should I just give you the call data encoding? Well, actually. What? You could do another break? Another breakdown? No, I'm trying to encode. Okay, I can give you it. I can give you the keys if you want. But you haven't even tried to propose yet.
02:03:21.392 - 02:04:13.106, Speaker A: Right, because I keep losing my spot here because I only see cast votes. Right. Only one person actually proposed here. What are you using, hard hat? Brownie? Trying to manually encode it. What are you doing? It's not coming through. The proposed function through proposed function is failing. Is fried.
02:04:13.106 - 02:04:46.690, Speaker A: All right, well, I'm coming to the rescue. I'm going to do a whole bunch of encoding here. Oh my goodness. 02:00 a.m. That's some next level. It, it looks like the proposing has slowed down and the casting votes has slowed down. So we have one person who has successfully proposed, but they have since fallen off the face of the planet and nobody knows where they are anymore.
02:04:46.690 - 02:05:08.466, Speaker A: We're unclear where they are. Okay, so we're getting a little bit tired, so I'm going to do a little bit of running through this. 02:00 a.m. Here too. Okay. All right, well, I'm jumping in. I'm jumping in.
02:05:08.466 - 02:05:37.170, Speaker A: So pulling up the Dow mix here and we're going to update this a little bit. Do a little update arena. So we don't need the deploy box. We are going to propose. We don't need deploy governor here. I'm just going to delete a whole bunch of stuff so we don't need deploy governor, we don't need deploy box. We just need to propose.
02:05:37.170 - 02:06:35.420, Speaker A: We need to propose a winner. Who do we want the winner to be going to make it? Me for now. And then we'll come with some other clue down here. Proposal ID propose. We're going to do me contract from Abi. This is going to be scavenger hunt. What I'm going to do is I'm going to grab that, I'm going to copy scavenger hunt contracts.
02:06:35.420 - 02:07:19.500, Speaker A: Scavenger hunt Sol to contracts in here. The scavenger hunt address here. Scavengerhunt Abi, I'll still have time if you guys are still trying to figure it out. You have time. Import scavenger hunt. I'm ready to block you. Going to block me? All right, well, I'm excited.
02:07:19.500 - 02:08:12.296, Speaker A: We're going to call challenge three. Challenge three. Encode input args, great. Prints. The encoded function. Now we're going to propose it. So this will be the governance transaction or governor contract right here from Abi owner.
02:08:12.296 - 02:08:26.700, Speaker A: Yep. Name, address, Abi. Perfect. So I think this is probably right. Propose, address. This needs to be an array zero encoded function. Propose a description.
02:08:26.700 - 02:09:03.624, Speaker A: All this. Give me the NFT. Then maybe we'll just give all three of you the NFT here for being such good sports. Unless one of you beats me to it. Good proposed. Wait, great vote. Okay, cool.
02:09:03.624 - 02:09:20.130, Speaker A: So it looks like that's how I'm going to propose then we're going to not do that. So then we can vote. Let's see what this vote looks like. Proposal ID and vote. We're going to vote yes. Cast vote with reason. Okay, great.
02:09:20.130 - 02:09:40.036, Speaker A: And then we're going to queue it. All right, I think this should work. Let's see. Ronnie run scripts. I call it deploy and run. Even though it's not actually going to deploy anything. See if I can get this NFT myself.
02:09:40.036 - 02:10:27.924, Speaker A: It looks like it cannot contracts scavenger hunt. It's because I have all these chain link things in here. Get to see me trying to solve this live with you as well. It slash chainlink contracts at 0.2.2. Remappings at chain link equals at. Now where do I have this. I also need this.
02:10:27.924 - 02:11:01.864, Speaker A: Base 64. Let me just get rid of that. I even need that. That's fine. All right, we're doing some compiling. Looks like we ran into our first issue. It's because it's saying, hey, there's no governor contract.
02:11:01.864 - 02:11:55.840, Speaker A: You haven't deployed a governor contract here. Yes, you're right. So we'll do again contract from Abi Gov, comma, we're doing this live. Has anyone beat me yet? Has anyone beat me up? I don't think so. Is the governor contract? Yes. Do the address here, comma, we go propose. That shouldn't work.
02:11:55.840 - 02:13:34.712, Speaker A: It actually let's do of contract equals that of contract. Oops. Of contract propose. And we'll just add this little governor contract thing down on all these reasons. Should actually not be that should be this. Then we have the execution here and this little find and replace. Let's see if I've done it.
02:13:34.712 - 02:13:45.276, Speaker A: See if I beat you. Let's see. I'll do it. I did just tutorial. I found states install NPM. I was wondering if I should find a way to get yarn. Yarn's great.
02:13:45.276 - 02:14:17.290, Speaker A: You can just try yarn via the Cli on Mac and Ubuntu. Look up the distros on how to install happy hacking. Cli equals command line. You are correct. Doesn't support node Js. Well, that's frustrating. Well, I sent a bad request function.
02:14:17.290 - 02:14:53.560, Speaker A: It could we all give up? Is that where we are right now? Let's see. Oh no. Looks like people are trying. Oh well, that's me. I proposed. Ha. Did I do it? I don't think I did it.
02:14:53.560 - 02:15:15.630, Speaker A: So it looks like somebody else is proposing with me too. Can they beat me to it? We proposed. Proposed. Looks like a couple of proposals are going in. Oh, it looks like other people are proposing. No, we have somebody else proposing. Whoa, we have a couple of proposers now.
02:15:15.630 - 02:15:36.520, Speaker A: Whoa, wait. You guys are not done? You guys want to beat me? So we have some people proposing. Never give up. Yeah, it looks like some of you might beat me after all. Because why is my thing bad? Oh, it's because of that. I just got to get rid of my print line statements. All right, well, you all better go quick.
02:15:36.520 - 02:15:56.406, Speaker A: I'm in for you. Rid of all my prints. Goodbye. Goodbye prints. I need your print statements. Oh, that's why. Because I had bad print statements.
02:15:56.406 - 02:16:30.240, Speaker A: Probably try again. It proposal already exists. Oh my goodness. Proposal already exists. Give me the NFT still. Now let's see if I beat you all. Some people casting votes.
02:16:30.240 - 02:16:46.340, Speaker A: Wait, did you cast a vote. Oh, my gosh. We have a successful vote cast. They voted against. You successfully voted against. Wait, I hope that was an accident. Oh, wait, I think it was an accident because I think they immediately voted for right afterwards.
02:16:46.340 - 02:17:09.064, Speaker A: Oh, my gosh. I hope this was a vote for and they accidentally just voted down their proposal. Well, I'm coming for you. Coming for you. We have a proposed, we have a cast vote. It's against again. Zero is against.
02:17:09.064 - 02:18:05.990, Speaker A: Oh, my goodness. What did I do? Oh, I'm sending bad requests. This is not an address. Should be an address. I'm sending bad addresses. Return proposed TX return value. Oh, I'm messing up somewhere.
02:18:05.990 - 02:19:21.090, Speaker A: So I'm proposing fine. Am I proposing fined it? Trying to just do this. We already have pulse ID is now this it? Governor, vote not currently active. Slow. Yeah, you have to be really quick here. That's kind of annoying. All right, we're coming up on finishing this out.
02:19:21.090 - 02:20:07.900, Speaker A: It looks like one of us is going to be victorious pretty soon. And I'm just fumbling around here, messing up the rest of the scavenger hunt here. I'm actually hoping I didn't make the voting period way too short and that we're not going fast enough. That could 100% be the case. It could literally just be that we're not going fast enough. Yeah, I think it actually might be we're just not going fast enough because it's airing at here's propose is going through. Right? Transaction goes through.
02:20:07.900 - 02:20:54.810, Speaker A: Is that what's going on? I wouldn't be surprised if that's what's going on. Do I have enough time? Oh, looks like I was fast enough because I wasn't waiting the one block likely that's probably what was going on. I wasn't waiting the voting delay for the vote to start. I was just trying to vote right away because now it looks like my vote is actually going through. Yeah. So that's probably what was going on. That's why I was running to errors.
02:20:54.810 - 02:21:17.000, Speaker A: Well, you all better be afraid. Oh, just kidding. Don't be afraid because I ran into another error. My cast vote with reason also failed. I was too slow. Governor, vote currently not active. Yes.
02:21:17.000 - 02:21:55.560, Speaker A: All right, well, it looks like that's pretty much it. I think we're going to stop here just because that's how you would solve it. It looks like I made the voting period a little too tight, so it became really hard to actually cast votes because you have to propose, cast, vote, and finish your whole thing within five blocks. So I made it a little bit difficult there. It would take a little bit more time for me to write like a more sophisticated script to do that. But we have four of the five successfully collected. It looks like we're pretty close to the fifth one.
02:21:55.560 - 02:22:25.386, Speaker A: If somebody wants to go ahead and crush this out by next week, great. You absolutely can. Like I said, it's going to be a little bit tricky because the way that it's set up, but if not, we'll just give the fifth NFT to, we'll do a chain link VRF and we'll give it to a random one of you who actually did some of the proposals here. So you all did fantastic. I'm crazy impressed with how well everybody's done. Yeah. Four of those five entities were collected.
02:22:25.386 - 02:22:45.554, Speaker A: The fifth one, I made it a little bit hard. It looks like I need to polish up my scavenger hunt building skills as well. But yeah. Please leave some feedback for this if you thought this was fun. I had a blast with this. It looks like a lot of you were really creative, came with some really intelligent solutions and really understands. I'm super impressed.
02:22:45.554 - 02:23:13.214, Speaker A: Freebie. You guys got freebie right away without us saying anything. You also got the reentrancy one, which is one of the biggest ones, which was really impressive. You also got roan CCIP without any help there at all. We just gave a little bit of prompts for the FTM because that one was a little bit. I had to fix that one as well. So the two that I had to fix were the ones we struggled with, which makes sense.
02:23:13.214 - 02:23:31.270, Speaker A: So awesome job, everybody. Thank you so much for being here. Yeah, please let us know if you all enjoyed. I will be deploying those NFTs on Polygon and we will send them to the winners here. So huge congratulations to everybody. Awesome work. Great job.
02:23:31.270 - 02:23:36.340, Speaker A: Looking forward to seeing your work in the hackathon and we will talk to you soon. Thank you all.
