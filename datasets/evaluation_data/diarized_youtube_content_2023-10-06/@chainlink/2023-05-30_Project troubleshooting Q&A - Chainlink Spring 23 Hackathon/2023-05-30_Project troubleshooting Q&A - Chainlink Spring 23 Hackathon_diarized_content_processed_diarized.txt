00:00:14.730 - 00:00:39.740, Speaker A: I think we are live. Let me have a look. Awesome. We'll give it a minute or two for some people to join. If you want to queue that awesome music, Andre.
00:00:40.480 - 00:00:49.330, Speaker B: Yeah, sure. So I recently discovered that we can play some lo fi in the background, so you should be able to hear this.
00:00:50.980 - 00:02:11.460, Speaker A: Just some background music. Welcome, everyone. We're going to give it just a minute for people to join. I'll post on discord as well. Let us know where you're joining from. We'd love to see where everyone's from. Today's Poland.
00:02:12.880 - 00:02:14.380, Speaker B: Good evening, Pawn.
00:02:24.260 - 00:02:26.130, Speaker A: Hey, Zubin, how's it going?
00:02:30.020 - 00:02:34.450, Speaker C: Very good. Sorry I'm a couple of minutes late. I had mic trouble as always.
00:02:36.020 - 00:02:37.010, Speaker A: That's okay.
00:02:43.160 - 00:02:45.380, Speaker B: Do you like the background music, Zobin?
00:02:46.680 - 00:03:00.250, Speaker C: Totally, totally. With music like this, it's almost like it's conditioned response. I feel like I need to start coding now. It's just like I hear the music, I'm like, okay, am I supposed to start coding now?
00:03:01.440 - 00:03:04.380, Speaker B: Exactly. Unlike the rain is missing in the background.
00:03:09.120 - 00:03:40.836, Speaker A: Okay. All right, we've got a few people in now. Let's get going. So welcome, everyone. So today is really about us just being available to all the chain link hackathon participants. We've made ourselves available for the next 30 to 60 minutes to answer questions. If you have technical questions, if you have questions about the hackathon, if you want to get feedback on a certain part of your project, if you want to link us to a discord question, a stack overflow question, anything really that you kind of want some answers on.
00:03:40.836 - 00:03:51.770, Speaker A: We're happy to do that in a live setting today. So, my name is Harry. I manage the developer advocates here at Chaining labs. And I'll let Andre and Zubin introduce themselves now as well.
00:03:53.660 - 00:04:13.020, Speaker B: Yeah. Hello, everyone. My name is Andre. I'm one of the developer advocates for chain protocol chain clubs, and I participate in my first hackathon, I think two years ago, first chain in Hackathon, and my first hackathon actually two years ago. Long story short, I'm here with you today as a dA. Off to you, Zubin.
00:04:13.440 - 00:04:39.530, Speaker C: Thanks, Andrea. Hi, guys, I'm Zubin. I've been a developer advocate at channeling for about a little over a year now, and that's my entry into the web3 space as well. Before that, I was very much in the web two world. I was an engineer at Google, and before that I was a career change. I was a lawyer for a very long time. So the entire web3 space is awesome because you've got so many multidisciplinary people from around the world bringing all their skill set to solve problems, which I really love, which is very unique to the web3 world.
00:04:41.020 - 00:05:45.432, Speaker A: Yeah, awesome. Thanks, guys. And yeah, I'd like to add as well, after what Andre said, I was entering hackathons quite a lot in the 2019 2020 time. And yeah, I entered a couple of chain link hackathons back then, and then I was actually hired from the team out of a chain link hackathon. So if you are looking to get a job in web3 and work in web3 and you're a developer, hackathons are probably the best way to do that because you're kind of showing the world what you can build and what you can get out there. And your GitHub is basically like a web3 version of a CV, right? When these companies see that you've entered these hackathons and that you've got all these projects and skill sets, it's a great way to kind of get yourself out there and to get a job. So highly encourage people to continue to enter hackathons and experiment if you're looking to work in web3 now, if anyone has any initial questions they'd like to ask about the hackathon or their project or they want some specific help, feel free to paste in the chat.
00:05:45.432 - 00:06:33.710, Speaker A: And we're happy to kind of take questions and take a look at things. So you can paste a question directly. You can paste a link to discord if you asked a technical question in Discord. If you want us to look at a specific part of your project or give some feedback, feel free to share a link to your GitHub project in the chat as well. We'd love to help everyone out here. Cool. We've got Modbod here from Iran while we wait to see if anyone has any questions, Zubin, Andre, do you guys want to talk about what the judging criteria are going to be using when we judge the hackathon, what are the five things we kind of look for and rate all the projects on?
00:06:36.500 - 00:07:42.420, Speaker B: Yeah, sure, Zubin, feel free to interrupt me, but basically there are five major categories that we judge separately. The first one is UX, and it tends to be forgotten a lot, but it's actually really important because it allows us to see what you have built and also it will be main entrance to your protocol, your app, DaP, whatever to any end user. So decent UI is kind of important. I personally value more UX than the UI itself, probably because I'm terrific from CSS and really terrible in writing CSS and JavaScript code in general, but that's maybe a good suggestion for you to find some front end guy on discord if you want to add maybe Zubin on UX UI, and then we can continue to the rest of the four categories.
00:07:42.760 - 00:08:09.672, Speaker C: Yeah, sure. Look, I'm with you, Andrea. I started off my career in frontends. I was okay at it at a time, but I didn't spend a lot of time in just because browser compatibility. But it is important because it's a judgment call, right? How much you want to optimize in it? Obviously a great UI with nothing behind it. It's not going to get you that far. Ultimately, I'd focus on the UX because you want people to understand what your product does, be intuitive.
00:08:09.672 - 00:08:47.576, Speaker C: It doesn't have to be beautifully styled. In my personal opinion, I don't need it to look really awesome, I just need it to be clear and intuitive enough for me to say, okay, if I do this, if I click on this, this is what I can expect and keep in mind in my personal view. Also, the UX also includes things like your readme and your description. To me that's also part of the UX because that goes to the usability and understandability of what you're building. So a good description that's succinct and starts with a why? Not just what something does, but why that's important. You have to help the reader connect the dots between what you built and why that matters. Right.
00:08:47.576 - 00:08:58.750, Speaker C: So don't just describe what, but also why that matters. I think that aids enormously to Ux and can compensate. It's faster to write a description than it is just style CSs. So keep that in mind.
00:09:00.560 - 00:09:54.030, Speaker B: Yeah. Then the second category is like technicality. So there's where we literally deep dive into your code base to see how well your code is written. How technical was it to develop the whole DAP? Was it just, I don't know, some hackathon boilerplate template and a couple of tweet cause of cord or to manually created some libraries, et cetera. So we literally deep dive into the code base itself and try to answer the main question, how technical the solution was, and then to rank it out of like five or ten or depends on the internal agreements. So yeah, technicality, that's the core of all Hackston projects, I would say awesome.
00:09:54.480 - 00:10:45.856, Speaker A: And after that I think we have originality. So that is how original is your project? How original is the idea? Is it like just an NFT? Is it something really innovative that we haven't seen before. So we will take a look at the project in terms of the idea and what it does as a whole and judge it on. How original do we think it is? And then the last, sorry, there's one more after that. That's practicality. So how practical is your project going to be if it were on main net and used in the real world with real users? Is it something that we think people would like to use and would be able to use and would solve some kind of issue? Or is it something that's kind of not so practical? So that's the practicality criteria. And then the last one, I would say, is the wow factor, I think.
00:10:45.856 - 00:11:46.720, Speaker A: Yes, wow factor. So wow factor is not something that you can kind of really strictly define. It's basically, what kind of vibes does your project give off to the judges? What do they think and feel after they take a look at it? How impressed are they? What kind of feelings do they get after they judge it? Are they kind of like, blown away? What's the kind of feeling that the judges get after they judge a project? So, obviously, the more impressive, the more original, the more practical it is, the higher the chances are of getting, like, a higher wow factor there. So, yeah, they're the judging criteria. Each of them have an equal weighting each of those five criteria. So in an ideal world, you try and optimize for all five. But if you can't, then, for example, if you don't have any front end skills or experience, and your front end is quite basic, et cetera, then obviously you can try and focus on some of the other criteria.
00:11:46.720 - 00:12:04.440, Speaker A: Now, I think we've got a couple of questions in the chat here, guys, so let's take a look at them. First up, we have. How do you pronounce his name? Is it Piscotek?
00:12:05.580 - 00:12:11.050, Speaker B: I think it's maybe I'm wrong. There we go.
00:12:12.620 - 00:12:26.910, Speaker A: So they're asking. I was working on my project alone for some time, but now I have a team. The project is continuing, but under different leadership. Where can we ask about this? Who wants to take this one?
00:12:27.360 - 00:13:16.296, Speaker C: I'm happy. I don't know. Fisher tech, if you're still around and you want to mention it in the chat, but when you say alone for some time and now you have a team, are you talking about you have a team as part of the hackathon? Is that what you mean? Because in general, the rule is you can work on something that was there existing as long as we can see evidence of a substantial amount of work done as part of the hackathon. So we need to connect it back to what's been done as part of the hackathon and show that there's a substantial body of work, because that will be disclosed to the judges and stuff like that. And so then the assessment is, well, how much of this was actually done in the hackathon? Because we don't want people's past projects, as you can imagine, giving someone an unfair advantage. So as long as there's been a substantial addition as part of the hackathon, it should be okay. The fact that you have a new team I don't believe is relevant, or new leadership.
00:13:16.328 - 00:13:17.680, Speaker B: I don't believe that's relevant.
00:13:18.100 - 00:13:50.196, Speaker A: Yeah. So if it's just literally new people in the team or change leadership within the team within the same project, that's absolutely fine. There's no issue there. But if there's more kind of details around, as Ubun said, that the project itself and what's being done compared to previous works, et maybe, maybe reach out to us and we can kind of take a closer look. Awesome. Thank you. So we have another question in the chat here from Ellie.
00:13:50.196 - 00:13:55.888, Speaker A: Is it too late to join the hackathon? I didn't know of it until now, Harry.
00:13:55.924 - 00:14:16.544, Speaker C: I posted an answer in the chat, but we can put the link up. Let me actually, if you don't mind putting the link up here. There you go. So that's where people can still register. However, submissions do end 9 June. That's still enough time. So we'd encourage you that if you've got something you'd like to contribute, jump in there and you can register here.
00:14:16.544 - 00:14:28.310, Speaker C: And you can find all the details here and also the submission deadlines listed there. So it's 11:45 p.m. Eastern standard Time, which think of it as New York time is when it'll end.
00:14:29.000 - 00:14:56.290, Speaker A: Yeah. You've still got over a week, right? So over a week is definitely enough time to hack something together. So highly encourage you if you're thinking of joining. Still, it's not too late to join, join, sign up, take a look at our docs, take a look at the prices, the different tracks, and get hacking, because we'd still love to see your project. And it's definitely not too late to join. Thank you for asking. Cool.
00:14:56.290 - 00:15:09.616, Speaker A: So we have another question in the chat here from Charif Muse. Is there any example of hard hat tests with chaining functions? Andre, I'll let you take this one. We were just talking about this one yesterday.
00:15:09.808 - 00:15:45.488, Speaker B: Good one. Yeah. So I think last Wednesday during one of the hackathon office hours. By the way, we have regularly hackathon office hours on Discord. There is announcements on general channel where you can find the whole schedule and which DA is with you. So maybe you were there or some other ones, but basically the same question was asked there. At the moment, our starter kit does not have tests because functions is still in beta and we're working on some other stuff, but we're really happy to add them soon.
00:15:45.488 - 00:16:45.068, Speaker B: Or you can open PR, help us earn some pops, et cetera. So at the moment for unit tests, it's pretty simple. So you can just mock function stuff and see and literally mock the function stuff and say if the response or callback or whatever value is this one, then unit test will do this thing, this thing, this thing. For integrational tests, there are some integrational tests in harkist architects for data feeds and any API examples, which requires you to turn on the forking mode. So you can do the same thing with functions and to build that into your Ci CD pipeline. Or you can just run MPx functions hardhead simulate, and you will literally simulate the environment. So, long story short, we don't have tests written yet, but you can just read how we did it for other projects like data feeds or randomness, and it's going to be pretty similar principle.
00:16:45.068 - 00:16:46.930, Speaker B: Hope that answers your question.
00:16:48.840 - 00:17:17.084, Speaker A: Awesome. Thank you. Thank you for that question. So next up, Melissa's asked us a couple of VRF questions, so let's take a look at these ones. So I'm trying to use VRF to randomly select a subset of addresses from an array of addresses up to 400. But I think I hit the callback gas limit for a subset around 80. I'm not sure if the rest of that question was cut off.
00:17:17.122 - 00:17:21.820, Speaker C: I'm guessing it's continued further down. Actually, Harry, a couple of chats down.
00:17:21.890 - 00:17:22.364, Speaker B: Yeah.
00:17:22.482 - 00:17:47.590, Speaker A: Okay. Is there a way I can execute more logic with VRF without another transaction? Who wants to tackle this one? That one's interesting. 400. But I hit a gas limit. So we're saying the gas limit is being hit at around 80 instead of 400, is that right?
00:17:48.440 - 00:18:26.540, Speaker B: Yeah, I think so. There are a couple of ways here. So I will first try to optimize that if you have like a loop of array, whatever. Maybe to try to optimize your code to spend less gas, if that can help. Then maybe try to separate that address in the batches so you have multiple requests, and then by VRF request ID you can track requests. It's really hard because I can see the code. Maybe some of you guys have some other idea.
00:18:26.540 - 00:18:34.100, Speaker B: But I will try maybe to one optimize code and if that's not enough to try to batch requests.
00:18:34.760 - 00:18:43.850, Speaker A: Yeah, makes sense. So VRF has a callback gas limit parameter or setting, right?
00:18:44.700 - 00:18:48.920, Speaker B: Yeah, it's present in the docs. It's like a fixed value, depends on the chain.
00:18:49.980 - 00:18:51.416, Speaker A: Okay. It's a fixed value.
00:18:51.518 - 00:19:07.440, Speaker B: Yeah, it is like a capped gas limit. So it will not execute if your function costs more than that. Limit per chain. Like depends on the chain. Testnet, main net, whatever. So those values are present in the docs.
00:19:08.980 - 00:19:18.420, Speaker A: Sorry, maybe I'm thinking of something else. The callback gas limit in VRF is configurable at the smart contract level, right?
00:19:18.570 - 00:19:35.720, Speaker B: Yeah, but there is like a hard cap of that value. You cannot per chain value. Yeah, greater than you can set to lower one. But I think like 200 something thousand is like a limit for sepolia, something like that. Double check.
00:19:35.790 - 00:20:10.756, Speaker A: Yeah. So I guess one thing to check is are you setting that value to the max level for the chain as well? Because if you're not, then you can obviously increase that and that might help you a little bit as well. Cool. Okay, thanks for that Melissa. I hope that helps a little bit. And yeah, if you have any more follow up questions in regards to that, definitely recommend asking in the chainlink discord or creating a stack overflow post. So just another bit of alpha fur for everyone.
00:20:10.756 - 00:20:59.684, Speaker A: We monitor stack overflow and stack exchange for any questions that are tagged chainlink and we will respond to those. So if you have some code that you want to show or an error or an issue and you're not getting the kind of help you need in discord, create a post on stack overflow or stack exchange tag chainlink. Make sure your question is clearly defined in terms of what you're trying to achieve. Make sure you post your code sample in there and we will usually respond to it usually within a couple of days or so. Cool, thank you. Next up, we have lo here asking what criteria will we be using to evaluate the projects in the hackathon? So we actually just talked about this. So I think if you were in the live stream earlier, if you weren't in there, maybe you just missed out on this.
00:20:59.684 - 00:21:29.100, Speaker A: So we won't go through it again. But I highly recommend watching this live stream again once it ends and catching the first five minutes because we literally talk about it for the first few minutes. So thank you for asking. And yeah, you can definitely get the answers you need if you just check this recording again once it ends. Next up, we have a good friend Tippy here. What's up tippy? Asking what other things that Chainlink can do on optimism.
00:21:30.960 - 00:21:38.690, Speaker B: I think I'll need to double check on the doc, but data feeds and any API on optimism at the moment.
00:21:41.060 - 00:21:46.720, Speaker A: Yeah, I will take a look. So we have data? Yep.
00:21:49.720 - 00:22:03.348, Speaker C: Yeah, I just took a look at something as well and it is price feeds, data feeds and automation. Data feeds and automation?
00:22:03.524 - 00:22:06.570, Speaker A: Yeah, data feeds, API calls and.
00:22:08.940 - 00:22:09.256, Speaker B: Are.
00:22:09.278 - 00:22:10.680, Speaker A: You sure about automation?
00:22:11.440 - 00:22:19.790, Speaker C: Yeah, that says of September 2020, sorry, May 2023 or something.
00:22:23.280 - 00:22:24.030, Speaker A: Okay.
00:22:24.420 - 00:22:32.336, Speaker C: I mean, I'm looking at it immediately on partner email. Sorry partner, what do you call a.
00:22:32.358 - 00:22:34.448, Speaker B: Website, but I'm pretty sure.
00:22:34.534 - 00:22:37.056, Speaker C: Yeah, I can see that's price feed.
00:22:37.088 - 00:22:58.788, Speaker A: Sorry, automation is live but only on main net. So not testnet yet. So data fees and API calls for Testnet and Mainnet and automation for Mainnet. Right now. Obviously going forward we're hoping to have more services live. Thanks, Tiffany.
00:22:58.964 - 00:23:22.450, Speaker B: Yeah, the nice thing about the documentation, if you go to the home page, you will see next to all of these services, you will see near logos for all of the chains. And if you go to contract addresses tab for all of these services, you will see literally available chains. So I think that's very well organized by the Docs team.
00:23:23.300 - 00:24:09.632, Speaker A: Yeah, I'll just show everyone quickly while we have a spam in it. So I'm at docs chain link here and as you go down you can see the products and then you see all of the chains that it's live on here. So if you go down to, for example, API calls, you can see optimism and data feeds. And then as Andre says, if you go into the specific product itself, there's usually a supported networks section that you can then go and find the network specific configs and details that you need. Cool, thanks. Let's move on to the next question. So this is from Domini G.
00:24:09.632 - 00:24:18.210, Speaker A: Is there an example of using chaining automation but using automation on a function that is not available for any wallet to call?
00:24:18.660 - 00:24:24.630, Speaker C: So Harry, there's a part two to the question which clarifies a bit more further down. You may want to throw that up on the screen as.
00:24:25.080 - 00:24:36.410, Speaker A: Yeah, I watched a training tutorial for automation, but the example speaker had used an external function with no whitelisting or only owner modifiers or anything.
00:24:38.220 - 00:25:05.116, Speaker C: I guess. Dominique, the question is, when you say not available for any wallet to call in your original question, are you saying that it's an internal or private. I mean the automation is an external network. So it is going to call, it has to be callable externally or by the owner, right. Someone has to call the callback function that the keeper's network, which is what automation is. Sorry, used to be called. It's now called automation.
00:25:05.116 - 00:25:16.596, Speaker C: So automation has to call a function and that's not coming internally. That function can call another internal function, but to trigger the automation, you'd have to have it callable, right?
00:25:16.778 - 00:26:19.588, Speaker A: Yeah. So automation, the solution itself is decentralized, right? So you have a network of nodes all kind of working together to do some kind of work, which is usually a function call based on some conditions. And if you're trying to have a private function that can only get called or a restricted function that can only get called by certain accounts or wallet addresses, it's kind of hard to do unless you know all of the accounts EOAs of the automation nodes, because it could be any one of them that ends up calling your function, right. It could be one of however many there on a test net, let's say it's four or eight, I'm not sure. So you'd need to know all of those accounts and then to add them to your logic in your function so that only those can call your function. So I have not seen it done before, Andre. I don't even know if it's possible if we list the EOAs of each of the nodes.
00:26:19.588 - 00:26:20.520, Speaker A: Do you know?
00:26:20.670 - 00:27:04.056, Speaker B: I think I understood the question. So if you want to limit that, your function is callable only by automation. So as Harry and Zubin said, there is literally a network of nodes called dawn decentralized Oracle network which can perform automation. But this network communicates with your contract via something called automation register smart contract. So you can create like a modifier which will say something like require that message sender equals to automation register contract only. And that way you can limit that. Only automation can actually call that function and no one else.
00:27:04.056 - 00:28:12.670, Speaker B: Then you can tweak it to say like message sender equal to automation register contract or owner, for example. And then you will have like a modifier which will limit to be called by automation or by yourself if you want to execute it manually, et cetera, et cetera. The thing with automation is that if you want to test it like for unit integrational tests, that's really easy because you can call it manually. But what I do usually is when I'm creating automation compatible contracts, you can simulate after you set up everything and created like, I don't know and created the automation subscription on Testnet, et cetera. You can use tenderly actually, and then you can specify literally address of some contracts of message sender and then you can go to the docs and select automation register and see actually whether it's going to be executed or be a failed transaction. So something like that, if I understood the question correctly, of course, could help you with the issue.
00:28:13.120 - 00:28:21.520, Speaker A: Yeah, thanks Andre. And there was a follow up comment here, so there's no automation parameter where I can have the Don sign a transaction on my behalf.
00:28:25.380 - 00:28:31.030, Speaker B: I don't think that's possible, at least from the smart contract side.
00:28:33.080 - 00:29:01.630, Speaker C: No, I don't think so. Also wondering what the benefit of having the leader in the dawn sign a transaction would be. I mean, there's no need for a consensus specifically there, except if there's data to be executed as part of keepers in the simulation before it actually calls. Questionable what the need for that would be.
00:29:02.320 - 00:29:24.070, Speaker A: Sure. Thanks Domini. And yeah, if you take a listen again after if you didn't catch all that in terms of what Andre was talking about, if you're still having issues, reach out to us in the discord or like I said earlier, create a post on stack overflow with your code and what you're trying to achieve. Tag chain link and we'll take a closer look at it. Thanks.
00:29:26.360 - 00:29:42.708, Speaker B: Yes, I think there should be like a stack overflow question asking the similar thing like this. I can Google it later for you. I think I answered actually that you.
00:29:42.734 - 00:30:03.676, Speaker A: Think, you think it's come up before. Yeah, awesome. Next up we have Tippy, who's asking what API calls and functions are in terms of their differences. And yes, automation is the new name for chain link keepers. By the way, Zubin, did you want to take this one on functions versus API calls?
00:30:03.868 - 00:31:00.028, Speaker C: Yeah, sure. So when you say, I mean there could be the NEi API, there could be the ones with external adapters, but basically ultimately it's a way of fetching data from external APIs and then doing some amount of processing on them, or rather when you use the old way of doing it, which is any API. So functions is meant to replace any API and external adapters because it's much more flexible. Plus you can do things like posting out. So it's not just get requests, you can actually post out and you can do compute off chain and get consensus. That's what's really unique about functions is you can do your custom compute with your custom code and you get OCR consensus applied to it. Right now it's much faster to do the functions because you do the entire end to end process and you don't need to spin up a node and you don't need to work with node operators and it gives you a lot more flexibility.
00:31:00.028 - 00:31:23.080, Speaker C: So if you did it in any API and external adapter way, you'd have to write the adapter, you'd have to host the adapter, you'd have to spin up a node, blah, blah, blah, blah. There's lots of steps like we're talking about dozens of hours of fairly advanced developer time, right? We don't have to do any of that with functions. It's significantly faster than that and more flexible and more computational, heavy lifting.
00:31:23.740 - 00:32:02.712, Speaker A: Yeah, great answer. So with functions, the idea is that if you want to do API calls, you can do it in minutes, right? Not hours. Like super said, you can do it in minutes and have it working in your project and you have the benefit of the consensus. So it's more trust minimized than relying on one node that yourself or some node operator has to have running. So you're basically offloading the work to a decentralized oracle network. The same nodes that power our data feeds, that power billions in TVL. So you're letting them do the work for you, you're letting them handle the infrastructure for you, and you're basically just submitting the code that you want them to run.
00:32:02.712 - 00:33:20.204, Speaker A: That includes the API calls, right? So yeah, functions is definitely something we're going to continue to push as the product matures because we really feel that it empowers developers to open up a whole bunch of use cases for smart contracts without having to have the extra overheads of running nodes and hosting external adapters and all that kind of stuff. Okay, let's move on. So, yeah, we've got Dominique here talking about their use case. I'm running a contract that emits an event of the topic of the week. Someone could grab the address and trigger the contact contract function themselves ahead of automation. There's no money at risk, but it's still a security vulnerability I'm concerned about. So if your use case revolves around time, like something that happens, like at the end of each week or something, and you're concerned about someone doing it themselves instead of the automation network, you could introduce a time based check as well that says, hey, it's too early to publish.
00:33:20.204 - 00:34:14.448, Speaker A: The next topic of the week, let's revert this transaction. And that could also kind of prevent someone from doing it manually and then let's say the end of the week or the specific time that you want it to be executed comes when the automation network is meant to do it. If someone chooses to do it themselves manually, then maybe it's not a big deal because then you could also have a check in there to see when the last one was done, and then when the automation network runs, it might go and see, oh, someone did it like ten minutes ago or 20 minutes ago, I don't need to do this anymore. And then you can make the condition to just kind of skip and not do anything. So that's another way you could kind of get around that kind of problem. If your scenario revolves around doing something based on a specific time or cadence, such as every week. Cool.
00:34:14.448 - 00:34:51.710, Speaker A: Okay. If there are any other questions on the hackathon specifically or your project, feel free to ask us in the chat. We're happy to hang around for a few more minutes, and we encourage people to ask their questions in the chat just quickly as well. I really want to encourage everyone to just make sure you submit your project. So even if you have not completed it to the level you want it to be at, even if you think it's only half done, even if you think it's a quarter done, even if you think it sucks, we want to see every project, right? We want to take a look at everything. So please make sure you submit your project. That's the most important thing.
00:34:51.710 - 00:35:42.540, Speaker A: You'll definitely feel a lot better submitting it, and we'd love to see everything. So just wanted to reiterate that we definitely want to see your project and to please submit what you have by the end of the hackathon hacking time, which I think is June the 9th. If you're not sure how to submit, I'm pretty sure there's going to be some emails being sent out soon and it will give you some clear instructions there. But essentially you need to go to the hackathon homepage on Dev post, which I think we pasted further up in the chat, but we can paste again, and you need to basically submit your project via the dev post submission page. We have a really interesting question here. Who wants to tackle this one? What is a hackathon?
00:35:44.080 - 00:36:31.852, Speaker C: It's actually a question that I wasn't entirely clear with the answer on, like I think in 2018 or 19 when I was learning to code. I'm happy to take that one. First up, there's no one definition, but there are certain principles for what a hackathon is, right? It's basically people coming together to build a proof of concept or a minimum viable product or a demo version of something for the Chainlink hackathon? Yes, we do require code that changes state and actually uses Chainlink services or some of the partner service and so on. But most teams don't have developers. Sorry, most teams are not 100% developer. The people in the team are not always developers. So you do have multiple disciplines coming together.
00:36:31.852 - 00:37:24.168, Speaker C: You come together, you put together some ideas, you try and solve a problem that's worth solving, and then each of you works out what's the minimum required from your skill set. That when combined with everybody else's skill set, produces something that demonstrates that you're on the path. You don't have to complete it, it doesn't have to look beautiful. It's not a fully formed solution, but it is a viable looking solution to the problem you're trying to solve, and you combine your skill set to produce that minimum viable thing. Now, I've been in hackathons where you can just demo on a PowerPoint or slides. That's not the level that you'd want to do it here in this hackathon, in the chain link hackathon, you definitely want to do something that changes state on a blockchain and uses some of chain link services. But the idea is solve a problem with a team that is valuable to the community and do the minimum required to demonstrate that you're on the path to solving that problem viably.
00:37:24.168 - 00:37:26.990, Speaker C: That's my interpretation of what a hackathon is.
00:37:28.180 - 00:38:00.116, Speaker A: Yeah, Tippy actually asked me this question at the last smartcon. I'm pretty sure it was because we kind of think that hackathon is not the most descriptive name for what you kind of do. And there were some questions around what is a better name for a hackathon? That kind of describes it a little bit better. And it was a tough question, but thanks for asking that, Sonny. Let's move on now. We got some feedback on the office hours here. Thanks, sheriff.
00:38:00.116 - 00:38:48.452, Speaker A: We're going to take a look at this because, yeah, you should be able to share your screen during office hours. I will take a look at that after this live stream. Next up, we have another question here from Tippy. What is the saddest thing about web3 right now, in your opinion? So I guess from my point of view it would be the DFI exploits that I see happening still a lot of the time. So almost every week there's some kind of exploit still happening in the DFI space where a smart contract gets exploited, usually to the tune of millions of dollars. And that's kind of sad because that's kind of people's money that's kind of being lost. And I think we definitely still need to do better in making these programs and protocols more secure and better protected against these kinds of vulnerabilities.
00:38:48.452 - 00:39:15.330, Speaker A: And some of them are new things that haven't come around before and things that we can't have foreseen. But a lot of them are actually just the same kind of issue that's happened before happening again. So they're the ones that kind of make it a little bit sad, because you'd think that people would take a look at all the things that happened in the past, but that's not always the case. So that's probably my answer. I don't know about you guys.
00:39:16.580 - 00:40:22.244, Speaker B: Good one. I think for me that will be phishing scams sort of thing. Like when people tend to DM you on discord and sends you like, a phishy URLs for some airdrop claiming website and asks you to either sign something with your wallet or to enter and provide your mnemonic phrase, or when you want to tweet something about whatever protocol X. And then dozens of bots will pop up into replies and more sophisticated ones when they will send you some dummy NFTs or tokens, and then you'll try to claim something and then wipe your whole wallet, address wallet, et cetera. That's kind of sad to me, because these things are hard for beginners. Don't make them even harder by scare people to click and perform any on chain actions just because you're greedy, let's say. So.
00:40:22.244 - 00:40:25.540, Speaker B: Yeah, that's sad about the space, in my opinion.
00:40:25.880 - 00:40:38.052, Speaker C: Andre, I totally feel I have a solution. I'm going to send you a link, click on it. You'll be saved from any other future box of scams. Okay, I'm going to send you a link right now. Guaranteed lifetime airdrop scam free. No problems.
00:40:38.206 - 00:40:39.310, Speaker B: Please do it.
00:40:40.880 - 00:41:35.084, Speaker C: Yeah, look, I sort of second everything that Harry Andre said, but I guess if I didn't want to repeat what they've said. The one thing that it's not necessarily unique to web3, but I think it's fairly pronounced in web3. This is going to be a bit of a sort of social philosophical point, okay. But I actually think that web3 stands for idealism, but we've sort of made it about ideology. It's meant to be about a better way of doing things. And there's a little bit of a narrative in the space about are we the best? It's not about being the best, it's about being better as a civilization. And I think there's a philosophical issue here, but also I think we can't expect the technology to change and get us closer to the ideal without us wanting to change who we are as people as well.
00:41:35.084 - 00:42:03.352, Speaker C: Right. And I think we bring a lot of the old tribalism and the old attitudes into the web3 space, and that's a counterforce to everything that the technology can do for us. If we bring our own mentality, then we're kind of getting in the way of the technology that we try to push forward. Right. So that's more of a sort of very high level philosophical point of view. But, yeah, that's something that sort of troubles me every now and then. If we're not going to be different, the technology is not going to solve everything.
00:42:03.352 - 00:42:05.130, Speaker C: We've got to change ourselves as well.
00:42:06.380 - 00:42:29.760, Speaker A: Yeah. Great answers there. Thank you. Okay, just a reminder, if you have any questions you want to ask about your project or the hackathon in general, feel free to ask us in the chat. We'll hang around for just a few more minutes here. So next up, we have a question here. Is flow a blockchain like polygon? The answer is yes, flow is its own blockchain.
00:42:29.760 - 00:43:03.210, Speaker A: It's fast, it's developer friendly, it's got multi role architecture. Let me share a link here in the chat. In case you haven't seen, they've got some really good docs, by the way, highly recommend checking them out. So there's some cool stuff that's been built on flow. It's definitely something that's piked my interest lately and something I'm going to continue to take a look at. And I know that there is a flow track as part of this hackathon. So there's some good prize money available if you build something on flow, so highly recommend to check it out if that interests you.
00:43:03.210 - 00:43:26.610, Speaker A: Cool. So yeah, if you have any other questions, please ask us. We'll hang around for just a few more minutes. Otherwise, I've already talked about making sure that you submit anything else you guys want to add in terms of this hackathon and projects or anything like that.
00:43:31.080 - 00:44:01.772, Speaker B: I think it's really important for you. I don't know how much of time you're going to investigate, but in creating a good presentational video. So when you submit projects, you will need to record a three minute video. Three minutes if I'm not mistaken. So please respect others time. So don't make it like seven or ten or whatever. So that's number one, make sure that in that video you show your UI, your front end, whatever.
00:44:01.772 - 00:44:28.756, Speaker B: Like how you imagine that users are going to interact with your protocol. There is no need. I mean, it's good if you have time, but if you don't have time, for example, you need to cut some part of the video out. You can cut out the part where you're explaining the code itself because the judges will go into the code itself. So you don't need to waste a couple of minutes there just explaining them. And also it will be good if you can create a couple of slides. Two, three.
00:44:28.756 - 00:45:05.808, Speaker B: It can go without slides, but like, slides are good because it can represent your product vision. So what you imagine that your product will be after this hackathon because it's impossible to create. Like for example, new Google, it's a hackathon, but you can create some cool proof of concept, some pic and something. And then when you go to production one day, hopefully make sure to show us how you imagine that project is going to evolve. And yeah, that will be my key takeaways from this thing on video for.
00:45:05.974 - 00:45:39.356, Speaker A: Yeah, great points. The video is incredibly important because that's kind of almost like the face of your submission. That's something that all the judges will take a look at. And yeah, as Andre said, keep it short and succinct. Three minutes is ideal. Less than five minutes is highly recommended. Anything longer, and I don't know about the other judges, but we may not have as much attention on the video if it's like some 1020 minutes monster video or something like that, or we may skip through some of it.
00:45:39.356 - 00:45:53.728, Speaker A: So three to five minutes, perfect length, show your thing actually being used. And as Andre said, if you can have a couple of slides, that helps too, although absolutely not 100% required. But yeah, great point on the video there. I forgot to mention that one.
00:45:53.894 - 00:46:29.132, Speaker C: Yeah, can I just jump in as well, Harry? I'm just going to put the rules up here so you can see the submission requirements in the rules section. But guys, a couple of things that we notice happens every year. Like, you guys work so hard and then you forget to make the repo accessible. Please make it accessible so we can look at the code. Keep in mind that judges have hundreds of thousands of submissions that they need to go through. And while there's time to do all that, obviously there's a certain pace that needs to be maintained. And it's really important that we have access to your repos so that we can look at the code and actually see what's being used.
00:46:29.132 - 00:46:45.010, Speaker C: So in addition to the videos, which is critical, make sure that all your hard work is actually visible so that it can be examined and judged and evaluated and assessed. So don't do yourself the disservice of forgetting to make it public. And then you kind of miss out on stuff.
00:46:45.380 - 00:47:28.064, Speaker A: Yeah, great point. Because each project gets judged by multiple people, usually I think at least two, most likely three. And then each score is then those three scores are then kind of aggregated into a single result. But because we're kind of maintaining a pace, if we get to your project and we can't see the code or you have a Google Doc or a Google Slide link or something, we can't see it. Or if you have a YouTube video that's private, it's like, what's going on here? We can't see this, and then we have to flag it as something we can't see. And then we have to circle back and find emails from the submission and email people and say, hey, make this thing public so that we can see it. And then sometimes they may not respond in time and things like that.
00:47:28.064 - 00:48:11.084, Speaker A: So yes, please make sure everything is public when you submit it. Make sure that even if you open it in an incognito tab or something in the browser, make sure that we will be able to see all of your hard work. So, yeah, great point. Subin cool. Any final questions we encourage you to ask us in the chat now, otherwise we'll probably end it in a couple of minutes. So, just to close things off, what kind of projects are you most excited to see? Andre and Zubin? I know for myself I'm a big fan of Defi. Bit of a Defi degen myself, although not as much these days.
00:48:11.084 - 00:48:26.130, Speaker A: I'm always excited about new Defi protocols being launched and some of the new financial instruments and primitives that people kind of come up with in these hackathons. So I'm excited to see what kind of cool new DeFi things are born out of this hackathon. What about you guys?
00:48:29.060 - 00:48:53.516, Speaker B: I don't know. For me, I think for the first time we have AI track this year with functions like it's possible. So maybe it's something with functions that combine AI that would be like cool use case. I don't know, I cannot imagine it at the moment, but maybe something around that that actually has a proper use case would be like a killer app, but we'll see.
00:48:53.578 - 00:48:54.190, Speaker A: Yeah.
00:48:57.280 - 00:49:04.472, Speaker C: I'm openly and unabashedly and shamelessly a functions not right. I'm such a fanatic for functions.
00:49:04.536 - 00:49:05.630, Speaker B: It's so great.
00:49:06.560 - 00:49:45.272, Speaker C: I was trying to tell my mom about functions and she's like, I do not understand. You're using english words, but none of them mean anything to me. I'm like, this is so cool, right? So I'm a total functions nut. Like, it's just incredible. Yeah, I'd love to see what people build with functions, especially because it's such a game changer and many heads are always better than one when it comes to ideating. So it's that perfect combination of all the cryptographic guarantees we love in blockchain with access to the rest of the Internet infrastructure and world out there. And, I mean, I can't think of anything more explosive than that.
00:49:45.272 - 00:49:52.156, Speaker C: So, yeah, super excited, guys. If you do stuff with AI as well, great. Even better, right?
00:49:52.338 - 00:50:50.000, Speaker A: Yeah. So functions is your gateway to AI and chat GPT, as well as any other kind of off chain service. So the cool thing about functions, as Zubin was saying, is it really opens up the possibilities of what you can do with a smart contract. And so it's exciting to see what kind of submissions we're going to get because you can connect a smart contract to chat GPT, you can connect a smart contract to Spotify API, you can connect a smart contract to eventbrite and concert ticketing systems, you can connect it to enterprise database systems, payment processes like stripe, you can connect it to Instagram and TikTok APIs and get kind of web two social media data, et cetera. Like, the opportunities are literally endless. So very excited to see what comes out of this hackathon, seeing as it's the first one where we have functions where you can easily access these services from your smart contract in literally minutes. So very excited.
00:50:50.000 - 00:50:54.736, Speaker A: Cool. Okay. I don't think we have any questions in the chat here.
00:50:54.918 - 00:51:06.212, Speaker C: No. Except that we've made Harry. Except that we've made Tippy sad. Now look at that. We made him sad. Now how do we cheer Tippy up? This is something we can't let him be sad. Come on, Tiffy, cheer up.
00:51:06.212 - 00:51:08.710, Speaker C: Chin up. This is the opportunity for all of us.
00:51:10.760 - 00:51:18.440, Speaker A: I think we can make Tippy happy if he should come to Barcelona and I'll buy him some sangria or something at Smartcon.
00:51:18.940 - 00:51:25.256, Speaker C: And Andre will airdrop you some tokens of questionable sort of background if you come to Barcelona and hang out with.
00:51:25.278 - 00:51:30.830, Speaker B: Us, Tippy, I can airdrop the second round of Sangria. That's fine.
00:51:32.320 - 00:51:59.844, Speaker A: Awesome. So, yeah, just a reminder to everyone please submit your project. No matter what the state is, we want to see all the submissions. If you still need help going forward, we have another nine or so days or ten days in the hackathon left, I think. If you still need help, ask us in the discord. Ask us on stack overflow, ask us on stack exchange. Make sure you tag chain link if you ask on those websites, but they're kind of the main places to get help.
00:51:59.844 - 00:52:28.252, Speaker A: And yeah, we can't wait to see what everyone submits. So we have one final late breaking question here. Is there a tutorial about using the new functions feature? Yes, so we have some tutorials in the docs. Awesome. Thanks for that. So please check out the link that we just put there in the chat which links to the docs. There are multiple tutorials in that as well.
00:52:28.252 - 00:52:38.370, Speaker A: And if you go to the chain link YouTube channel, there is a video on functions as well which let me just find that one.
00:52:40.840 - 00:52:42.390, Speaker B: Couple of them actually.
00:52:54.060 - 00:53:15.608, Speaker A: If you check out that link I just posted in the chat, that's the developer walkthrough for chaining functions done by developer advocate Richard back when he had his beard. Recommend checking that out as well. Cool. Awesome. All right, thank you for everyone. Really looking forward to seeing what everyone submits. And please don't hesitate to reach out to us in discord and stack overflow.
00:53:15.608 - 00:53:30.980, Speaker A: Stack exchange if you have further technical questions. We want to make sure that you're successful in your submission and we want to make sure that you submit. We want to see as many cool submissions as possible as part of this hackathon. Thank you. Thank you Zubin. And thank you Andre.
00:53:32.520 - 00:53:33.670, Speaker B: Thank you guys.
00:53:34.360 - 00:53:36.016, Speaker A: Cool, thank you. Bye.
