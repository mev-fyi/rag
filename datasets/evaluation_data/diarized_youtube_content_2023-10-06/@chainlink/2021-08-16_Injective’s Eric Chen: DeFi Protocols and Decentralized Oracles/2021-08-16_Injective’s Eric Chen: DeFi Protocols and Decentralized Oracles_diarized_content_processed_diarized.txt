00:00:05.290 - 00:00:55.962, Speaker A: Hey guys, this is Eric from injective protocol. Really glad to spend the time with you guys and talk about tag vectors for oracles and the security of oracles, especially with regards to derivatives. So obviously injective labs during the phase of social assessment, we process a lot of transaction and we've seen, you know, more than 10,000 trades per day and also like a billion dollar in notional value. So basically we had a lot of learnings in terms of how important are oracles to these derivative markets. And a short answer is the security of the oracle equals to the derivative market. Basically during a course of sosas and later on equinox testnet, we noticed a lot of delays and a lot of very micro factors that could contribute a lot to the overall security and scalability of the derivative markets. So let's talk about the impact of oracles.
00:00:55.962 - 00:01:50.782, Speaker A: Obviously the oracle failure, especially for any type of DeFi projects, lending protocols, derivatives, is extremely detrimental. We've seen it in both the traditional finance and also in centralized crypto exchanges and more importantly in DFI. Synthetic had a korean wand issue that created a billion dollar in potential profit compound, had an incident that caused a massive liquidation of 85 million, and Bitmax has caused multiple manipulable price feeds and also oracle issues that has cost 4 million historically. Now, Bitmax's case is actually very interesting because it was a centralized oracle on a centralized exchange, but due to the selection of the source price, it actually created a lot of issues that went kind of unanticipated by the traditional traders. So when we look at oracles, we generally evaluate them based on three factors. Number one is the quality of price feed. Number two is the security of the oracle, and number three is the reliability of it.
00:01:50.782 - 00:02:27.670, Speaker A: So obviously in terms of the quality of price feed, it's extremely important for any type of derivative market. First of all, you want to make sure there's low delay or no delay. There should be minimum delay between the collection and aggregation of the source price feed to onchain enforcement. As you know that Ethereum has a 15 2nd block time and a lot of oracle prices. Follow that standard and try to feed price based on the intervals or the multiples of 15 seconds. And oftentimes we see a lot of oracle solutions. We would have a 1 minute delay in terms of on chain enforcement or on chain submission from the aggregation and generation or price feed.
00:02:27.670 - 00:03:22.170, Speaker A: So let's say in a perpetual saw market, if you want to have a sufficiently high leverage for any type of market, you generally want to enforce a three minute t wap to prevent any type of crazy market swings during that three minute window. But since the Oracle aggregation and collection and submission takes around 1 minute, that creates a very weird and strange market dynamic because you are effectively delaying the execution and settlement of the contracts. And that also means that the contract price, due to the lack of liquidation, is implicitly delayed by 1 minute. And on chain price obviously fails to capture 25% of the price data. Within this scenario, we can go into a more concrete example, and this is one of the edge cases that often happen within DFI. And this is what we generally call a clawback. A million dollar position is set to be liquidated at 100 and the bankruptcy price is $90.
00:03:22.170 - 00:04:12.090, Speaker A: So generally we would assume that this is a ten x leverage position. A three minute t wallet is currently sitting at around 99.5, but during that 1 minute, let's say there's a black swan event happen and the underlying market crashes to $80 in the 1 minute window. So when the price feed is posted on chain, the million dollar position is liquidated, well, at least supposed to be liquidated, but the current market is already trading at $80. And after the next t one window, when it's posted on chain, the position will be liquidated at a price lower than $80. And this means that no one can liquidate this position without posting a loss to the insurance fund or to the balance sheet of anyone trying to liquidate. Another very interesting thing that people often overlook is the liquidity.
00:04:12.090 - 00:05:18.670, Speaker A: The price feed should accurately represent the global liquidity to a reasonable extent. So that means if you're posting a price feed on bitcoin or ethereum, one of the more liquid markets, you should have maximum market coverage rather than focus or aggregate it from a selective few exchange. If the underlying price source only represents a very small fraction of the global liquidity, it can basically bottleneck the market growth. So that means the growth of the derivative market will be tied to the growth of the underlying to make sure that the security is still in parity. So given an example, let's say injective grows at an astronomical speed and processes a billion dollar in open interest and $200 million in daily volume. The underlying market, however, only processes $10 million in daily volume on the spot market with let's say $10 million in book presence or $20 million in book presses. Then a bad actor can actually very easily financially manipulate the underlying market, basically creating a misreported price feed and affect the entire overall futures markets, which we have seen a lot on the Bidmex incidents.
00:05:18.670 - 00:06:12.370, Speaker A: But we have seen within a centralized exchange space at least this has been quickly improved upon and fixed. Another very important aspect of the price equality is aggregation. The price data should be aggregated over a twap with a very, very fine grained calculation for a wide range of at least timestamps. Because the lack of aggregation, for example, creating a fixed window of sampling within one. Let's say this oracle is creating a three minute update and it samples exactly at a three minute mark every time. Then the legal traders can basically manipulate the price of the underlying and making a large market move at that split second at the time of sample and create unfair liquidations. So this is actually very much of a bare minimum requirement for a lot of oracle price feeds.
00:06:12.370 - 00:07:33.798, Speaker A: Security of the oracle is definitely a very interesting and vague and hard to parameterize concept because more importantly, it's very hard for you to see and feel the security of an oracle. But we can have a few heuristics when it comes to evaluating these and kind of give you a comfort of mind whenever you want to pick an oracle solution. Number one is the stake bonded. For example, if an oracle has a significant stake that is essentially a honeypot for the hackers to try to take over the funds bonded to that oracle, this obviously creates an incentive and creates a requirement for people to secure that oracle network as much as possible so that that honeypot isn't being exploited. Number two is value secured. How much is the oracle is securing based on the notional value of its greater financial market? So that means if the oracle is providing price feed for a lending protocol that has over $10 billion tbl or derivative markets that have $10 billion in open interest, that means that this oracle is likely, as of right now, very much secure because those who want to exploit it would have already tried multiple times over and over again. And number three, most importantly, that is the history and the track record of the Oracle solution.
00:07:33.798 - 00:08:30.570, Speaker A: There's a lot of Oracle solutions out there. A lot of them might not necessarily have the best track record, but it's always good to see whether an Oracle solution has a very clean history that's very secure and that hasn't had a hack incident in the longest time. But obviously these parameters are bare minimum necessity and basically just a heuristic for people to decide on a blank piece of paper what Oracle solutions are going to, what Oracle solution are not. Because in the case of security, we've seen multistick wallets losing more than $160,000,000 in their second exploit. So obviously, this single incident has already broken these heuristics. Another really important thing about Oracle is reliability. Obviously when it's not hacked, when it's secure, when the data quality is good, but if there's downtime, if there's a lot of issues, if there's misreported price feed, this oracle is as good as hacked oftentimes.
00:08:30.570 - 00:09:41.698, Speaker A: So a lot of oracle networks have a history of experiencing frozen and non functional due to faulty contract upgrade. And there's a lot of issues such as misreported price feed or hanging price feed. And those are all issues to be factored in when you want to select a oracle solution. So in terms of overall, on a high level, reliability can generally be determined in the sense of a data quality range of oracle connections, reliance on randomness, which is actually a very interesting factor to consider. Development and network effects, adoption metrics, resource efficiency and network design, especially when it comes to propagation and gossiping, multi chain support and decentralization and multi chain support is actually very much of a problem that's unique to injective and a lot of other projects building as a scaling solution or a multichain deployment. Because if you ever want to explore the state on Ethereum, that would basically mean that you're getting a price feed or a quality that requires a confidence of multiple blocks being mined on top of it. So on top of the 15 seconds delay on Ethereum, you also have to face around five to ten blocks.
00:09:41.698 - 00:10:49.094, Speaker A: So that would mean around up to 150 seconds in terms of delay, which is obviously not acceptable. So this is why Chainlink's OCR is actually very exciting for injective. And that's because basically we can skip the entire step of observing Ethereum on chain event and directly getting a price feed from Chainlink and deploying to a multi chain environment. So obviously what happens when oracles are disqualified or fails? There's obviously the social and technical standpoint of things. So in terms of the most standard and the most interesting aspect, it used to be the bread and butter of injective, which is front running prevention. But oracle data providers can obviously abuse the advantage of obtaining the data ahead of a rest of the system and basically make trades and beat the on chain enforcement and make a lot of profitable trades. Another issue with oracles is that some of the poorly designed ones could face a lot of civil attacks.
00:10:49.094 - 00:12:00.410, Speaker A: And that means that basically obtaining a majority of those can allow someone to manipulate the oracle. And that is only possible, obviously, when Oracle identity is permissionless and anonymous. Another issue that we actually do face a lot, but it's not a problem that's being discussed a lot, which is selection bias. Many DeFi projects will utilize Dex price feeds to surface oracle, which is obviously prone to being manipulated because again, back to the very beginning, in terms of price quality, we want to make sure that the oracle or the price feed or price source reflects the global liquidity. Now, if you only utilize Dex price feed to service oracles, this would mean that basically you're not reflecting the global liquidity, which makes you being prone to manipulation, oftentimes flashing attacks and a lot of other things. And obviously Oracle at the end is simply an aggregation and verification channel. They might be pulling from exchange data, they might be pulling from exchange API, they might be pulling from traditional sources.
00:12:00.410 - 00:13:22.594, Speaker A: So if the data was ever manipulated on a source level, that might create another issue as well. And obviously, like we said before, there were manipulations and malfunctioning that was caused by oracles and thereby creating this premature liquidations and a lot of hanging price fee that creates a lot of hack and synthetics has faced similar issues during the earlier days. So looking forward, what's missing within the Oracle space? So first of all, there's the absence of rule and framework. So that means that basically for any type of oracle, for any type of project trying to select an oracle, you don't really know what to look for and what's deemed as secure and whether there's a standard for evaluating a security parameter and the quality of price feed. Oftentimes, especially for a lot of new DeFi products, they just go by the unison price feed, which might not necessarily be the best for their use case. There's also lack of standardization on time delay and variance. This means that basically oracle, especially when it comes to any type of derivative markets, lending market and stuff like that, the time delay is extremely key because you want to make sure that the onchain enforcement is as close to real time market as possible.
00:13:22.594 - 00:14:24.330, Speaker A: However, since the lack of standardization, this also creates a lot of issues in terms of liquidation and settlement. Another issue is the dilemma between transparency and exploitation. So first of all, Oracle wants to be as transparent as possible when it comes to their design and also security. However, by exposing their design and security and the way they source the price seed, it also invites a lot of exploitation. A good example would be that, let's say, if an exchange does not disclose how they get their price source from. While this is extremely untransparent, and that's heavily discouraged within the crypto space, there's also no way for people to manipulate this price feed if there were absolutely no evidence of the price source. However, on the other hand, if an exchange is very transparent with where they source the price from, the weighting of it, and also the overall collection period, then it kind of creates an incentive for people to look for any type of window to exploit this due to the timelessness of this design of Oracle.
00:14:24.330 - 00:15:02.920, Speaker A: And last but not least, the decentralized governance of oracles. Oftentimes we do see oracles are somewhat centralized and permissioned, but we do want to see, over time, evolution towards a full decentralized governance for any type of oracle solution. Thank you so much. This is kind of like the overview of what we learned about Oracle, especially for derivatives and injective is launching its canary network right now, and hopefully we'll see you once we go canonical. All right, thank you so much, Eric. Power.
