00:00:09.600 - 00:00:20.110, Speaker A: So I have here Manfred from Canoland, fede from fmos, and Dimi from Juno sitting next to me. How are you guys? Good.
00:00:20.230 - 00:00:20.890, Speaker B: Good.
00:00:21.310 - 00:00:41.920, Speaker A: Perfect. So welcome to our panel about smart contracts in the interchain. So let's start with an introduction of. Because you guys run basically three different smart contract platforms. So could you all give us an introduction of what it's all about and how it differentiates from each other?
00:00:43.380 - 00:00:47.440, Speaker C: So I actually don't run a production blockchain.
00:00:48.860 - 00:00:50.212, Speaker B: Yeah, it's not a main network.
00:00:50.316 - 00:01:38.480, Speaker C: No, it's not a main net. So I will talk about what is the current state and what we plan. Don't run production. And Roblox chain is focused on smart contracting. With a dedicated language, no kind of isolation, you can access any smart contract from any smart contract. And we have a vision of having interoperability between blockchains with IBC two and being able to not only read the state of those blockchains, but also write, make parallelized writes on any chain. So basically, we want simplicity with a new language and mass parallelism and interoperability.
00:01:39.900 - 00:02:00.220, Speaker B: Cool. I'm Federico. I'm the co founder of Atmos. I've been in the Cosmos ecosystem since 2017, where I was an intern at Tendermint one, and now I'm the co founder of Atmos. Been building the EVM interoperability on the Cosmos ecosystem since 2020.
00:02:01.840 - 00:02:23.050, Speaker D: Hi, I'm Dimi. I am protocol specialist at Stakefish, and I'm also one of the Juno founding community members. Yeah, Juno is a smart contract platform that uses cozum WaSM, and it's permissionless, and I. Anybody can develop application on it.
00:02:23.750 - 00:02:50.040, Speaker A: Yeah, the Cosmos ecosystem is pretty unique because we basically have our own communication standard called IBC. It's basically a language for blockchains to easily communicate with each other. So this basically is very unique in the crypto ecosystem. My first question is, are there maybe new use cases that develop when it comes to launching smart contracts in this interoperable ecosystem?
00:02:51.260 - 00:03:36.170, Speaker B: I can take that one. Yeah, definitely. I think interoperability offers unique possibilities for decentralized application developers to bake that into the smart contract. So, for example, we in particular have interoperable ERC 20s, but are looking to expand that. So that non EVM based chains, like, for example, Juno, that runs smart contracts, which is another VM or Cosmos hub, can also talk to smart contracts, so that itself expands the user base of the decentralized applications that are deployed on a shared state. Like an EVM or Cosmos.
00:03:37.280 - 00:04:13.380, Speaker D: Yeah, absolutely. Having interoperable smart contracts. I think it's one of the killing features of all these smart contract platform. And also from a developer perspective, it's very different to develop an application or a smart contract that interacts with multiple blockchain, especially in some kind of asynchronous way, because IBC, it's asynchronous, so you need to wait for transactions to be relayed. And so it is a new challenge for developers. And it's very interesting.
00:04:15.000 - 00:05:09.090, Speaker C: And in our case, we are trying to not fix today's problem, but see how we can do maybe something djing for the future. And we try to make the IBC spirit on the smart contract and allocating kind of big Merkel structure composed of many chains. So some examples could be like an ENS service where each blockchain does not only have its data set, but also its own implementation. And as a Dapp developer, you can maybe just call, I want to verify that user, I don't know what the original database blockchain is, and so this is the mercury tree, making some kind of microservices in the traditional world into the blockchains, allowing independence of the chain. But the IBC way of making transactions for the contract.
00:05:11.990 - 00:05:24.370, Speaker A: Fmos, Juno and Nolan basically all use different smart contract program languages. Are there maybe any issues with UX when it comes to communicating to each other?
00:05:25.430 - 00:06:05.080, Speaker B: I think the main thing that needs to be resolved is how is the interface on IVC for communicating between the two to the different languages. So I think there needs to be a specification for how to communicate smart contracts that are on the EVM, and smart contracts that are written rust on Cosmo, WASM or any other language compatible with WASMD. And so I think that's the common approach that needs to be built so that you can build like interoperable smart contracts no matter on which language they are processed.
00:06:06.580 - 00:06:21.340, Speaker D: Yeah, as soon we will have some kind of standard in IBC for cross smart contracts communication. The standard can be adopted by any language. So not only rust or solidity, but, I don't know, Golang.
00:06:21.420 - 00:07:10.650, Speaker B: Yeah, yeah. And so the main thing here is like composability. So smart contracts on one chain being able to call oracle service providers on, for example in the EVM, or you can call like Juno swap directly from a smart contract on fmos and so on. So you can create unique use cases or use special tooling that are deployed on each specific smart contract platform. And then there's also unique functionality. Coming back to your question that, that you can do with Cosmos in particular that makes different, like building a smart contract platform on Cosmos than on any other. For example, like forking the EVM.
00:07:10.650 - 00:07:22.350, Speaker B: Now you can change the economics, you can change the gas metering, you can do all sorts of things so that your smart contract platform has a unique functionality as well.
00:07:23.060 - 00:07:27.204, Speaker D: Do you think that interchange accounts can help in this process?
00:07:27.372 - 00:08:11.640, Speaker B: Yeah, I think interchange accounts can alleviate a lot of the pain points, especially around the user experience when running smart contracts. So interchange account on Juno or EVmos can control smart contracts on the other one. On the EVM itself, smart contracts are another type of account to just have the code embedded, so you could even have a smart contract control another smart contract on the other counterparty chain, in this case like Juno, where the smart contracts are like linked in a way through interchange accounts or even an IVC standard.
00:08:12.740 - 00:08:13.668, Speaker D: Amazing.
00:08:13.844 - 00:08:19.830, Speaker A: How do you think will interchain accounts basically change the crypto ecosystem, especially when it comes to Daosh?
00:08:21.800 - 00:09:16.604, Speaker B: I think interchange accounts is really relevant for managing portfolios across the entire interchain ecosystem. So one specific use cases that we've been talking about is smart wallets. So you can control ERC 20s, you can also control the smart contracts on, or you can talk to smart contracts directly on Juno, and the same applies to governance. So you can directly vote on different proposals with just one single account without having to switch any particular account. That is also relevant for DAO platforms that are basically on the interchange. So the same DaO could be managing a portfolio across different smart contract platforms.
00:09:16.732 - 00:10:20.986, Speaker D: Yeah, I totally agree. Having interchange accounts, and especially for daos, is great. For example, you can have a Dao on Dao Dao that it's an interface to run daos on Juno, and you can basically do anything you want with the assets that you have on that specific smart contracts. So for example, you have the smart contract on Juno that maybe stake on Cosmos Hub or other chains, or interact with another smart contract on Evmos for, I don't know, yield, farming, whatever we will have. So it will empower those to do anything and cross chain. So we are used to see these kind of things, but they are limited to one single chain, usually on Ethereum, having the possibility to do the same. But in a cross chain world, open world, bunch of possibilities, and we can literally compose the file on different protocols.
00:10:20.986 - 00:10:22.910, Speaker D: And this is just amazing.
00:10:23.210 - 00:11:05.060, Speaker B: Yeah. One particular use case that I'm really excited about, interchange composability and having smart contracts talk to each other is what you mentioned. Cross chain like farming, or as I call them, like interchange workflows. So you can set up a workflow in the same way that you farm on Ethereum, like using different smart contracts. Here you can create a sequence of IBC transfer, like for example, I want to talk to Esmosis and then provide liquidity and have the token. And then the token, you can transfer it to a smart contract on esMos. And then you get another token from that interaction.
00:11:05.060 - 00:11:34.320, Speaker B: And then you can send it out to Juno and then basically bake an entire workflow for farming into a single interchange transaction where you execute all of them sequentially and you can create new opportunities for farming on the interchange. And this is one particular use case that you can create by having this interoperability standards across different smart contract compatible platforms.
00:11:34.940 - 00:12:15.720, Speaker D: Yeah, I can't wait to see that. And one thing that maybe I'm a little bit concerned is that for every hop that you do in this composability route, interchange route, you are relying on the security of that specific chain. And if any of these pieces broke, then everything will fell off, right? So we need to somehow educate the user to be aware of the risk of doing these kind of things. I mean, of course all the cosmos chain are very secure, but anything can go wrong anytime.
00:12:19.310 - 00:12:48.874, Speaker C: Everything. Intelshain is something we think a lot about. Intel chain account interchain, unique gas token interchange, yes, flow of running things or powerization and considerable of transaction etcetera. So we are considering everything. And most of the time we try to think about extremes. One extreme which will be, okay, this is an IBC feature or this is a smart contract on a chain. But the bridge is very easy to use.
00:12:48.874 - 00:13:58.842, Speaker C: So any chain can say, okay, we have internship account, but technically it's that chain which manage everything. So we try to each time think about improving ux, having possibility to have one tool for the whole ecosystem, one account, one guest token, etcetera. But we try to consider, okay, should we unforce it, should we propose it? For instance, recently we decided to say that if we do some kind of staking, it won't be something core in the chain, it will always be something in the contract, because there is no need from the chain to know completely what is staking about. And we try to rethink everything to make it more flexible and say, okay, today the staking is on the chain, but tomorrow it will be maybe delegated in terms of rules, in terms of being split. So basically every, every feature antagonist, we are thinking about how we can just make it a contract on a chain, but make it easy to call it from another chain. And there just. We don't.
00:13:58.842 - 00:14:06.270, Speaker C: We didn't decide. We didn't decide anything strongly, but just for you to know, we are considering the extremes.
00:14:07.780 - 00:14:40.250, Speaker A: One thing I also want to talk more about is basically the vision of how adapt matures is very unique in cosmos, because our vision is that basically every Dapp ends up building their own chain. And you guys, you have fmosk. Noland and Juno are basically general purpose blockchains. But the vision of cosmos is. Is that every depth ends up building their own chain. So how do you approach this. This issue, and how do you see this?
00:14:40.710 - 00:15:49.080, Speaker D: Yeah, I have a very specific vision for the long term development of Juno. I don't know if the community will agree with me, but I will share about this. And basically, I see Juno not as the forever place to build your application, but rather as a kind of launch pad where you can. Oh, sorry. Where you can deploy your project quite easily. You can reach out to a very wide community, you can get engagement, and as soon your project will get big enough, you can decide to disconnect from Juno, spin up your own chain, and you can also decide to use your own validators or get interchange security from Cosmos Hub, or maybe from Juno, if we'll be a provider. And, yeah, in the roadmap, I see all the toolings that we can provide for Dapp builders to disconnect from Juno.
00:15:49.080 - 00:16:30.600, Speaker D: Later this morning, I was speaking with some guys and they pointed some very concerning, I mean, difficult topic that it's. If you want to disconnect from the Juno chain, but you are already live, you will probably have your own token that it's already logged in various chains around the cosmos through IBC. And so how can you spin up a new chain without losing the tokens that are already locked in different protocols? So this is a challenge that I think we should focus on in the future.
00:16:32.380 - 00:17:33.689, Speaker B: Yeah. I have a similar vision for fmos, where fmos plays, like a central role as an infrastructure have not only for EVM based change, but for the entire cosmos ecosystem. So the way that we see this is you first deploy your application on evmos, and then once you get maturity, you exit the state by taking the smart contract, the code, the storage, the accounts and the balances. And then you create an IVC connection to the new chain that is being created, deriving security directly from the fmos validator set. Or you can have your own chain directly be connected via IVC without renting security. But what we want is to have long term value creation for the entire ecosystem. And so we see this as a way to scale these applications and help them scale and mature into their own sovereign chain.
00:17:36.109 - 00:18:43.696, Speaker C: And we plan to keep Noland as so the first chain, not the language of the VM system. We want to keep it the official playground place to allow anyone to create anything. We don't want to make it the best place to build the biggest project. We want to encourage people to create their chain if they think they will have a special needs or special requirement in terms of performance or something. But we saw plan to make interoperable smart contracts and being able to basically be based on another chain's data or structure. We have multiple migration flow in ED, so we can start a thing somewhere, continue somewhere else by just saying the data source is a chain. During a certain time there will be a lot of transaction and one day it will be automatically only on chain on the new chain or the other approach with Merkel structure, where from d one you consider that you will always be multi chain, maybe one optimized for long time archive data, another one for microtransactions, et cetera.
00:18:43.696 - 00:18:56.780, Speaker C: So yes, we have this in mind and try to just encourage not living on one chain. So migrating from one chain to another is like just having two chains at the beginning.
00:18:57.480 - 00:19:18.320, Speaker A: Yeah, cool. One thing that I've been personally asked a lot from our community is if it's really the case that Dapps launch on a general purpose blockchain and then spin up their own chain. Isn't that bearish for the general purpose blockchain itself, or is it actually pretty good? So what are your thoughts on that?
00:19:18.660 - 00:20:18.200, Speaker B: So I see this as a way for scaling the general purpose chain and to create value by having this chain not live on the state, but live on its own sovereign chain, but still using the main applications. And this is why it's important to build like this interoperability standard for cross chain smart contract communication, so that this new chain can still benefit from the applications and services built on the general purpose chain. I think that you will be still able to talk to smart contracts by using the, in this case, like the general smart contract token from the chain. So you'll have to use that to still pay for fees, still pay for security or participate in governance, while at the same time accurate value amongst all these different chains that are using share security, etcetera.
00:20:18.740 - 00:21:01.508, Speaker D: Yeah, absolutely not bearish. It's the opposite. And actually I'm very excited to see this in the future. And it's, you know, driving back the value to the main smart contract platform, at least in the case of Juno will be like up to the Dapp that we launch their own chain. They can. They can choose to maybe use interchange security from Juno, and in that case, Juno will get some direct value from it, but we can also maybe say, okay, you got a grant from the community pool, now you are launching your own chain. Give us back some tokens with your native tokens.
00:21:01.508 - 00:21:19.488, Speaker D: So all these kind of economic incentives, I think, will happen somehow, naturally. And this is the visual cosmos, right? We don't want vertical scalability, we want horizontal scalability, where everybody will have their own dub chain. So I think this is great.
00:21:19.664 - 00:22:10.670, Speaker B: And I think your question goes more about how do we create value amongst these different chains that are spinning out from the general purpose chain versus how do we prevent zero sum games amongst these different chains. So, for example, if there was another, in our case, another chain that uses EVM, how do we collaborate together so that we are creating value for the entire ecosystem as opposed to having them extracting some of the user or extracting some of the value? I think that's the main question. And the cross chain interferability standards are going to play a huge role in how do we create more value? By connecting all these different chains and having them talk to each other, specifically between smart contracts.
00:22:11.170 - 00:22:11.950, Speaker D: Yep.
00:22:12.690 - 00:22:26.270, Speaker A: Cool. Anything to add? Okay, I don't think we have much more time. Yuri already gave me a sign, so, yeah, maybe we should go and take some questions from the audience.
00:22:27.290 - 00:22:28.114, Speaker D: Thank you.
00:22:28.242 - 00:22:36.680, Speaker B: Thank you very much. Any questions?
00:22:44.180 - 00:23:03.338, Speaker E: Can I just speak? Okay. I wanted to ask a question to Dimi. The point that you said that when you launch a new blockchain and you were before having the tokens locked up, it's a challenge. Do you have any possible solutions already in mind? How we could solve that problem?
00:23:03.514 - 00:23:08.850, Speaker D: I didn't restore this enough yet, so I don't know. Do you know something?
00:23:08.970 - 00:23:52.170, Speaker B: Yeah. I think what you can do is, like, basically you burn all the tokens on the general purpose chain, and then you mean an equal amount on the new chain and for all the chains that were connected through IVC. If those tokens get sent back to the general purpose chain, they will also get burn redeemed on the new compatible chain. So it needs to be like a solution where you can adopt that and basically send an IVC message saying, like, oh, I burned these tokens from the general purpose chain. You need to mint tokens to this user. Yeah, I think that's a lot of work. Yeah, I mean, you need to build an IVC module to make it work.
00:23:52.170 - 00:23:55.650, Speaker B: But, yeah, I think it's doable.
00:23:57.710 - 00:25:18.154, Speaker F: I have a question. Hey, guys. So you're looking at the stack of, say, something like the web and the Internet in general. There's homogeneity on the bottom of the stack with TCP, IP and HTTP in these protocols, and then heterogeneity at the stack with application development platforms that vary, and there's tons of them. How do you see that playing out in the crypto space and blockchains? Generally, you guys all represent a different way to build applications, but at the platform layer, how is that going to play out? And how are we going to be able to have interoperability across all of these different heterogeneous blockchains if standards don't exist? I mean, standards exist in cosmos, of course, but once you start getting outside of that into the EVM space, that gets harder. You're well aware of this. And then if we start plugging other ecosystems like Solana, et cetera, what's your vision, I guess, for where the homogeneity and the heterogeneity has to sort of start to present a gradient?
00:25:18.322 - 00:26:12.180, Speaker B: Yeah. So I think at the base, interoperability, named native interoperability through IPC, needs to be included. I think that's the main interface for all these general purpose smart contract chains that use. You can build applications on top. So you have like, IVC and the Cosmos stack, and then on top you have, like the platform, and on top of that, you have the applications. And the applications can communicate between each other through this interoperability standard that in this case will be IVC. But depending on the consensus mechanism, if you're using probabilistic, probabilistic consensus like Nakamoto consensus, then you need to rely on and other mechanisms like bridges to EVM compatible chains or other l one s.
00:26:12.180 - 00:26:42.118, Speaker B: So I think, like, pushing for IVC and pushing for more standards of interoperability needs to be like, as an ecosystem, something that we need to push for so that we can create, no matter the application that you're building in which stack is built, like, maybe it's written on Juno or it's a solidity smart contract or it's written on no land, you can still use IVC or any sort of, like, common interoperability standard to have them talk to each other.
00:26:42.294 - 00:26:57.038, Speaker D: Yeah, absolutely. And I think in the next future, we will see more and more chains also not build using Cosmos SDK, adopt IBC. And, I mean, I think there are already a couple and, yeah, we discussed.
00:26:57.054 - 00:27:28.050, Speaker C: A lot with about this part and think IBC could be integrated in a lot of other chains, et cetera, et cetera. It will be more complicated with bitcoin or other proof of work chains. But technically, we can have a basic version of IBC that remove both the atomic swap with Raycore or with something centralized. You can still have the consensus on both sides and make interchange. Yes. Collaboration from different protocols.
00:27:28.210 - 00:27:46.730, Speaker B: Yeah. You can even use solo machines. I mean, there's a standard for that. I think there are only like, a few chains that have using, have used that so far. I think crypto.com was the first one to use solo machines to issue dot tokens on crypto.com. dot.
00:27:46.730 - 00:28:02.520, Speaker B: I think as we push for those standards, we can use certainly that with other layer ones that maybe are not IVC compatible at the moment. Thank you, guys.
