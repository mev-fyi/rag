00:00:08.680 - 00:00:20.050, Speaker A: So, first of all, I'd like to thank all of you for being here. And out of curiosity, who is building on cosmosm in the crowd? No one. One. Just one.
00:00:20.510 - 00:00:20.942, Speaker B: Okay.
00:00:20.966 - 00:00:22.370, Speaker A: Who's building on the EVM?
00:00:24.470 - 00:00:26.222, Speaker C: No, you did it because it's easy.
00:00:26.366 - 00:00:33.176, Speaker A: Yeah. All right. So that gives us a base to wait. Is it easy to kickstart this debate?
00:00:33.208 - 00:00:34.420, Speaker C: Easy to copy paste?
00:00:34.920 - 00:00:41.448, Speaker B: Oh, yeah. That's the best thing about solidity, is the copy paste ability. If you can't write solidity, you can just copy someone else. It's great.
00:00:41.504 - 00:00:43.820, Speaker C: Yeah, you asked. Chat GPT. It works as well.
00:00:44.680 - 00:00:52.328, Speaker A: Does work for cosmosm, too. But first, guys, I'll ask. I'll let you introduce yourselves. Jerome on the EVM site.
00:00:52.424 - 00:01:20.582, Speaker C: So, I'm Jerome. I've mostly written smart contracting three DT since the solidity version. Two, I think, around interim France nonprofit hosting conferences and events, notably, etc. And I have a gaming and middleware company called Comef, and we have ETH in the name because we do things on the EVM. But I love the cosmos ecosystem overall. So if I say something that sounds harsh, just for the sake of the.
00:01:20.606 - 00:01:26.630, Speaker A: Debate, your kind of comments are not really cosmos aligned, I would say, well.
00:01:27.050 - 00:01:35.710, Speaker C: Space wise, yes, we love the space narrative in overall space assets. So, yeah, Jake.
00:01:36.170 - 00:01:58.580, Speaker B: My name is Jake. I started some projects in the cosmos. You might know Juno, you might know Dadao, and, yeah, work on a bunch of things there. I actually got my start in solidity, though. I wrote my first line of solidity around 2016, and I'm currently working on an art project in solidity. So I still actually write it. And, you know, it's like, it's like your grandma or your grandfather.
00:01:58.580 - 00:02:14.160, Speaker B: It's like they might be a little bit crazy, they might be a little bit outdated, but you still got to respect them because you know, everything. Like, all these concepts, styles, defi, like NFTs, they came from solidity. So there's a lot of respect in my heart towards the EVM.
00:02:15.260 - 00:02:22.006, Speaker C: Right. So where should we start? You're the host, so tell us, what's the weapon of choice here?
00:02:22.198 - 00:02:45.774, Speaker A: The weapon of choice is that for a long time on. Yeah, the cosmos SDK, you could be up with Cosmosm and have this general purpose, kind of smart contract environment to. To beef up your. Your cosmos chain, let's put it this way. And that was a good selling point for. For cosmosm. And now we're seeing the elfrist stack becoming more mature.
00:02:45.774 - 00:03:06.734, Speaker A: You have, like, you know, the Zkstack on Zksync. You have polygon that has an agenda for LT. You have sovereign labs working on different kind of roll ups that you can easily bootstrap with an EVM. And it kind of feels that now it is possible to have an EVM or a WASM system while benefiting from the network effects of the whole Ethereum space.
00:03:06.822 - 00:03:08.010, Speaker C: Cosmos was right.
00:03:08.470 - 00:03:09.510, Speaker A: Cosmos was right.
00:03:09.590 - 00:03:24.430, Speaker C: Yeah, Cosmos was right. Just maybe nothing not executed in the right order, but the cosmos overall approach of modularity was probably the right one now. Well, one chain has the network effect now.
00:03:25.370 - 00:03:29.270, Speaker A: Interesting. So one chain has the network effect. What would you say against that, Jake?
00:03:30.690 - 00:03:38.426, Speaker B: I mean, I actually agree with all that. We need to fight more. I think that's what people really want. They want the fighting.
00:03:38.538 - 00:03:40.230, Speaker C: So what do you like about wasm?
00:03:40.650 - 00:03:49.482, Speaker B: What do I like about wasm? Well, you know, one of the things you can actually do with WASM is actually can run the evm inside of WaSM. That's one thing, right.
00:03:49.546 - 00:03:55.362, Speaker C: EwaSm was a thing started at Defcon zero and abandoned pretty much at DefcOn six.
00:03:55.466 - 00:04:17.376, Speaker B: Yeah. But I think if you look at why it was abandoned, it didn't make sense in the Ethereum roadmap. Right? And that's like the key, key reason, right. It wasn't necessarily so much damnation against webassembly for smart contracts itself, but it just did not make sense in the challenges Ethereum was facing at the time, which was really like scaling, scaling, scaling, scaling, scaling, you know, and I guess.
00:04:17.408 - 00:04:36.490, Speaker C: Now we are stuck with an EVM that was a VM, the EVM that was built by cryptographer, not by VM experts. So we have lots of vcups, lots of arithmetic problem, but if we consider it a settlement layer, it kind of makes sense to have to have this as a, as a layer. One vm, I guess.
00:04:36.870 - 00:04:54.022, Speaker B: Don't get me wrong, I'm a closet eth Maxi. Oh, wait. If I just said that, I guess it came out of the closet. I'm an Eth, Maxi, but I'm not an EvM Maxi. And there's some other reasons I really like Wasm. So webassembly was built by VM experts. It was built with performance in mind.
00:04:54.022 - 00:04:59.082, Speaker B: And so one of the things that webassembly can do is actually just blow away the EVM in terms of compute and performance.
00:04:59.246 - 00:05:00.618, Speaker C: It runs in the browser.
00:05:00.754 - 00:05:27.778, Speaker B: It also runs in the browser. This is another great thing about webassembly. Webassembly runs in the browser, and we're just at the start, really, of people being able to experiment with what's possible with that. We've seen a little bit of work in the near ecosystem, things like blockchain Os. You can actually run front end code from a blockchain. That's a crazy idea, but very, very decentralized. If you're worried about censorship, resistance, we've seen other ideas.
00:05:27.778 - 00:05:37.082, Speaker B: Mars protocol actually takes the cosmosm contract binaries and then puts them inside the front end for simulation and getting various different types of outputs.
00:05:37.226 - 00:06:01.358, Speaker C: That's a big problem for games. If you want to run on chain games, you need to be able to simulate the world state of your game within smart contracts. There are a couple of really good projects doing that in EVM, like mud or in Stacknet, the various approaches. And so it's much easier to write the game in WASm and just execute it in the browser as well. So this, as you mentioned, it's a field of innovation and of testing, I.
00:06:01.374 - 00:06:38.946, Speaker B: Think mostly, yeah, I think that, I mean, don't get me wrong, I think the EVM is going to be around for a really long time. So I don't really like the ideas of, like, there's only going to be one, right? There's not like EVM is going to be around for at least 50 years, but it's going to be like CObol, like, which is a language that's still in use today and runs a lot of financial infrastructure. Yeah, Cobol, this is what runs our financial infrastructure, right? Oh, yeah. I do buy the Ethereum as like a big settlement layer. You know, it's kind of like, I vibe with that narrative. I think that makes a lot of sense. And so EVM is not going around, but the things you can do with web assembly are kind of really next level.
00:06:38.946 - 00:06:48.870, Speaker B: Another great advantage of Webassembly is you can use existing languages. There's a lot of great rust developers out there. There's more good rust devs out there than there are solidity devs.
00:06:49.560 - 00:06:50.256, Speaker C: Absolutely.
00:06:50.328 - 00:07:10.608, Speaker B: And it's not just rust. If you look at what the cosmology team is now doing, you can have like, very nice solidity like languages. There's this thing called CW script. They're working on typescript support. So you'll be able to write typescript, which is then transpiled to rust code and compiled to Webassembly. So, like, how many typescript developers are there?
00:07:10.744 - 00:07:42.344, Speaker C: A lot. I get that transpiling in WASM, you don't lose that much of efficiency in performances, because in the end WASM is pretty efficient. But I don't really understand the argument of look, you can write the smart contract in any language you like. It's all compiled to WaSm. It's good because you are moving away from the blockchain complexity or abstracting yourself from the blockchain complexity in not the most secure approach. Like, if you're writing solidity, which is already like a language that's like, not. Not the best language.
00:07:42.472 - 00:07:46.384, Speaker B: Yeah. Do we want to talk about security? Because I'm happy to go there.
00:07:46.472 - 00:08:14.860, Speaker C: You have to manipulate a lot of blockchain concepts to write a good solidity code, which when you write in rust for WASM, you may be too far away from that pure blockchain infrastructure and blockchain interactions, and thus attracting new developers to say, I'm going to be able to write smart contract because it's in WASm and I don't care. While it's take a lot of knowledge about how the blockchain and the nice works to write them properly. Do you agree with that?
00:08:16.000 - 00:08:35.464, Speaker B: A little bit, yeah. But I push back a little bit because I think, yes, in an ideal world, I actually don't think you can write solidity unless you have a deep understanding of how the EVM works. Right. But the fact is people do, and then they. It's like that dog with the lab glasses, they don't know what they're doing. Right. And solidity is language.
00:08:35.464 - 00:08:48.940, Speaker B: It is deceptively simple. It looks really simple. Right. But it's actually pretty complicated. And you really, really have to know how the EVM works, or I do not want you anywhere near writing code that's going to handle other people's money.
00:08:49.440 - 00:09:28.850, Speaker C: No, that's right. But yeah, I get what you say. On the matter of writing good solidity code, it takes a lot of time to get there. There's no debate. There's a debate on that. But once you have a good solid decode, we pretty much. Well, we have observed a lot of the attack surface of the EVM and how the hedge cases of the EVM were working and appearing here and there, while even if the coast wasm as limitation for waitrancy and those kind of protections, I feel like there was also a risk on going wasm by just saying we don't.
00:09:28.850 - 00:09:33.910, Speaker C: We haven't had much use cases yet or much, much high level usage to be able to.
00:09:33.950 - 00:09:46.198, Speaker B: Definitely disagree. Have you ever heard of terra terra did not crash because of, like, flaws and it's. But they were handling tens of billions of dollars. Cosmos. Tens of billions of dollars, like actual.
00:09:46.254 - 00:09:48.958, Speaker A: Apps and with an early build of cosmos, actually.
00:09:49.014 - 00:10:01.738, Speaker B: Yeah. And definitely, like, if we looked a year ago or two years ago. Yes. Like, there was a lot less in cosmosm. But now you're starting to see Cosmos not only catch up in terms of copy paste ability. Right. You're seeing it actually, like, excel.
00:10:01.738 - 00:10:18.178, Speaker B: Like, if you look at something like Dao Dao versus, like, dao tooling in Ethereum, it kind of makes Dao tooling and Ethereum look like a joke. Oh, nice snapshot poll you got there. In cosmosm, we can do ranked choice voting on chain. Try doing that in the EVM.
00:10:18.234 - 00:10:52.780, Speaker C: Yeah, not possible for somehow good reasons, I think. But what I meant to say, we've observed the different attack surfaces is that more usage, more use cases, more experiments, will bring new flaws and potentially new protections in how you handle the wasm, to blockchain link with the different libraries that are in cosmosm. So they will get better. But from the get go, you are in the form of uncharted territories where you are happy to head because you can write the code in this language you already know, rather than running another language.
00:10:53.800 - 00:11:01.300, Speaker A: So you basically inherit all the tooling that comes with Webassembly that has been built over the last two decades. You have runtime as isolation.
00:11:02.000 - 00:11:31.998, Speaker B: Foundry is pretty good again, I've been working on this art project, and foundry is really amazing, but I still read in solidity, again with Foundry, which is probably the best tool tooling out there, if you're a solidity developer, it just pales in comparison to the kind of stuff we have in Webassembly. In rust, for example, we have these amazing thing called macros in Rust, which is, for those who don't know, a macro is code, that writes code, and.
00:11:32.014 - 00:11:33.410, Speaker C: We have dynamic jumps.
00:11:36.710 - 00:12:19.894, Speaker B: I think there's also this question of investment. How much has been invested into taking this hack that was made by. I love this hack, but it was made by people to solve a certain problem in 2014, 2015, and they put billions of dollars to just trying to get. And if you look at Cosmos, for example, the amount of money that has gone into cosmosm, even versus the cosmos SDK, what country gets like a 1 million, $2 million budget now? That's going to change very soon. We have plans to make that change very soon. WASm deserves to be a much more supported and awesome ecosystem. You know, I really hope to see.
00:12:19.894 - 00:12:22.862, Speaker B: I think we're going to see a webassembly l two soon.
00:12:23.006 - 00:12:54.906, Speaker C: Absolutely. No. I mean, Atlayer is proposing webassembling l two s as a service on Ethereum and one. But I have a spicy one on that. Specifically on how EVM was built. Like in the early days of Ethereum, it was initially the c client was written by his almightiness gavofwood, the inventor of solidity, the inventor of the evMs, and so on. And he moved away from the light and created polkadot, or like, still got some light or some shadow.
00:12:54.906 - 00:13:06.600, Speaker C: I don't want to, depending on how you want to put it. And Polkadot is at its core, but all the parachains that are getting tractions are EVM based. So it's like, the light is shiny.
00:13:06.900 - 00:13:31.638, Speaker A: It'S like a religion, basically. The EVM is a religion. It's the initial smart contract framework that got a lot of people in. And ideally, if you start a new system, you want to have people to be able to fork out their stuff and deploy with the cheapest cost involved. I think that's also what explains the fact that we still see a lot of EVM chains running and totally, and.
00:13:31.654 - 00:14:02.670, Speaker B: I agree with all that, it takes a while to build out a new ecosystem. But then I think if you look at the trend of Wasm, right, we're starting to get to the point where not only do we have the copy paste ability, which is important, right? If you're a cosmosm chain launching today, like two years ago, this was not the case. You want multisigs, you want dao tooling, you want dexs, you want whatever. None of it existed. It all had to be built. Nowadays, that's not the case. There's even really great open source versions for all the things I've just listed.
00:14:02.670 - 00:14:53.648, Speaker B: It takes time for an ecosystem mature, and we should set back our expectations a little bit. You can be really excited for Cosmosm or just for the future of webassembly smart contracts acknowledge that it's still like a relatively new ecosystem compared to Ethereum. And depending on what your use case is, you might very well choose the EVM. One of the things that I'm really excited about, though, is more hybrid models, right? So for example, the idea of, like, running an EVM inside of cosmosm, or being able to write WASM code that will, like, you know, do Ethereum call signatures, or, you know, Ethereum has amazing rust libraries, for example, and there's nothing stopping you from, like, using those in your webassembly smart contract environment. So maybe it's not either or, right? Maybe the future successful model is going to be this sort of hybrid approach.
00:14:53.704 - 00:14:56.624, Speaker A: You have, like arbitrum stylists, which is a great example of this?
00:14:56.752 - 00:15:59.920, Speaker C: No, completely. I mean, we are trying to onboard more people into blockchain. So one thing I love about this onboarding problem is the approach of SEGP 256 R one, Webauthn and Pyskis, which is native to WaSM or already available in WASM, which is not, or really not in the EVM. We have to write the verifier in solidity and optimize it or maybe get them as a precompiler. Getting into a new vm gets you a new stage of maturity in terms of what code you can execute on it, but at properly, a lower stage of maturity into how much of the existing middleware and basic tools you can find on the l one can be applied to this new VM in the case of Cosmos. Yeah, I just said, like, the DAO, the multisig, and all of those kind of tools can be now imported because of the modular approach of cosmos as a whole. And I feel like it's going to be a much quicker pass for the EVM to have that available as, as well.
00:15:59.920 - 00:16:10.140, Speaker C: But definitely more flexibility on the. On the VM would be. Would be greatly appreciated for on chain verification as a whole.
00:16:10.180 - 00:16:25.480, Speaker B: It's definitely something that I'm really interested in is, like, wasm EVM hybrids, right? Like, this is, I think, a very rich area. That's like a good transition phase. I do think eventually WASm is going to become, like, a much more popular vm than it is right now.
00:16:26.220 - 00:16:36.630, Speaker C: I think it's going to be much more popular. But my view is that 36 months, the EVM will remain the de facto smart contracting platform. Platform. The main smart contracting part.
00:16:36.670 - 00:16:39.942, Speaker B: Yeah, I disagree. I mean, I think we're just talking about timeframes, right? Like, we're.
00:16:40.086 - 00:17:07.744, Speaker C: But my. As a. As a business owner, like, trying to. Trying to make a living and having a successful team on the, on the space, I bet on the EVM, because I see twelve months, 18 months, 24 months. Okay, that's, that's. That's a matter of Runway. Like, where do you want to be if you want to execute and actually be able to sell and deploy? And if you take a step back, like, okay, we have the EVM, which is probably like a good combustion engine.
00:17:07.744 - 00:17:58.876, Speaker C: It fits most of the use cases. It's probably not sustainable in the ultra long run. Now is Cosmos and wasm as a whole, a birthday motor, like a vibratory engine, like some super cool innovation, and we can do much better and it's theoretically feasible and we can do things. Or is it the electric engine. Like should we move there slowly, like building up the infrastructure to have a resource station? Or should we accept that those two are going to run next to each other for a pretty long time? Because for your day to day and simple applications and things, that doesn't require lots of peer reviewed and lots of experience on building off. Maybe a uniswap version in WASm is good enough for ll three or four. Maybe it's better to use the plain uniswap if you're on l two because it's there, it's proven, and there's a lot of tooling on this.
00:17:58.876 - 00:18:06.188, Speaker C: That's where I don't know really if I'm willing to make a bet on hybrid right now or if I'm willing to wait.
00:18:06.324 - 00:18:36.040, Speaker B: I like contrarian bets and I think it's always cool to build the next thing, right. But you know, it depends on what you're doing, right? So that's a perfectly valid perspective. I'm not saying that's not a valid point. Right. You know, for me I'm just like interested in like what is the thing that is going to push what you can do with smart contracts forward the quickest. And I think Webassembly is just like going to be a much faster, I mean look at again, just going back to Dao. Dao as an example.
00:18:36.040 - 00:19:38.608, Speaker B: Here is a DaO that has zero vc funding and has features like subdaos built in support for IBC complex like permission systems with authorizations like NFT daos roles, daos like membership daos, like this is, all of this happened much faster because the tooling is so much better. I think another thing that we're going to be seeing a lot more and is super, super important and vital to our industry is privacy stuff, right? ZK. And the thing is rust, all the cryptographic libraries are written in Rust and I don't want to have to rewrite those in solidity. That would be a nightmare. And you know, it's just, I think the tech stack that is going to push forward like our industry forward fastest the most. I want to accelerate the development and I think that webassembly, I already know this from personal experience and I wouldn't. Every use case, every founder, you're going to need to make your own decisions in terms of like what you're doing when you're doing it.
00:19:38.608 - 00:19:52.638, Speaker B: Where you're going to go to market is as a technologist, someone who wants to build the future, I can just see that webassembly is going to, it might be slower in the short term, but it's going to be exponentially much faster to push innovation forward as we.
00:19:52.654 - 00:20:47.338, Speaker C: Go forward so fast. Or convenience. Yeah, basically because if you say, ok, well, we probably live in a transitioning generation where most of the people will have exposure to code with our exposure to writing an HTML page, writing a small python routine on something like this. In this world where we make coding available to everyone, it makes total sense to say, hey, you want to actually have a code that's safely executed and that's also unsustainable. And people that interact with this code can actually look at this. Like, being able to write a code and commit this code with one another will be, I think, much easier in this future world in wasm than it will be in EVM. Like, okay, now get your mastering Ethereum book, read the different things, capture the flag of open zeppelin.
00:20:47.338 - 00:21:16.222, Speaker C: Okay, now you can write a code that says, if you do this, you do that. If you do this, you owe me this. If you reimburse, I owe you this. But how fast are we going to be going on this direction? This, I don't know. And I'm very comfortable with having the EVM as the settlement layer. Okay, well, in the end it's committing to the EVM and we have this clumsy thing that we kind of know how it works. It can go south, but we kind of know how it works.
00:21:16.246 - 00:21:52.476, Speaker B: So I think it's like, it's Ethereum though, as the settlement layer. Right? Like it's, it's less about the EVM and more about like, you know, the, the culture, the, the assets, the liquidity. Right? Like all these, all these other, like the EVM is almost like marginal to, like the people, the liquidity, the monetary policy, the, the assets. Like the, like, how many, like, like Eth alone as an asset is, you know, crazy large, but look at compound or Ave or all these things. Like, right. It's like, to me, it's like the EVM. Yes.
00:21:52.476 - 00:21:55.316, Speaker B: I'm not. It's going to be around for a long time.
00:21:55.508 - 00:22:19.206, Speaker A: We still speak Latin in churches. And I think that if you choose to deploy, if you're looking for, you know, you want to access that liquidity, these network effects and all those good things that you have in Eve, you can't expect the specs of the EVM to change overnight or the EVM to become parallelizable on Mainnet, but you still want to have something that composes, accesses that liquidity. I think it all depends.
00:22:19.238 - 00:22:38.054, Speaker B: Ultimately, I think wasm will be able to access that. This is my, like, current, like, life mission right now is like, I'm determined to access that. Like, and we are not gonna stop until we do. I don't know what the timeframe is gonna be, but like wasm, we're coming for Ethereum.
00:22:38.222 - 00:22:52.786, Speaker C: So it wasm was a good attempt. I really love this project. And I think the team behind Iwazam would be like mostly a bit burnt that they didn't go as fast as they would expect, but also willing to take, to take.
00:22:52.858 - 00:23:15.070, Speaker B: So when I say wasm on it, like coming for Ethereum, it's like just being able, like today I was talking about like TVL versus total reachable liquidity. I just want to make that liquidity reachable, right? And it might be in the form of like an app roll up, right, that has like a smart contract that's written in solidity on Ethereum. But the fact is, like being able to control it, being able to access that liquidity from like a different vm I have.
00:23:16.050 - 00:24:08.670, Speaker C: I like your argument of saying, like, for most users, the EVM is already alien. Like, we don't really know it works, we don't really know what it is. I had a chat at lunch about someone that's saying about onboarding and they were telling me like, well, I'm building an explorer and I don't want anyone to be onboarded, that the first thing they do is click on the link that open another website and show them the Explorer. Because the Explorer is complex. The explorer makes people scare, like what are those zero x stuff and what is a block height and so on? Probably, probably. But from, from my point of view, looking at people being onboarded on blockchain, they get curious, they click, they open the thing, they look at how, like it's from like a car, like you have your first car and in the fifties and the sixties, you would open up the thing and look at the engine and like, oh, this is the engine. I probably should know where to put more oil or when to put more this that.
00:24:08.670 - 00:25:07.650, Speaker C: So I have, I have a feeling, which is probably an optimistic thought about saying that when people start to use Ethereum, they start to open the EVM, to open the Explorer, to look at the contract, to look at the thing. Like just out of curiosity, like when is my next transaction, my transaction going to be confirmed? What was the execution? What did it call? Oh, it called me. Oh no, it's called transfer all. I'm wrecked, this kind of thing. They open up the explorer, having more and more people getting into opening the thing and looking at the engine makes it more easy to ask your friend, like, hey, by the way, what does it mean, like, this call on this contract? What does it mean as a blue tick and so on? So it creates a general knowledge of this thing is working, and there's a flying wheel on people getting more and more accustomed in interacting with the EVM from that point of view. Like, what do you think? How do you think it would. How easy do you think it would be to have a wasm explorer and make wasm accessible?
00:25:09.150 - 00:25:32.760, Speaker B: Yeah, I mean, totally. I mean, I will acknowledge that etherscan, as a block explorer is, like, very far ahead of, like, you know, mint scan is doing a pretty decent job, but there's, like, a lot more. We have a long way to go make. No, but the potential is there, right? Like, we can do the same things. That is something as an ecosystem, we just need to keep pushing forward on. Right?
00:25:33.620 - 00:25:36.660, Speaker C: Yeah. Maybe we should take questions from the crowd.
00:25:36.780 - 00:25:41.720, Speaker B: Yeah, maybe the crowd has some spicy questions that will get us to fight more. I don't know.
00:25:44.140 - 00:25:45.040, Speaker D: Thank you.
00:25:45.940 - 00:25:49.440, Speaker C: There's more. This site is too hot.
00:25:50.590 - 00:25:52.290, Speaker D: You talk about Gavin Wood.
00:25:55.030 - 00:25:56.090, Speaker C: Gavin Wood.
00:25:56.710 - 00:26:27.420, Speaker D: So we have a co founder of Ethereum who founded another project, and there is another guy who is also a co founder of Ethereum, Charlotte. And he said, ethereum has no network effects. And you said, I have the network effects based on the EVM. So do we know what is actual real network effects? Because a few hours ago, we talked about reachable liquidity. Not just liquidity.
00:26:28.600 - 00:26:47.370, Speaker C: No. There's a lot of different dimensions where you can estimate the network effect. Like, the most obvious one is how many nodes. Like, how many nodes are there on the layer one, how many people are replicating the thing. If I pull this plug, I mean, it's a. Are still alive. I think we are in between the eight k and ten k nodes on Ethereum right now.
00:26:47.370 - 00:27:13.370, Speaker C: It's difficult to probe, though. Okay. Now, the network effect, for me, I see it as the EVM franchise. You know, you have the Marvel franchise. Like, how many spin off, how many fangs, how many avengers do we get? Like, the fact that this VM was adopted by various chains that are doing good God's work of onboarding people onto the chain. I'm talking about the BNB chain, the polygon chain.
00:27:14.110 - 00:27:33.352, Speaker B: You mean all those vampire attacks? You know, I think one of the key advantages of WASM and cosmosm specifically is this built in support for IBC, and so you can have this network effect. That's much more real, where you can actually capture, like, deploy protocols and capture value from those protocols on every chain. These things are deployed on permissionlessly.
00:27:33.526 - 00:27:58.012, Speaker C: Definitely. You have the rise in fees on Ethereum. Layer one makes some applications not possible on layer one anymore. There's a form of a def hug from defi. Like, hey, now, you either do defi or you go fuck around somewhere else. Excuse my french, but that's definitely the case for gaming. And in the case of, okay, the price is too high now on Ethereum.
00:27:58.012 - 00:28:11.776, Speaker C: So what are we going to do? We're going to go on another chain because we are going to move a couple of hundred euros. So it doesn't make sense to pay €20 for the fees. So there's a form of vampire attack ish, or extension of the extension.
00:28:11.808 - 00:28:34.402, Speaker B: I think it's just crude. In this new interchange world, we're going into being able to, and we have seen Ethereum protocols deploy on these other EVM chains, but they're not connected in any meaningful way. And I think that that's something that's, like, kind of lacking from that model.
00:28:34.546 - 00:28:40.310, Speaker C: I think Charles remark on we have no network effect is a trumpian argument.
00:28:40.890 - 00:28:48.442, Speaker B: Charles, the worst foundation. Yeah, that's, I totally disagree with that. Like, no network effect. What is he talking?
00:28:48.586 - 00:28:50.590, Speaker A: So you have formal verification.
00:28:51.330 - 00:28:52.794, Speaker C: Well, for one transaction per second.
00:28:52.842 - 00:28:53.250, Speaker B: Okay.
00:28:53.330 - 00:29:02.212, Speaker C: Anyway, this was from a big efficient as well. But anyway, the problem is, like, how do you measure network effect? So I think, I think Haskell is.
00:29:02.236 - 00:29:03.680, Speaker B: How you get network effects.
00:29:04.060 - 00:29:54.442, Speaker C: Yeah, you measure it by the length, the wideness of the network, but also having newcomers saying, I want to go on EVM, having l two s being like, oh, I want to go on EVM as well. I think the ease of recruiting someone to do specific smart contract work in solidity, the he's in finding suppliers for middlewares or core infrastructure stuff. And for me, the most important thing is the installed number of wallets. Like how many? How many, how many wallets are you compatible with? Like, if I launch an EVM, I have to convince the guys from metamask to list my new network and, okay, voila. Now those users can use my network. That's a network effect as well.
00:29:54.546 - 00:30:16.230, Speaker B: I mean, yeah, they're coming for Cosmos as well. I have a slightly different take. I agree with all that, but, yeah, I was being sarcastic about the Haskell thing. That's how you don't get network effects, because at the end of the day, you have to build actually useful applications for people. People have built absolutely actually useful applications in the EVM. Right. And then it's much easier to build application, like, usable applications in Webassembly.
00:30:16.230 - 00:30:32.350, Speaker B: The Haskell developers, you can't hire those people. And then performance of their network sucks. I don't think marketing squads going around and selling shilling coins to people in South Asia. I don't think that counts as network effect.
00:30:32.730 - 00:30:47.686, Speaker C: Making someone install a wallet is probably the hardest thing we have to do in this ecosystem. Whichever VM or whichever chain has the most installed wallet has a good head start or most good compatible wallets.
00:30:47.798 - 00:30:52.542, Speaker B: You know, I do think, though, that, like, there's a lot that we can gain from just coming together. Right?
00:30:52.606 - 00:30:52.878, Speaker C: Yeah.
00:30:52.934 - 00:31:12.736, Speaker B: Standardization again, I don't think this is an either or thing. Maybe we should have fought more. But, you know, in many ways, these ecosystems are kind of merging together. The interchange, ethereum, like web assembly, EVM, the lines are going to get increasingly blurred. Even wallets. Right. As we standardize more wallet connection type interfaces.
00:31:12.736 - 00:31:15.496, Speaker B: Like, you know, I'm really excited for snaps to come to metamask.
00:31:15.528 - 00:31:18.688, Speaker C: Like, and wasm will remove a lot of friction.
00:31:18.864 - 00:31:37.650, Speaker A: I think that here we're celebrating, like, interoperability. Like, you have the IBC light clans bridging framework, storage proofs incoming. So there's also a future where both exec, like, both machines can actually coexist in harmony. Wait, not harmony because. But like, yeah, they can. They can coexist.
00:31:38.510 - 00:31:55.758, Speaker B: Yeah, totally. Coexistence. Interoperability. That's. Who wouldn't be excited about that? Who wouldn't be excited about, like, from a cosmos chain, you can access and work with assets and accounts on Ethereum. Like, that's. This is the future.
00:31:55.758 - 00:31:57.090, Speaker B: This is the interchange future.
00:31:58.280 - 00:32:03.400, Speaker A: That's a good mark. Well, thank you, everyone. Thank you, Jake. Thank you, Jerome. And.
